//
// This file was generated by the Retargetable Decompiler
// Website: https://retdec.com
//

#include <math.h>
#include <stdbool.h>
#include <stdint.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <windows.h>

// ---------------- Integer Types Definitions -----------------

typedef int64_t int128_t;

// ----------------- Float Types Definitions ------------------

typedef float float32_t;
typedef double float64_t;

// ------------------------ Structures ------------------------

struct struct1 {
    int32_t e0;
    int32_t e1;
    int32_t e2;
    int32_t e3;
};

struct struct2 {
    int32_t e0;
    int32_t e1;
    int32_t e2;
    int32_t e3;
};

struct struct3 {
    int32_t e0;
    int32_t e1;
    int32_t e2;
    int32_t e3;
};

struct struct4 {
    int32_t e0;
    int32_t e1;
    int32_t e2;
    int32_t e3;
};

struct _EXCEPTION_POINTERS {
    struct _EXCEPTION_RECORD * e0;
    struct _CONTEXT * e1;
};

struct _EXCEPTION_RECORD {
    int32_t e0;
    int32_t e1;
    struct _EXCEPTION_RECORD * e2;
    int64_t * e3;
    int32_t e4;
    int32_t e5[1];
};

struct _FILETIME {
    int32_t e0;
    int32_t e1;
};

struct _IMAGE_RUNTIME_FUNCTION_ENTRY {
    int32_t e0;
    int32_t e1;
    int64_t e2;
};

struct _IO_FILE {
    int32_t e0;
};

struct _LARGE_INTEGER {
    int64_t e0;
};

struct _M128A {
    int64_t e0;
    int64_t e1;
};

struct _CONTEXT {
    int64_t e0;
    int64_t e1;
    int64_t e2;
    int64_t e3;
    int64_t e4;
    int64_t e5;
    int32_t e6;
    int32_t e7;
    int16_t e8;
    int16_t e9;
    int16_t e10;
    int16_t e11;
    int16_t e12;
    int16_t e13;
    int32_t e14;
    int64_t e15;
    int64_t e16;
    int64_t e17;
    int64_t e18;
    int64_t e19;
    int64_t e20;
    int64_t e21;
    int64_t e22;
    int64_t e23;
    int64_t e24;
    int64_t e25;
    int64_t e26;
    int64_t e27;
    int64_t e28;
    int64_t e29;
    int64_t e30;
    int64_t e31;
    int64_t e32;
    int64_t e33;
    int64_t e34;
    int64_t e35;
    int64_t e36;
    int64_t e37;
    int64_t e38;
    struct _M128A e39[26];
    int64_t e40;
    int64_t e41;
    int64_t e42;
    int64_t e43;
    int64_t e44;
    int64_t e45;
};

struct _onexit_table_t {
    void (**e0)();
    void (**e1)();
    void (**e2)();
};

// ------------------- Function Prototypes --------------------

int64_t entry_point(void);
int64_t function_140001000(void);
int64_t function_140001010(int64_t result, int64_t a2);
int64_t function_140001050(int64_t a1);
int64_t function_140001070(int64_t a1);
int64_t function_140001090(int64_t result, int64_t a2);
int64_t function_1400010e0(int64_t * a1);
int64_t function_140001110(int64_t * a1);
int64_t function_140001140(void);
int64_t function_140001160(int64_t result, int64_t a2);
int64_t function_1400011a0(int64_t result, int64_t a2);
int64_t function_1400011e0(void);
int64_t function_140001230(int64_t result, int64_t a2);
int64_t function_140001270(int64_t stream, int64_t data, int64_t nmemb);
int64_t function_140001290(int64_t a1);
int64_t function_1400012d0(int64_t a1);
int64_t function_140001310(int64_t a1, int64_t a2, int64_t a3, int64_t a4, int64_t a5, int64_t * a6);
int64_t function_140001a00(int64_t a1, int32_t a2, int32_t a3, int64_t a4);
int64_t function_140001b20(void);
int64_t function_140001d70(int64_t a1);
int64_t function_140001df0(int64_t a1, int64_t a2, int64_t a3);
int64_t function_140001ec0(int64_t a1);
int64_t function_140001f80(int64_t a1);
int64_t function_140002040(int64_t result, uint32_t a2, int64_t a3, int32_t a4, int64_t a5);
int64_t function_1400024ba(void);
int64_t function_140002510(int64_t result, uint32_t a2, int64_t a3, uint32_t a4, int64_t a5);
int64_t function_1400029af(uint64_t a1, uint64_t a2);
int64_t function_1400029d0(int64_t a1, int32_t a2, int32_t a3, int64_t a4);
int64_t function_140002c10(int64_t a1, int64_t * a2);
int64_t function_140002dd0(int64_t a1);
int64_t function_140002f50(int64_t a1, int64_t * a2, int64_t a3, int64_t a4, int64_t a5, int64_t a6, int64_t a7);
int64_t function_1400033e0(int64_t a1, int64_t a2, int64_t a3, int64_t a4);
int64_t function_140003660(int64_t a1, int64_t a2, int64_t a3, int64_t a4);
int64_t function_140003cf0(int64_t a1, int64_t a2, int64_t a3);
int64_t function_140004310(int64_t a1, int64_t a2, int64_t a3);
int64_t function_140004b40(int64_t a1);
int64_t function_140004c10(int64_t a1, int64_t a2);
int64_t function_140005430(int64_t a1, int64_t a2);
int64_t function_140005c50(int64_t a1);
int64_t function_140006030(int64_t a1, int64_t a2, uint32_t result);
int64_t function_1400060c0(int64_t a1, int64_t a2);
int64_t function_1400067c0(int64_t a1, uint32_t a2);
int64_t function_140006920(int64_t a1, int64_t a2);
int64_t function_140006cd0(void);
int64_t function_140006ce0(uint64_t result, uint64_t a2, uint64_t a3, int64_t a4);
int64_t function_140006f10(int64_t result, int64_t a2);
int64_t function_140007000(int64_t result, int64_t a2, int64_t a3, int64_t a4);
int64_t function_1400070c0(int64_t result, int64_t a2, int64_t a3, int64_t a4);
int64_t function_1400072c0(int64_t result);
int64_t function_140007300(int64_t a1, int64_t a2, int64_t a3, int64_t a4, int32_t a5, int32_t a6);
int64_t function_140007430(void);
int64_t function_1400076d0(int64_t a1);
int64_t function_140007750(int64_t a1, int64_t a2, int64_t a3, int64_t a4, int64_t a5);
int64_t function_140007fe0(int64_t * a1, int128_t * a2, int64_t a3);
int64_t function_140008280(int64_t a1, int64_t a2);
int64_t function_140008360(int64_t a1, int64_t a2, int64_t a3);
int64_t function_140008470(int64_t a1);
int64_t function_140008890(int64_t a1);
int64_t function_140008ec0(int64_t a1);
int64_t function_140009090(uint64_t a1, int64_t a2);
int64_t function_140009320(int64_t a1);
int64_t function_1400093e0(int64_t a1, int64_t a2, int64_t a3, int64_t a4, int64_t a5, int64_t a6, int64_t a7, int64_t a8, int64_t a9);
int64_t function_14000a580(int64_t a1, int64_t a2, int64_t a3, int64_t a4, int64_t a5, int64_t a6, int64_t a7);
int64_t function_14000a930(int64_t * a1);
int64_t function_14000b760(int64_t a1);
int64_t function_14000b7d0(int64_t a1, int64_t * a2);
int64_t function_14000bcb0(int64_t a1, int64_t a2, int64_t a3, int64_t a4, int64_t a5);
int64_t function_14000cc80(int64_t a1, int64_t a2);
int64_t function_14000cf40(int64_t a1, int64_t a2, int64_t a3, int64_t a4, int64_t a5);
int64_t function_14000d9a0(int64_t a1, int64_t a2, int64_t a3);
int64_t function_14000db50(int64_t a1, int64_t a2, int64_t a3, int64_t a4, int64_t a5, int64_t a6);
int64_t function_14000e7e0(int64_t a1, int64_t * a2);
int64_t function_14000e880(int64_t a1, int64_t a2, int64_t * a3);
int64_t function_14000e980(int64_t a1, int64_t a2, int64_t a3, int64_t a4, int64_t a5);
int64_t function_14000ef50(int64_t a1, int64_t a2, int64_t a3, int64_t a4, int64_t a5);
int64_t function_14000f1b0(int64_t a1);
int64_t function_14000f320(int64_t a1, int64_t a2, int64_t a3, int64_t a4);
int64_t function_14000f470(int64_t a1, int64_t a2, int64_t a3);
int64_t function_14000f7a0(int64_t a1, uint16_t a2);
int64_t function_14000f8c0(int64_t a1, int64_t a2);
int64_t function_14000fd50(int64_t result, int64_t a2);
int64_t function_140010410(int64_t a1, int64_t a2, int64_t a3, int64_t a4);
int64_t function_140010500(int64_t a1, char * a2);
int64_t function_1400105b0(int64_t a1, int64_t * a2);
int64_t function_140010740(int64_t a1, int64_t a2, int64_t a3);
int64_t function_140010870(int64_t a1, int64_t a2, int64_t a3, int64_t a4, int64_t a5);
int64_t function_140011060(int64_t a1, int64_t a2, int64_t a3, int64_t a4, int64_t a5);
int64_t function_140011200(int64_t a1, char * a2);
int64_t function_140011380(int64_t a1, char * a2);
int64_t function_140011440(int64_t a1, int64_t a2, int64_t a3, int64_t a4);
int64_t function_140011630(int64_t a1, int64_t a2, int64_t * a3, int64_t a4);
int64_t function_1400127b0(int64_t a1, int32_t a2, int32_t a3, int64_t a4, int64_t a5, int64_t a6, int64_t a7, int64_t a8);
int64_t function_140012b04(void);
int64_t function_140012b12(void);
int64_t function_140012b18(void);
int64_t function_140012b40(int64_t a1, int32_t a2, int64_t a3, int64_t a4, int64_t a5, int64_t * a6);
int64_t function_1400131f0(int64_t a1, int64_t a2, int64_t a3, int32_t a4, int64_t a5, int64_t a6);
int64_t function_1400132c0(void);
int64_t function_1400132e0(int64_t a1, int64_t a2, int64_t a3);
int64_t function_140013970(int64_t a1, int64_t a2);
int64_t function_1400141b0(int64_t a1);
int64_t function_140014240(void);
int64_t function_140014260(int64_t * a1);
int64_t function_1400142a0(int64_t a1);
int64_t function_140014330(int64_t result, int64_t a2);
int64_t function_1400143d0(int128_t * a1);
int64_t function_140015720(int128_t * a1, int64_t a2, int64_t a3);
int64_t function_1400159a0(int64_t a1, int64_t result, int64_t a3);
int64_t function_140015ad0(int64_t a1, char * a2);
int64_t function_140015f00(int64_t a1, int64_t a2, int64_t a3);
int64_t function_1400160e0(int64_t a1, int128_t * a2);
int64_t function_1400162d0(int64_t a1, char * a2, int128_t * a3);
int64_t function_140016660(void);
int64_t function_140016670(int64_t a1);
int64_t function_140016680(int64_t a1);
int64_t function_140016690(void);
int64_t function_1400166a0(int64_t a1);
int64_t function_1400166b0(int64_t a1);
int64_t function_1400166c0(int64_t a1);
int64_t function_1400166d0(int64_t a1, int64_t result);
int64_t function_140016790(int128_t * a1);
int64_t function_1400167c0(int64_t a1);
int64_t function_140016850(int64_t result, int64_t a2);
int64_t function_140016940(uint32_t a1, int64_t a2);
int64_t function_140018c80(int64_t * a1);
void function_140018ce0(int64_t * ptr);
int64_t function_140018cf0(int64_t a1);
int64_t function_140018d00(int128_t * a1);
int64_t function_140018d80(int64_t * a1);
int64_t function_140018ed0(int64_t a1, int64_t result, int64_t a3, int64_t a4, uint32_t a5);
int64_t function_140019030(int64_t a1);
int64_t function_1400190a0(int64_t a1, int64_t a2);
int64_t function_140019100(int64_t a1, int64_t a2);
int64_t function_1400192f0(int64_t * a1);
int64_t function_1400193b0(int64_t * a1, int64_t a2, int64_t a3, int64_t a4);
int64_t function_140019460(int128_t * a1, int64_t a2);
int64_t function_140019570(int64_t * a1, int64_t * a2);
int64_t function_1400195e0(int64_t a1, int64_t a2);
int64_t function_140019630(int128_t * a1);
int64_t function_1400196a0(int64_t a1, int64_t a2);
int64_t function_1400196c0(int64_t a1, int128_t * str2);
int64_t function_1400197b0(int64_t a1, int64_t * a2, char * a3);
int64_t function_1400198b0(int128_t * a1);
int64_t function_1400198c0(char * a1);
int64_t function_140019920(int128_t * a1, char * a2);
int64_t function_140019960(int64_t result, int64_t a2);
int64_t function_140019a30(int64_t a1, int64_t a2);
int64_t function_140019ad0(int64_t result, int64_t a2);
int64_t function_140019b10(int64_t a1, int64_t a2);
int64_t function_140019bb0(int64_t a1);
int64_t function_140019bf0(int128_t * a1);
int64_t function_140019cb0(int64_t * a1, char * a2, int64_t a3);
int64_t function_140019e40(char * a1, char * a2, uint64_t a3);
int64_t function_140019fd0(int64_t result, int64_t a2);
int64_t function_14001a060(int64_t * a1, char * a2);
int64_t function_14001a1c4(void);
int64_t function_14001a1d2(void);
int64_t function_14001a230(int64_t result, int64_t a2);
int64_t function_14001a3f0(int64_t * a1, char * a2, char * a3);
int64_t function_14001a460(int128_t * a1, char * a2, int64_t a3);
int64_t function_14001a580(void);
int64_t function_14001a5a0(int64_t result, int64_t a2);
int64_t function_14001a5e0(int64_t a1);
int64_t function_14001a5f0(char * a1, int64_t a2, int64_t a3);
int64_t function_14001a680(int64_t * a1, int64_t a2, int64_t * a3);
int64_t function_14001a740(int128_t * a1, int64_t a2, int64_t * a3);
int64_t function_14001a9c0(int64_t a1, int64_t a2, int64_t a3);
int64_t function_14001ab60(int64_t a1, int64_t a2, char * a3);
int64_t function_14001adf0(int64_t a1, char * a2, int128_t * a3);
int64_t function_14001afc0(int64_t a1, int64_t a2);
int64_t function_14001b050(char * a1);
int64_t function_14001b1b0(int64_t * a1, uint64_t a2);
int64_t function_14001b340(int128_t a1, int64_t a2);
int64_t function_14001b5f0(int64_t a1);
int64_t function_14001b610(int64_t a1);
int64_t function_14001b62e(void);
int64_t function_14001b640(int64_t a1);
int64_t function_14001b97f(void);
int64_t function_14001b990(int64_t a1);
int64_t function_14001bb00(void);
int64_t function_14001bb20(int128_t * a1, int128_t * a2, int64_t result);
int64_t function_14001bda0(char * a1, int64_t a2);
int64_t function_14001bec0(int64_t * a1);
int64_t function_14001bee0(int64_t result, int64_t a2);
int64_t function_14001bf20(int64_t result, int64_t a2);
int64_t function_14001bf60(int64_t * a1, char * a2, int64_t a3);
int64_t function_14001c100(int64_t a1, int64_t a2, uint64_t a3);
int64_t function_14001c25a(void);
int64_t function_14001c268(void);
int64_t function_14001c2c0(int128_t * a1, char * a2, int64_t a3, char * a4, char a5, int64_t a6);
int64_t function_14001c560(int128_t * a1, char * a2, int64_t a3, char * a4, char a5, int64_t a6);
int64_t function_14001c6f0(int64_t a1, int64_t a2, int64_t a3);
int64_t function_14001c7b0(int64_t a1, int64_t a2, int64_t a3);
int64_t function_14001c870(int64_t a1, uint64_t a2);
int64_t function_14001c9e0(int128_t * a1, uint64_t a2);
int64_t function_14001cc10(int64_t * a1);
int64_t function_14001ccc0(int64_t result2, uint64_t a2);
int64_t function_14001ce70(void);
int64_t function_14001cfd0(void);
int64_t function_14001cff0(int64_t result);
int64_t function_14001d220(int64_t result, int64_t a2);
int64_t function_14001d260(int64_t a1, int64_t * a2, int64_t a3);
int64_t function_14001d8e0(int64_t a1, int64_t * a2, int64_t a3);
int64_t function_14001df30(int128_t * a1, int128_t a2, int64_t a3, int64_t a4);
int64_t function_14001dfb0(int64_t a1, int64_t a2);
int64_t function_14001e050(uint64_t a1);
int64_t function_14001e0a0(char * a1, int64_t * a2, int64_t * a3, int64_t * a4, int128_t * a5);
int64_t function_14001e0c0(char * a1, int64_t a2, uint64_t a3);
int64_t function_14001e150(char * a1, int64_t a2, uint64_t a3);
int64_t function_14001e2e0(char * a1, uint64_t a2, uint64_t a3);
int64_t function_14001e360(int64_t * a1, int64_t * a2);
int64_t function_14001e380(char * a1, uint64_t a2, uint64_t a3);
int64_t function_14001e500(uint64_t a1);
int64_t function_14001e54c(int64_t a1);
int64_t function_14001e558(int64_t a1);
int64_t function_14001e564(int64_t a1);
void function_14001e570(void);
void function_14001e576(void);
void function_14001e57c(void);
void function_14001e582(void);
void function_14001e588(void);
void function_14001e58e(char * a1, int64_t a2);
void function_14001e594(char * a1, int64_t a2);
void function_14001e59a(char * a1, int64_t a2);
void function_14001e5a0(void);
void function_14001e5a6(int64_t * a1);
int64_t function_14001e5e4(int64_t a1, int64_t a2, int64_t a3);
void function_14001e5ec(int64_t * ListHead);
int64_t function_14001e5fc(int64_t a1);
int64_t function_14001e638(int64_t a1);
int64_t function_14001e66c(void);
int64_t function_14001e734(void);
int64_t function_14001e750(void);
int64_t function_14001ea5c(int64_t a1, int64_t a2, int64_t a3);
int64_t function_14001eaa0(int64_t a1);
int64_t function_14001eaec(int64_t a1);
int64_t function_14001eb78(int64_t a1);
int64_t function_14001ec09(void);
int64_t function_14001ec0b(void);
int64_t function_14001ec34(int64_t a1, int32_t a2);
int64_t function_14001ec60(int64_t a1);
int64_t function_14001ec9c(int64_t a1);
int64_t function_14001ecb4(void);
int64_t function_14001ed60(void);
int64_t function_14001ed64(void);
int64_t function_14001ed6c(void);
int64_t function_14001ed74(void);
int64_t function_14001ed78(void);
int64_t function_14001ed80(void);
int64_t function_14001ed9c(void);
int64_t function_14001eda8(void);
int64_t function_14001edb0(void);
int64_t function_14001edb8(void);
int64_t function_14001edc0(int64_t a1, int64_t a2);
int64_t function_14001ef0c(void);
int64_t function_14001ef14(int64_t a1);
int32_t (*function_14001ef68(int32_t (*lpTopLevelExceptionFilter)(struct _EXCEPTION_POINTERS *)))(struct _EXCEPTION_POINTERS *);
int64_t function_14001ef78(int64_t a1);
int64_t function_14001efd4(void);
int64_t function_14001f010(void);
int64_t function_14001f04c(int64_t a1);
int64_t function_14001f1f0(void);
int64_t function_14001f200(int64_t a1, int64_t a2, int64_t a3, int64_t a4);
int64_t function_14001f206(void);
int64_t function_14001f20c(void);
int64_t function_14001f212(void);
void function_14001f218(int64_t * pExceptionObject, int64_t * pThrowInfo);
int64_t function_14001f21e(void);
int64_t function_14001f224(void);
int64_t * function_14001f22a(int64_t * s, int32_t c, int32_t n);
void function_14001f230(int32_t status);
void function_14001f236(int64_t * ptr);
int64_t * function_14001f23c(int32_t size);
int32_t function_14001f242(int32_t Size);
int32_t function_14001f248(int32_t ExceptionNum, struct _EXCEPTION_POINTERS * ExceptionPtr);
void function_14001f24e(int64_t a1);
void function_14001f254(int64_t pf);
int32_t function_14001f25a(int64_t a1);
int32_t function_14001f260(void);
char ** function_14001f266(void);
void function_14001f26c(void (**First)(), void (**Last)());
int32_t function_14001f272(int32_t (**First)(), int32_t (**Last)());
void function_14001f278(int32_t Code);
int32_t function_14001f27e(int32_t Mode);
int32_t * function_14001f284(void);
char *** function_14001f28a(void);
void function_14001f290(void);
void function_14001f296(void);
void function_14001f29c(void (*Callback)(int64_t *, int32_t, int64_t *));
int32_t function_14001f2a2(int32_t Flag);
int32_t function_14001f2a8(int32_t NewMode);
int32_t * function_14001f2ae(void);
int32_t function_14001f2b4(struct _onexit_table_t * Table);
int32_t function_14001f2ba(struct _onexit_table_t * Table, int32_t (*Function)());
int64_t function_14001f2c0(void);
int64_t function_14001f2c6(void);
bool function_14001f2cc(int32_t ProcessorFeature);
int64_t function_14001f2e0(int64_t a1, int64_t a2);
int64_t function_14001f3ac(void);
int64_t function_14001f3cc(int64_t a1, int64_t a2, int64_t a3);
int64_t function_14001f428(int64_t a1, int64_t a2, int64_t a3, int64_t a4);
int64_t function_14001f511(void);
int64_t function_14001f517(int32_t a1, int32_t a2, int64_t a3, int64_t a4, int64_t * a5, int64_t * a6, int64_t a7);
int64_t function_14001f51d(int64_t a1, int64_t a2, int64_t a3, int128_t * a4, int32_t * a5, int32_t * a6);
int64_t * function_14001f530(int64_t * inptr, int32_t VfDelta, int64_t * SrcType, int64_t * TargetType, bool isReference);
int32_t function_14001f536(int64_t * s1, int64_t * s2, int32_t n);
int64_t * function_14001f53c(int64_t * dest, int64_t * src, int32_t n);
int64_t * function_14001f542(int64_t * dest, int64_t * src, int32_t n);
float32_t function_14001f548(float32_t a1, float32_t a2);
float32_t function_14001f54e(float32_t a1);
int32_t function_14001f554(char * s1, char * s2);
int64_t function_14001f570(void);
int64_t function_14001f590(void);
int64_t function_14001f5a0(void);
int64_t function_14001f5ac(void);
int64_t function_14001f5b8(void);
int64_t function_14001f5d0(void);
int64_t function_14001f5e0(void);
int64_t function_14001f5ec(void);
int64_t function_14001f5f8(void);
int64_t function_14001f604(void);
int64_t function_14001f610(void);
int64_t function_14001f61c(void);
int64_t function_14001f628(void);
int64_t function_14001f634(void);
int64_t function_14001f640(void);
int64_t function_14001f64c(void);
int64_t function_14001f658(void);
int64_t function_14001f664(void);
int64_t function_14001f670(void);
int64_t function_14001f67c(void);
int64_t function_14001f688(void);
int64_t function_14001f694(void);
int64_t function_14001f6a0(void);
int64_t function_14001f6ac(void);
int64_t function_14001f6b8(void);
int64_t function_14001f6c4(void);
int64_t function_14001f6d0(void);
int64_t function_14001f6dc(void);
int64_t function_14001f6e8(void);
int64_t function_14001f6f4(void);
int64_t function_14001f700(void);
int64_t function_14001f70c(void);
int64_t function_14001f720(void);
int64_t function_14001f72c(void);
int64_t function_14001f738(void);
int64_t function_14001f744(void);
int64_t function_14001f761(void);
int64_t function_14001f76d(void);
int64_t function_14001f780(void);
int64_t function_14001f7a6(void);
int64_t function_14001f7d0(void);
int64_t function_14001f7dc(void);
int64_t function_14001f7e8(void);
int64_t function_14001f810(void);
int64_t function_14001f836(void);
int64_t function_14001f842(void);
int64_t function_14001f84e(void);
int64_t function_14001f85a(void);
int64_t function_14001f870(void);
int64_t function_14001f87c(void);
int64_t function_14001f890(void);
int64_t function_14001f89c(void);
int64_t function_14001f8a8(void);
int64_t function_14001f8b4(void);
int64_t function_14001f8c0(void);
int64_t function_14001f8cc(void);
int64_t function_14001f8d8(void);
int64_t function_14001f8e4(void);
int64_t function_14001f8f0(void);
int64_t function_14001f8fc(void);
int64_t function_14001f908(void);
int64_t function_14001f914(void);
int64_t function_14001f920(void);
int64_t function_14001f92c(void);
int64_t function_14001f938(void);
int64_t function_14001f944(void);
int64_t function_14001f950(void);
int64_t function_14001f95c(void);
int64_t function_14001f968(void);
int64_t function_14001f974(void);
int64_t function_14001f980(void);
int64_t function_14001f98c(void);
int64_t function_14001f998(void);
int64_t function_14001f9a4(void);
int64_t function_14001f9b0(void);
int64_t function_14001f9bc(void);
int64_t function_14001f9c8(void);
int64_t function_14001f9d4(void);
int64_t function_14001f9e0(void);
int64_t function_14001f9ec(void);
int64_t function_14001f9f8(void);
int64_t function_14001fa04(void);
int64_t function_14001fa10(void);
int64_t function_14001fa1c(void);
int64_t function_14001fa28(void);
int64_t function_14001fa34(void);
void function_14001fa6b(void);
int64_t function_14001fa7d(void);
int64_t function_14001fa89(void);
int64_t function_14001fa95(void);
int64_t function_14001faa1(void);
int64_t function_14001faad(void);
int64_t function_14001fab9(void);
int64_t function_14001fac5(void);
int64_t function_14001fad1(void);
int64_t function_14001fadd(void);
int64_t function_14001fae9(void);
int64_t function_14001faf5(void);
int64_t function_14001fb01(void);
int64_t function_14001fb0d(void);
int64_t function_14001fb20(void);
void function_14001fb4e(void);
int64_t function_14001fb60(void);
void function_14001fb70(void);
int64_t function_14001fb80(void);
int64_t function_14001fb8c(void);
int64_t function_14001fb98(void);
int64_t function_14001fbe0(void);
int64_t function_14001fbec(void);
int64_t function_14001fc00(void);
int64_t function_14001fc0c(void);
int64_t function_14001fc18(void);
int64_t function_14001fc30(void);
int64_t function_14001fc50(void);
int64_t function_14001fc5c(void);
int64_t function_14001fc68(void);
int64_t function_14001fc80(void);
int64_t function_14001fc8c(void);
int64_t function_14001fc98(void);
int64_t function_14001fce0(void);
int64_t function_14001fcec(void);
int64_t function_14001fcf8(void);
int64_t function_14001fd15(void);
int64_t function_14001fd21(void);
int64_t function_14001fd2d(void);
int64_t function_14001fd3d(void);
int64_t function_14001fd4d(void);
int64_t function_14001fd5d(void);
int64_t function_14001fd70(void);
int64_t function_14001fd7c(void);
int64_t function_14001fd99(void);
int64_t function_14001fda5(void);
int64_t function_14001fdb5(void);
int64_t function_14001fdd0(void);
int64_t function_14001fde0(void);
void function_14001fe0e(void);
int64_t function_14001fe20(void);
int64_t function_14001fe30(void);
int64_t function_14001fe59(void);
int64_t function_14001fe65(void);
int64_t function_14001fe90(void);
int64_t function_14001feb6(void);
int64_t function_14001fedc(void);
int64_t function_14001ff05(void);
int64_t function_14001ff11(void);
int64_t function_14001ff1d(void);
int64_t function_14001ff29(void);
int64_t function_14001ff40(void);
int64_t function_14001ff69(void);
int64_t function_14001ff75(void);
int64_t function_14001ff9e(void);
int64_t function_14001ffc4(void);
int64_t function_14001ffed(void);
int64_t function_14001fff9(void);
int64_t function_140020005(void);
int64_t function_140020011(void);
int64_t function_14002001d(int64_t a1, int64_t a2);
int64_t function_14002003b(int64_t a1, int64_t a2);

// --------------------- Global Variables ---------------------

// Detected cryptographic pattern: CRC_32_IEEE_802_3_poly_0x04C11DB7 (32-bit, little endian)
int32_t CRC_32_IEEE_802_3_poly_0x04C11DB7_at_1400225d0[256] = {0, 0x77073096, -0x11f19ed4, -0x66f6ae46, 0x76dc419, 0x706af48f, -0x169c5acb, -0x619b6a5d, 0xedb8832, 0x79dcb8a4, -0x1f2a16e2, -0x682d2678, 0x9b64c2b, 0x7eb17cbd, -0x1847d2f9, -0x6f40e26f, 0x1db71064, 0x6ab020f2, -0xc468eb8, -0x7b41be22, 0x1adad47d, 0x6ddde4eb, -0xb2b4aaf, -0x7c2c7a39, 0x136c9856, 0x646ba8c0, -0x29d0686, -0x759a3614, 0x14015c4f, 0x63066cd9, -0x5f0c29d, -0x72f7f20b, 0x3b6e20c8, 0x4c69105e, -0x2a9fbe1c, -0x5d988e8e, 0x3c03e4d1, 0x4b04d447, -0x2df27a03, -0x5af54a95, 0x35b5a8fa, 0x42b2986c, -0x2444362a, -0x534306c0, 0x32d86ce3, 0x45df5c75, -0x2329f231, -0x542ec2a7, 0x26d930ac, 0x51de003a, -0x3728ae80, -0x402f9eea, 0x21b4f4b5, 0x56b3c423, -0x30456a67, -0x47425af1, 0x2802b89e, 0x5f058808, -0x39f3264e, -0x4ef416dc, 0x2f6f7c87, 0x58684c11, -0x3e9ee255, -0x4999d2c3, 0x76dc4190, 0x1db7106, -0x672ddf44, -0x102aefd6, 0x71b18589, 0x6b6b51f, -0x60401b5b, -0x17472bcd, 0x7807c9a2, 0xf00f934, -0x69f65772, -0x1ef167e8, 0x7f6a0dbb, 0x86d3d2d, -0x6e9b9369, -0x199ca3ff, 0x6b6b51f4, 0x1c6c6162, -0x7a9acf28, -0xd9dffb2, 0x6c0695ed, 0x1b01a57b, -0x7df70b3f, -0xaf03ba9, 0x65b0d9c6, 0x12b7e950, -0x74414716, -0x3467784, 0x62dd1ddf, 0x15da2d49, -0x732c830d, -0x42bb39b, 0x4db26158, 0x3ab551ce, -0x5c43ff8c, -0x2b44cf1e, 0x4adfa541, 0x3dd895d7, -0x5b2e3b93, -0x2c290b05, 0x4369e96a, 0x346ed9fc, -0x529877ba, -0x259f4730, 0x44042d73, 0x33031de5, -0x55f5b3a1, -0x22f28337, 0x5005713c, 0x270241aa, -0x41f4eff0, -0x36f3df7a, 0x5768b525, 0x206f85b3, -0x46992bf7, -0x319e1b61, 0x5edef90e, 0x29d9c998, -0x4f2f67de, -0x3828574c, 0x59b33d17, 0x2eb40d81, -0x4842a3c5, -0x3f459353, -0x12477ce0, -0x65404c4a, 0x3b6e20c, 0x74b1d29a, -0x152ab8c7, -0x622d8851, 0x4db2615, 0x73dc1683, -0x1c9cf4ee, -0x6b9bc47c, 0xd6d6a3e, 0x7a6a5aa8, -0x1bf130f5, -0x6cf60063, 0xa00ae27, 0x7d079eb1, -0xff06cbc, -0x78f75c2e, 0x1e01f268, 0x6906c2fe, -0x89da8a3, -0x7f9a9835, 0x196c3671, 0x6e6b06e7, -0x12be48a, -0x762cd420, 0x10da7a5a, 0x67dd4acc, -0x6462091, -0x71411007, 0x17b7be43, 0x60b08ed5, -0x29295c18, -0x5e2e6c82, 0x38d8c2c4, 0x4fdff252, -0x2e44980f, -0x5943a899, 0x3fb506dd, 0x48b2364b, -0x27f2d426, -0x50f5e4b4, 0x36034af6, 0x41047a60, -0x209f103d, -0x579820ab, 0x316e8eef, 0x4669be79, -0x349e4c74, -0x43997ce6, 0x256fd2a0, 0x5268e236, -0x33f3886b, -0x44f4b8fd, 0x220216b9, 0x5505262f, -0x3a45c442, -0x4d42f4d8, 0x2bb45a92, 0x5cb36a04, -0x3d280059, -0x4a2f30cf, 0x2cd99e8b, 0x5bdeae1d, -0x649b3d50, -0x139c0dda, 0x756aa39c, 0x26d930a, -0x63f6f957, -0x14f1c9c1, 0x72076785, 0x5005713, -0x6a40b57e, -0x1d4785ec, 0x7bb12bae, 0xcb61b38, -0x6d2d7165, -0x1a2a41f3, 0x7cdcefb7, 0xbdbdf21, -0x792c2d2c, -0xe2b1dbe, 0x68ddb3f8, 0x1fda836e, -0x7e41e933, -0x946d9a5, 0x6fb077e1, 0x18b74777, -0x77f7a51a, -0xf09590, 0x66063bca, 0x11010b5c, -0x709a6101, -0x79d5197, 0x616bffd3, 0x166ccf45, -0x5ff51d88, -0x28f22d12, 0x4e048354, 0x3903b3c2, -0x5898d99f, -0x2f9fe909, 0x4969474d, 0x3e6e77db, -0x512e95b6, -0x2629a524, 0x40df0b66, 0x37d83bf0, -0x564351ad, -0x2144613b, 0x47b2cf7f, 0x30b5ffe9, -0x42420de4, -0x35453d76, 0x53b39330, 0x24b4a3a6, -0x452fc9fb, -0x3228f96d, 0x54de5729, 0x23d967bf, -0x4c9985d2, -0x3b9eb548, 0x5d681b02, 0x2a6f2b94, -0x4bf441c9, -0x3cf3715f, 0x5a05df1b, 0x2d02ef8d}; // 0x1400225d0
void (**g1)() = NULL; // 0x140021430
void (**g2)() = NULL; // 0x140021440
int32_t (**g3)() = NULL; // 0x140021448
int32_t (**g4)() = NULL; // 0x140021460
int64_t g5 = 0x14001e640; // 0x1400214a8
int64_t g6 = 0x140001090; // 0x1400214c8
int64_t g7 = 0x140001090; // 0x1400214e0
int64_t g8 = 0x140001090; // 0x1400214f8
int128_t g9; // 0x140021510
char * g10; // 0x140021570
int64_t g11 = 0x34f68053; // 0x140021aa8
char * g12 = "---------Write by \xe9\xd9\xd7\xd3\xc3\xa8---------"; // 0x140021da8
int64_t g13 = 0x6570797400000027; // 0x140021f0c
int64_t g14 = 0x233b80000282000; // 0x140021f43
int64_t g15 = 0x140014330; // 0x140021f50
int128_t * g16 = (int128_t *)0x808080808080808; // 0x140021fa0
int64_t g17 = 0x110055ff00; // 0x140022320
int128_t * g18 = (int128_t *)0x505050505050505; // 0x140022330
int64_t g19 = 0x14001e558; // 0x1400223e8
int64_t g20 = 0x14001bee0; // 0x140022420
int64_t g21 = 0x8800000000; // 0x1400224c0
int64_t g22 = 0x14001d220; // 0x1400224d0
int64_t g23 = 0x14001bf20; // 0x140022538
int64_t g24 = 0x140001090; // 0x1400225a0
int64_t g25 = 0x609070800121110; // 0x1400225b0
int64_t g26 = 0x14001d1e0; // 0x1400229e0
int64_t g27 = 0x140019ad0; // 0x140022a88
int64_t g28 = 0x140016820; // 0x140022b08
int32_t g29 = 1; // 0x140022b4c
int32_t g30 = 1; // 0x140022b54
int64_t g31 = 0x14001e54c; // 0x140022b68
int64_t g32 = 0x140016850; // 0x140022b78
int64_t g33 = 0x9000000000; // 0x140022bd8
int64_t g34 = 0xa1a0a0d474e5089; // 0x140022be0
int64_t g35 = 0x9800000000; // 0x140022be8
int64_t g36 = 0x14001e564; // 0x140022c00
int128_t g37; // 0x140022ca0
int128_t g38; // 0x140022cb0
int128_t g39; // 0x140022cc0
int128_t g40; // 0x140022cd0
int128_t g41; // 0x140022ce0
int128_t g42; // 0x140022cf0
int128_t g43; // 0x140022d00
int128_t g44; // 0x140022d10
int128_t g45; // 0x140022d20
int128_t g46; // 0x140022d30
int128_t g47; // 0x140022d40
int128_t g48; // 0x140022d50
int128_t g49; // 0x140022d60
int128_t g50; // 0x140022d70
int128_t g51; // 0x140022d80
int128_t g52; // 0x140022d90
int128_t g53; // 0x140022da0
int128_t g54; // 0x140022db0
int128_t g55; // 0x140022dc0
int128_t g56; // 0x140022dd0
int128_t g57; // 0x140022de0
int128_t g58; // 0x140022df0
int128_t g59; // 0x140022e00
int128_t g60; // 0x140022e10
int64_t g61 = 0x142a000000000; // 0x140026088
int64_t g62 = 0x105000000000; // 0x1400260e0
int64_t g63 = 0x105000000000; // 0x1400261b8
int64_t g64 = 0x105000000000; // 0x1400261d8
int64_t g65 = -0x2b992ddfa233; // 0x140028000
int64_t g66 = 0x2b992ddfa232; // 0x140028008
int32_t g67 = 1; // 0x140028014
int32_t g68 = 1; // 0x140028018
int32_t g69 = 2; // 0x14002801c
char g70[3] = "/ "; // 0x140028020
int32_t g71 = 1; // 0x140028030
int32_t g72 = 0x270f; // 0x140028038
int128_t g73; // 0x140028040
int64_t g74 = 0x1400012d0; // 0x140028050
int64_t g75 = 0x100000000; // 0x140028058
char g76[25] = "XXXX PNG chunk not known"; // 0x140028070
char g77[24] = "XXX PNG chunk not known"; // 0x140028071
char g78[23] = "XX PNG chunk not known"; // 0x140028072
char g79[22] = "X PNG chunk not known"; // 0x140028073
int64_t g80 = 0x100000000; // 0x140028090
int64_t g82 = 0; // 0x140028158
int64_t g85 = 0; // 0x1400287a0
int32_t g86 = 0; // 0x140028d20
int32_t g87 = 0; // 0x140028d30
char g88 = 0; // 0x140028d31
struct _onexit_table_t * g89 = NULL; // 0x140028d38
int64_t g90 = 0; // 0x140028d48
struct _onexit_table_t * g91 = NULL; // 0x140028d50
int64_t g92 = 0; // 0x140028d60
int64_t g93 = 0; // 0x140028d68
int32_t g94 = 0; // 0x140028d70
int32_t g95 = 0; // 0x140028d80
int32_t g96 = 0; // 0x140028d90
int32_t g97 = 0; // 0x140028d94
int32_t g98 = 0; // 0x140028d98
int32_t g99 = 0; // 0x140028d9c
int64_t g100 = 0; // 0x140028da0
int64_t g101 = 0; // 0x140028db0
int64_t g102 = 0; // 0x140028db8
int32_t g103;
int64_t * g81 = &g5; // 0x140028118
int64_t * g83 = &g5; // 0x140028190
int64_t * g84 = &g5; // 0x1400281d0

// ------- Dynamically Linked Functions Without Header --------

void _3f__3f_0_3f__24_basic_ios_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_IEAA_40_XZ(void);
void _3f__3f_0_3f__24_basic_iostream_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_QEAA_40_PEAV_3f__24_basic_streambuf_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_1_40__40_Z(int64_t * a1);
void _3f__3f_0_3f__24_basic_istream_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_QEAA_40_PEAV_3f__24_basic_streambuf_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_1_40__N_40_Z(int64_t * a1, bool a2);
void _3f__3f_0_3f__24_basic_ostream_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_QEAA_40_PEAV_3f__24_basic_streambuf_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_1_40__N_40_Z(int64_t * a1, bool a2);
void _3f__3f_0_3f__24_basic_streambuf_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_IEAA_40_XZ(void);
void _3f__3f_1_3f__24_basic_ios_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_UEAA_40_XZ(void);
void _3f__3f_1_3f__24_basic_iostream_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_UEAA_40_XZ(void);
void _3f__3f_1_3f__24_basic_istream_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_UEAA_40_XZ(void);
void _3f__3f_1_3f__24_basic_ostream_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_UEAA_40_XZ(void);
void _3f__3f_1_3f__24_basic_streambuf_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_UEAA_40_XZ(void);
void _3f__3f_5_3f__24_basic_istream_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_QEAAAEAV01_40_AEAH_40_Z(int32_t * a1);
void _3f__3f_6_3f__24_basic_ostream_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_QEAAAEAV01_40_H_40_Z(int32_t a1);
void _3f__3f_6_3f__24_basic_ostream_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_QEAAAEAV01_40_P6AAEAV01_40_AEAV01_40__40_Z_40_Z(int64_t * (*a1)(int64_t *));
void _3f__3f_Bios_base_40_std_40__40_QEBA_NXZ(void);
void _3f__Ipfx_40__3f__24_basic_istream_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_QEAA_N_N_40_Z(bool a1);
void _3f__Lock_40__3f__24_basic_streambuf_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_UEAAXXZ(void);
void _3f__Osfx_40__3f__24_basic_ostream_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_QEAAXXZ(void);
void _3f__Pninc_40__3f__24_basic_streambuf_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_IEAAPEADXZ(void);
void _3f__Unlock_40__3f__24_basic_streambuf_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_UEAAXXZ(void);
void _3f__Xbad_alloc_40_std_40__40_YAXXZ(void);
void _3f__Xlength_error_40_std_40__40_YAXPEBD_40_Z(char * a1);
void _3f_flush_40__3f__24_basic_ostream_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_QEAAAEAV12_40_XZ(void);
void _3f_imbue_40__3f__24_basic_streambuf_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_MEAAXAEBVlocale_40_2_40__40_Z(int64_t * a1);
void _3f_put_40__3f__24_basic_ostream_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_QEAAAEAV12_40_D_40_Z(char a1);
void _3f_sbumpc_40__3f__24_basic_streambuf_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_QEAAHXZ(void);
void _3f_setbuf_40__3f__24_basic_streambuf_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_MEAAPEAV12_40_PEAD_J_40_Z(char * a1, int64_t a2);
void _3f_setstate_40__3f__24_basic_ios_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_QEAAXH_N_40_Z(int32_t a1, bool a2);
void _3f_sgetc_40__3f__24_basic_streambuf_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_QEAAHXZ(void);
void _3f_showmanyc_40__3f__24_basic_streambuf_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_MEAA_JXZ(void);
void _3f_snextc_40__3f__24_basic_streambuf_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_QEAAHXZ(void);
void _3f_sputc_40__3f__24_basic_streambuf_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_QEAAHD_40_Z(char a1);
void _3f_sputn_40__3f__24_basic_streambuf_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_QEAA_JPEBD_J_40_Z(char * a1, int64_t a2);
void _3f_sync_40__3f__24_basic_streambuf_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_MEAAHXZ(void);
void _3f_uflow_40__3f__24_basic_streambuf_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_MEAAHXZ(void);
void _3f_uncaught_exception_40_std_40__40_YA_NXZ(void);
void _3f_widen_40__3f__24_basic_ios_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_QEBADD_40_Z(char a1);
void _3f_xsgetn_40__3f__24_basic_streambuf_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_MEAA_JPEAD_J_40_Z(char * a1, int64_t a2);
void _3f_xsputn_40__3f__24_basic_streambuf_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_MEAA_JPEBD_J_40_Z(char * a1, int64_t a2);
int64_t __C_specific_handler(void);
int64_t __current_exception(void);
int64_t __current_exception_context(void);
int64_t __CxxFrameHandler4(int64_t a1, int64_t a2, int64_t a3, int64_t a4);
int32_t * __p__commode(void);
int64_t * __RTDynamicCast(int64_t * a1, int32_t a2, int64_t * a3, int64_t * a4, bool a5);
void __setusermatherr(int64_t a1);
int64_t __std_exception_copy(int64_t a1);
int64_t __std_exception_destroy(int64_t a1);
int64_t __std_terminate(void);
int64_t __std_type_info_name(int64_t * a1, int64_t * a2);
void _c_exit(void);
int32_t _callnewh(int32_t a1);
void _cexit(void);
int32_t _configthreadlocale(int32_t a1);
int32_t _configure_narrow_argv(int64_t a1);
int64_t _crt_atexit(void);
void _CxxThrowException(int64_t * a1, int64_t * a2);
char ** _get_initial_narrow_environment(void);
int32_t _initialize_narrow_environment(void);
int32_t _initialize_onexit_table(struct _onexit_table_t * a1);
void _initterm(void (**a1)(), void (**a2)());
int32_t _initterm_e(int32_t (**a1)(), int32_t (**a2)());
void _invalid_parameter_noinfo_noreturn(void);
int64_t _purecall(void);
int32_t _register_onexit_function(struct _onexit_table_t * a1, int32_t (*a2)());
void _register_thread_local_exe_atexit_callback(void (*a1)(int64_t *, int32_t, int64_t *));
int32_t _seh_filter_exe(int32_t a1, struct _EXCEPTION_POINTERS * a2);
void _set_app_type(int64_t a1);
int32_t _set_fmode(int32_t a1);
int32_t _set_new_mode(int32_t a1);
int64_t _vcomp_for_static_end(void);
int64_t _vcomp_for_static_simple_init(int32_t a1, int32_t a2, int64_t a3, int64_t a4, int64_t * a5, int64_t * a6, int64_t a7);
int64_t _vcomp_fork(int64_t a1, int64_t a2, int64_t a3, int128_t * a4, int32_t * a5, int32_t * a6);
int32_t fopen_s(struct _IO_FILE ** a1, char * a2, char * a3);
void InitializeSListHead(int64_t * a1);
void RtlCaptureContext(struct _CONTEXT * a1);
struct _IMAGE_RUNTIME_FUNCTION_ENTRY * RtlLookupFunctionEntry(int64_t a1, int64_t * a2, struct {int32_t e0; char e1; char e2; char e3; char e4; int64_t e5; int64_t e6; struct {int64_t e0; struct _IMAGE_RUNTIME_FUNCTION_ENTRY * e1;} e7[1];} * a3);
int64_t (*RtlVirtualUnwind(int32_t a1, int64_t a2, int64_t a3, struct _IMAGE_RUNTIME_FUNCTION_ENTRY * a4, struct _CONTEXT * a5, int64_t ** a6, int64_t * a7, struct {int64_t e0; int64_t e1;} * a8))(struct _EXCEPTION_RECORD *, int64_t *, struct _CONTEXT *, int64_t *);
int64_t terminate(void);

// ------------------------ Functions -------------------------

// Address range: 0x140001000 - 0x140001008
int64_t function_140001000(void) {
    // 0x140001000
    return &g100;
}

// Address range: 0x140001010 - 0x140001043
int64_t function_140001010(int64_t result, int64_t a2) {
    // 0x140001010
    int128_t v1; // 0x140001010
    int128_t v2 = v1;
    int128_t v3 = __asm_xorps(v2, v2); // 0x140001023
    *(int64_t *)result = (int64_t)&g6;
    __asm_movups(*(int128_t *)(result + 8), v3);
    __std_exception_copy(a2 + 8);
    return result;
}

// Address range: 0x140001050 - 0x140001065
int64_t function_140001050(int64_t a1) {
    // 0x140001050
    *(int64_t *)a1 = (int64_t)&g6;
    return __std_exception_destroy(a1 + 8);
}

// Address range: 0x140001070 - 0x140001083
int64_t function_140001070(int64_t a1) {
    int64_t v1 = *(int64_t *)(a1 + 8); // 0x140001070
    return v1 != 0 ? v1 : (int64_t)"Unknown exception";
}

// Address range: 0x140001090 - 0x1400010d3
int64_t function_140001090(int64_t result, int64_t a2) {
    // 0x140001090
    *(int64_t *)result = (int64_t)&g6;
    __std_exception_destroy(result + 8);
    if ((a2 & 1) != 0) {
        // 0x1400010b8
        int64_t v1; // 0x140001090
        function_14001ea5c(result, 24, v1);
    }
    // 0x1400010c5
    return result;
}

// Address range: 0x1400010e0 - 0x140001101
int64_t function_1400010e0(int64_t * a1) {
    int64_t result = (int64_t)a1;
    *(int64_t *)(result + 16) = 0;
    *(int64_t *)(result + 8) = (int64_t)"bad allocation";
    *a1 = (int64_t)&g7;
    return result;
}

// Address range: 0x140001110 - 0x140001131
int64_t function_140001110(int64_t * a1) {
    int64_t result = (int64_t)a1;
    *(int64_t *)(result + 16) = 0;
    *(int64_t *)(result + 8) = (int64_t)"bad array new length";
    *a1 = (int64_t)&g8;
    return result;
}

// Address range: 0x140001140 - 0x14000115f
int64_t function_140001140(void) {
    // 0x140001140
    int64_t v1; // bp-40, 0x140001140
    function_140001110(&v1);
    _CxxThrowException(&v1, &g63);
    // UNREACHABLE
}

// Address range: 0x140001160 - 0x14000119d
int64_t function_140001160(int64_t result, int64_t a2) {
    // 0x140001160
    int128_t v1; // 0x140001160
    int128_t v2 = v1;
    int128_t v3 = __asm_xorps(v2, v2); // 0x140001173
    int64_t * v4 = (int64_t *)result; // 0x14000117a
    *v4 = (int64_t)&g6;
    __asm_movups(*(int128_t *)(result + 8), v3);
    __std_exception_copy(a2 + 8);
    *v4 = (int64_t)&g8;
    return result;
}

// Address range: 0x1400011a0 - 0x1400011dd
int64_t function_1400011a0(int64_t result, int64_t a2) {
    // 0x1400011a0
    int128_t v1; // 0x1400011a0
    int128_t v2 = v1;
    int128_t v3 = __asm_xorps(v2, v2); // 0x1400011b3
    int64_t * v4 = (int64_t *)result; // 0x1400011ba
    *v4 = (int64_t)&g6;
    __asm_movups(*(int128_t *)(result + 8), v3);
    __std_exception_copy(a2 + 8);
    *v4 = (int64_t)&g7;
    return result;
}

// Address range: 0x1400011e0 - 0x140001221
int64_t function_1400011e0(void) {
    // 0x1400011e0
    _3f__Xlength_error_40_std_40__40_YAXPEBD_40_Z((char *)&g103);
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    g10 = NULL;
    *(int64_t *)"oo long" = (int64_t)"bad cast";
    *(int64_t *)"string too long" = (int64_t)&g24;
    return (int64_t)"string too long";
}

// Address range: 0x140001230 - 0x14000126d
int64_t function_140001230(int64_t result, int64_t a2) {
    // 0x140001230
    int128_t v1; // 0x140001230
    int128_t v2 = v1;
    int128_t v3 = __asm_xorps(v2, v2); // 0x140001243
    int64_t * v4 = (int64_t *)result; // 0x14000124a
    *v4 = (int64_t)&g6;
    __asm_movups(*(int128_t *)(result + 8), v3);
    __std_exception_copy(a2 + 8);
    *v4 = (int64_t)&g24;
    return result;
}

// Address range: 0x140001270 - 0x140001288
int64_t function_140001270(int64_t stream, int64_t data, int64_t nmemb) {
    // 0x140001270
    return fread((int64_t *)data, 1, (int32_t)nmemb, (struct _IO_FILE *)stream);
}

// Address range: 0x140001290 - 0x1400012ca
int64_t function_140001290(int64_t a1) {
    struct _IO_FILE * stream = (struct _IO_FILE *)a1; // 0x14000129f
    int64_t offset; // 0x140001290
    fseek(stream, (int32_t)offset, SEEK_CUR);
    int32_t c = fgetc(stream); // 0x1400012a8
    if (c == -1) {
        // 0x1400012c4
        return -1;
    }
    // 0x1400012b3
    return ungetc(c, stream);
}

// Address range: 0x1400012d0 - 0x140001301
int64_t function_1400012d0(int64_t a1) {
    struct _IO_FILE * stream = (struct _IO_FILE *)a1; // 0x1400012d9
    if (feof(stream) != 0) {
        // 0x1400012f6
        return 1;
    }
    int32_t is_ferror = ferror(stream); // 0x1400012e6
    if (is_ferror != 0) {
        // 0x1400012f6
        return 1;
    }
    // 0x1400012f0
    return is_ferror;
}

// Address range: 0x140001310 - 0x1400019fd
int64_t function_140001310(int64_t a1, int64_t a2, int64_t a3, int64_t a4, int64_t a5, int64_t * a6) {
    int64_t v1 = (int64_t)a6;
    *a6 = 8;
    *(int32_t *)(v1 + 8) = 0;
    int64_t * mem = malloc(0x4888); // 0x140001370
    int64_t v2 = (int64_t)mem; // 0x140001370
    *mem = a1;
    function_1400076d0(v2);
    *(int32_t *)(v2 + 0x4848) = 0;
    *(int32_t *)(v2 + 0x484c) = -1;
    *(char *)(v2 + 0x4828) = -1;
    bool v3 = false; // 0x1400013ad
    if ((char)function_140004b40(v2) != -40) {
        // 0x1400013af
        *(int64_t *)(*(int64_t *)__readgsqword(88) + 16) = (int64_t)"no SOI";
        v3 = true;
    }
    int64_t * v4 = (int64_t *)(a1 + 208); // 0x1400013cf
    int64_t * v5 = (int64_t *)(a1 + 192); // 0x1400013dd
    *v5 = *v4;
    int64_t * v6 = (int64_t *)(a1 + 216); // 0x1400013e7
    int64_t * v7 = (int64_t *)(a1 + 200); // 0x1400013f1
    *v7 = *v6;
    free(mem);
    if (!v3) {
        int64_t * mem2 = malloc(0x4888); // 0x140001403
        int64_t v8 = (int64_t)mem2; // 0x140001403
        *mem2 = a1;
        function_1400076d0(v8);
        function_140007750(v8, a2, a3, a4, 0x100000000 * a5 >> 32);
        free(mem2);
        // 0x1400019d9
        __security_check_cookie(g66);
        return &g103;
    }
    int64_t v9 = a5 & 0xffffffff;
    int64_t v10 = function_140009320(a1); // 0x14000144a
    uint64_t v11 = *v4; // 0x14000144f
    int64_t v12 = *v6; // 0x140001456
    int64_t v13 = v12; // 0x140001456
    *v5 = v11;
    *v7 = v12;
    int64_t v14; // 0x140001310
    int64_t v15; // 0x140001310
    if ((int32_t)v10 != 0) {
        int64_t v16 = a1; // bp-120, 0x14000146b
        uint32_t v17 = (int32_t)a5; // 0x140001473
        if (v17 >= 5) {
            // 0x14000158d
            *(int64_t *)(*(int64_t *)__readgsqword(88) + 16) = (int64_t)"bad req_comp";
            // 0x1400019d9
            __security_check_cookie(g66);
            return &g103;
        }
        // 0x14000147d
        int64_t v18; // 0x140001310
        int64_t v19; // 0x140001310
        if ((int32_t)function_14000a930(&v16) != 0) {
            // 0x140001494
            int32_t v20; // 0x140001310
            if (v20 > 8) {
                if (v20 != 16) {
                    int64_t v21 = *(int64_t *)__readgsqword(88); // 0x140001577
                    *(int64_t *)(v21 + 16) = (int64_t)"bad bits_per_channel";
                    // 0x1400019d9
                    __security_check_cookie(g66);
                    return &g103;
                }
            }
            int32_t v22 = 8; // 0x1400014d0
            *(int32_t *)a6 = v22;
            int32_t v23 = v16;
            int64_t v24 = v16; // 0x1400014c6
            int32_t v25 = v23; // 0x1400014c6
            if (v17 != 0) {
                uint32_t v26 = *(int32_t *)(v16 + 12); // 0x1400014c8
                v13 = v26;
                v24 = v16;
                v25 = v23;
                if (v26 != v17) {
                    // 0x1400014d0
                    v14 = v9;
                    v15 = v16 & 0xffffffff;
                    int64_t v27 = (int64_t)*(int32_t *)(v16 + 4);
                    int64_t v28; // 0x140001310
                    if (v22 != 8) {
                        // 0x1400014ec
                        v28 = function_140002510(v19, v26, v9, v23, v27);
                    } else {
                        // 0x1400014e5
                        v28 = function_140002040(v19, v26, v9, v23, v27);
                    }
                    // 0x1400014f1
                    *(int32_t *)(v16 + 12) = v17;
                    if (v28 == 0) {
                        // 0x1400019d9
                        __security_check_cookie(g66);
                        return &g103;
                    }
                    // 0x140001506
                    v24 = v16;
                    v25 = v16;
                }
            }
            // 0x14000150b
            *(int32_t *)a2 = v25;
            *(int32_t *)a3 = *(int32_t *)(v24 + 4);
            v18 = 0;
            if (a4 != 0) {
                // 0x14000152c
                *(int32_t *)a4 = *(int32_t *)(v24 + 8);
                v18 = 0;
            }
        }
        // 0x140001532
        free((int64_t *)v18);
        free((int64_t *)v19);
        free((int64_t *)v19);
        // 0x1400019d9
        __security_check_cookie(g66);
        return &g103;
    }
    int64_t v29 = v11; // 0x1400015b5
    if (v11 >= v13) {
        // 0x1400015c0
        if (*(int32_t *)(a1 + 48) == 0) {
            goto lab_0x1400016d5;
        } else {
            // 0x1400015c9
            function_140001d70(a1);
            v29 = *v5;
            goto lab_0x1400015da;
        }
    } else {
        goto lab_0x1400015da;
    }
  lab_0x1400015da:
    // 0x1400015da
    v13 = (int64_t)*(char *)v29;
    int64_t v30 = v29 + 1;
    *v5 = v30;
    int64_t v31; // 0x140001310
    if ((char)v13 != 66) {
        goto lab_0x1400016d5;
    } else {
        // 0x1400015e6
        v31 = v30;
        if (v30 < *v7) {
            goto lab_0x1400015ff;
        } else {
            // 0x1400015eb
            if (*(int32_t *)(a1 + 48) == 0) {
                goto lab_0x1400016d5;
            } else {
                // 0x1400015f4
                function_140001d70(a1);
                v31 = *v5;
                goto lab_0x1400015ff;
            }
        }
    }
  lab_0x1400016d5:
    // 0x1400016d5
    *v5 = *v4;
    *v7 = *v6;
    int64_t v32 = function_14000f1b0(a1); // 0x1400016d8
    *v5 = *v4;
    *v7 = *v6;
    if ((int32_t)v32 != 0) {
        // 0x1400016f8
        function_140010410(a1, a2, a3, a4);
        // 0x1400019d9
        __security_check_cookie(g66);
        return &g103;
    }
    int64_t v33 = function_140001ec0(a1); // 0x140001716
    int64_t v34 = function_140001ec0(a1); // 0x140001720
    *v5 = *v4;
    *v7 = *v6;
    if ((int32_t)(v34 + 0x10000 * v33) == 0x38425053) {
        // 0x14000174a
        function_14000db50(a1, a2, a3, a4, 0x100000000 * a5 >> 32, v1);
        // 0x1400019d9
        __security_check_cookie(g66);
        return &g103;
    }
    // 0x140001772
    if ((int32_t)function_14000e7e0(a1, &g11) != 0) {
        int32_t * v35 = (int32_t *)(a1 + 48);
        int64_t v36 = 84; // 0x1400017b0
        int64_t v37 = *v5; // 0x140001790
        int64_t v38; // 0x140001310
        int64_t v39; // 0x140001798
        int64_t v40; // 0x1400017ad
        if (v37 >= *v7) {
            // 0x1400017a0
            v38 = v37;
            if (*v35 != 0) {
                // 0x1400017a5
                function_140001d70(a1);
                v40 = *v5 + 1;
                *v5 = v40;
                v38 = v40;
            }
        } else {
            // 0x140001798
            v39 = v37 + 1;
            *v5 = v39;
            v38 = v39;
        }
        int64_t v41 = v38;
        v36--;
        int64_t v42 = 0; // 0x1400017b4
        while (v36 != 0) {
            // 0x140001790
            v37 = v41;
            if (v37 >= *v7) {
                // 0x1400017a0
                v38 = v37;
                if (*v35 != 0) {
                    // 0x1400017a5
                    function_140001d70(a1);
                    v40 = *v5 + 1;
                    *v5 = v40;
                    v38 = v40;
                }
            } else {
                // 0x140001798
                v39 = v37 + 1;
                *v5 = v39;
                v38 = v39;
            }
            // 0x1400017b0
            v41 = v38;
            v36--;
            v42 = 0;
        }
        char v43; // 0x140001310
        if (v41 >= *v7) {
            // 0x1400017d3
            if (*v35 == 0) {
                // 0x1400017ef
                v43 = 0;
            } else {
                // 0x1400017d9
                function_140001d70(a1);
                int64_t v44 = *v5; // 0x1400017e1
                *v5 = v44 + 1;
                v43 = *(char *)v44;
            }
        } else {
            // 0x1400017c8
            *v5 = v41 + 1;
            v43 = *(char *)v41;
        }
        while (*(char *)(v42 + (int64_t)"PICT") == v43) {
            int64_t v45 = v42 + 1; // 0x1400017f6
            v42 = v45;
            if (v45 < 4) {
                // continue -> 0x1400017c0
                continue;
            }
            // 0x1400017ff
            *v5 = *v4;
            *v7 = *v6;
            function_14000ef50(a1, a2, a3, a4, 0x100000000 * a5 >> 32);
            // 0x1400019d9
            __security_check_cookie(g66);
            return &g103;
        }
    }
    uint64_t v46 = *v4; // 0x140001834
    uint64_t v47 = *v6; // 0x14000183e
    *v5 = v46;
    *v7 = v47;
    int64_t v48 = v47; // 0x140001857
    int64_t v49 = v46; // 0x140001857
    char v50; // 0x140001310
    if (v46 < v47) {
        goto lab_0x140001871;
    } else {
        // 0x140001859
        v50 = 0;
        if (*(int32_t *)(a1 + 48) == 0) {
            goto lab_0x1400018a8;
        } else {
            // 0x14000185f
            function_140001d70(a1);
            v48 = *v7;
            v49 = *v5;
            goto lab_0x140001871;
        }
    }
  lab_0x140001871:;
    char v51 = *(char *)v49; // 0x140001871
    uint64_t v52 = v49 + 1; // 0x140001874
    *v5 = v52;
    char v53; // 0x140001310
    char v54; // 0x140001310
    if (v52 >= v48) {
        // 0x14000188c
        v50 = v51;
        if (*(int32_t *)(a1 + 48) == 0) {
            goto lab_0x1400018a8;
        } else {
            // 0x140001892
            function_140001d70(a1);
            int64_t v55 = *v5; // 0x14000189a
            *v5 = v55 + 1;
            v54 = *(char *)v55;
            v53 = v51;
            goto lab_0x1400018aa;
        }
    } else {
        // 0x14000187f
        *v5 = v49 + 2;
        v54 = *(char *)v52;
        v53 = v51;
        goto lab_0x1400018aa;
    }
  lab_0x1400015ff:
    // 0x1400015ff
    *v5 = v31 + 1;
    if (*(char *)v31 != 77) {
        goto lab_0x1400016d5;
    } else {
        // 0x140001611
        function_140001f80(a1);
        function_140001f80(a1);
        function_140001f80(a1);
        function_140001f80(a1);
        function_140001f80(a1);
        function_140001f80(a1);
        int64_t v56 = function_140001f80(a1); // 0x140001644
        int64_t v57 = 0x10000 * function_140001f80(a1) + v56; // 0x140001656
        uint32_t v58 = (int32_t)v57; // 0x140001658
        if (v58 < 57) {
            if ((1 << (v57 & 63) & 0x100010000001000) == 0) {
                goto lab_0x1400016d5;
            } else {
                goto lab_0x140001696;
            }
        } else {
            if (v58 != 108 == (v58 != 124)) {
                goto lab_0x1400016d5;
            } else {
                goto lab_0x140001696;
            }
        }
    }
  lab_0x1400018a8:
    // 0x1400018a8
    v54 = 0;
    v53 = v50;
    goto lab_0x1400018aa;
  lab_0x1400018aa:
    // 0x1400018aa
    if (v53 == 80) {
        // 0x1400018af
        if (v54 < 55) {
            // 0x1400018b7
            function_140011060(a1, a2, a3, a4, 0x100000000 * a5 >> 32);
            // 0x1400019d9
            __security_check_cookie(g66);
            return &g103;
        }
    }
    // 0x1400018d8
    *v5 = *v4;
    *v7 = *v6;
    int64_t v59 = function_140010500(a1, "#?RADIANCE\n"); // 0x1400018f6
    *v5 = *v4;
    *v7 = *v6;
    if ((int32_t)v59 == 0) {
        // 0x140001913
        v13 = (int64_t)"#?RGBE\n";
        int64_t v60 = function_140010500(a1, "#?RGBE\n"); // 0x14000191d
        *v5 = *v4;
        *v7 = *v6;
        if ((int32_t)v60 == 0) {
            // 0x14000193a
            if ((int32_t)function_14000cc80(a1, v13) == 0) {
                int64_t v61 = *(int64_t *)__readgsqword(88); // 0x14000197d
                *(int64_t *)(v61 + 16) = (int64_t)"unknown image type";
            } else {
                // 0x140001946
                function_14000cf40(a1, a2, a3, a4, 0x100000000 * a5 >> 32);
            }
            // 0x1400019d9
            __security_check_cookie(g66);
            return &g103;
        }
    }
    int64_t v62 = function_140010870(a1, a2, a3, a4, 0x100000000 * a5 >> 32); // 0x1400019b9
    int64_t v63 = (int32_t)a5 != 0 ? v9 : (int64_t)*(int32_t *)&v15;
    function_1400029d0(v62, *(int32_t *)&v13, *(int32_t *)&v14, v63);
    // 0x1400019d9
    __security_check_cookie(g66);
    return &g103;
  lab_0x140001696:
    // 0x140001696
    *v5 = *v4;
    *v7 = *v6;
    function_14000bcb0(a1, a2, a3, a4, 0x100000000 * a5 >> 32);
    // 0x1400019d9
    __security_check_cookie(g66);
    return &g103;
}

// Address range: 0x140001a00 - 0x140001b1d
int64_t function_140001a00(int64_t a1, int32_t a2, int32_t a3, int64_t a4) {
    uint32_t v1 = a3 >> 1; // 0x140001a2c
    if (a3 < 0 || v1 == 0) {
        // 0x140001b01
        __security_check_cookie(g66);
        return &g103;
    }
    int64_t v2 = (0x100000000 * a4 >> 32) * (int64_t)a2; // 0x140001a2e
    int64_t v3 = (0x100000000 * (int64_t)a3 - 0x100000000 >> 32) * v2 + a1; // 0x140001a67
    int64_t v4 = a1; // 0x140001a67
    int64_t v5 = v1; // 0x140001a67
    int64_t v6 = v3; // 0x140001a7c
    int64_t v7 = v4; // 0x140001a7c
    uint64_t v8; // 0x140001a00
    int64_t v9; // bp-2136, 0x140001a00
    int64_t v10; // 0x140001a90
    int64_t * v11; // 0x140001a97
    int32_t v12; // 0x140001a97
    int64_t * v13; // 0x140001aa5
    int64_t v14; // 0x140001ac0
    if (v2 != 0) {
        v8 = v2;
        v10 = v8 < 2048 ? v8 : 2048;
        v11 = (int64_t *)v7;
        v12 = v10;
        memcpy(&v9, v11, v12);
        v13 = (int64_t *)v6;
        memcpy(v11, v13, v12);
        memcpy(v13, &v9, v12);
        v14 = v8 - v10;
        v6 += v10;
        v7 += v10;
        while (v14 != 0) {
            // 0x140001a80
            v8 = v14;
            v10 = v8 < 2048 ? v8 : 2048;
            v11 = (int64_t *)v7;
            v12 = v10;
            memcpy(&v9, v11, v12);
            v13 = (int64_t *)v6;
            memcpy(v11, v13, v12);
            memcpy(v13, &v9, v12);
            v14 = v8 - v10;
            v6 += v10;
            v7 += v10;
        }
    }
    // 0x140001ac5
    v5--;
    v3 -= v2;
    v4 += v2;
    while (v5 != 0) {
        // 0x140001a70
        v6 = v3;
        v7 = v4;
        if (v2 != 0) {
            v8 = v2;
            v10 = v8 < 2048 ? v8 : 2048;
            v11 = (int64_t *)v7;
            v12 = v10;
            memcpy(&v9, v11, v12);
            v13 = (int64_t *)v6;
            memcpy(v11, v13, v12);
            memcpy(v13, &v9, v12);
            v14 = v8 - v10;
            v6 += v10;
            v7 += v10;
            while (v14 != 0) {
                // 0x140001a80
                v8 = v14;
                v10 = v8 < 2048 ? v8 : 2048;
                v11 = (int64_t *)v7;
                v12 = v10;
                memcpy(&v9, v11, v12);
                v13 = (int64_t *)v6;
                memcpy(v11, v13, v12);
                memcpy(v13, &v9, v12);
                v14 = v8 - v10;
                v6 += v10;
                v7 += v10;
            }
        }
        // 0x140001ac5
        v5--;
        v3 -= v2;
        v4 += v2;
    }
    // 0x140001b01
    __security_check_cookie(g66);
    return &g103;
}

// Address range: 0x140001b20 - 0x140001d6d
int64_t function_140001b20(void) {
    // 0x140001b20
    int32_t v1; // 0x140001b20
    int32_t v2 = v1;
    int32_t v3; // bp-104, 0x140001b20
    int64_t v4; // 0x140001b20
    int64_t v5 = function_140001310(v4, v4, v4, v4, (int64_t)v2, (int64_t *)&v3); // 0x140001b60
    if (v5 == 0) {
        // 0x140001d4f
        __security_check_cookie(g66);
        return &g103;
    }
    int32_t v6 = v4;
    int32_t v7 = v6; // 0x140001b76
    int64_t v8 = v5; // 0x140001b76
    int64_t v9; // 0x140001b20
    int64_t v10; // 0x140001b20
    if (v3 != 8) {
        int32_t size = (int32_t)v4 * (int32_t)v4 * (v2 != 0 ? v2 : v6); // 0x140001ba1
        int64_t * mem = malloc(size); // 0x140001baa
        if (mem != NULL) {
            int64_t v11 = (int64_t)mem; // 0x140001baa
            v10 = 0;
            int64_t v12 = 0; // 0x140001be7
            if (size >= 1 && size >= 32) {
                int64_t v13 = size; // 0x140001ba1
                int64_t v14 = 0x100000000 * v13 - 0x100000000;
                int64_t v15 = (v14 >> 32) + v11; // 0x140001c00
                v9 = v15;
                v12 = 0;
                if ((v14 >> 31) + v5 >= v11 != v15 >= v5) {
                    int32_t v16 = size & -0x7fffffe1; // 0x140001c14
                    int64_t v17 = v16; // 0x140001c14
                    int64_t v18 = v17; // 0x140001c19
                    if (v16 < 0) {
                        // 0x140001c1b
                        v18 = (v17 + 31 | 0xffffffe0) + 1 & 0xffffffff;
                    }
                    int128_t v19 = __asm_movd(8); // 0x140001c24
                    int64_t v20 = -16 - v11; // 0x140001c33
                    v9 = v20;
                    int64_t v21 = v5 + 32; // 0x140001c3e
                    int64_t v22 = v11 + 16;
                    int128_t v23 = __asm_movdqu_5(*(int128_t *)(v21 - 32)); // 0x140001c40
                    int64_t v24 = v22 + 32; // 0x140001c46
                    int64_t v25 = 32; // 0x140001c4a
                    int64_t v26 = v25 & 0xffffffff; // 0x140001c4a
                    v10 = v26;
                    int128_t v27 = __asm_movdqu_5(*(int128_t *)(v21 - 16)); // 0x140001c4d
                    int128_t v28 = __asm_psrlw(v23, v19); // 0x140001c5b
                    int128_t v29 = __asm_psrlw(v27, v19); // 0x140001c5f
                    int128_t v30 = __asm_pand(v28, g46); // 0x140001c63
                    int128_t v31 = __asm_pand(v29, g46); // 0x140001c6b
                    __asm_movq(*(int64_t *)(v22 - 16), __asm_packuswb(v30, v30));
                    __asm_movq(*(int64_t *)(v22 - 8), __asm_packuswb(v31, v31));
                    int128_t v32 = __asm_movdqu_5(*(int128_t *)v21); // 0x140001c85
                    int128_t v33 = __asm_movdqu_5(*(int128_t *)(v21 + 16)); // 0x140001c8b
                    int128_t v34 = __asm_psrlw(v32, v19); // 0x140001c91
                    int128_t v35 = __asm_psrlw(v33, v19); // 0x140001c95
                    int128_t v36 = __asm_pand(v34, g46); // 0x140001c99
                    int128_t v37 = __asm_pand(v35, g46); // 0x140001ca1
                    __asm_movq(*(int64_t *)v22, __asm_packuswb(v36, v36));
                    __asm_movq(*(int64_t *)(v22 + 8), __asm_packuswb(v37, v37));
                    v21 += 64;
                    while (v24 + v20 < 0x100000000 * (v13 - v18) >> 32) {
                        // 0x140001c40
                        v22 = v24;
                        v23 = __asm_movdqu_5(*(int128_t *)(v21 - 32));
                        v24 = v22 + 32;
                        v25 = v26 + 32;
                        v26 = v25 & 0xffffffff;
                        v10 = v26;
                        v27 = __asm_movdqu_5(*(int128_t *)(v21 - 16));
                        v28 = __asm_psrlw(v23, v19);
                        v29 = __asm_psrlw(v27, v19);
                        v30 = __asm_pand(v28, g46);
                        v31 = __asm_pand(v29, g46);
                        __asm_movq(*(int64_t *)(v22 - 16), __asm_packuswb(v30, v30));
                        __asm_movq(*(int64_t *)(v22 - 8), __asm_packuswb(v31, v31));
                        v32 = __asm_movdqu_5(*(int128_t *)v21);
                        v33 = __asm_movdqu_5(*(int128_t *)(v21 + 16));
                        v34 = __asm_psrlw(v32, v19);
                        v35 = __asm_psrlw(v33, v19);
                        v36 = __asm_pand(v34, g46);
                        v37 = __asm_pand(v35, g46);
                        __asm_movq(*(int64_t *)v22, __asm_packuswb(v36, v36));
                        __asm_movq(*(int64_t *)(v22 + 8), __asm_packuswb(v37, v37));
                        v21 += 64;
                    }
                    // 0x140001cc0
                    v12 = 0x100000000 * v25 >> 32;
                }
            }
            int64_t v38 = size; // 0x140001ba4
            if (v12 < v38) {
                int64_t v39 = v12;
                *(char *)(v39 + v11) = *(char *)(v5 + 1 + 2 * v39);
                int64_t v40 = v39 + 1; // 0x140001cd8
                while (v40 != v38) {
                    // 0x140001cd0
                    v39 = v40;
                    *(char *)(v39 + v11) = *(char *)(v5 + 1 + 2 * v39);
                    v40 = v39 + 1;
                }
            }
            // 0x140001ce0
            free((int64_t *)v5);
            v8 = v11;
        } else {
            // 0x140001bbe
            *(int64_t *)(*(int64_t *)__readgsqword(88) + 16) = (int64_t)"outofmem";
            v8 = 0;
        }
        // 0x140001cf2
        v3 = 8;
        v7 = 8;
    }
    int64_t v41 = *(int64_t *)__readgsqword(88); // 0x140001d0f
    int32_t v42 = *(int32_t *)(v41 + 8); // 0x140001d17
    if (*((v42 == 0 ? &g97 : (int32_t *)(v41 + 12))) != 0) {
        uint32_t v43 = v2 != 0 ? v2 : v7;
        int32_t v44 = *(int32_t *)&v10; // 0x140001d40
        function_140001a00(v8, v44, *(int32_t *)&v9, (int64_t)v43);
    }
    // 0x140001d4f
    __security_check_cookie(g66);
    return &g103;
}

// Address range: 0x140001d70 - 0x140001de3
int64_t function_140001d70(int64_t a1) {
    int64_t v1 = a1 + 56; // 0x140001d7e
    int64_t v2 = a1 + 192; // 0x140001d8f
    int32_t * v3 = (int32_t *)(a1 + 184); // 0x140001d9b
    *v3 = *(int32_t *)v2 - *(int32_t *)(a1 + 208) + *v3;
    *(int64_t *)v2 = v1;
    int64_t v4; // 0x140001d70
    int32_t v5 = v4; // 0x140001da8
    if (v5 != 0) {
        int64_t result = 0x100000000 * v4 >> 32; // 0x140001dd1
        *(int64_t *)(a1 + 200) = result + v1;
        return result;
    }
    // 0x140001dac
    *(int32_t *)(a1 + 48) = v5;
    int64_t result2 = a1 + 57; // 0x140001daf
    *(int64_t *)(a1 + 200) = result2;
    *(char *)v1 = 0;
    return result2;
}

// Address range: 0x140001df0 - 0x140001eb5
int64_t function_140001df0(int64_t a1, int64_t a2, int64_t a3) {
    int64_t v1 = 0x100000000 * a3 >> 32; // 0x140001e12
    int64_t v2; // 0x140001df0
    int64_t v3; // 0x140001df0
    int64_t result; // 0x140001df0
    if (*(int64_t *)(a1 + 16) == 0) {
        // 0x140001df0
        v2 = a1 + 200;
        v3 = a1 + 192;
    } else {
        int64_t v4 = a1 + 200;
        int64_t v5 = a1 + 192;
        uint32_t v6 = *(int32_t *)v4 - *(int32_t *)v5; // 0x140001e20
        v2 = v4;
        v3 = v5;
        if (v1 > (int64_t)v6) {
            int64_t * v7 = (int64_t *)v5; // 0x140001e2a
            int64_t * dest_mem = memcpy((int64_t *)a2, (int64_t *)*v7, v6); // 0x140001e3a
            *v7 = *(int64_t *)v4;
            result = v6 - (int32_t)v1 == -(int32_t)(int64_t)dest_mem;
            // 0x140001e9a
            return result;
        }
    }
    int64_t * v8 = (int64_t *)v3; // 0x140001e68
    int64_t v9 = *v8; // 0x140001e68
    result = 0;
    if (v9 + v1 <= *(int64_t *)v2) {
        // 0x140001e7f
        memcpy((int64_t *)a2, (int64_t *)v9, (int32_t)v1);
        *v8 = *v8 + v1;
        result = 1;
    }
    // 0x140001e9a
    return result;
}

// Address range: 0x140001ec0 - 0x140001f7d
int64_t function_140001ec0(int64_t a1) {
    int64_t * v1 = (int64_t *)(a1 + 192); // 0x140001eca
    uint64_t v2 = *v1; // 0x140001eca
    int64_t * v3 = (int64_t *)(a1 + 200); // 0x140001ed4
    uint64_t v4 = *v3; // 0x140001ed4
    int64_t v5 = v2; // 0x140001ede
    int64_t v6 = v4; // 0x140001ede
    if (v2 >= v4) {
        // 0x140001ee0
        if (*(int32_t *)(a1 + 48) == 0) {
            // 0x140001f68
            return 0;
        }
        // 0x140001ee6
        function_140001d70(a1);
        v5 = *v1;
        v6 = *v3;
    }
    uint64_t v7 = v5 + 1; // 0x140001eff
    *v1 = v7;
    int64_t v8 = (int64_t)*(char *)v5; // 0x140001f09
    if (v7 < v6) {
        // 0x140001f11
        *v1 = v5 + 2;
        return 256 * v8 | (int64_t)*(char *)v7;
    }
    int64_t result = 256 * v8;
    if (*(int32_t *)(a1 + 48) == 0) {
        // 0x140001f68
        return result;
    }
    // 0x140001f39
    function_140001d70(a1);
    int64_t v9 = *v1; // 0x140001f41
    *v1 = v9 + 1;
    return result | (int64_t)*(char *)v9;
}

// Address range: 0x140001f80 - 0x14000203d
int64_t function_140001f80(int64_t a1) {
    int64_t * v1 = (int64_t *)(a1 + 192); // 0x140001f8a
    uint64_t v2 = *v1; // 0x140001f8a
    int64_t * v3 = (int64_t *)(a1 + 200); // 0x140001f94
    uint64_t v4 = *v3; // 0x140001f94
    int64_t v5 = v2; // 0x140001f9e
    int64_t v6 = v4; // 0x140001f9e
    if (v2 >= v4) {
        // 0x140001fa0
        if (*(int32_t *)(a1 + 48) == 0) {
            // 0x140002028
            return 0;
        }
        // 0x140001fa6
        function_140001d70(a1);
        v5 = *v1;
        v6 = *v3;
    }
    uint64_t v7 = v5 + 1; // 0x140001fbf
    *v1 = v7;
    int64_t result = (int64_t)*(char *)v5; // 0x140001fc9
    if (v7 < v6) {
        // 0x140001fd1
        *v1 = v5 + 2;
        return 256 * (int64_t)*(char *)v7 | result;
    }
    // 0x140001ff3
    if (*(int32_t *)(a1 + 48) == 0) {
        // 0x140002028
        return result;
    }
    // 0x140001ff9
    function_140001d70(a1);
    int64_t v8 = *v1; // 0x140002001
    *v1 = v8 + 1;
    return 256 * (int64_t)*(char *)v8 | result;
}

// Address range: 0x140002040 - 0x1400024a0
int64_t function_140002040(int64_t result, uint32_t a2, int64_t a3, int32_t a4, int64_t a5) {
    int32_t v1 = a3; // 0x14000205d
    if (v1 == a2) {
        // 0x140002062
        return result;
    }
    if (v1 < 0 || a4 < 0) {
        // 0x140002468
        free((int64_t *)result);
        *(int64_t *)(*(int64_t *)__readgsqword(88) + 16) = (int64_t)"outofmem";
        return (int32_t)"outofmem" ^ (int32_t)"outofmem";
    }
    if (a4 != 0) {
        if ((a3 & 0xffffffff) > (int64_t)(0x7fffffff / a4)) {
            // 0x140002468
            free((int64_t *)result);
            *(int64_t *)(*(int64_t *)__readgsqword(88) + 16) = (int64_t)"outofmem";
            return (int32_t)"outofmem" ^ (int32_t)"outofmem";
        }
    }
    int64_t v2 = (0x100000000 * a3 >> 32) * (int64_t)a4; // 0x14000209b
    if ((int32_t)v2 < 0) {
        // 0x140002468
        free((int64_t *)result);
        *(int64_t *)(*(int64_t *)__readgsqword(88) + 16) = (int64_t)"outofmem";
        return (int32_t)"outofmem" ^ (int32_t)"outofmem";
    }
    int32_t v3 = a5;
    if (v3 < 0) {
        // 0x140002468
        free((int64_t *)result);
        *(int64_t *)(*(int64_t *)__readgsqword(88) + 16) = (int64_t)"outofmem";
        return (int32_t)"outofmem" ^ (int32_t)"outofmem";
    }
    if (v3 != 0) {
        if ((v2 & 0xffffffff) > (int64_t)(0x7fffffff / v3)) {
            // 0x140002468
            free((int64_t *)result);
            *(int64_t *)(*(int64_t *)__readgsqword(88) + 16) = (int64_t)"outofmem";
            return (int32_t)"outofmem" ^ (int32_t)"outofmem";
        }
    }
    int64_t * mem = malloc((int32_t)((0x100000000 * v2 >> 32) * (0x100000000 * a5 >> 32))); // 0x1400020ca
    if (mem == NULL) {
        // 0x140002468
        free((int64_t *)result);
        *(int64_t *)(*(int64_t *)__readgsqword(88) + 16) = (int64_t)"outofmem";
        return (int32_t)"outofmem" ^ (int32_t)"outofmem";
    }
    int64_t result2 = (int64_t)mem; // 0x1400020ca
    if (v3 < 1) {
        // 0x14000240f
        free((int64_t *)result);
        // 0x140002062
        return result2;
    }
    int64_t result3 = result2; // 0x140002120
    if ((int32_t)(a3 + 0xfffffff6 + 8 * (int64_t)a2) >= 26) {
        // 0x140002436
        free((int64_t *)result);
        free(mem);
        *(int64_t *)(*(int64_t *)__readgsqword(88) + 16) = (int64_t)"unsupported";
        result3 = (int32_t)"unsupported" ^ (int32_t)"unsupported";
    }
    // 0x140002062
    return result3;
}

// Address range: 0x1400024ba - 0x1400024bf
int64_t function_1400024ba(void) {
    // 0x1400024ba
    int64_t v1; // 0x1400024ba
    int64_t result = v1;
    *(char *)result = 2 * (char)result;
    return result;
}

// Address range: 0x140002510 - 0x140002961
int64_t function_140002510(int64_t result, uint32_t a2, int64_t a3, uint32_t a4, int64_t a5) {
    // 0x140002510
    if ((int32_t)a3 == a2) {
        // 0x14000252e
        return result;
    }
    int64_t * mem = malloc(2 * (int32_t)(0x100000000 * (int64_t)a4 * (0x100000000 * a3 >> 32) / 0x100000000 * (0x100000000 * a5 >> 32))); // 0x140002551
    if (mem == NULL) {
        // 0x14000255f
        free((int64_t *)result);
        *(int64_t *)(*(int64_t *)__readgsqword(88) + 16) = (int64_t)"outofmem";
        // 0x14000252e
        return (int32_t)"outofmem" ^ (int32_t)"outofmem";
    }
    int64_t result2 = (int64_t)mem; // 0x140002551
    if ((int32_t)a5 < 1) {
        // 0x140002906
        free((int64_t *)result);
        // 0x14000252e
        return result2;
    }
    int64_t result3 = result2; // 0x1400025de
    if ((int32_t)(a3 + 0xfffffff6 + 8 * (int64_t)a2) >= 26) {
        // 0x14000292f
        free((int64_t *)result);
        free(mem);
        *(int64_t *)(*(int64_t *)__readgsqword(88) + 16) = (int64_t)"unsupported";
        result3 = (int32_t)"unsupported" ^ (int32_t)"unsupported";
    }
    // 0x14000252e
    return result3;
}

// Address range: 0x1400029af - 0x1400029c9
int64_t function_1400029af(uint64_t a1, uint64_t a2) {
    // 0x1400029af
    int64_t v1; // 0x1400029af
    int64_t v2 = v1;
    char v3 = a1 / 256; // 0x1400029af
    *(char *)v2 = (char)v2 + v3;
    int64_t result; // 0x1400029af
    int64_t v4 = result;
    *(int32_t *)v4 = *(int32_t *)&result - (int32_t)v4;
    int64_t v5; // 0x1400029af
    *(char *)v5 = *(char *)&v5 + v3;
    int64_t v6 = result;
    *(int32_t *)v6 = *(int32_t *)&result - (int32_t)v6;
    *(char *)v5 = *(char *)&v5 + v3;
    int64_t v7 = result;
    *(int32_t *)v7 = *(int32_t *)&result - (int32_t)v7;
    *(char *)v5 = *(char *)&v5 + v3;
    int64_t v8 = result;
    *(int32_t *)v8 = *(int32_t *)&result - (int32_t)v8;
    int64_t v9; // 0x1400029af
    *(char *)a2 = *(char *)&v9 + (char)v1;
    int64_t v10 = result;
    *(char *)v10 = *(char *)&result - (char)v10;
    char * v11 = (char *)(v1 + 40); // 0x1400029c3
    *v11 = *v11 + (char)(a2 / 256);
    int64_t v12 = result;
    *(char *)v12 = *(char *)&result + (char)v12;
    return result;
}

// Address range: 0x1400029d0 - 0x140002c09
int64_t function_1400029d0(int64_t a1, int32_t a2, int32_t a3, int64_t a4) {
    // 0x1400029d0
    if (a1 == 0) {
        // 0x140002bfc
        return 0;
    }
    if (a2 < 0 || a3 < 0) {
        // 0x140002bd7
        free((int64_t *)a1);
        *(int64_t *)(*(int64_t *)__readgsqword(88) + 16) = (int64_t)"outofmem";
        // 0x140002bfc
        return 0;
    }
    if (a3 != 0) {
        if (0x7fffffff / a3 < a2) {
            // 0x140002bd7
            free((int64_t *)a1);
            *(int64_t *)(*(int64_t *)__readgsqword(88) + 16) = (int64_t)"outofmem";
            // 0x140002bfc
            return 0;
        }
    }
    int64_t v1 = (int64_t)a3 * (int64_t)a2; // 0x140002a15
    int32_t v2 = v1; // 0x140002a19
    if (v2 < 0) {
        // 0x140002bd7
        free((int64_t *)a1);
        *(int64_t *)(*(int64_t *)__readgsqword(88) + 16) = (int64_t)"outofmem";
        // 0x140002bfc
        return 0;
    }
    int32_t v3 = a4; // 0x140002a21
    if (v3 < 0) {
        // 0x140002bd7
        free((int64_t *)a1);
        *(int64_t *)(*(int64_t *)__readgsqword(88) + 16) = (int64_t)"outofmem";
        // 0x140002bfc
        return 0;
    }
    int64_t v4 = 0x100000000 * a4;
    int64_t v5 = v4 >> 32; // 0x1400029df
    int64_t v6 = v1 & 0xffffffff; // 0x140002a15
    if (v3 != 0) {
        if (v6 > (int64_t)(0x7fffffff / (int32_t)v5)) {
            // 0x140002bd7
            free((int64_t *)a1);
            *(int64_t *)(*(int64_t *)__readgsqword(88) + 16) = (int64_t)"outofmem";
            // 0x140002bfc
            return 0;
        }
    }
    int64_t * mem = malloc((int32_t)((0x100000000 * v1 >> 32) * v5)); // 0x140002a45
    if (mem == NULL) {
        // 0x140002bd7
        free((int64_t *)a1);
        *(int64_t *)(*(int64_t *)__readgsqword(88) + 16) = (int64_t)"outofmem";
        // 0x140002bfc
        return 0;
    }
    int64_t result = (int64_t)mem; // 0x140002a45
    if (v2 < 1) {
        // 0x140002bbe
        free((int64_t *)a1);
        return result;
    }
    int64_t v7 = (a4 & 1) == 0 ? v5 + 0xffffffff : v5; // 0x140002a65
    int128_t v8; // 0x1400029d0
    int64_t v9 = __asm_movaps(v8); // 0x140002aaa
    int128_t v10 = __asm_movss(0x437f0000); // 0x140002aaf
    int64_t v11 = __asm_movaps(v8); // 0x140002ab7
    int128_t v12 = __asm_movss(0x3f000000); // 0x140002abc
    int64_t v13 = __asm_movaps(v8); // 0x140002ac6
    int128_t v14 = __asm_movss(0x3ee8ba2e); // 0x140002acc
    int64_t v15 = 0x100000000 * v7;
    int64_t v16 = v6; // 0x140002add
    int64_t v17 = a1; // 0x140002add
    int64_t v18 = 0;
    int64_t v19 = 0; // 0x140002ae7
    int64_t v20 = v17; // 0x140002ae7
    int128_t v21; // 0x1400029d0
    int128_t v22 = v21; // 0x140002ae7
    int64_t v23 = 0; // 0x140002ae7
    int128_t v24; // 0x140002af0
    int128_t v25; // 0x140002af4
    int128_t v26; // 0x140002afd
    int128_t v27; // 0x140002b0c
    int32_t v28; // 0x140002b17
    int64_t v29; // 0x140002b1f
    if (v15 >= 0x100000000) {
        v24 = __asm_movss(*(int32_t *)v20);
        v25 = __asm_movaps_2(v14);
        v26 = __asm_mulss((int128_t)(int32_t)powf((float32_t)(int32_t)v24, (float32_t)(int32_t)v25), v10);
        v27 = __asm_maxss(__asm_xorps(v25, v25), __asm_addss(v26, v12));
        v28 = __asm_cvttss2si_6(__asm_minss(__asm_movaps_2(v10), v27));
        *(char *)(v19 + result) = (char)v28;
        v29 = v19 + 1;
        v19 = v29;
        v20 += 4;
        v22 = v27;
        v23 = v7 & 0xffffffff;
        while (v29 < v15 >> 32) {
            // 0x140002af0
            v24 = __asm_movss(*(int32_t *)v20);
            v25 = __asm_movaps_2(v14);
            v26 = __asm_mulss((int128_t)(int32_t)powf((float32_t)(int32_t)v24, (float32_t)(int32_t)v25), v10);
            v27 = __asm_maxss(__asm_xorps(v25, v25), __asm_addss(v26, v12));
            v28 = __asm_cvttss2si_6(__asm_minss(__asm_movaps_2(v10), v27));
            *(char *)(v19 + result) = (char)v28;
            v29 = v19 + 1;
            v19 = v29;
            v20 += 4;
            v22 = v27;
            v23 = v7 & 0xffffffff;
        }
    }
    int64_t v30 = v23;
    int128_t v31 = v22;
    int128_t v32 = v31; // 0x140002b43
    int64_t v33; // 0x1400029d0
    int128_t v34; // 0x140002b48
    int128_t v35; // 0x140002b55
    int32_t v36; // 0x140002b68
    if (v30 < v5) {
        // 0x140002b45
        v34 = __asm_xorps(v31, v31);
        v33 = 0x100000000 * (v30 + v18);
        v35 = __asm_mulss(__asm_movss(*(int32_t *)((v33 >> 30) + a1)), v10);
        v32 = __asm_maxss(v34, __asm_addss(v35, v12));
        v36 = __asm_cvttss2si_6(__asm_minss(__asm_movaps_2(v10), v32));
        *(char *)((v33 >> 32) + result) = (char)v36;
    }
    // 0x140002b70
    v16--;
    int64_t v37 = v18 + v5 & 0xffffffff; // 0x140002b86
    int64_t v38 = result + v5; // 0x140002b86
    v17 += (v4 >> 30);
    while (v16 != 0) {
        int64_t v39 = v38;
        v18 = v37;
        v19 = 0;
        v20 = v17;
        v22 = v32;
        v23 = 0;
        if (v15 >= 0x100000000) {
            v24 = __asm_movss(*(int32_t *)v20);
            v25 = __asm_movaps_2(v14);
            v26 = __asm_mulss((int128_t)(int32_t)powf((float32_t)(int32_t)v24, (float32_t)(int32_t)v25), v10);
            v27 = __asm_maxss(__asm_xorps(v25, v25), __asm_addss(v26, v12));
            v28 = __asm_cvttss2si_6(__asm_minss(__asm_movaps_2(v10), v27));
            *(char *)(v19 + v39) = (char)v28;
            v29 = v19 + 1;
            v19 = v29;
            v20 += 4;
            v22 = v27;
            v23 = v7 & 0xffffffff;
            while (v29 < v15 >> 32) {
                // 0x140002af0
                v24 = __asm_movss(*(int32_t *)v20);
                v25 = __asm_movaps_2(v14);
                v26 = __asm_mulss((int128_t)(int32_t)powf((float32_t)(int32_t)v24, (float32_t)(int32_t)v25), v10);
                v27 = __asm_maxss(__asm_xorps(v25, v25), __asm_addss(v26, v12));
                v28 = __asm_cvttss2si_6(__asm_minss(__asm_movaps_2(v10), v27));
                *(char *)(v19 + v39) = (char)v28;
                v29 = v19 + 1;
                v19 = v29;
                v20 += 4;
                v22 = v27;
                v23 = v7 & 0xffffffff;
            }
        }
        // 0x140002b41
        v30 = v23;
        v31 = v22;
        v32 = v31;
        if (v30 < v5) {
            // 0x140002b45
            v34 = __asm_xorps(v31, v31);
            v33 = 0x100000000 * (v30 + v18);
            v35 = __asm_mulss(__asm_movss(*(int32_t *)((v33 >> 30) + a1)), v10);
            v32 = __asm_maxss(v34, __asm_addss(v35, v12));
            v36 = __asm_cvttss2si_6(__asm_minss(__asm_movaps_2(v10), v32));
            *(char *)((v33 >> 32) + result) = (char)v36;
        }
        // 0x140002b70
        v16--;
        v37 = v18 + v5 & 0xffffffff;
        v38 = v39 + v5;
        v17 += (v4 >> 30);
    }
    // 0x140002b8c
    __asm_movaps_2((int128_t)v13);
    __asm_movaps_2((int128_t)v11);
    __asm_movaps_2((int128_t)v9);
    // 0x140002bbe
    free((int64_t *)a1);
    return result;
}

// Address range: 0x140002c10 - 0x140002dc1
int64_t function_140002c10(int64_t a1, int64_t * a2) {
    int64_t v1 = a1 + 1280;
    int64_t v2 = (int64_t)a2; // 0x140002c3c
    int64_t v3 = 0;
    int64_t v4 = 0;
    int64_t v5 = 0;
    uint32_t v6 = *(int32_t *)v2; // 0x140002c40
    int64_t v7 = v4; // 0x140002c45
    int64_t v8 = v3; // 0x140002c45
    int64_t v9; // 0x140002c40
    if (v6 >= 1) {
        // 0x140002c47
        v9 = v6;
        memset((int64_t *)(v4 + v1), (int32_t)v5 + 1, v6);
        v7 = v4 + v9;
        v8 = v3 + v9 & 0xffffffff;
    }
    int64_t v10 = v8;
    int64_t v11 = v5 + 1; // 0x140002c62
    v2 += 4;
    while ((int32_t)v11 < 16) {
        // 0x140002c40
        v3 = v10;
        v4 = v7;
        v5 = v11 & 0xffffffff;
        v6 = *(int32_t *)v2;
        v7 = v4;
        v8 = v3;
        if (v6 >= 1) {
            // 0x140002c47
            v9 = v6;
            memset((int64_t *)(v4 + v1), (int32_t)v5 + 1, v6);
            v7 = v4 + v9;
            v8 = v3 + v9 & 0xffffffff;
        }
        // 0x140002c62
        v10 = v8;
        v11 = v5 + 1;
        v2 += 4;
    }
    // 0x140002c6d
    *(char *)((0x100000000 * v10 >> 32) + v1) = 0;
    int64_t v12 = a1 + 512;
    int64_t v13 = 1; // 0x140002c8c
    int64_t v14 = a1 + 1544; // 0x140002c8c
    int64_t v15 = 0;
    uint32_t v16 = 15;
    int64_t v17 = 0;
    int64_t v18 = 0;
    int32_t v19 = v18;
    int64_t v20 = v15 + v1; // 0x140002c9b
    *(int32_t *)(v14 + 72) = (int32_t)v17 - v19;
    int32_t v21 = v13; // 0x140002ca5
    int32_t v22 = v19; // 0x140002ca8
    int64_t v23 = v18; // 0x140002ca8
    int64_t v24 = v17; // 0x140002ca8
    int64_t v25 = v15; // 0x140002ca8
    int64_t v26; // 0x140002c10
    int64_t v27; // 0x140002c10
    int64_t v28; // 0x140002c10
    int64_t v29; // 0x140002c10
    int64_t result; // 0x140002c10
    int64_t v30; // 0x140002cc4
    int64_t v31; // 0x140002cd2
    int64_t v32; // 0x140002cd4
    int64_t v33; // 0x140002cd7
    int64_t v34; // 0x140002cd7
    int64_t v35; // 0x140002daf
    if ((int32_t)*(char *)v20 == v21) {
        // 0x140002caa
        v30 = v20;
        v26 = 2 * v15 + v12;
        v28 = v18;
        *(int16_t *)v26 = (int16_t)v28;
        v30++;
        v31 = v17 + 1 & 0xffffffff;
        v32 = v15 + 1;
        v33 = v28 + 1;
        v34 = v33 & 0xffffffff;
        v29 = v31;
        v26 += 2;
        v27 = v32;
        while ((int32_t)*(char *)v30 == v21) {
            // 0x140002cc0
            v28 = v34;
            *(int16_t *)v26 = (int16_t)v28;
            v30++;
            v31 = v29 + 1 & 0xffffffff;
            v32 = v27 + 1;
            v33 = v28 + 1;
            v34 = v33 & 0xffffffff;
            v29 = v31;
            v26 += 2;
            v27 = v32;
        }
        if ((int32_t)v28 >> (v21 & 31) != 0) {
            // 0x140002da1
            v35 = *(int64_t *)__readgsqword(88);
            *(int64_t *)(v35 + 16) = (int64_t)"bad code lengths";
            result = (int32_t)"bad code lengths" ^ (int32_t)"bad code lengths";
            return result;
        }
        // 0x140002cde
        v22 = v33;
        v23 = v34;
        v24 = v31;
        v25 = v32;
    }
    int64_t v36 = v24;
    int64_t v37 = v16 == 0 ? v23 : (int64_t)(v22 << v16);
    *(int32_t *)v14 = (int32_t)v37;
    int64_t v38 = v13 + 1; // 0x140002cfc
    int32_t v39 = v16 - 1; // 0x140002d06
    v13 = v38 & 0xffffffff;
    v14 += 4;
    while (v16 != 0) {
        // 0x140002c90
        v15 = v25;
        v16 = v39;
        v17 = v36;
        v18 = 2 * v23 & 0xfffffffe;
        v19 = v18;
        v20 = v15 + v1;
        *(int32_t *)(v14 + 72) = (int32_t)v17 - v19;
        v21 = v13;
        v22 = v19;
        v23 = v18;
        v24 = v17;
        v25 = v15;
        if ((int32_t)*(char *)v20 == v21) {
            // 0x140002caa
            v30 = v20;
            v26 = 2 * v15 + v12;
            v28 = v18;
            *(int16_t *)v26 = (int16_t)v28;
            v30++;
            v31 = v17 + 1 & 0xffffffff;
            v32 = v15 + 1;
            v33 = v28 + 1;
            v34 = v33 & 0xffffffff;
            v29 = v31;
            v26 += 2;
            v27 = v32;
            while ((int32_t)*(char *)v30 == v21) {
                // 0x140002cc0
                v28 = v34;
                *(int16_t *)v26 = (int16_t)v28;
                v30++;
                v31 = v29 + 1 & 0xffffffff;
                v32 = v27 + 1;
                v33 = v28 + 1;
                v34 = v33 & 0xffffffff;
                v29 = v31;
                v26 += 2;
                v27 = v32;
            }
            if ((int32_t)v28 >> (v21 & 31) != 0) {
                // 0x140002da1
                v35 = *(int64_t *)__readgsqword(88);
                *(int64_t *)(v35 + 16) = (int64_t)"bad code lengths";
                result = (int32_t)"bad code lengths" ^ (int32_t)"bad code lengths";
                return result;
            }
            // 0x140002cde
            v22 = v33;
            v23 = v34;
            v24 = v31;
            v25 = v32;
        }
        // 0x140002cf1
        v36 = v24;
        v37 = v16 == 0 ? v23 : (int64_t)(v22 << v16);
        *(int32_t *)v14 = (int32_t)v37;
        v38 = v13 + 1;
        v39 = v16 - 1;
        v13 = v38 & 0xffffffff;
        v14 += 4;
    }
    // 0x140002d08
    *(int32_t *)(a1 + 1540 + (0x100000000 * v38 >> 30)) = -1;
    memset((int64_t *)a1, 255, 512);
    if ((int32_t)v36 < 1) {
        // 0x140002d84
        return 1;
    }
    int64_t v40 = v1; // 0x140002d2c
    int64_t v41 = 0;
    unsigned char v42 = *(char *)v40; // 0x140002d40
    int32_t v43; // 0x140002c10
    int64_t v44; // 0x140002c10
    uint16_t v45; // 0x140002d48
    unsigned char v46; // 0x140002c10
    uint32_t v47; // 0x140002d58
    if (v42 < 10) {
        // 0x140002d48
        v45 = *(int16_t *)v12;
        v46 = 9 - v42 & 31;
        v43 = 1;
        v44 = v45;
        if (v46 != 0) {
            v47 = (int32_t)v46;
            v43 = 1 << v47;
            v44 = (int32_t)v45 << v47;
        }
        // 0x140002d60
        memset((int64_t *)((0x100000000 * v44 >> 32) + a1), (int32_t)v41 & 255, v43);
    }
    int64_t v48 = v41 + 1 & 0xffffffff; // 0x140002d72
    int64_t v49 = v12 + 2; // 0x140002d7d
    v40++;
    result = 1;
    while (v48 < v36) {
        // 0x140002d40
        v41 = v48;
        int64_t v50 = v49;
        v42 = *(char *)v40;
        if (v42 < 10) {
            // 0x140002d48
            v45 = *(int16_t *)v50;
            v46 = 9 - v42 & 31;
            v43 = 1;
            v44 = v45;
            if (v46 != 0) {
                v47 = (int32_t)v46;
                v43 = 1 << v47;
                v44 = (int32_t)v45 << v47;
            }
            // 0x140002d60
            memset((int64_t *)((0x100000000 * v44 >> 32) + a1), (int32_t)v41 & 255, v43);
        }
        // 0x140002d72
        v48 = v41 + 1 & 0xffffffff;
        v49 = v50 + 2;
        v40++;
        result = 1;
    }
  lab_0x140002d84:
    // 0x140002d84
    return result;
}

// Address range: 0x140002dd0 - 0x140002f4d
int64_t function_140002dd0(int64_t a1) {
    int32_t * v1 = (int32_t *)(a1 + 0x482c);
    int32_t * v2 = (int32_t *)(a1 + 0x4824);
    int32_t * v3 = (int32_t *)(a1 + 0x4820);
    int64_t v4 = 0; // 0x140002de9
    int64_t v5; // 0x140002dd0
    int64_t result; // 0x140002dd0
    int64_t v6; // 0x140002dd0
    int64_t v7; // 0x140002dd0
    int64_t v8; // 0x140002dd0
    int64_t v9; // 0x140002dd0
    int64_t v10; // 0x140002dd0
    int64_t v11; // 0x140002dd0
    int64_t v12; // 0x140002e22
    int64_t v13; // 0x140002e3a
    int64_t * v14; // 0x140002e4c
    uint64_t v15; // 0x140002e4c
    int64_t v16; // 0x140002e79
    int64_t v17; // 0x140002e91
    int64_t * v18; // 0x140002ea3
    uint64_t v19; // 0x140002ea3
    int64_t v20; // 0x140002ed0
    int64_t v21; // 0x140002ee8
    int64_t * v22; // 0x140002df5
    uint64_t v23; // 0x140002df5
    if (*v1 == 0) {
        // 0x140002df2
        v22 = (int64_t *)(a1 + 192);
        v23 = *v22;
        if (v23 >= *(int64_t *)(a1 + 200)) {
            // 0x140002e14
            if (*(int32_t *)(a1 + 48) == 0) {
                // 0x140002e38
                v6 = a1 & -256;
            } else {
                // 0x140002e1a
                function_140001d70(a1);
                v12 = *v22;
                *v22 = v12 + 1;
                v6 = (int64_t)*(char *)v12;
            }
        } else {
            // 0x140002e05
            *v22 = v23 + 1;
            v6 = (int64_t)*(char *)v23;
        }
        // 0x140002e3a
        v7 = v6;
        v13 = v7 & 255;
        v4 = v13;
        if (v13 == 255) {
            // 0x140002e49
            v14 = (int64_t *)(v7 + 192);
            v15 = *v14;
            if (v15 >= *(int64_t *)(v7 + 200)) {
                // 0x140002e6b
                if (*(int32_t *)(v7 + 48) == 0) {
                    // 0x140002e8f
                    v8 = v7 & -256;
                } else {
                    // 0x140002e71
                    function_140001d70(v7);
                    v16 = *v14;
                    *v14 = v16 + 1;
                    v8 = (int64_t)*(char *)v16;
                }
            } else {
                // 0x140002e5c
                *v14 = v15 + 1;
                v8 = (int64_t)*(char *)v15;
            }
            // 0x140002e91
            v17 = v8 & 255;
            v9 = v8;
            v5 = v17;
            if (v17 == 255) {
                v10 = v9;
                v18 = (int64_t *)(v10 + 192);
                v19 = *v18;
                if (v19 >= *(int64_t *)(v10 + 200)) {
                    // 0x140002ec2
                    if (*(int32_t *)(v10 + 48) == 0) {
                        // 0x140002ee6
                        v11 = v10 & -256;
                    } else {
                        // 0x140002ec8
                        function_140001d70(v10);
                        v20 = *v18;
                        *v18 = v20 + 1;
                        v11 = (int64_t)*(char *)v20;
                    }
                } else {
                    // 0x140002eb3
                    *v18 = v19 + 1;
                    v11 = (int64_t)*(char *)v19;
                }
                // 0x140002ee8
                v21 = v11 & 255;
                v5 = v21;
                while (v21 == 255) {
                    // 0x140002ea0
                    v10 = v11;
                    v18 = (int64_t *)(v10 + 192);
                    v19 = *v18;
                    if (v19 >= *(int64_t *)(v10 + 200)) {
                        // 0x140002ec2
                        if (*(int32_t *)(v10 + 48) == 0) {
                            // 0x140002ee6
                            v11 = v10 & -256;
                        } else {
                            // 0x140002ec8
                            function_140001d70(v10);
                            v20 = *v18;
                            *v18 = v20 + 1;
                            v11 = (int64_t)*(char *)v20;
                        }
                    } else {
                        // 0x140002eb3
                        *v18 = v19 + 1;
                        v11 = (int64_t)*(char *)v19;
                    }
                    // 0x140002ee8
                    v21 = v11 & 255;
                    v5 = v21;
                }
            }
            // 0x140002ef2
            result = v5;
            v4 = v13;
            if (result != 0) {
                // 0x140002f2d
                *(char *)(a1 + 0x4828) = (char)result;
                *v1 = 1;
                return result;
            }
        }
    }
    int64_t v24 = v4;
    int32_t v25 = *v2; // 0x140002ef6
    uint32_t v26 = 24 - v25; // 0x140002f01
    uint32_t v27 = v26 & 31; // 0x140002f03
    int64_t v28 = v27 == 0 ? v24 : (int64_t)((int32_t)v24 << v27);
    *v3 = *v3 | (int32_t)v28;
    uint32_t result2 = v25 + 8; // 0x140002f0b
    *v2 = result2;
    while (result2 < 25) {
        // 0x140002de2
        v4 = 0;
        if (*v1 == 0) {
            int64_t v29 = v26;
            v22 = (int64_t *)(v29 + 192);
            v23 = *v22;
            if (v23 >= *(int64_t *)(v29 + 200)) {
                // 0x140002e14
                if (*(int32_t *)(v29 + 48) == 0) {
                    // 0x140002e38
                    v6 = v29 & -256;
                } else {
                    // 0x140002e1a
                    function_140001d70(v29);
                    v12 = *v22;
                    *v22 = v12 + 1;
                    v6 = (int64_t)*(char *)v12;
                }
            } else {
                // 0x140002e05
                *v22 = v23 + 1;
                v6 = (int64_t)*(char *)v23;
            }
            // 0x140002e3a
            v7 = v6;
            v13 = v7 & 255;
            v4 = v13;
            if (v13 == 255) {
                // 0x140002e49
                v14 = (int64_t *)(v7 + 192);
                v15 = *v14;
                if (v15 >= *(int64_t *)(v7 + 200)) {
                    // 0x140002e6b
                    if (*(int32_t *)(v7 + 48) == 0) {
                        // 0x140002e8f
                        v8 = v7 & -256;
                    } else {
                        // 0x140002e71
                        function_140001d70(v7);
                        v16 = *v14;
                        *v14 = v16 + 1;
                        v8 = (int64_t)*(char *)v16;
                    }
                } else {
                    // 0x140002e5c
                    *v14 = v15 + 1;
                    v8 = (int64_t)*(char *)v15;
                }
                // 0x140002e91
                v17 = v8 & 255;
                v9 = v8;
                v5 = v17;
                if (v17 == 255) {
                    v10 = v9;
                    v18 = (int64_t *)(v10 + 192);
                    v19 = *v18;
                    if (v19 >= *(int64_t *)(v10 + 200)) {
                        // 0x140002ec2
                        if (*(int32_t *)(v10 + 48) == 0) {
                            // 0x140002ee6
                            v11 = v10 & -256;
                        } else {
                            // 0x140002ec8
                            function_140001d70(v10);
                            v20 = *v18;
                            *v18 = v20 + 1;
                            v11 = (int64_t)*(char *)v20;
                        }
                    } else {
                        // 0x140002eb3
                        *v18 = v19 + 1;
                        v11 = (int64_t)*(char *)v19;
                    }
                    // 0x140002ee8
                    v21 = v11 & 255;
                    v5 = v21;
                    while (v21 == 255) {
                        // 0x140002ea0
                        v10 = v11;
                        v18 = (int64_t *)(v10 + 192);
                        v19 = *v18;
                        if (v19 >= *(int64_t *)(v10 + 200)) {
                            // 0x140002ec2
                            if (*(int32_t *)(v10 + 48) == 0) {
                                // 0x140002ee6
                                v11 = v10 & -256;
                            } else {
                                // 0x140002ec8
                                function_140001d70(v10);
                                v20 = *v18;
                                *v18 = v20 + 1;
                                v11 = (int64_t)*(char *)v20;
                            }
                        } else {
                            // 0x140002eb3
                            *v18 = v19 + 1;
                            v11 = (int64_t)*(char *)v19;
                        }
                        // 0x140002ee8
                        v21 = v11 & 255;
                        v5 = v21;
                    }
                }
                // 0x140002ef2
                result = v5;
                v4 = v13;
                if (result != 0) {
                    // 0x140002f2d
                    *(char *)(a1 + 0x4828) = (char)result;
                    *v1 = 1;
                    return result;
                }
            }
        }
        // 0x140002ef6
        v24 = v4;
        v25 = *v2;
        v26 = 24 - v25;
        v27 = v26 & 31;
        v28 = v27 == 0 ? v24 : (int64_t)((int32_t)v24 << v27);
        *v3 = *v3 | (int32_t)v28;
        result2 = v25 + 8;
        *v2 = result2;
    }
    // 0x140002f1d
    return result2;
}

// Address range: 0x140002f50 - 0x1400033de
int64_t function_140002f50(int64_t a1, int64_t * a2, int64_t a3, int64_t a4, int64_t a5, int64_t a6, int64_t a7) {
    // 0x140002f50
    int128_t v1; // 0x140002f50
    int128_t v2 = v1;
    int32_t * v3 = (int32_t *)(a1 + 0x4824); // 0x140002f5c
    if (*v3 <= 15) {
        // 0x140002f73
        function_140002dd0(a1);
        if (*v3 <= 15) {
            // 0x140002f83
            function_140002dd0(a1);
        }
    }
    int32_t * v4 = (int32_t *)(a1 + 0x4820); // 0x140002f8b
    uint32_t v5 = *v4; // 0x140002f8b
    unsigned char v6 = *(char *)((int64_t)(v5 / 0x800000) + a3); // 0x140002fa0
    int64_t v7; // 0x140002f50
    int64_t v8; // 0x140002f50
    int64_t v9; // 0x14000302a
    if (v6 == -1) {
        int64_t v10 = a3 + 1580; // 0x140002fdf
        uint32_t v11 = v5 / 0x10000;
        int32_t v12; // 0x140002f50
        int64_t v13; // 0x140002f50
        if (*(int32_t *)v10 > v11) {
            // 0x140002ffe
            v12 = *v3;
            v13 = 10;
        } else {
            int64_t v14 = 11; // 0x140002ff3
            int64_t v15 = v10 + 4; // 0x140002ff6
            int64_t v16 = v15; // 0x140002ffc
            int64_t v17 = v14; // 0x140002ffc
            while (*(int32_t *)v15 <= v11) {
                // 0x140002ff3
                v14 = v17 + 1 & 0xffffffff;
                v15 = v16 + 4;
                v16 = v15;
                v17 = v14;
            }
            int32_t v18 = *v3; // 0x140002ffe
            v12 = v18;
            v13 = v14;
            if (v14 == 17) {
                // 0x14000300b
                *v3 = v18 - 16;
                // 0x14000301c
                v9 = *(int64_t *)__readgsqword(88);
                *(int64_t *)(v9 + 16) = (int64_t)"bad huffman code";
                return (int32_t)"bad huffman code" ^ (int32_t)"bad huffman code";
            }
        }
        // 0x140003017
        if (v13 > (int64_t)v12) {
            // 0x14000301c
            v9 = *(int64_t *)__readgsqword(88);
            *(int64_t *)(v9 + 16) = (int64_t)"bad huffman code";
            return (int32_t)"bad huffman code" ^ (int32_t)"bad huffman code";
        }
        int64_t v19 = 0x100000000 * v13;
        v8 = v19 >> 32;
        int32_t v20 = v13; // 0x140003054
        int64_t v21 = v19 >> 30; // 0x14000305c
        int32_t v22 = *(int32_t *)(v21 + 0x140022210); // 0x14000305c
        int32_t v23 = *(int32_t *)(a3 + 1612 + v21); // 0x140003064
        *v3 = v12 - v20;
        *v4 = v5 << (v20 & 31);
        v7 = (v22 & v5 >> (-v20 & 31)) + v23;
    } else {
        int64_t v24 = v6; // 0x140002fa0
        uint32_t v25 = *v3; // 0x140002fa9
        v8 = v24;
        unsigned char v26 = *(char *)((v24 | 1280) + a3); // 0x140002fb1
        if ((int64_t)v26 > (int64_t)v25) {
            // 0x14000301c
            v9 = *(int64_t *)__readgsqword(88);
            *(int64_t *)(v9 + 16) = (int64_t)"bad huffman code";
            return (int32_t)"bad huffman code" ^ (int32_t)"bad huffman code";
        }
        // 0x140002fbd
        *v4 = v5 << (int32_t)(v26 & 31);
        *v3 = v25 - (int32_t)v26;
        v7 = v8;
    }
    int64_t v27 = (int64_t)a2;
    unsigned char v28 = *(char *)(a3 + 1024 + v7);
    int128_t v29 = __asm_xorps(v2, v2); // 0x14000308b
    __asm_movups(*(int128_t *)&v8, v29);
    __asm_movups(*(int128_t *)(v27 + 16), v29);
    __asm_movups(*(int128_t *)(v27 + 32), v29);
    __asm_movups(*(int128_t *)(v27 + 48), v29);
    __asm_movups(*(int128_t *)(v27 + 64), v29);
    __asm_movups(*(int128_t *)(v27 + 80), v29);
    __asm_movups(*(int128_t *)(v27 + 96), v29);
    __asm_movups(*(int128_t *)(v27 + 112), v29);
    int32_t v30 = 0; // 0x1400030bc
    if (v28 != 0) {
        uint64_t v31 = (int64_t)v28;
        uint32_t v32 = *v3; // 0x1400030be
        int32_t v33 = v32; // 0x1400030c8
        if (v31 > (int64_t)v32) {
            // 0x1400030ca
            function_140002dd0(a1);
            v33 = *v3;
        }
        uint32_t v34 = *v4; // 0x1400030d9
        unsigned char v35 = v28 & 31;
        int32_t v36 = v34; // 0x1400030e5
        if (v35 != 0) {
            uint32_t v37 = (int32_t)v35; // 0x1400030e5
            v36 = v34 >> 32 - v37 | v34 << v37;
        }
        v30 = 0;
        if (v28 < 17) {
            int64_t v38 = 4 * v31;
            *v3 = v33 - (int32_t)v28;
            int32_t v39 = *(int32_t *)(v38 + 0x140022210); // 0x140003109
            int32_t v40 = *(int32_t *)(v38 + 0x140021f60); // 0x140003113
            *v4 = v36 & -1 - v39;
            v30 = (v40 & v34 / 0x80000000 - 1) + (v39 & v36);
        }
    }
    int64_t v41 = 0x100000000 * a6;
    int32_t * v42 = (int32_t *)(a1 + 0x46b8 + 32 * ((v41 >> 32) + (v41 >> 31))); // 0x140003155
    int32_t v43 = *v42 + v30; // 0x14000315c
    *v42 = v43;
    *(int16_t *)a2 = *(int16_t *)a7 * (int16_t)v43;
    int64_t v44 = a4 + 1580;
    int64_t v45 = 1;
    uint32_t v46 = *v3; // 0x140003180
    int32_t v47 = v46; // 0x14000318b
    if (v46 <= 15) {
        // 0x14000318d
        function_140002dd0(a1);
        v47 = *v3;
    }
    uint32_t v48 = v47;
    uint32_t v49 = *v4; // 0x14000319c
    int64_t v50 = v49; // 0x14000319c
    v8 = v50;
    uint16_t v51 = *(int16_t *)((int64_t)(2 * v49 / 0x800000) + a5); // 0x1400031a8
    int32_t v52; // 0x140002f50
    int32_t v53; // 0x140002f50
    uint64_t v54; // 0x140002f50
    int64_t v55; // 0x140002f50
    int64_t v56; // 0x140002f50
    int64_t v57; // 0x140002f50
    int64_t v58; // 0x140002f50
    int64_t v59; // 0x140002f50
    int64_t v60; // 0x140002f50
    int64_t v61; // 0x140002f50
    int64_t v62; // 0x140002f50
    int64_t v63; // 0x140002f50
    int64_t v64; // 0x140002f50
    int64_t v65; // 0x140002f50
    int64_t v66; // 0x140002f50
    int64_t v67; // 0x140002f50
    int64_t v68; // 0x140002f50
    int64_t v69; // 0x14000333a
    int32_t v70; // 0x140003345
    int32_t v71; // 0x14000334f
    int64_t v72; // 0x14000336d
    int16_t v73; // 0x14000337e
    uint16_t v74; // 0x140002f50
    uint32_t v75; // 0x1400031c2
    unsigned char v76; // 0x140003223
    int64_t v77; // 0x140003213
    int64_t v78; // 0x1400031c4
    int64_t v79; // 0x1400031e8
    int32_t v80; // 0x1400031c2
    uint32_t v81; // 0x140003262
    int64_t v82; // 0x140003223
    uint64_t v83; // 0x14000322c
    unsigned char v84; // 0x140003235
    uint64_t v85; // 0x140003235
    int64_t v86; // 0x140003270
    int64_t v87; // 0x140003273
    int64_t v88; // 0x140003277
    unsigned char v89; // 0x140002f50
    uint64_t v90; // 0x140002f50
    int32_t v91; // 0x14000327f
    int32_t v92; // 0x1400032a0
    uint32_t v93; // 0x1400032a6
    uint32_t v94; // 0x140002f50
    int64_t v95; // 0x1400032ab
    int32_t v96; // 0x1400032ab
    int32_t v97; // 0x1400032b6
    uint32_t v98; // 0x1400032be
    int32_t v99; // 0x140002f50
    unsigned char v100; // 0x1400032d4
    unsigned char v101; // 0x140002f50
    int32_t v102; // 0x1400032f9
    int32_t v103; // 0x140003316
    uint32_t v104; // 0x140003334
    int32_t v105; // 0x140003334
    if (v51 == 0) {
        // 0x140003202
        v77 = v50;
        if (v48 <= 15) {
            // 0x14000320b
            function_140002dd0(a1);
            v77 = (int64_t)*v4;
            v8 = v77;
        }
        // 0x14000321c
        v54 = v77;
        v76 = *(char *)(v54 / 0x800000 + a4);
        if (v76 == -1) {
            // 0x14000324e
            v81 = (int32_t)(v54 / 0x10000);
            if (*(int32_t *)v44 > v81) {
                // 0x14000327f
                v52 = *v3;
                v56 = 10;
                v62 = 10;
            } else {
                v86 = 11;
                v87 = v44 + 4;
                v88 = 11;
                v65 = v87;
                v61 = v86;
                v55 = v88;
                while (*(int32_t *)v87 <= v81) {
                    // 0x140003270
                    v86 = v61 + 1 & 0xffffffff;
                    v87 = v65 + 4;
                    v88 = v55 + 1;
                    v65 = v87;
                    v61 = v86;
                    v55 = v88;
                }
                // 0x14000327f
                v91 = *v3;
                v52 = v91;
                v56 = v88;
                v62 = v86;
                if (v86 == 17) {
                    // 0x14000339b
                    *v3 = v91 - 16;
                    goto lab_0x1400033a5;
                }
            }
            // 0x140003290
            v90 = (int64_t)v52;
            if (v62 > v90) {
                // break -> 0x1400033a5
                break;
            }
            // 0x140003299
            v92 = v62;
            v93 = -v92 & 31;
            v94 = (int32_t)v54;
            v66 = v93 == 0 ? v54 : (int64_t)(v94 >> v93);
            v95 = 4 * v56;
            v96 = *(int32_t *)(v95 + 0x140022210);
            v97 = *(int32_t *)(a4 + 1612 + v95);
            v98 = v92 & 31;
            v67 = (v96 & (int32_t)v66) + v97;
            v64 = v98 == 0 ? v54 : (int64_t)(v94 << v98);
            v59 = v90 - v62;
        } else {
            // 0x14000322c
            v82 = v76;
            v83 = (int64_t)*v3;
            v84 = *(char *)((v82 | 1280) + a4);
            v85 = (int64_t)v84;
            if (v83 < v85) {
                // break -> 0x1400033a5
                break;
            }
            // 0x140003246
            v89 = v84 & 31;
            v63 = v54;
            if (v89 != 0) {
                v63 = (int32_t)v54 << (int32_t)v89;
            }
            v67 = v82;
            v64 = v63;
            v59 = v83 - v85;
        }
        // 0x1400032c3
        v60 = v59;
        *v3 = (int32_t)v60;
        v99 = v64;
        *v4 = v99;
        v100 = *(char *)(a4 + 1024 + v67);
        v101 = v100 & 15;
        if (v101 != 0) {
            // 0x1400032f6
            v58 = v60 & 0xffffffff;
            v102 = (int32_t)(v100 / 16) + (int32_t)v45;
            v103 = v99;
            v57 = v58;
            if (v58 < (int64_t)v101) {
                // 0x14000330e
                function_140002dd0(a1);
                v103 = *v4;
                v57 = (int64_t)*v3;
            }
            v53 = v103;
            v104 = (int32_t)v101;
            v105 = v53 >> 32 - v104 | v53 << v104;
            v69 = 4 * v101;
            v70 = *(int32_t *)(v69 + 0x140022210);
            v71 = *(int32_t *)(v69 + 0x140021f60);
            *v3 = (int32_t)v57 - v104;
            v72 = 2 * (int64_t)*(char *)((int64_t)v102 + 0x1400220c0);
            *v4 = v105 & -1 - v70;
            v73 = *(int16_t *)(v72 + a7);
            *(int16_t *)(v72 + v27) = v73 * (int16_t)((v71 & (v53 >> 31 ^ 0xffff)) + (v105 & v70));
            v68 = v102 + 1;
        } else {
            // 0x1400032e3
            if (v100 != -16) {
                // 0x1400033c3
                return 1;
            }
            // 0x1400032ee
            v68 = v45 + 16 & 0xffffffff;
        }
    } else {
        // 0x1400031b3
        v74 = v51 & 15;
        v75 = (int32_t)v74;
        v80 = v49;
        if (v74 != 0) {
            v80 = v49 << v75;
            v8 = v80;
        }
        v78 = v45 + (int64_t)(v51 / 16 & 15);
        *v4 = v80;
        *v3 = v48 - v75;
        v79 = 2 * (int64_t)*(char *)((0x100000000 * v78 >> 32) + 0x1400220c0);
        *(int16_t *)(v79 + v27) = *(int16_t *)(v79 + a7) * v51 / 256;
        v68 = v78 + 1 & 0xffffffff;
    }
    // 0x14000338b
    while ((int32_t)v68 < 64) {
        // 0x140003180
        v45 = v68;
        v46 = *v3;
        v47 = v46;
        if (v46 <= 15) {
            // 0x14000318d
            function_140002dd0(a1);
            v47 = *v3;
        }
        // 0x14000319c
        v48 = v47;
        v49 = *v4;
        v50 = v49;
        v8 = v50;
        v51 = *(int16_t *)((int64_t)(2 * v49 / 0x800000) + a5);
        if (v51 == 0) {
            // 0x140003202
            v77 = v50;
            if (v48 <= 15) {
                // 0x14000320b
                function_140002dd0(a1);
                v77 = (int64_t)*v4;
                v8 = v77;
            }
            // 0x14000321c
            v54 = v77;
            v76 = *(char *)(v54 / 0x800000 + a4);
            if (v76 == -1) {
                // 0x14000324e
                v81 = (int32_t)(v54 / 0x10000);
                if (*(int32_t *)v44 > v81) {
                    // 0x14000327f
                    v52 = *v3;
                    v56 = 10;
                    v62 = 10;
                } else {
                    v86 = 11;
                    v87 = v44 + 4;
                    v88 = 11;
                    v65 = v87;
                    v61 = v86;
                    v55 = v88;
                    while (*(int32_t *)v87 <= v81) {
                        // 0x140003270
                        v86 = v61 + 1 & 0xffffffff;
                        v87 = v65 + 4;
                        v88 = v55 + 1;
                        v65 = v87;
                        v61 = v86;
                        v55 = v88;
                    }
                    // 0x14000327f
                    v91 = *v3;
                    v52 = v91;
                    v56 = v88;
                    v62 = v86;
                    if (v86 == 17) {
                        // 0x14000339b
                        *v3 = v91 - 16;
                        goto lab_0x1400033a5;
                    }
                }
                // 0x140003290
                v90 = (int64_t)v52;
                if (v62 > v90) {
                    // break -> 0x1400033a5
                    break;
                }
                // 0x140003299
                v92 = v62;
                v93 = -v92 & 31;
                v94 = (int32_t)v54;
                v66 = v93 == 0 ? v54 : (int64_t)(v94 >> v93);
                v95 = 4 * v56;
                v96 = *(int32_t *)(v95 + 0x140022210);
                v97 = *(int32_t *)(a4 + 1612 + v95);
                v98 = v92 & 31;
                v67 = (v96 & (int32_t)v66) + v97;
                v64 = v98 == 0 ? v54 : (int64_t)(v94 << v98);
                v59 = v90 - v62;
            } else {
                // 0x14000322c
                v82 = v76;
                v83 = (int64_t)*v3;
                v84 = *(char *)((v82 | 1280) + a4);
                v85 = (int64_t)v84;
                if (v83 < v85) {
                    // break -> 0x1400033a5
                    break;
                }
                // 0x140003246
                v89 = v84 & 31;
                v63 = v54;
                if (v89 != 0) {
                    v63 = (int32_t)v54 << (int32_t)v89;
                }
                v67 = v82;
                v64 = v63;
                v59 = v83 - v85;
            }
            // 0x1400032c3
            v60 = v59;
            *v3 = (int32_t)v60;
            v99 = v64;
            *v4 = v99;
            v100 = *(char *)(a4 + 1024 + v67);
            v101 = v100 & 15;
            if (v101 != 0) {
                // 0x1400032f6
                v58 = v60 & 0xffffffff;
                v102 = (int32_t)(v100 / 16) + (int32_t)v45;
                v103 = v99;
                v57 = v58;
                if (v58 < (int64_t)v101) {
                    // 0x14000330e
                    function_140002dd0(a1);
                    v103 = *v4;
                    v57 = (int64_t)*v3;
                }
                v53 = v103;
                v104 = (int32_t)v101;
                v105 = v53 >> 32 - v104 | v53 << v104;
                v69 = 4 * v101;
                v70 = *(int32_t *)(v69 + 0x140022210);
                v71 = *(int32_t *)(v69 + 0x140021f60);
                *v3 = (int32_t)v57 - v104;
                v72 = 2 * (int64_t)*(char *)((int64_t)v102 + 0x1400220c0);
                *v4 = v105 & -1 - v70;
                v73 = *(int16_t *)(v72 + a7);
                *(int16_t *)(v72 + v27) = v73 * (int16_t)((v71 & (v53 >> 31 ^ 0xffff)) + (v105 & v70));
                v68 = v102 + 1;
            } else {
                // 0x1400032e3
                if (v100 != -16) {
                    // 0x1400033c3
                    return 1;
                }
                // 0x1400032ee
                v68 = v45 + 16 & 0xffffffff;
            }
        } else {
            // 0x1400031b3
            v74 = v51 & 15;
            v75 = (int32_t)v74;
            v80 = v49;
            if (v74 != 0) {
                v80 = v49 << v75;
                v8 = v80;
            }
            v78 = v45 + (int64_t)(v51 / 16 & 15);
            *v4 = v80;
            *v3 = v48 - v75;
            v79 = 2 * (int64_t)*(char *)((0x100000000 * v78 >> 32) + 0x1400220c0);
            *(int16_t *)(v79 + v27) = *(int16_t *)(v79 + a7) * v51 / 256;
            v68 = v78 + 1 & 0xffffffff;
        }
    }
    // 0x1400033c3
    return 1;
}

// Address range: 0x1400033e0 - 0x14000365e
int64_t function_1400033e0(int64_t a1, int64_t a2, int64_t a3, int64_t a4) {
    // 0x1400033e0
    int128_t v1; // 0x1400033e0
    int128_t v2 = v1;
    if (*(int32_t *)(a1 + 0x4838) != 0) {
        int64_t v3 = *(int64_t *)__readgsqword(88); // 0x140003410
        *(int64_t *)(v3 + 16) = (int64_t)"can't merge dc and ac";
        return (int32_t)"can't merge dc and ac" ^ (int32_t)"can't merge dc and ac";
    }
    int32_t * v4 = (int32_t *)(a1 + 0x4824); // 0x14000342e
    if (*v4 <= 15) {
        // 0x140003437
        function_140002dd0(a1);
    }
    // 0x14000343c
    int64_t v5; // 0x1400033e0
    if (*(int32_t *)(a1 + 0x483c) != 0) {
        uint32_t v6 = *v4; // 0x1400035fb
        int32_t v7 = v6; // 0x140003604
        if (v6 <= 0) {
            // 0x140003606
            function_140002dd0(a1);
            v7 = *v4;
        }
        int32_t * v8 = (int32_t *)(a1 + 0x4820); // 0x140003614
        int32_t v9 = *v8; // 0x140003614
        *v8 = 2 * v9;
        *v4 = v7 - 1;
        if (v9 < 0) {
            uint16_t v10 = 1 << ((int16_t)*(int32_t *)(a1 + 0x4840) & 31);
            v5 = v10;
            *(int16_t *)a2 = 2 * v10;
        }
        // 0x140003646
        return 1;
    }
    int128_t v11 = __asm_xorps(v2, v2); // 0x140003453
    __asm_movups(*(int128_t *)&v5, v11);
    __asm_movups(*(int128_t *)(a2 + 16), v11);
    __asm_movups(*(int128_t *)(a2 + 32), v11);
    __asm_movups(*(int128_t *)(a2 + 48), v11);
    __asm_movups(*(int128_t *)(a2 + 64), v11);
    __asm_movups(*(int128_t *)(a2 + 80), v11);
    __asm_movups(*(int128_t *)(a2 + 96), v11);
    __asm_movups(*(int128_t *)(a2 + 112), v11);
    if (*v4 <= 15) {
        // 0x14000347e
        function_140002dd0(a1);
    }
    int32_t * v12 = (int32_t *)(a1 + 0x4820); // 0x140003486
    uint32_t v13 = *v12; // 0x140003486
    int64_t v14 = v13; // 0x140003486
    unsigned char v15 = *(char *)((int64_t)(v13 / 0x800000) + a3); // 0x14000349b
    int32_t v16; // 0x1400033e0
    int64_t v17; // 0x1400033e0
    int64_t v18; // 0x1400033e0
    int64_t v19; // 0x1400033e0
    int64_t v20; // 0x1400033e0
    if (v15 == -1) {
        int64_t v21 = a3 + 1580; // 0x1400034c8
        uint32_t v22 = v13 / 0x10000; // 0x1400034cf
        if (*(int32_t *)v21 > v22) {
            // 0x1400034eb
            v16 = *v4;
            v19 = 10;
            goto lab_0x140003525;
        } else {
            int64_t v23 = 11; // 0x1400034e0
            int64_t v24 = v21 + 4; // 0x1400034e3
            int64_t v25 = v24; // 0x1400034e9
            int64_t v26 = v23; // 0x1400034e9
            while (*(int32_t *)v24 <= v22) {
                // 0x1400034e0
                v23 = v26 + 1 & 0xffffffff;
                v24 = v25 + 4;
                v25 = v24;
                v26 = v23;
            }
            int32_t v27 = *v4; // 0x1400034eb
            v16 = v27;
            v19 = v23;
            if (v23 != 17) {
                goto lab_0x140003525;
            } else {
                // 0x1400034f8
                *v4 = v27 - 16;
                goto lab_0x140003502;
            }
        }
    } else {
        int64_t v28 = v15; // 0x14000349b
        uint64_t v29 = (int64_t)*v4; // 0x1400034a4
        unsigned char v30 = *(char *)((v28 | 1280) + a3); // 0x1400034ad
        uint64_t v31 = (int64_t)v30; // 0x1400034ad
        if (v29 < v31) {
            goto lab_0x140003502;
        } else {
            unsigned char v32 = v30 & 31;
            int64_t v33 = v14; // 0x1400034ba
            if (v32 != 0) {
                v33 = v13 << (int32_t)v32;
            }
            v20 = v28;
            v17 = v33;
            v18 = v29 - v31;
            goto lab_0x140003554;
        }
    }
  lab_0x140003502:;
    int64_t v34 = *(int64_t *)__readgsqword(88); // 0x140003510
    *(int64_t *)(v34 + 16) = (int64_t)"can't merge dc and ac";
    int64_t result = (int32_t)"can't merge dc and ac" ^ (int32_t)"can't merge dc and ac"; // 0x140003520
    // 0x140003646
    return result;
  lab_0x140003525:;
    uint64_t v35 = (int64_t)v16;
    if (v19 > v35) {
        goto lab_0x140003502;
    } else {
        int64_t v36 = 0x100000000 * v19;
        v5 = v36 >> 32;
        int32_t v37 = v19; // 0x140003538
        int64_t v38 = v36 >> 30; // 0x140003540
        int32_t v39 = *(int32_t *)(v38 + 0x140022210); // 0x140003540
        int32_t v40 = *(int32_t *)(a3 + 1612 + v38); // 0x140003548
        uint32_t v41 = v37 & 31; // 0x14000354f
        v20 = (v39 & v13 >> (-v37 & 31)) + v40;
        v17 = v41 == 0 ? v14 : (int64_t)(v13 << v41);
        v18 = v35 - v19;
        goto lab_0x140003554;
    }
  lab_0x140003554:
    // 0x140003554
    *v4 = (int32_t)v18;
    int32_t v42 = v17;
    *v12 = v42;
    unsigned char v43 = *(char *)(a3 + 1024 + v20); // 0x140003562
    int32_t v44 = 0; // 0x14000356e
    if (v43 != 0) {
        uint64_t v45 = (int64_t)v43; // 0x140003562
        uint32_t v46 = v42; // 0x140003573
        int64_t v47 = v17; // 0x140003573
        if ((v18 & 0xffffffff) < v45) {
            // 0x140003575
            function_140002dd0(a1);
            v46 = *v12;
            v47 = v46;
        }
        uint32_t v48 = v46;
        unsigned char v49 = v43 & 31;
        int64_t v50 = v47 & 0xffffffff; // 0x140003589
        if (v49 != 0) {
            uint32_t v51 = (int32_t)v49; // 0x140003589
            v50 = v48 >> 32 - v51 | v48 << v51;
        }
        v44 = 0;
        if (v43 < 17) {
            // 0x140003591
            *v4 = *v4 - (int32_t)v43;
            int64_t v52 = 4 * v45;
            int32_t v53 = *(int32_t *)(v52 + 0x140022210); // 0x1400035a9
            int32_t v54 = *(int32_t *)(v52 + 0x140021f60); // 0x1400035b3
            int32_t v55 = v50; // 0x1400035bd
            *v12 = -1 - v53 & v55;
            v44 = (v54 & v48 / 0x80000000 - 1) + (v53 & v55);
        }
    }
    int32_t * v56 = (int32_t *)(a1 + 0x46b8 + 96 * (0x100000000 * a4 >> 32)); // 0x1400035dc
    uint32_t v57 = *v56 + v44; // 0x1400035e3
    v5 = v57;
    *v56 = v57;
    uint16_t v58 = (int16_t)*(int32_t *)(a1 + 0x4840) & 31; // 0x1400035f3
    int64_t v59; // 0x1400033e0
    if (v58 == 0) {
        // 0x1400035d4
        v59 = v5;
    } else {
        int64_t v60 = v5 & -0x10000 | (int64_t)((int16_t)v57 << v58); // 0x1400035f3
        v5 = v60;
        v59 = v60;
    }
    *(int16_t *)a2 = (int16_t)v59;
    // 0x140003646
    return 1;
}

// Address range: 0x140003660 - 0x140003ce3
// Used cryptographic patterns:
//  - libavcodec_ff_zigzag_direct (8-bit)
int64_t function_140003660(int64_t a1, int64_t a2, int64_t a3, int64_t a4) {
    int32_t v1 = *(int32_t *)(a1 + 0x4834); // 0x140003675
    if (v1 == 0) {
        int64_t v2 = *(int64_t *)__readgsqword(88); // 0x14000369a
        *(int64_t *)(v2 + 16) = (int64_t)"can't merge dc and ac";
        return (int32_t)"can't merge dc and ac" ^ (int32_t)"can't merge dc and ac";
    }
    int64_t v3 = v1; // 0x140003675
    int32_t * v4 = (int32_t *)(a1 + 0x4844); // 0x1400036bd
    int32_t v5 = *v4; // 0x1400036bd
    int32_t v6 = *(int32_t *)(a1 + 0x4840); // 0x1400036d2
    if (*(int32_t *)(a1 + 0x483c) == 0) {
        if (v5 != 0) {
            // 0x1400036e3
            *v4 = v5 - 1;
            // 0x140003cc8
            return 1;
        }
        int32_t * v7 = (int32_t *)(a1 + 0x4824);
        int32_t * v8 = (int32_t *)(a1 + 0x4820);
        uint16_t v9 = (int16_t)v6 & 31;
        int64_t v10 = a3 + 1580;
        uint32_t v11 = *v7; // 0x140003700
        int32_t v12 = v11; // 0x14000370b
        if (v11 <= 15) {
            // 0x14000370d
            function_140002dd0(a1);
            v12 = *v7;
        }
        uint32_t v13 = v12;
        uint32_t v14 = *v8; // 0x14000371c
        uint16_t v15 = *(int16_t *)((int64_t)(2 * v14 / 0x800000) + a4); // 0x14000372a
        int64_t v16; // 0x140003660
        int64_t v17; // 0x140003660
        int64_t v18; // 0x140003660
        int64_t v19; // 0x140003660
        int64_t v20; // 0x140003660
        int64_t v21; // 0x140003660
        int64_t v22; // 0x140003660
        int64_t v23; // 0x140003660
        int64_t v24; // 0x140003660
        int64_t v25; // 0x140003660
        int64_t v26; // 0x140003660
        int64_t v27; // 0x140003660
        int64_t v28; // 0x140003660
        uint32_t v29; // 0x140003660
        int64_t v30; // 0x140003660
        int64_t v31; // 0x140003660
        int64_t v32; // 0x140003660
        int32_t v33; // 0x140003812
        int64_t v34; // 0x14000381d
        int32_t v35; // 0x14000381d
        int32_t v36; // 0x140003825
        uint32_t v37; // 0x14000382d
        unsigned char v38; // 0x140003846
        unsigned char v39; // 0x140003660
        uint64_t v40; // 0x140003850
        unsigned char v41; // 0x140003660
        int64_t v42; // 0x140003869
        unsigned char v43; // 0x140003870
        int32_t v44; // 0x140003899
        uint32_t v45; // 0x140003899
        int32_t v46; // 0x140003899
        int64_t v47; // 0x14000389f
        int32_t v48; // 0x1400038ab
        int32_t v49; // 0x1400038b6
        uint32_t v50; // 0x140003858
        uint32_t v51; // 0x140003740
        int64_t v52; // 0x140003743
        unsigned char v53; // 0x140003764
        unsigned char v54; // 0x140003798
        int32_t v55; // 0x140003788
        uint32_t v56; // 0x1400037cb
        int64_t v57; // 0x140003798
        uint64_t v58; // 0x1400037a1
        unsigned char v59; // 0x1400037aa
        uint64_t v60; // 0x1400037aa
        int64_t v61; // 0x1400037e2
        int64_t v62; // 0x1400037e5
        int64_t v63; // 0x1400037e9
        unsigned char v64; // 0x140003660
        uint64_t v65; // 0x140003660
        if (v15 == 0) {
            // 0x140003777
            v55 = v14;
            if (v13 <= 15) {
                // 0x140003780
                function_140002dd0(a1);
                v55 = *v8;
            }
            // 0x140003792
            v29 = v55;
            v28 = v29;
            v54 = *(char *)(v28 / 0x800000 + a3);
            if (v54 == -1) {
                // 0x1400037cb
                v56 = v29 / 0x10000;
                if (*(int32_t *)v10 > v56) {
                    // 0x1400037f0
                    v19 = 10;
                    v22 = 10;
                } else {
                    v61 = 11;
                    v62 = v10 + 4;
                    v63 = 11;
                    v25 = v62;
                    v21 = v61;
                    v18 = v63;
                    while (*(int32_t *)v62 <= v56) {
                        // 0x1400037e2
                        v61 = v21 + 1 & 0xffffffff;
                        v62 = v25 + 4;
                        v63 = v18 + 1;
                        v25 = v62;
                        v21 = v61;
                        v18 = v63;
                    }
                    // 0x1400037f0
                    v19 = v63;
                    v22 = v61;
                    if (v61 == 17) {
                        goto lab_0x140003ca4_2;
                    }
                }
                // 0x140003801
                v65 = (int64_t)*v7;
                if (v22 > v65) {
                    goto lab_0x140003caa_2;
                }
                // 0x14000380a
                v33 = v22;
                v34 = 4 * v19;
                v35 = *(int32_t *)(v34 + 0x140022210);
                v36 = *(int32_t *)(a3 + 1612 + v34);
                v37 = v33 & 31;
                v16 = v37 == 0 ? v28 : (int64_t)(v29 << v37);
                *v8 = (int32_t)v16;
                v26 = (v35 & v29 >> (-v33 & 31)) + v36;
                v31 = v16;
                v24 = v65 - v22;
            } else {
                // 0x1400037a1
                v57 = v54;
                v58 = (int64_t)*v7;
                v59 = *(char *)((v57 | 1280) + a3);
                v60 = (int64_t)v59;
                if (v58 < v60) {
                    goto lab_0x140003caa_2;
                }
                // 0x1400037bb
                v64 = v59 & 31;
                v30 = v28;
                if (v64 != 0) {
                    v30 = v29 << (int32_t)v64;
                }
                *v8 = (int32_t)v30;
                v26 = v57;
                v31 = v30;
                v24 = v58 - v60;
            }
            // 0x14000383c
            v32 = v31;
            v23 = v24 & 0xffffffff;
            *v7 = (int32_t)v24;
            v38 = *(char *)(a3 + 1024 + v26);
            v39 = v38 / 16;
            v40 = (int64_t)v39;
            v41 = v38 & 15;
            if (v41 != 0) {
                // 0x140003869
                v42 = v3 + v40;
                v43 = *(char *)((0x100000000 * v42 >> 32) + 0x1400220c0);
                v17 = v32;
                v20 = v23;
                if (v23 < (int64_t)v41) {
                    // 0x14000387e
                    function_140002dd0(a1);
                    v17 = (int64_t)*v8;
                    v20 = (int64_t)*v7;
                }
                v44 = v17;
                v45 = (int32_t)v41;
                v46 = v44 >> 32 - v45 | v44 << v45;
                v47 = 4 * v41;
                v48 = *(int32_t *)(v47 + 0x140022210);
                v49 = *(int32_t *)(v47 + 0x140021f60);
                *v7 = (int32_t)v20 - v45;
                *v8 = v46 & -1 - v48;
                *(int16_t *)(2 * (int64_t)v43 + a2) = (int16_t)((v49 & (v44 >> 31 ^ 0xffff)) + (v46 & v48)) << v9;
                v27 = v42 + 1;
            } else {
                if (v38 <= 239) {
                    // 0x140003902
                    v50 = (int32_t)v39;
                    *v4 = v38 < 16 ? 1 : 1 << v50;
                    if (v38 < 16) {
                        goto lab_0x140003965;
                    } else {
                        // 0x140003918
                        if (v23 < v40) {
                            // 0x140003920
                            function_140002dd0(a1);
                            goto lab_dec_label_pc_unknown;
                        } else {
                            goto lab_dec_label_pc_unknown;
                        }
                    }
                }
                // 0x140003861
                v27 = v3 + 16;
            }
        } else {
            // 0x140003733
            v51 = (int32_t)(v15 & 15);
            v52 = v3 + (int64_t)(v15 / 16 & 15);
            *v8 = v14 << v51;
            *v7 = v13 - v51;
            v53 = *(char *)((0x100000000 * v52 >> 32) + 0x1400220c0);
            *(int16_t *)(2 * (int64_t)v53 + a2) = v15 / 256 << v9;
            v27 = v52 + 1;
        }
        // 0x1400038ec
        while (*(int32_t *)(a1 + 0x4838) >= (int32_t)v27) {
            int64_t v66 = v27 & 0xffffffff;
            v11 = *v7;
            v12 = v11;
            if (v11 <= 15) {
                // 0x14000370d
                function_140002dd0(a1);
                v12 = *v7;
            }
            // 0x14000371c
            v13 = v12;
            v14 = *v8;
            v15 = *(int16_t *)((int64_t)(2 * v14 / 0x800000) + a4);
            if (v15 == 0) {
                // 0x140003777
                v55 = v14;
                if (v13 <= 15) {
                    // 0x140003780
                    function_140002dd0(a1);
                    v55 = *v8;
                }
                // 0x140003792
                v29 = v55;
                v28 = v29;
                v54 = *(char *)(v28 / 0x800000 + a3);
                if (v54 == -1) {
                    // 0x1400037cb
                    v56 = v29 / 0x10000;
                    if (*(int32_t *)v10 > v56) {
                        // 0x1400037f0
                        v19 = 10;
                        v22 = 10;
                    } else {
                        v61 = 11;
                        v62 = v10 + 4;
                        v63 = 11;
                        v25 = v62;
                        v21 = v61;
                        v18 = v63;
                        while (*(int32_t *)v62 <= v56) {
                            // 0x1400037e2
                            v61 = v21 + 1 & 0xffffffff;
                            v62 = v25 + 4;
                            v63 = v18 + 1;
                            v25 = v62;
                            v21 = v61;
                            v18 = v63;
                        }
                        // 0x1400037f0
                        v19 = v63;
                        v22 = v61;
                        if (v61 == 17) {
                            goto lab_0x140003ca4_2;
                        }
                    }
                    // 0x140003801
                    v65 = (int64_t)*v7;
                    if (v22 > v65) {
                        goto lab_0x140003caa_2;
                    }
                    // 0x14000380a
                    v33 = v22;
                    v34 = 4 * v19;
                    v35 = *(int32_t *)(v34 + 0x140022210);
                    v36 = *(int32_t *)(a3 + 1612 + v34);
                    v37 = v33 & 31;
                    v16 = v37 == 0 ? v28 : (int64_t)(v29 << v37);
                    *v8 = (int32_t)v16;
                    v26 = (v35 & v29 >> (-v33 & 31)) + v36;
                    v31 = v16;
                    v24 = v65 - v22;
                } else {
                    // 0x1400037a1
                    v57 = v54;
                    v58 = (int64_t)*v7;
                    v59 = *(char *)((v57 | 1280) + a3);
                    v60 = (int64_t)v59;
                    if (v58 < v60) {
                        goto lab_0x140003caa_2;
                    }
                    // 0x1400037bb
                    v64 = v59 & 31;
                    v30 = v28;
                    if (v64 != 0) {
                        v30 = v29 << (int32_t)v64;
                    }
                    *v8 = (int32_t)v30;
                    v26 = v57;
                    v31 = v30;
                    v24 = v58 - v60;
                }
                // 0x14000383c
                v32 = v31;
                v23 = v24 & 0xffffffff;
                *v7 = (int32_t)v24;
                v38 = *(char *)(a3 + 1024 + v26);
                v39 = v38 / 16;
                v40 = (int64_t)v39;
                v41 = v38 & 15;
                if (v41 != 0) {
                    // 0x140003869
                    v42 = v66 + v40;
                    v43 = *(char *)((0x100000000 * v42 >> 32) + 0x1400220c0);
                    v17 = v32;
                    v20 = v23;
                    if (v23 < (int64_t)v41) {
                        // 0x14000387e
                        function_140002dd0(a1);
                        v17 = (int64_t)*v8;
                        v20 = (int64_t)*v7;
                    }
                    v44 = v17;
                    v45 = (int32_t)v41;
                    v46 = v44 >> 32 - v45 | v44 << v45;
                    v47 = 4 * v41;
                    v48 = *(int32_t *)(v47 + 0x140022210);
                    v49 = *(int32_t *)(v47 + 0x140021f60);
                    *v7 = (int32_t)v20 - v45;
                    *v8 = v46 & -1 - v48;
                    *(int16_t *)(2 * (int64_t)v43 + a2) = (int16_t)((v49 & (v44 >> 31 ^ 0xffff)) + (v46 & v48)) << v9;
                    v27 = v42 + 1;
                } else {
                    if (v38 <= 239) {
                        // 0x140003902
                        v50 = (int32_t)v39;
                        *v4 = v38 < 16 ? 1 : 1 << v50;
                        if (v38 < 16) {
                            goto lab_0x140003965;
                        } else {
                            // 0x140003918
                            if (v23 < v40) {
                                // 0x140003920
                                function_140002dd0(a1);
                                goto lab_dec_label_pc_unknown;
                            } else {
                                goto lab_dec_label_pc_unknown;
                            }
                        }
                    }
                    // 0x140003861
                    v27 = v66 + 16;
                }
            } else {
                // 0x140003733
                v51 = (int32_t)(v15 & 15);
                v52 = v66 + (int64_t)(v15 / 16 & 15);
                *v8 = v14 << v51;
                *v7 = v13 - v51;
                v53 = *(char *)((0x100000000 * v52 >> 32) + 0x1400220c0);
                *(int16_t *)(2 * (int64_t)v53 + a2) = v15 / 256 << v9;
                v27 = v52 + 1;
            }
        }
      lab_0x140003cc8:
        // 0x140003cc8
        return 1;
    }
    int16_t v67 = 1 << ((int16_t)v6 & 31);
    if (v5 != 0) {
        // 0x140003997
        *v4 = v5 - 1;
        int32_t * v68 = (int32_t *)(a1 + 0x4838); // 0x14000399f
        if (*v68 < v1) {
            // 0x140003cc8
            return 1;
        }
        int32_t * v69 = (int32_t *)(a1 + 0x4824);
        int32_t * v70 = (int32_t *)(a1 + 0x4820);
        int64_t v71 = v3 + (int64_t)"\x00\x01\b\x10\t\x02\x03\n\x11\x18 \x19\x12\v\x04\x05\f\x13\x1a!(0)\"\x1b\x14\r\x06\a\x0e\x15\x1c#*1892+$\x1d\x16\x0f\x17\x1e%,3:;4-&\x1f'.5<=6/7>?"; // 0x1400039bc
        int16_t * v72 = (int16_t *)(2 * (int64_t)*(char *)v71 + a2); // 0x1400039c4
        uint32_t v73; // 0x1400039d0
        int32_t v74; // 0x1400039e9
        int32_t v75; // 0x1400039e3
        int16_t v76; // 0x140003a05
        if (*v72 != 0) {
            // 0x1400039d0
            v73 = *v69;
            v75 = v73;
            if (v73 <= 0) {
                // 0x1400039db
                function_140002dd0(a1);
                v75 = *v69;
            }
            // 0x1400039e9
            v74 = *v70;
            *v70 = 2 * v74;
            *v69 = v75 - 1;
            if (v74 < 0) {
                // 0x140003a05
                v76 = *v72;
                if ((v76 & v67) == 0) {
                    // 0x140003a0e
                    *v72 = (v76 < 1 ? -v67 : v67) + v76;
                }
            }
        }
        int64_t v77 = v3 + 1; // 0x140003a20
        v71++;
        int64_t v78 = v77 & 0xffffffff; // 0x140003a2b
        while (*v68 >= (int32_t)v77) {
            // 0x1400039c0
            v72 = (int16_t *)(2 * (int64_t)*(char *)v71 + a2);
            if (*v72 != 0) {
                // 0x1400039d0
                v73 = *v69;
                v75 = v73;
                if (v73 <= 0) {
                    // 0x1400039db
                    function_140002dd0(a1);
                    v75 = *v69;
                }
                // 0x1400039e9
                v74 = *v70;
                *v70 = 2 * v74;
                *v69 = v75 - 1;
                if (v74 < 0) {
                    // 0x140003a05
                    v76 = *v72;
                    if ((v76 & v67) == 0) {
                        // 0x140003a0e
                        *v72 = (v76 < 1 ? -v67 : v67) + v76;
                    }
                }
            }
            // 0x140003a20
            v77 = v78 + 1;
            v71++;
            v78 = v77 & 0xffffffff;
        }
        // 0x140003cc8
        return 1;
    }
    int32_t * v79 = (int32_t *)(a1 + 0x4824);
    int32_t * v80 = (int32_t *)(a1 + 0x4820);
    int64_t v81 = a3 + 1580;
    int32_t * v82 = (int32_t *)(a1 + 0x4838);
    if (*v79 <= 15) {
        // 0x140003a4a
        function_140002dd0(a1);
    }
    uint32_t v83 = *v80; // 0x140003a52
    unsigned char v84 = *(char *)((int64_t)(v83 / 0x800000) + a3); // 0x140003a60
    int32_t v85; // 0x140003660
    int64_t v86; // 0x140003660
    int64_t v87; // 0x140003660
    if (v84 == -1) {
        uint32_t v88 = v83 / 0x10000; // 0x140003a95
        int64_t v89; // 0x140003660
        int64_t v90; // 0x140003660
        if (*(int32_t *)v81 > v88) {
            // 0x140003abe
            v90 = 10;
            v89 = 10;
        } else {
            int64_t v91 = 11; // 0x140003ab0
            int64_t v92 = v81 + 4; // 0x140003ab3
            int64_t v93 = 11; // 0x140003ab7
            int64_t v94 = v92; // 0x140003abc
            int64_t v95 = v91; // 0x140003abc
            int64_t v96 = v93; // 0x140003abc
            while (*(int32_t *)v92 <= v88) {
                // 0x140003ab0
                v91 = v95 + 1 & 0xffffffff;
                v92 = v94 + 4;
                v93 = v96 + 1;
                v94 = v92;
                v95 = v91;
                v96 = v93;
            }
            // 0x140003abe
            v90 = v93;
            v89 = v91;
            if (v91 == 17) {
                goto lab_0x140003ca4_2;
            }
        }
        uint64_t v97 = (int64_t)*v79;
        if (v89 > v97) {
            // break -> 0x140003caa
            break;
        }
        int32_t v98 = v89; // 0x140003ae0
        int64_t v99 = 4 * v90; // 0x140003aeb
        int32_t v100 = *(int32_t *)(v99 + 0x140022210); // 0x140003aeb
        int32_t v101 = *(int32_t *)(a3 + 1612 + v99); // 0x140003af3
        v87 = (v100 & v83 >> (-v98 & 31)) + v101;
        v86 = v97 - v89;
        v85 = v98 & 31;
    } else {
        int64_t v102 = v84; // 0x140003a60
        uint64_t v103 = (int64_t)*v79; // 0x140003a69
        unsigned char v104 = *(char *)((v102 | 1280) + a3); // 0x140003a72
        uint64_t v105 = (int64_t)v104; // 0x140003a72
        if (v103 < v105) {
            // break -> 0x140003caa
            break;
        }
        // 0x140003a83
        v87 = v102;
        v86 = v103 - v105;
        v85 = v104 & 31;
    }
    int32_t v106 = v83 << v85;
    int64_t v107 = v86 & 0xffffffff;
    *v79 = (int32_t)v86;
    *v80 = v106;
    unsigned char v108 = *(char *)(a3 + 1024 + v87); // 0x140003b0e
    unsigned char v109 = v108 / 16;
    int64_t v110 = v109; // 0x140003b19
    unsigned char v111 = v108 & 15;
    int64_t v112; // 0x140003660
    if (v111 != 0) {
        if (v111 != 1) {
            // break -> 0x140003caa
            break;
        }
        int32_t v113 = v106; // 0x140003ba4
        int64_t v114 = v107; // 0x140003ba4
        if (v107 < (int64_t)v111) {
            // 0x140003ba6
            function_140002dd0(a1);
            v113 = *v80;
            v114 = (int64_t)*v79;
        }
        // 0x140003bbc
        *v80 = 2 * v113;
        *v79 = (int32_t)v114 - 1;
        v112 = v110;
    } else {
        // 0x140003b22
        v112 = v110;
        if (v108 < 240) {
            uint32_t v115 = (int32_t)v109; // 0x140003b22
            int64_t v116 = v108 < 16 ? 0x100000000 : (int64_t)(1 << v115) + 0xffffffff; // 0x140003b34
            *v4 = (int32_t)v116;
            v112 = 64;
            if (v108 >= 16) {
                // 0x140003b40
                if (v107 < v110) {
                    // branch ->
                }
                uint32_t v117 = v106;
                int32_t v118 = v117 >> 32 - v115 | v117 << v115; // 0x140003b66
                int32_t v119 = *(int32_t *)((int64_t)(4 * v109) + 0x140022210); // 0x140003b69
                *v79 = (int32_t)(v107 - v110);
                *v80 = v118 & -1 - v119;
                *v4 = (v119 & v118) + (int32_t)(v116 & 0xffffffff);
                v112 = 64;
            }
        }
    }
    while (v3 <= (int64_t)*v82) {
        int64_t v120 = v3 + 1; // 0x140003bf9
        int64_t v121 = v120 & 0xffffffff; // 0x140003bf9
        int64_t v122 = v3 + 1; // 0x140003bff
        int16_t * v123 = (int16_t *)(2 * (int64_t)*(char *)(v3 + 0x1400220c0) + a2);
        int64_t v124; // 0x140003660
        uint32_t v125; // 0x140003c08
        int32_t v126; // 0x140003c21
        int32_t v127; // 0x140003c1b
        int16_t v128; // 0x140003c3d
        if (*v123 == 0) {
            if ((int32_t)v112 == 0) {
                // break -> 0x140003c82
                break;
            }
            // 0x140003c66
            v124 = v112 + 0xffffffff & 0xffffffff;
        } else {
            // 0x140003c08
            v125 = *v79;
            v127 = v125;
            if (v125 <= 0) {
                // 0x140003c13
                function_140002dd0(a1);
                v127 = *v79;
            }
            // 0x140003c21
            v126 = *v80;
            *v80 = 2 * v126;
            *v79 = v127 - 1;
            v124 = v112;
            if (v126 < 0) {
                // 0x140003c3d
                v128 = *v123;
                v124 = v112;
                if ((v128 & v67) == 0) {
                    if (v128 < 1) {
                        // 0x140003c59
                        *v123 = v128 - v67;
                        v124 = v112;
                    } else {
                        // 0x140003c50
                        *v123 = v128 + v67;
                        v124 = v112;
                    }
                }
            }
        }
        // 0x140003c6f
        while (*v82 >= (int32_t)v120) {
            int64_t v129 = v122;
            int64_t v130 = v124;
            v120 = v121 + 1;
            v121 = v120 & 0xffffffff;
            v122 = v129 + 1;
            v123 = (int16_t *)(2 * (int64_t)*(char *)(v129 + 0x1400220c0) + a2);
            if (*v123 == 0) {
                if ((int32_t)v130 == 0) {
                    // break -> 0x140003c82
                    break;
                }
                // 0x140003c66
                v124 = v130 + 0xffffffff & 0xffffffff;
            } else {
                // 0x140003c08
                v125 = *v79;
                v127 = v125;
                if (v125 <= 0) {
                    // 0x140003c13
                    function_140002dd0(a1);
                    v127 = *v79;
                }
                // 0x140003c21
                v126 = *v80;
                *v80 = 2 * v126;
                *v79 = v127 - 1;
                v124 = v130;
                if (v126 < 0) {
                    // 0x140003c3d
                    v128 = *v123;
                    v124 = v130;
                    if ((v128 & v67) == 0) {
                        if (v128 < 1) {
                            // 0x140003c59
                            *v123 = v128 - v67;
                            v124 = v130;
                        } else {
                            // 0x140003c50
                            *v123 = v128 + v67;
                            v124 = v130;
                        }
                    }
                }
            }
        }
        // 0x140003cc8
        return 1;
    }
    // 0x140003cc8
    return 1;
}

// Address range: 0x140003cf0 - 0x140004303
int64_t function_140003cf0(int64_t a1, int64_t a2, int64_t a3) {
    int64_t v1 = 4; // 0x140003d2b
    int64_t v2 = a3 + 32; // 0x140003d2b
    int64_t v3; // bp-296, 0x140003cf0
    int64_t v4 = &v3; // 0x140003d2b
    int16_t v5; // 0x140003cf0
    int64_t v6; // 0x140003cf0
    int64_t v7; // 0x140003cf0
    int64_t v8; // 0x140003cf0
    int64_t v9; // 0x140003cf0
    int64_t v10; // 0x140003cf0
    int16_t v11; // 0x140003d34
    while (true) {
      lab_0x140003d34:
        // 0x140003d34
        v8 = v4;
        v7 = v2;
        v11 = *(int16_t *)(v7 - 16);
        v5 = *(int16_t *)v7;
        if (v11 == 0 == v5 == v11) {
            // 0x140003d42
            if (*(int16_t *)(v7 + 16) != v11) {
                goto lab_0x140003d86;
            } else {
                // 0x140003d48
                if (*(int16_t *)(v7 + 32) != v11) {
                    goto lab_0x140003d86;
                } else {
                    // 0x140003d4e
                    if (*(int16_t *)(v7 + 48) != v11) {
                        goto lab_0x140003d86;
                    } else {
                        // 0x140003d54
                        if (*(int16_t *)(v7 + 64) != v11) {
                            goto lab_0x140003d86;
                        } else {
                            // 0x140003d5a
                            if (*(int16_t *)(v7 + 80) != v11) {
                                goto lab_0x140003d86;
                            } else {
                                int64_t v12 = 4 * (int64_t)*(int16_t *)(v7 - 32); // 0x140003d64
                                int64_t v13 = v12 & 0xfffffffc; // 0x140003d64
                                int32_t v14 = v12; // 0x140003d67
                                *(int32_t *)(v8 + 192) = v14;
                                *(int32_t *)(v8 + 160) = v14;
                                *(int32_t *)(v8 + 32) = v14;
                                *(int32_t *)v8 = v14;
                                *(int32_t *)(v8 - 32) = v14;
                                v9 = v13;
                                v10 = v13;
                                v6 = v13;
                                goto lab_0x140003ec4;
                            }
                        }
                    }
                }
            }
        } else {
            goto lab_0x140003d86;
        }
    }
  lab_0x140004084:;
    // 0x140004084
    int64_t v15; // bp-304, 0x140003cf0
    int64_t v16 = &v15; // 0x14000409f
    int64_t v17 = a1 + 1; // 0x14000409f
    int32_t v18 = *(int32_t *)(v16 - 16); // 0x1400040a0
    int32_t v19 = *(int32_t *)v16; // 0x1400040a4
    int32_t v20 = *(int32_t *)(v16 | 4); // 0x1400040a7
    int32_t v21 = *(int32_t *)(v16 - 4); // 0x1400040ab
    int32_t v22 = *(int32_t *)(v16 - 12); // 0x1400040af
    int32_t v23 = *(int32_t *)(v16 - 24); // 0x1400040b3
    int32_t v24 = 2217 * (v19 + v18); // 0x1400040bb
    int32_t v25 = *(int32_t *)(v16 - 8); // 0x1400040d4
    int32_t v26 = v24 + 3135 * v18; // 0x1400040d8
    int32_t v27 = v22 + v20; // 0x1400040da
    int32_t v28 = 0x1000 * (v25 + v23); // 0x1400040e9
    int32_t v29 = *(int32_t *)(v16 - 20); // 0x1400040f4
    int32_t v30 = v26 + 0x1010000 + v28; // 0x1400040ff
    int32_t v31 = v29 + v21; // 0x14000411a
    int32_t v32 = 0x12d0 * (v31 + v27); // 0x140004122
    int32_t v33 = v32 + -3685 * (v29 + v20); // 0x140004139
    int32_t v34 = -1597 * v31; // 0x140004142
    int32_t v35 = v34 + 0x1805 * v29 + v33; // 0x14000416e
    int32_t v36 = v35 + v30; // 0x140004188
    int32_t v37 = v36 >> 17; // 0x14000418b
    int32_t v38 = v37; // 0x140004193
    if (v37 >= 256) {
        // 0x140004195
        v38 = 0;
        if (v36 >= 0) {
            // 0x14000419d
            v38 = v36 < 0x2000000 ? v37 : 255;
        }
    }
    int32_t v39 = v30 - v35; // 0x1400041a6
    *(char *)(v17 - 1) = (char)v38;
    int32_t v40 = v39 >> 17; // 0x1400041ac
    int32_t v41 = v40; // 0x1400041b5
    if (v40 >= 256) {
        // 0x1400041b7
        v41 = 0;
        if (v39 >= 0) {
            // 0x1400041c0
            v41 = v39 < 0x2000000 ? v40 : 255;
        }
    }
    int32_t v42 = v24 + -0x1d8f * v19; // 0x1400040d1
    int32_t v43 = 0x1000 * (v23 - v25); // 0x1400040e5
    int32_t v44 = v42 + 0x1010000 + v43; // 0x140004105
    int32_t v45 = v32 + -0x2901 * (v22 + v21); // 0x140004150
    int32_t v46 = -0x1f62 * v27; // 0x140004152
    int32_t v47 = v46 + 0x312a * v22 + v45; // 0x140004186
    int32_t v48 = v47 + v44; // 0x1400041cb
    *(char *)(v17 + 6) = (char)v41;
    int32_t v49 = v48 >> 17; // 0x1400041d3
    int32_t v50 = v49; // 0x1400041db
    if (v49 >= 256) {
        // 0x1400041dd
        v50 = 0;
        if (v48 >= 0) {
            // 0x1400041e5
            v50 = v48 < 0x2000000 ? v49 : 255;
        }
    }
    int32_t v51 = v44 - v47; // 0x1400041ee
    *(char *)v17 = (char)v50;
    int32_t v52 = v51 >> 17; // 0x1400041f5
    int32_t v53 = v52; // 0x140004200
    if (v52 >= 256) {
        // 0x140004202
        v53 = 0;
        if (v51 >= 0) {
            // 0x14000420c
            v53 = v51 < 0x2000000 ? v52 : 255;
        }
    }
    int32_t v54 = v43 - v42 + 0x1010000; // 0x14000410c
    int32_t v55 = v34 + 0x20da * v21 + v45; // 0x140004169
    int32_t v56 = v55 + v54; // 0x140004218
    *(char *)(v17 + 5) = (char)v53;
    int32_t v57 = v56 >> 17; // 0x140004220
    int32_t v58 = v57; // 0x140004228
    if (v57 >= 256) {
        // 0x14000422a
        v58 = 0;
        if (v56 >= 0) {
            // 0x140004232
            v58 = v56 < 0x2000000 ? v57 : 255;
        }
    }
    int32_t v59 = v54 - v55; // 0x14000423b
    *(char *)(v17 + 1) = (char)v58;
    int32_t v60 = v59 >> 17; // 0x140004242
    int32_t v61 = v60; // 0x14000424d
    if (v60 >= 256) {
        // 0x14000424f
        v61 = 0;
        if (v59 >= 0) {
            // 0x140004259
            v61 = v59 < 0x2000000 ? v60 : 255;
        }
    }
    int32_t v62 = v28 - v26 + 0x1010000; // 0x140004113
    int32_t v63 = v46 + 1223 * v20 + v33; // 0x140004177
    int32_t v64 = v63 + v62; // 0x140004265
    *(char *)(v17 + 4) = (char)v61;
    int32_t v65 = v64 >> 17; // 0x14000426d
    int32_t v66 = v65; // 0x140004275
    if (v65 >= 256) {
        // 0x140004277
        v66 = 0;
        if (v64 >= 0) {
            // 0x14000427f
            v66 = v64 < 0x2000000 ? v65 : 255;
        }
    }
    int32_t v67 = v62 - v63; // 0x140004288
    *(char *)(v17 + 2) = (char)v66;
    int32_t v68 = v67 >> 17; // 0x14000428f
    int32_t v69 = v68; // 0x14000429a
    if (v68 >= 256) {
        // 0x14000429c
        v69 = 0;
        if (v67 >= 0) {
            // 0x1400042a6
            v69 = v67 < 0x2000000 ? v68 : 255;
        }
    }
    // 0x1400042b2
    *(char *)(v17 + 3) = (char)v69;
    int64_t v70 = 7; // 0x1400042c7
    int64_t v71 = v70; // 0x1400042d2
    v16 += 32;
    v17 += (0x100000000 * a2 >> 32);
    while (v70 != 0) {
        // 0x1400040a0
        v18 = *(int32_t *)(v16 - 16);
        v19 = *(int32_t *)v16;
        v20 = *(int32_t *)(v16 | 4);
        v21 = *(int32_t *)(v16 - 4);
        v22 = *(int32_t *)(v16 - 12);
        v23 = *(int32_t *)(v16 - 24);
        v24 = 2217 * (v19 + v18);
        v25 = *(int32_t *)(v16 - 8);
        v26 = v24 + 3135 * v18;
        v27 = v22 + v20;
        v28 = 0x1000 * (v25 + v23);
        v29 = *(int32_t *)(v16 - 20);
        v30 = v26 + 0x1010000 + v28;
        v31 = v29 + v21;
        v32 = 0x12d0 * (v31 + v27);
        v33 = v32 + -3685 * (v29 + v20);
        v34 = -1597 * v31;
        v35 = v34 + 0x1805 * v29 + v33;
        v36 = v35 + v30;
        v37 = v36 >> 17;
        v38 = v37;
        if (v37 >= 256) {
            // 0x140004195
            v38 = 0;
            if (v36 >= 0) {
                // 0x14000419d
                v38 = v36 < 0x2000000 ? v37 : 255;
            }
        }
        // 0x1400041a6
        v39 = v30 - v35;
        *(char *)(v17 - 1) = (char)v38;
        v40 = v39 >> 17;
        v41 = v40;
        if (v40 >= 256) {
            // 0x1400041b7
            v41 = 0;
            if (v39 >= 0) {
                // 0x1400041c0
                v41 = v39 < 0x2000000 ? v40 : 255;
            }
        }
        // 0x1400041cb
        v42 = v24 + -0x1d8f * v19;
        v43 = 0x1000 * (v23 - v25);
        v44 = v42 + 0x1010000 + v43;
        v45 = v32 + -0x2901 * (v22 + v21);
        v46 = -0x1f62 * v27;
        v47 = v46 + 0x312a * v22 + v45;
        v48 = v47 + v44;
        *(char *)(v17 + 6) = (char)v41;
        v49 = v48 >> 17;
        v50 = v49;
        if (v49 >= 256) {
            // 0x1400041dd
            v50 = 0;
            if (v48 >= 0) {
                // 0x1400041e5
                v50 = v48 < 0x2000000 ? v49 : 255;
            }
        }
        // 0x1400041ee
        v51 = v44 - v47;
        *(char *)v17 = (char)v50;
        v52 = v51 >> 17;
        v53 = v52;
        if (v52 >= 256) {
            // 0x140004202
            v53 = 0;
            if (v51 >= 0) {
                // 0x14000420c
                v53 = v51 < 0x2000000 ? v52 : 255;
            }
        }
        // 0x140004218
        v54 = v43 - v42 + 0x1010000;
        v55 = v34 + 0x20da * v21 + v45;
        v56 = v55 + v54;
        *(char *)(v17 + 5) = (char)v53;
        v57 = v56 >> 17;
        v58 = v57;
        if (v57 >= 256) {
            // 0x14000422a
            v58 = 0;
            if (v56 >= 0) {
                // 0x140004232
                v58 = v56 < 0x2000000 ? v57 : 255;
            }
        }
        // 0x14000423b
        v59 = v54 - v55;
        *(char *)(v17 + 1) = (char)v58;
        v60 = v59 >> 17;
        v61 = v60;
        if (v60 >= 256) {
            // 0x14000424f
            v61 = 0;
            if (v59 >= 0) {
                // 0x140004259
                v61 = v59 < 0x2000000 ? v60 : 255;
            }
        }
        // 0x140004265
        v62 = v28 - v26 + 0x1010000;
        v63 = v46 + 1223 * v20 + v33;
        v64 = v63 + v62;
        *(char *)(v17 + 4) = (char)v61;
        v65 = v64 >> 17;
        v66 = v65;
        if (v65 >= 256) {
            // 0x140004277
            v66 = 0;
            if (v64 >= 0) {
                // 0x14000427f
                v66 = v64 < 0x2000000 ? v65 : 255;
            }
        }
        // 0x140004288
        v67 = v62 - v63;
        *(char *)(v17 + 2) = (char)v66;
        v68 = v67 >> 17;
        v69 = v68;
        if (v68 >= 256) {
            // 0x14000429c
            v69 = 0;
            if (v67 >= 0) {
                // 0x1400042a6
                v69 = v67 < 0x2000000 ? v68 : 255;
            }
        }
        // 0x1400042b2
        *(char *)(v17 + 3) = (char)v69;
        v70 = v71 - 1;
        v71 = v70;
        v16 += 32;
        v17 += (0x100000000 * a2 >> 32);
    }
    // 0x1400042d8
    __security_check_cookie(g66);
    return &g103;
  lab_0x140003d86:;
    int64_t v72 = v11; // 0x140003d34
    int64_t v73 = (int64_t)*(int16_t *)(v7 + 16); // 0x140003d86
    int64_t v74 = v5; // 0x140003d8b
    int64_t v75 = (int64_t)*(int16_t *)(v7 + 64); // 0x140003d8f
    int64_t v76 = (int64_t)*(int16_t *)(v7 + 80); // 0x140003d93
    int64_t v77 = (int64_t)*(int16_t *)(v7 + 48); // 0x140003d98
    int64_t v78 = (int64_t)*(int16_t *)(v7 - 32); // 0x140003d9c
    int64_t v79 = 2217 * (v75 + v74); // 0x140003da5
    int64_t v80 = v77 + v72; // 0x140003db9
    int64_t v81 = v79 + 0xffffe271 * v75; // 0x140003dc0
    int64_t v82 = (int64_t)*(int16_t *)(v7 + 32); // 0x140003dc3
    int64_t v83 = v79 + 3135 * v74; // 0x140003dc7
    int64_t v84 = 0x1000 * (v82 + v78); // 0x140003dd1
    int64_t v85 = 0x1000 * (v78 - v82); // 0x140003dd5
    int64_t v86 = v76 + v73; // 0x140003deb
    int64_t v87 = 0x12d0 * (v80 + v86); // 0x140003df6
    int64_t v88 = v83 + 512 + v84; // 0x140003dfc
    int64_t v89 = v81 + 512 + v85; // 0x140003e07
    int64_t v90 = v85 - v81 + 512; // 0x140003e14
    int64_t v91 = v87 + 0xfffff19b * (v76 + v72); // 0x140003e21
    int64_t v92 = 0xfffff9c3 * v80; // 0x140003e29
    int64_t v93 = v87 + 0xffffd6ff * (v77 + v73); // 0x140003e3e
    int64_t v94 = 0xffffe09e * v86; // 0x140003e40
    int64_t v95 = v92 + 0x1805 * v72 + v91; // 0x140003e67
    int64_t v96 = v94 + 0x312a * v73 + v93; // 0x140003e6a
    int64_t v97 = v92 + 0x20da * v77 + v93; // 0x140003e6d
    int32_t v98 = (int32_t)v84 - (int32_t)v83 + 512; // 0x140003e70
    *(int32_t *)(v8 - 32) = (int32_t)(v88 + v95) >> 10;
    *(int32_t *)v8 = (int32_t)(v89 + v96) >> 10;
    *(int32_t *)(v8 + 32) = (int32_t)(v90 + v97) >> 10;
    int32_t v99 = v94 + 1223 * v76 + v91;
    *(int32_t *)(v8 + 192) = (int32_t)v88 - (int32_t)v95 >> 10;
    *(int32_t *)(v8 + 160) = (int32_t)v89 - (int32_t)v96 >> 10;
    v9 = v98 + v99 >> 10;
    v10 = v98 - v99 >> 10;
    v6 = (int32_t)v90 - (int32_t)v97 >> 10;
    goto lab_0x140003ec4;
  lab_0x140003ec4:
    // 0x140003ec4
    *(int32_t *)(v8 + 96) = (int32_t)v10;
    *(int32_t *)(v8 + 128) = (int32_t)v6;
    *(int32_t *)(v8 + 64) = (int32_t)v9;
    int16_t v100 = *(int16_t *)(v7 - 14); // 0x140003ed1
    int16_t v101 = *(int16_t *)(v7 + 2);
    int64_t v102; // 0x140003cf0
    int64_t v103; // 0x140003cf0
    int64_t v104; // 0x140003cf0
    if (v100 == 0 == v101 == v100) {
        // 0x140003ee0
        if (*(int16_t *)(v7 + 18) != v100) {
            goto lab_0x140003f24;
        } else {
            // 0x140003ee6
            if (*(int16_t *)(v7 + 34) != v100) {
                goto lab_0x140003f24;
            } else {
                // 0x140003eec
                if (*(int16_t *)(v7 + 50) != v100) {
                    goto lab_0x140003f24;
                } else {
                    // 0x140003ef2
                    if (*(int16_t *)(v7 + 66) != v100) {
                        goto lab_0x140003f24;
                    } else {
                        // 0x140003ef8
                        if (*(int16_t *)(v7 + 82) != v100) {
                            goto lab_0x140003f24;
                        } else {
                            int64_t v105 = 4 * (int64_t)*(int16_t *)(v7 - 30); // 0x140003f02
                            int64_t v106 = v105 & 0xfffffffc; // 0x140003f02
                            int32_t v107 = v105; // 0x140003f05
                            *(int32_t *)(v8 + 196) = v107;
                            *(int32_t *)(v8 + 164) = v107;
                            *(int32_t *)(v8 + 36) = v107;
                            *(int32_t *)(v8 | 4) = v107;
                            *(int32_t *)(v8 - 28) = v107;
                            v103 = v106;
                            v104 = v106;
                            v102 = v106;
                            goto lab_0x140004063;
                        }
                    }
                }
            }
        }
    } else {
        goto lab_0x140003f24;
    }
  lab_0x140003f24:;
    int64_t v108 = v100; // 0x140003ed1
    int64_t v109 = (int64_t)*(int16_t *)(v7 + 18); // 0x140003f24
    int64_t v110 = v101; // 0x140003f29
    int64_t v111 = (int64_t)*(int16_t *)(v7 + 66); // 0x140003f2e
    int64_t v112 = (int64_t)*(int16_t *)(v7 + 82); // 0x140003f32
    int64_t v113 = (int64_t)*(int16_t *)(v7 + 50); // 0x140003f37
    int64_t v114 = (int64_t)*(int16_t *)(v7 - 30); // 0x140003f3b
    int64_t v115 = 2217 * (v111 + v110); // 0x140003f44
    int64_t v116 = v113 + v108; // 0x140003f58
    int64_t v117 = v115 + 0xffffe271 * v111; // 0x140003f5f
    int64_t v118 = (int64_t)*(int16_t *)(v7 + 34); // 0x140003f62
    int64_t v119 = v115 + 3135 * v110; // 0x140003f66
    int64_t v120 = 0x1000 * (v118 + v114); // 0x140003f70
    int64_t v121 = 0x1000 * (v114 - v118); // 0x140003f74
    int64_t v122 = v112 + v109; // 0x140003f8a
    int64_t v123 = 0x12d0 * (v116 + v122); // 0x140003f95
    int64_t v124 = v119 + 512 + v120; // 0x140003f9b
    int64_t v125 = v117 + 512 + v121; // 0x140003fa6
    int64_t v126 = v121 - v117 + 512; // 0x140003fb3
    int64_t v127 = v123 + 0xfffff19b * (v112 + v108); // 0x140003fc0
    int64_t v128 = 0xfffff9c3 * v116; // 0x140003fc8
    int64_t v129 = v123 + 0xffffd6ff * (v113 + v109); // 0x140003fdd
    int64_t v130 = 0xffffe09e * v122; // 0x140003fdf
    int64_t v131 = v128 + 0x1805 * v108 + v127; // 0x140004006
    int64_t v132 = v130 + 0x312a * v109 + v129; // 0x140004009
    int64_t v133 = v128 + 0x20da * v113 + v129; // 0x14000400c
    int32_t v134 = (int32_t)v120 - (int32_t)v119 + 512; // 0x14000400f
    *(int32_t *)(v8 - 28) = (int32_t)(v124 + v131) >> 10;
    *(int32_t *)(v8 | 4) = (int32_t)(v125 + v132) >> 10;
    *(int32_t *)(v8 + 36) = (int32_t)(v126 + v133) >> 10;
    int32_t v135 = v130 + 1223 * v112 + v127;
    *(int32_t *)(v8 + 196) = (int32_t)v124 - (int32_t)v131 >> 10;
    *(int32_t *)(v8 + 164) = (int32_t)v125 - (int32_t)v132 >> 10;
    v103 = v134 + v135 >> 10;
    v104 = v134 - v135 >> 10;
    v102 = (int32_t)v126 - (int32_t)v133 >> 10;
    goto lab_0x140004063;
  lab_0x140004063:
    // 0x140004063
    *(int32_t *)(v8 + 100) = (int32_t)v104;
    *(int32_t *)(v8 + 132) = (int32_t)v102;
    *(int32_t *)(v8 + 68) = (int32_t)v103;
    v1--;
    v2 = v7 + 4;
    v4 = v8 + 8;
    if (v1 == 0) {
        // break -> 0x140004084
        goto lab_0x140004084;
    }
    goto lab_0x140003d34;
}

// Address range: 0x140004310 - 0x140004b34
int64_t function_140004310(int64_t a1, int64_t a2, int64_t a3) {
    // 0x140004310
    int128_t v1; // 0x140004310
    int128_t v2 = v1;
    int128_t v3 = v1;
    int128_t v4 = __asm_movdqu_5(*(int128_t *)(a3 + 16)); // 0x14000431a
    int128_t v5 = __asm_xorps(v3, v3); // 0x140004320
    int128_t v6 = __asm_movdqu_5(*(int128_t *)(a3 + 80)); // 0x140004323
    int128_t v7 = __asm_movdqu_5(*(int128_t *)(a3 + 48)); // 0x140004329
    int64_t v8; // 0x140004310
    int128_t v9 = __asm_movdqu_5(*(int128_t *)&v8); // 0x14000432f
    int64_t v10 = __asm_movaps(v1); // 0x140004334
    int64_t v11 = __asm_movaps(v1); // 0x140004339
    int128_t v12 = __asm_movdqu_5(*(int128_t *)(a3 + 32)); // 0x14000433e
    int64_t v13 = __asm_movaps(v1); // 0x140004344
    int128_t v14 = __asm_movdqa(v12); // 0x140004349
    int128_t * v15 = (int128_t *)(a3 + 96); // 0x14000434d
    int128_t v16 = __asm_punpckhwd(v12, *v15); // 0x14000434d
    int128_t v17 = __asm_punpcklwd(v14, *v15); // 0x140004353
    int128_t v18 = __asm_pmaddwd(__asm_movdqa(v16), g57); // 0x14000435d
    int128_t v19 = __asm_pmaddwd(v16, g48); // 0x140004365
    int128_t v20 = __asm_movdqu_5(*(int128_t *)(a3 + 112)); // 0x14000436d
    int64_t v21 = __asm_movaps(v1); // 0x140004373
    int64_t v22 = __asm_movaps(v1); // 0x140004378
    int128_t v23 = __asm_movdqa(v20); // 0x14000437d
    int128_t v24 = __asm_movdqa_15(v18); // 0x140004382
    int64_t v25 = __asm_movaps(v1); // 0x140004388
    int64_t v26 = __asm_movaps(v1); // 0x14000438d
    int64_t v27 = __asm_movaps(v1); // 0x140004392
    int64_t v28 = __asm_movaps(v1); // 0x14000439a
    int64_t v29 = __asm_movaps(v2); // 0x1400043a2
    int128_t v30 = __asm_movdqa(v20); // 0x1400043aa
    int128_t * v31 = (int128_t *)(a3 + 64); // 0x1400043af
    int128_t v32 = __asm_movdqu_5(*v31); // 0x1400043af
    int128_t v33 = __asm_paddw(v20, v4); // 0x1400043b5
    int128_t v34 = __asm_paddw(v32, v9); // 0x1400043ba
    int128_t v35 = __asm_punpcklwd(v23, v7); // 0x1400043be
    int128_t v36 = __asm_psubw(v9, *v31); // 0x1400043c3
    int128_t v37 = __asm_movdqa(v17); // 0x1400043c9
    int128_t v38 = __asm_pmaddwd(v17, g48); // 0x1400043ce
    int128_t v39 = __asm_movdqa(v35); // 0x1400043d6
    int128_t v40 = __asm_pmaddwd(v37, g57); // 0x1400043db
    int128_t v41 = __asm_xorps(v2, v2); // 0x1400043e4
    int128_t v42 = __asm_pmaddwd(v39, g55); // 0x1400043e8
    int128_t v43 = __asm_pmaddwd(v35, g49); // 0x1400043f1
    int128_t v44 = __asm_psrad(__asm_punpcklwd(v5, v34), 4); // 0x1400043fe
    int128_t v45 = __asm_movdqa_15(v44); // 0x140004403
    int128_t v46 = __asm_punpckhwd(__asm_xorps(v44, v44), v34); // 0x14000440c
    int64_t v47 = __asm_movdqa_15(__asm_psrad(__asm_punpcklwd(__asm_xorps(v34, v34), v36), 4)); // 0x14000441c
    int128_t v48 = __asm_movdqa(v33); // 0x140004422
    int128_t v49 = __asm_psrad(v46, 4); // 0x140004427
    int128_t v50 = __asm_punpckhwd(v41, v36); // 0x14000442c
    int128_t v51 = __asm_movdqa_15(v38); // 0x140004431
    int128_t v52 = __asm_punpcklwd(__asm_movdqa(v6), v4); // 0x14000443b
    int128_t v53 = __asm_movdqa_15(v19); // 0x14000443f
    int128_t v54 = __asm_pmaddwd(__asm_movdqa(v52), g59); // 0x14000444a
    int128_t v55 = __asm_punpckhwd(__asm_movdqa(v6), v4); // 0x140004457
    int128_t v56 = __asm_paddw(v6, v7); // 0x14000445b
    int128_t v57 = __asm_punpcklwd(v48, v56); // 0x14000445f
    int128_t v58 = __asm_pmaddwd(__asm_movdqa(v55), g59); // 0x140004467
    int128_t v59 = __asm_punpckhwd(v30, v7); // 0x14000446f
    int128_t v60 = __asm_punpckhwd(v33, v56); // 0x140004474
    int128_t v61 = __asm_pmaddwd(__asm_movdqa(v59), g55); // 0x14000447e
    int128_t v62 = __asm_pmaddwd(__asm_movdqa(v60), g51); // 0x14000448c
    int128_t v63 = __asm_pmaddwd(v60, g56); // 0x140004494
    int128_t v64 = __asm_pmaddwd(v59, g49); // 0x14000449d
    int128_t v65 = __asm_movdqa_15(v49); // 0x1400044a6
    int128_t v66 = __asm_movdqa(v57); // 0x1400044ac
    int128_t v67 = __asm_pmaddwd(v57, g56); // 0x1400044b0
    int128_t v68 = __asm_pmaddwd(v66, g51); // 0x1400044b8
    int128_t v69 = __asm_paddd(v61, v62); // 0x1400044c0
    int64_t v70 = __asm_movdqa_15(v40); // 0x1400044c5
    int128_t v71 = __asm_paddd(v58, v63); // 0x1400044cc
    int128_t v72 = __asm_psrad(v50, 4); // 0x1400044d1
    int128_t v73 = __asm_paddd(v54, v67); // 0x1400044d7
    int128_t v74 = __asm_paddd(v43, v67); // 0x1400044dc
    int128_t v75 = __asm_paddd(v42, v68); // 0x1400044e1
    int128_t v76 = __asm_pmaddwd(v52, g50); // 0x1400044e6
    int128_t v77 = __asm_paddd(v64, v63); // 0x1400044ee
    int128_t v78 = __asm_movdqa(g44); // 0x1400044f3
    int128_t v79 = __asm_pmaddwd(v55, g50); // 0x1400044fb
    int128_t v80 = __asm_paddd(__asm_movdqa(v45), v51); // 0x14000450a
    int128_t v81 = __asm_paddd(v76, v68); // 0x140004511
    int128_t v82 = __asm_paddd(v80, v78); // 0x140004515
    int128_t v83 = __asm_paddd(__asm_movdqa(v65), v53); // 0x140004520
    int128_t v84 = __asm_paddd(v79, v62); // 0x140004526
    int128_t v85 = __asm_paddd(v83, v78); // 0x14000452a
    int128_t v86 = __asm_paddd(__asm_movdqa(v82), v81); // 0x140004533
    int128_t v87 = __asm_movdqa(v85); // 0x140004537
    int128_t v88 = __asm_psubd(v85, v84); // 0x14000453b
    int128_t v89 = __asm_psrad(v86, 10); // 0x14000453f
    int128_t v90 = __asm_paddd(v87, v84); // 0x140004544
    int128_t v91 = __asm_psrad(v88, 10); // 0x140004548
    int128_t v92 = __asm_psrad(v90, 10); // 0x14000454d
    int128_t v93 = __asm_psubd(v82, v81); // 0x140004552
    int128_t v94 = __asm_movdqa((int128_t)v47); // 0x140004557
    int128_t v95 = __asm_packssdw(v89, v92); // 0x14000455d
    int128_t v96 = __asm_movdqa(v94); // 0x140004561
    int128_t v97 = __asm_psubd(v94, (int128_t)v70); // 0x140004565
    int128_t v98 = __asm_paddd(__asm_paddd(v96, v40), v78); // 0x140004570
    int64_t v99 = __asm_movdqa_15(v95); // 0x140004574
    int128_t v100 = __asm_movdqa(v45); // 0x140004579
    int128_t v101 = __asm_paddd(v97, v78); // 0x14000457f
    int128_t v102 = __asm_psubd(v100, v51); // 0x140004583
    int128_t v103 = __asm_movdqa(v98); // 0x140004589
    int128_t v104 = __asm_paddd(v102, g44); // 0x14000458e
    int128_t v105 = __asm_paddd(v103, v74); // 0x140004596
    int128_t v106 = __asm_psubd(v98, v74); // 0x14000459b
    int128_t v107 = __asm_packssdw(__asm_psrad(v93, 10), v91); // 0x1400045a6
    int128_t v108 = __asm_paddd(__asm_movdqa(v72), v24); // 0x1400045b0
    int128_t v109 = __asm_psubd(v72, v24); // 0x1400045b6
    int128_t v110 = __asm_paddd(v108, v78); // 0x1400045bd
    int128_t v111 = __asm_movdqa(v110); // 0x1400045c1
    int128_t v112 = __asm_psrad(v105, 10); // 0x1400045c5
    int128_t v113 = __asm_paddd(v111, v77); // 0x1400045cb
    int128_t v114 = __asm_psrad(v106, 10); // 0x1400045d0
    int128_t v115 = __asm_psrad(v113, 10); // 0x1400045d5
    int128_t v116 = __asm_paddd(v109, v78); // 0x1400045da
    int128_t v117 = __asm_packssdw(v112, v115); // 0x1400045df
    int128_t v118 = __asm_psrad(__asm_psubd(v110, v77), 10); // 0x1400045e9
    int128_t v119 = __asm_movdqa(v101); // 0x1400045ee
    int128_t v120 = __asm_packssdw(v114, v118); // 0x1400045f2
    int128_t v121 = __asm_movdqa(v116); // 0x1400045f6
    int128_t v122 = __asm_movdqa(v65); // 0x1400045fb
    int128_t v123 = __asm_paddd(v121, v71); // 0x140004601
    int128_t v124 = __asm_psubd(v122, v53); // 0x140004605
    int128_t v125 = __asm_psubd(v116, v71); // 0x14000460b
    int128_t v126 = __asm_paddd(v124, g44); // 0x140004610
    int128_t v127 = __asm_movdqa(v104); // 0x140004618
    int128_t v128 = __asm_psrad(v123, 10); // 0x14000461c
    int128_t v129 = __asm_paddd(v119, v73); // 0x140004621
    int128_t v130 = __asm_paddd(v127, v75); // 0x140004626
    int128_t v131 = __asm_packssdw(__asm_psrad(v129, 10), v128); // 0x140004630
    int128_t v132 = __asm_psubd(v104, v75); // 0x140004634
    int128_t v133 = __asm_movdqa(v126); // 0x140004639
    int128_t v134 = __asm_psrad(v130, 10); // 0x14000463d
    int128_t v135 = __asm_paddd(v133, v69); // 0x140004642
    int128_t v136 = __asm_psrad(v132, 10); // 0x140004647
    int128_t v137 = __asm_psrad(v135, 10); // 0x14000464c
    int128_t v138 = __asm_psubd(v101, v73); // 0x140004651
    int128_t v139 = __asm_psubd(v126, v69); // 0x140004656
    int128_t v140 = __asm_packssdw(v134, v137); // 0x14000465b
    int128_t v141 = __asm_movdqa((int128_t)v99); // 0x14000465f
    int128_t v142 = __asm_psrad(v139, 10); // 0x140004664
    int128_t v143 = __asm_movdqa(v141); // 0x140004669
    int128_t v144 = __asm_psrad(v138, 10); // 0x14000466d
    int128_t v145 = __asm_psrad(v125, 10); // 0x140004672
    int128_t v146 = __asm_packssdw(v136, v142); // 0x140004678
    int128_t v147 = __asm_punpcklwd(v143, v146); // 0x14000467c
    int128_t v148 = __asm_packssdw(v144, v145); // 0x140004680
    int128_t v149 = __asm_punpckhwd(v141, v146); // 0x140004685
    int128_t v150 = __asm_movdqa(v140); // 0x140004689
    int64_t v151 = __asm_movdqa_15(v149); // 0x14000468d
    int128_t v152 = __asm_movdqa(v117); // 0x140004692
    int128_t v153 = __asm_punpcklwd(v150, v107); // 0x140004697
    int128_t v154 = __asm_punpcklwd(__asm_movdqa(v131), v120); // 0x1400046a0
    int128_t v155 = __asm_punpcklwd(v152, v148); // 0x1400046a4
    int128_t v156 = __asm_punpckhwd(v140, v107); // 0x1400046a8
    int128_t v157 = __asm_movdqa((int128_t)v151); // 0x1400046ad
    int128_t v158 = __asm_punpckhwd(v117, v148); // 0x1400046b3
    int128_t v159 = __asm_punpcklwd(__asm_movdqa(v147), v154); // 0x1400046bc
    int128_t v160 = __asm_punpckhwd(v147, v154); // 0x1400046c0
    int128_t v161 = __asm_punpcklwd(__asm_movdqa(v155), v153); // 0x1400046c8
    int128_t v162 = __asm_movdqa(v160); // 0x1400046cc
    int128_t v163 = __asm_punpckhwd(v155, v153); // 0x1400046d1
    int128_t v164 = __asm_punpcklwd(__asm_movdqa(v158), v156); // 0x1400046da
    int128_t v165 = __asm_punpckhwd(v158, v156); // 0x1400046de
    int128_t v166 = __asm_punpcklwd(__asm_movdqa(v159), v161); // 0x1400046e7
    int128_t v167 = __asm_punpckhwd(v159, v161); // 0x1400046eb
    int128_t v168 = __asm_punpcklwd(v162, v163); // 0x1400046ef
    int128_t v169 = __asm_punpckhwd(v160, v163); // 0x1400046f4
    int128_t v170 = __asm_movdqa(v168); // 0x1400046f8
    int128_t v171 = __asm_punpckhwd(v131, v120); // 0x1400046fd
    int128_t v172 = __asm_movdqa(v157); // 0x140004701
    int128_t v173 = __asm_punpckhwd(v157, v171); // 0x140004706
    int128_t v174 = __asm_punpcklwd(v172, v171); // 0x14000470b
    int128_t v175 = __asm_punpcklwd(__asm_movdqa(v173), v165); // 0x140004714
    int128_t v176 = __asm_punpcklwd(__asm_movdqa(v174), v164); // 0x14000471d
    int128_t v177 = __asm_punpcklwd(v170, v175); // 0x140004721
    int128_t v178 = __asm_punpckhwd(v168, v175); // 0x140004726
    int128_t v179 = __asm_pmaddwd(__asm_movdqa(v177), g57); // 0x140004730
    int128_t v180 = __asm_movdqa(v176); // 0x140004739
    int128_t v181 = __asm_pmaddwd(v177, g48); // 0x14000473d
    int128_t v182 = __asm_paddw(v180, v166); // 0x140004746
    int128_t v183 = __asm_punpckhwd(v174, v164); // 0x14000474a
    int128_t v184 = __asm_psubw(v166, v176); // 0x14000474e
    int128_t v185 = __asm_punpckhwd(v173, v165); // 0x140004752
    int128_t v186 = __asm_punpcklwd(__asm_xorps(v164, v164), v182); // 0x14000475a
    int128_t v187 = __asm_punpckhwd(__asm_xorps(v176, v176), v184); // 0x140004761
    int128_t v188 = __asm_movdqa(v185); // 0x140004765
    int128_t v189 = __asm_psrad(v186, 4); // 0x14000476a
    int128_t v190 = __asm_punpckhwd(__asm_xorps(v165, v165), v182); // 0x140004773
    int128_t v191 = __asm_movdqa(v183); // 0x140004778
    int128_t v192 = __asm_xorps(v182, v182); // 0x14000477d
    int128_t v193 = __asm_psrad(v187, 4); // 0x140004780
    int128_t v194 = __asm_punpcklwd(v192, v184); // 0x140004785
    int128_t v195 = __asm_movdqa(v183); // 0x140004789
    int128_t v196 = __asm_psrad(v194, 4); // 0x14000478e
    int128_t v197 = __asm_movdqa(v185); // 0x140004793
    int64_t v198 = __asm_movdqa_15(v196); // 0x140004798
    int128_t v199 = __asm_paddw(v185, v167); // 0x14000479e
    int128_t v200 = __asm_movdqa(v199); // 0x1400047a3
    int64_t v201 = __asm_movdqa_15(v189); // 0x1400047a8
    int128_t v202 = __asm_paddw(v183, v169); // 0x1400047ae
    int128_t v203 = __asm_movdqa_15(v193); // 0x1400047b2
    int128_t v204 = __asm_punpcklwd(v200, v202); // 0x1400047b8
    int128_t v205 = __asm_pmaddwd(__asm_movdqa(v178), g57); // 0x1400047c1
    int128_t v206 = __asm_pmaddwd(__asm_movdqa(v204), g51); // 0x1400047ce
    int128_t v207 = __asm_pmaddwd(v178, g48); // 0x1400047d6
    int128_t v208 = __asm_pmaddwd(v204, g56); // 0x1400047df
    int128_t v209 = __asm_punpckhwd(v199, v202); // 0x1400047e7
    int128_t v210 = __asm_movdqa(v209); // 0x1400047ec
    int128_t v211 = __asm_psrad(v190, 4); // 0x1400047f1
    int128_t v212 = __asm_pmaddwd(v210, g51); // 0x1400047f7
    int128_t v213 = __asm_punpcklwd(v197, v169); // 0x1400047ff
    int128_t v214 = __asm_punpckhwd(v188, v169); // 0x140004803
    int128_t v215 = __asm_punpcklwd(v191, v167); // 0x140004807
    int128_t v216 = __asm_punpckhwd(v195, v167); // 0x14000480c
    int128_t v217 = __asm_pmaddwd(v209, g56); // 0x140004811
    int128_t v218 = __asm_movdqa(v214); // 0x14000481a
    int128_t v219 = __asm_pmaddwd(v214, g49); // 0x14000481e
    int128_t v220 = __asm_movdqa(v216); // 0x140004826
    int128_t v221 = __asm_pmaddwd(v216, g50); // 0x14000482b
    int128_t v222 = __asm_movdqa(v213); // 0x140004834
    int128_t v223 = __asm_pmaddwd(v213, g49); // 0x140004838
    int128_t v224 = __asm_pmaddwd(v218, g55); // 0x140004840
    int128_t v225 = __asm_pmaddwd(v222, g55); // 0x140004848
    int128_t v226 = __asm_pmaddwd(v220, g59); // 0x140004850
    int128_t v227 = __asm_paddd(v221, v212); // 0x140004858
    int128_t v228 = __asm_movdqa_15(v217); // 0x14000485d
    int128_t v229 = __asm_paddd(v219, v228); // 0x140004863
    int128_t v230 = __asm_paddd(v223, v208); // 0x140004868
    int128_t v231 = __asm_paddd(v224, v212); // 0x14000486c
    int128_t v232 = __asm_movdqa_15(v227); // 0x140004870
    int128_t v233 = __asm_movdqa((int128_t)v198); // 0x140004877
    int128_t v234 = __asm_paddd(v225, v206); // 0x14000487d
    int128_t v235 = __asm_paddd(v226, v228); // 0x140004881
    int128_t v236 = __asm_movdqa(v215); // 0x140004886
    int128_t v237 = __asm_pmaddwd(v215, g50); // 0x14000488b
    int128_t v238 = __asm_movdqa(v233); // 0x140004894
    int128_t v239 = __asm_pmaddwd(v236, g59); // 0x140004899
    int128_t v240 = __asm_psubd(v233, v179); // 0x1400048a2
    int128_t v241 = __asm_paddd(v238, v179); // 0x1400048a7
    int128_t v242 = __asm_movdqa_15(v229); // 0x1400048ac
    int128_t v243 = __asm_movdqa(v203); // 0x1400048b2
    int128_t v244 = __asm_movdqa(v211); // 0x1400048b9
    int128_t v245 = __asm_psubd(v243, v205); // 0x1400048be
    int128_t v246 = __asm_movdqa_15(v230); // 0x1400048c3
    int128_t v247 = __asm_movdqa(v203); // 0x1400048c9
    int128_t v248 = __asm_paddd(v237, v206); // 0x1400048cf
    int128_t v249 = __asm_movdqa(g47); // 0x1400048d4
    int128_t v250 = __asm_paddd(v239, v208); // 0x1400048dc
    int128_t v251 = __asm_movdqa((int128_t)v201); // 0x1400048e1
    int128_t v252 = __asm_paddd(v245, v249); // 0x1400048e7
    int128_t v253 = __asm_paddd(v240, v249); // 0x1400048ec
    int128_t v254 = __asm_movdqa_15(v252); // 0x1400048f0
    int128_t v255 = __asm_paddd(v241, v249); // 0x1400048f7
    int128_t v256 = __asm_movdqa_15(v248); // 0x1400048fc
    int128_t v257 = __asm_movdqa(v251); // 0x140004903
    int64_t v258 = __asm_movdqa_15(v253); // 0x140004908
    int128_t v259 = __asm_psubd(v251, v181); // 0x14000490e
    int128_t v260 = __asm_paddd(v253, v250); // 0x140004913
    int128_t v261 = __asm_paddd(v259, v249); // 0x140004918
    int128_t v262 = __asm_psrad(v260, 17); // 0x14000491c
    int128_t v263 = __asm_movdqa_15(v261); // 0x140004921
    int128_t v264 = __asm_paddd(__asm_paddd(v257, v181), v249); // 0x14000492c
    int128_t v265 = __asm_paddd(__asm_paddd(v244, v207), v249); // 0x140004936
    int128_t v266 = __asm_paddd(__asm_movdqa(v264), v256); // 0x14000493f
    int128_t v267 = __asm_paddd(__asm_movdqa(v265), v232); // 0x14000494a
    int128_t v268 = __asm_paddd(v247, v205); // 0x140004950
    int128_t v269 = __asm_psrad(v267, 17); // 0x140004955
    int128_t v270 = __asm_paddd(v268, v249); // 0x14000495a
    int128_t v271 = __asm_psrad(v266, 17); // 0x14000495e
    int128_t v272 = __asm_psubd(v211, v207); // 0x140004964
    int128_t v273 = __asm_packssdw(v271, v269); // 0x140004969
    int128_t v274 = __asm_paddd(v272, v249); // 0x14000496e
    int128_t v275 = __asm_movdqa(v270); // 0x140004973
    int128_t v276 = __asm_movdqa(v255); // 0x140004977
    int128_t v277 = __asm_packssdw(__asm_psrad(__asm_paddd(v276, v246), 17), __asm_psrad(__asm_paddd(v275, v242), 17)); // 0x140004992
    int128_t v278 = __asm_paddd(__asm_movdqa(v254), v235); // 0x14000499c
    int128_t v279 = __asm_packuswb(v273, v277); // 0x1400049a0
    int128_t v280 = __asm_movdqa(v263); // 0x1400049a5
    int128_t v281 = __asm_psrad(v278, 17); // 0x1400049ab
    int128_t v282 = __asm_paddd(v280, v234); // 0x1400049b0
    int128_t v283 = __asm_packssdw(v262, v281); // 0x1400049b4
    int128_t v284 = __asm_packssdw(__asm_psrad(v282, 17), __asm_psrad(__asm_paddd(__asm_movdqa(v274), v231), 17)); // 0x1400049cb
    int128_t v285 = __asm_psubd(v265, v232); // 0x1400049cf
    int128_t v286 = __asm_psubd(v255, v246); // 0x1400049d8
    int128_t v287 = __asm_psubd(v274, v231); // 0x1400049df
    int128_t v288 = __asm_psubd(v270, v242); // 0x1400049e4
    int128_t v289 = __asm_psubd(v264, v256); // 0x1400049ea
    int128_t v290 = __asm_movdqa(v254); // 0x1400049f1
    int128_t v291 = __asm_movdqa((int128_t)v258); // 0x1400049f7
    int128_t v292 = __asm_psubd(v290, v235); // 0x1400049fd
    __asm_movaps_2((int128_t)v11);
    int128_t v293 = __asm_psubd(v291, v250); // 0x140004a06
    __asm_movaps_2((int128_t)v13);
    __asm_movaps_2((int128_t)v22);
    __asm_movaps_2((int128_t)v27);
    __asm_movaps_2((int128_t)v29);
    int128_t v294 = __asm_packuswb(v283, v284); // 0x140004a25
    int128_t v295 = __asm_movdqa(v263); // 0x140004a29
    int128_t v296 = __asm_psrad(v293, 17); // 0x140004a2f
    int128_t v297 = __asm_psubd(v295, v234); // 0x140004a34
    __asm_movaps_2((int128_t)v10);
    int64_t result = 0x100000000 * a2 >> 32; // 0x140004a3d
    int128_t v298 = __asm_psrad(v285, 17); // 0x140004a40
    int128_t v299 = __asm_psrad(v297, 17); // 0x140004a45
    int128_t v300 = __asm_packssdw(__asm_psrad(v286, 17), __asm_psrad(v288, 17)); // 0x140004a55
    int128_t v301 = __asm_packssdw(v299, __asm_psrad(v287, 17)); // 0x140004a60
    __asm_movaps_2((int128_t)v28);
    int128_t v302 = __asm_packssdw(__asm_psrad(v289, 17), v298); // 0x140004a73
    int128_t v303 = __asm_movdqa(v279); // 0x140004a78
    int128_t v304 = __asm_packuswb(v300, v302); // 0x140004a7d
    __asm_movaps_2((int128_t)v25);
    int128_t v305 = __asm_packuswb(v301, __asm_packssdw(v296, __asm_psrad(v292, 17))); // 0x140004a90
    int128_t v306 = __asm_punpcklbw(__asm_movdqa(v294), v304); // 0x140004a98
    int128_t v307 = __asm_punpcklbw(v303, v305); // 0x140004a9d
    int128_t v308 = __asm_punpckhbw(v279, v305); // 0x140004aa1
    int128_t v309 = __asm_punpcklbw(__asm_movdqa(v307), v306); // 0x140004aaa
    int128_t v310 = __asm_punpckhbw(v307, v306); // 0x140004aae
    int128_t v311 = __asm_movdqa(v309); // 0x140004ab2
    int128_t v312 = __asm_punpckhbw(v294, v304); // 0x140004ab6
    int128_t v313 = __asm_movdqa(v308); // 0x140004abb
    __asm_movaps_2((int128_t)v26);
    int128_t v314 = __asm_punpcklbw(v313, v312); // 0x140004ac5
    int128_t v315 = __asm_punpcklbw(v311, v314); // 0x140004ac9
    __asm_movq(a1, v315);
    int64_t v316 = result + a1; // 0x140004ad1
    int128_t v317 = __asm_punpckhbw(v309, v314); // 0x140004ad4
    int128_t v318 = __asm_punpckhbw(v308, v312); // 0x140004ad8
    int128_t v319 = __asm_punpcklbw(__asm_movdqa(v310), v318); // 0x140004ae1
    int128_t v320 = __asm_punpckhbw(v310, v318); // 0x140004ae6
    __asm_movaps_2((int128_t)v21);
    __asm_movq(*(int64_t *)v316, __asm_pshufd(v315, 78));
    int64_t v321 = v316 + result; // 0x140004af9
    int128_t v322 = __asm_pshufd(v317, 78); // 0x140004afc
    __asm_movq(*(int64_t *)v321, v317);
    int64_t v323 = v321 + result; // 0x140004b05
    __asm_movq(*(int64_t *)v323, v322);
    int64_t v324 = v323 + result; // 0x140004b0c
    int128_t v325 = __asm_pshufd(v319, 78); // 0x140004b0f
    __asm_movq(*(int64_t *)v324, v319);
    int64_t v326 = v324 + result; // 0x140004b18
    __asm_movq(*(int64_t *)v326, v325);
    int64_t v327 = v326 + result; // 0x140004b1f
    int128_t v328 = __asm_pshufd(v320, 78); // 0x140004b22
    __asm_movq(*(int64_t *)v327, v320);
    __asm_movq(*(int64_t *)(v327 + result), v328);
    return result;
}

// Address range: 0x140004b40 - 0x140004c05
int64_t function_140004b40(int64_t a1) {
    char * v1 = (char *)(a1 + 0x4828); // 0x140004b46
    unsigned char result = *v1; // 0x140004b46
    if (result != -1) {
        // 0x140004b54
        *v1 = -1;
        return result;
    }
    int64_t * v2 = (int64_t *)(a1 + 192); // 0x140004b69
    int64_t v3 = *v2; // 0x140004b69
    int64_t v4 = v3; // 0x140004b77
    if (v3 >= *(int64_t *)(a1 + 200)) {
        // 0x140004b79
        if (*(int32_t *)(a1 + 48) == 0) {
            // 0x140004bf8
            return v3 | 255;
        }
        // 0x140004b7f
        function_140001d70(a1);
        v4 = *v2;
    }
    unsigned char v5 = *(char *)v4; // 0x140004b8e
    int64_t v6 = v4 + 1; // 0x140004b91
    *v2 = v6;
    if (v5 != -1) {
        // 0x140004bf8
        return v6 | 255;
    }
    int64_t v7 = v5;
    int64_t * v8 = (int64_t *)(v7 + 192); // 0x140004ba3
    uint64_t v9 = *v8; // 0x140004ba3
    int64_t v10 = v9; // 0x140004bb1
    if (v9 >= *(int64_t *)(v7 + 200)) {
        // 0x140004bb3
        if (*(int32_t *)(v7 + 48) == 0) {
            // 0x140004bda
            return 0;
        }
        // 0x140004bb9
        function_140001d70(v7);
        v10 = *v8;
    }
    unsigned char result2 = *(char *)v10; // 0x140004bc8
    *v8 = v10 + 1;
    while (result2 == -1) {
        // 0x140004ba0
        v7 = 255;
        v8 = (int64_t *)(v7 + 192);
        v9 = *v8;
        v10 = v9;
        if (v9 >= *(int64_t *)(v7 + 200)) {
            // 0x140004bb3
            if (*(int32_t *)(v7 + 48) == 0) {
                // 0x140004bda
                return 0;
            }
            // 0x140004bb9
            function_140001d70(v7);
            v10 = *v8;
        }
        // 0x140004bc8
        result2 = *(char *)v10;
        *v8 = v10 + 1;
    }
    // 0x140004bda
    return result2;
}

// Address range: 0x140004c10 - 0x14000542d
int64_t function_140004c10(int64_t a1, int64_t a2) {
    int32_t * v1 = (int32_t *)(a1 + 0x47d8); // 0x140004c41
    *v1 = 0;
    int32_t * v2 = (int32_t *)(a1 + 0x4778); // 0x140004c4e
    *v2 = 0;
    int32_t * v3 = (int32_t *)(a1 + 0x4718); // 0x140004c58
    *v3 = 0;
    int32_t * v4 = (int32_t *)(a1 + 0x46b8); // 0x140004c62
    *v4 = 0;
    int32_t * v5 = (int32_t *)(a1 + 0x4868); // 0x140004c6c
    int32_t v6 = *v5; // 0x140004c6c
    int64_t * v7 = (int64_t *)(a1 + 0x4820); // 0x140004c74
    *v7 = 0;
    int32_t * v8 = (int32_t *)(a1 + 0x482c); // 0x140004c7f
    *v8 = 0;
    char * v9 = (char *)(a1 + 0x4828); // 0x140004c89
    *v9 = -1;
    int32_t * v10 = (int32_t *)(a1 + 0x4844); // 0x140004c98
    *v10 = 0;
    int32_t * v11 = (int32_t *)(a1 + 0x4854); // 0x140004ca9
    int32_t v12 = *v11; // 0x140004ca9
    int32_t * v13 = (int32_t *)(a1 + 0x486c); // 0x140004caf
    *v13 = v6 != 0 ? v6 : 0x7fffffff;
    if (*(int32_t *)(a1 + 0x4830) == 0) {
        int64_t v14; // bp-184, 0x140004c10
        if (v12 == 1) {
            int64_t v15 = (int64_t)*(int32_t *)(a1 + 0x4858); // 0x140004cc4
            int64_t v16 = 96 * v15 + a1; // 0x140004cd6
            int32_t v17 = *(int32_t *)(v16 + 0x46c0) + 7; // 0x140004ceb
            uint32_t v18 = v17 >> 3; // 0x140004cf3
            if (v17 < 0 || v18 == 0) {
                // 0x140004e65
                __security_check_cookie(g66);
                return &g103;
            }
            int32_t v19 = *(int32_t *)(v16 + 0x46bc) + 7; // 0x140004ce7
            int64_t v20 = a1 + 0x3488;
            int64_t v21 = a1 + 0x3688;
            int64_t v22 = a1 + 0x1a48;
            int64_t v23 = a1 + 8;
            int64_t v24 = 0; // 0x140004e54
            int64_t v25; // 0x140004c10
            int64_t v26; // 0x140004e46
            int32_t v27; // 0x140004e0f
            int64_t v28; // 0x140004d10
            int32_t v29; // 0x140004d1e
            int32_t v30; // 0x140004d66
            int64_t v31; // 0x140004d7a
            int32_t v32; // 0x140004db1
            if (v19 >= 8) {
                v28 = (int64_t)*(int32_t *)(v16 + 0x46b4);
                v29 = *(int32_t *)(v16 + 0x46ac);
                v30 = *(int32_t *)(v16 + 0x46b0);
                v31 = function_140002f50(a1, &v14, v23 + 1680 * (int64_t)v30, v22 + 1680 * v28, v21 + 1024 * v28, v15, v20 + 128 * (int64_t)v29);
                if ((int32_t)v31 == 0) {
                    // break (via goto) -> 0x140004e65
                    goto lab_0x140004e65_8;
                }
                // 0x140004d87
                v32 = *v13 - 1;
                *v13 = v32;
                if (v32 >= 0 != v32 != 0) {
                    // 0x140004dc4
                    if (*(int32_t *)(a1 + 0x4824) <= 23) {
                        // 0x140004dcd
                        function_140002dd0(a1);
                    }
                    // 0x140004dd5
                    if ((*v9 & -8) != -48) {
                        // break (via goto) -> 0x140004e65
                        goto lab_0x140004e65_8;
                    }
                    // 0x140004de2
                    *v1 = 0;
                    *v2 = 0;
                    *v3 = 0;
                    *v4 = 0;
                    v27 = *v5;
                    *v7 = 0;
                    *v8 = 0;
                    *v13 = v27 != 0 ? v27 : 0x7fffffff;
                    *v9 = -1;
                    *v10 = 0;
                }
                // 0x140004e46
                v26 = 1;
                v25 = v26;
                while (v26 < (int64_t)(v19 >> 3)) {
                    // 0x140004d10
                    v28 = (int64_t)*(int32_t *)(v16 + 0x46b4);
                    v29 = *(int32_t *)(v16 + 0x46ac);
                    v30 = *(int32_t *)(v16 + 0x46b0);
                    v31 = function_140002f50(a1, &v14, v23 + 1680 * (int64_t)v30, v22 + 1680 * v28, v21 + 1024 * v28, v15, v20 + 128 * (int64_t)v29);
                    if ((int32_t)v31 == 0) {
                        // break (via goto) -> 0x140004e65
                        goto lab_0x140004e65_8;
                    }
                    // 0x140004d87
                    v32 = *v13 - 1;
                    *v13 = v32;
                    if (v32 >= 0 != v32 != 0) {
                        // 0x140004dc4
                        if (*(int32_t *)(a1 + 0x4824) <= 23) {
                            // 0x140004dcd
                            function_140002dd0(a1);
                        }
                        // 0x140004dd5
                        if ((*v9 & -8) != -48) {
                            // break (via goto) -> 0x140004e65
                            goto lab_0x140004e65_8;
                        }
                        // 0x140004de2
                        *v1 = 0;
                        *v2 = 0;
                        *v3 = 0;
                        *v4 = 0;
                        v27 = *v5;
                        *v7 = 0;
                        *v8 = 0;
                        *v13 = v27 != 0 ? v27 : 0x7fffffff;
                        *v9 = -1;
                        *v10 = 0;
                    }
                    // 0x140004e46
                    v26 = v25 + 1 & 0xffffffff;
                    v25 = v26;
                }
            }
            while ((v24 + 1 & 0xffffffff) < (int64_t)v18) {
                // 0x140004e54
                v24 = v24 + 1 & 0xffffffff;
                if (v19 >= 8) {
                    v28 = (int64_t)*(int32_t *)(v16 + 0x46b4);
                    v29 = *(int32_t *)(v16 + 0x46ac);
                    v30 = *(int32_t *)(v16 + 0x46b0);
                    v31 = function_140002f50(a1, &v14, v23 + 1680 * (int64_t)v30, v22 + 1680 * v28, v21 + 1024 * v28, v15, v20 + 128 * (int64_t)v29);
                    if ((int32_t)v31 == 0) {
                        // break (via goto) -> 0x140004e65
                        goto lab_0x140004e65_8;
                    }
                    // 0x140004d87
                    v32 = *v13 - 1;
                    *v13 = v32;
                    if (v32 >= 0 != v32 != 0) {
                        // 0x140004dc4
                        if (*(int32_t *)(a1 + 0x4824) <= 23) {
                            // 0x140004dcd
                            function_140002dd0(a1);
                        }
                        // 0x140004dd5
                        if ((*v9 & -8) != -48) {
                            // break (via goto) -> 0x140004e65
                            goto lab_0x140004e65_8;
                        }
                        // 0x140004de2
                        *v1 = 0;
                        *v2 = 0;
                        *v3 = 0;
                        *v4 = 0;
                        v27 = *v5;
                        *v7 = 0;
                        *v8 = 0;
                        *v13 = v27 != 0 ? v27 : 0x7fffffff;
                        *v9 = -1;
                        *v10 = 0;
                    }
                    // 0x140004e46
                    v26 = 1;
                    v25 = v26;
                    while (v26 < (int64_t)(v19 >> 3)) {
                        // 0x140004d10
                        v28 = (int64_t)*(int32_t *)(v16 + 0x46b4);
                        v29 = *(int32_t *)(v16 + 0x46ac);
                        v30 = *(int32_t *)(v16 + 0x46b0);
                        v31 = function_140002f50(a1, &v14, v23 + 1680 * (int64_t)v30, v22 + 1680 * v28, v21 + 1024 * v28, v15, v20 + 128 * (int64_t)v29);
                        if ((int32_t)v31 == 0) {
                            // break (via goto) -> 0x140004e65
                            goto lab_0x140004e65_8;
                        }
                        // 0x140004d87
                        v32 = *v13 - 1;
                        *v13 = v32;
                        if (v32 >= 0 != v32 != 0) {
                            // 0x140004dc4
                            if (*(int32_t *)(a1 + 0x4824) <= 23) {
                                // 0x140004dcd
                                function_140002dd0(a1);
                            }
                            // 0x140004dd5
                            if ((*v9 & -8) != -48) {
                                // break (via goto) -> 0x140004e65
                                goto lab_0x140004e65_8;
                            }
                            // 0x140004de2
                            *v1 = 0;
                            *v2 = 0;
                            *v3 = 0;
                            *v4 = 0;
                            v27 = *v5;
                            *v7 = 0;
                            *v8 = 0;
                            *v13 = v27 != 0 ? v27 : 0x7fffffff;
                            *v9 = -1;
                            *v10 = 0;
                        }
                        // 0x140004e46
                        v26 = v25 + 1 & 0xffffffff;
                        v25 = v26;
                    }
                }
            }
            // 0x140004e65
            __security_check_cookie(g66);
            return &g103;
        }
        int32_t * v33 = (int32_t *)(a1 + 0x4694); // 0x140004e9c
        int32_t v34 = *v33; // 0x140004e9c
        if (v34 < 1) {
            // 0x140004e65
            __security_check_cookie(g66);
            return &g103;
        }
        int32_t * v35 = (int32_t *)(a1 + 0x4690); // 0x140004eb3
        int64_t v36 = a1 + 0x3488;
        int64_t v37 = a1 + 0x1a48;
        int64_t v38 = a1 + 8;
        int64_t v39 = a1 + 0x3688;
        int32_t v40 = *v35;
        int32_t v41 = v34; // 0x140004eba
        int32_t v42 = v40; // 0x140004eba
        int64_t v43 = 0; // 0x140004eba
        int32_t v44; // 0x140004c10
        int32_t v45; // 0x140004c10
        int32_t v46; // 0x140004c10
        int32_t v47; // 0x140004c10
        int32_t v48; // 0x140004fdf
        int32_t v49; // 0x140004c10
        int64_t v50; // 0x140004c10
        int64_t v51; // 0x140004c10
        int64_t v52; // 0x140004c10
        int64_t v53; // 0x140004c10
        int64_t v54; // 0x140004c10
        int64_t v55; // 0x140004c10
        int64_t v56; // 0x140004ee1
        int64_t v57; // 0x140004eef
        int32_t * v58; // 0x140004ef2
        uint32_t v59; // 0x140004ef2
        int64_t v60; // 0x1400050b1
        uint32_t v61; // 0x1400050b4
        int64_t v62; // 0x140004ff6
        int32_t * v63; // 0x140004f00
        int32_t * v64; // 0x140004c10
        int32_t * v65; // 0x140004c10
        int32_t * v66; // 0x140004c10
        int32_t v67; // 0x140005076
        int64_t v68; // 0x140004fdc
        int64_t v69; // 0x140004f11
        int32_t v70; // 0x140004f1f
        int32_t v71; // 0x140004f73
        int64_t v72; // 0x140004f87
        uint32_t v73; // 0x140004fc6
        int64_t v74; // 0x140004fcc
        uint32_t v75; // 0x140004ec8
        int32_t v76; // 0x140005014
        if (v40 >= 1) {
            // 0x140004ec0
            v43 = 0;
            v75 = *v11;
            v44 = v75;
            v54 = a1 + 0x4858;
            if (v75 >= 1) {
                v56 = (int64_t)*(int32_t *)v54;
                v57 = 96 * v56 + a1;
                v58 = (int32_t *)(v57 + 0x46a8);
                v59 = *v58;
                v47 = v44;
                v53 = 0;
                if (v59 >= 1) {
                    // 0x140004f00
                    v63 = (int32_t *)(v57 + 0x46a4);
                    v64 = (int32_t *)(v57 + 0x46b4);
                    v65 = (int32_t *)(v57 + 0x46ac);
                    v66 = (int32_t *)(v57 + 0x46b0);
                    v49 = *v63;
                    v45 = v59;
                    v46 = v49;
                    if (v49 >= 1) {
                        v69 = (int64_t)*v64;
                        v70 = *v65;
                        v71 = *v66;
                        v72 = function_140002f50(a1, &v14, v38 + 1680 * (int64_t)v71, v37 + 1680 * v69, v39 + 1024 * v69, v56, v36 + 128 * (int64_t)v70);
                        if ((int32_t)v72 == 0) {
                            // break (via goto) -> 0x140004e65
                            goto lab_0x140004e65_8;
                        }
                        // 0x140004f94
                        v73 = *v63;
                        v74 = 1;
                        v51 = v74;
                        while (v74 < (int64_t)v73) {
                            // 0x140004f11
                            v69 = (int64_t)*v64;
                            v70 = *v65;
                            v71 = *v66;
                            v72 = function_140002f50(a1, &v14, v38 + 1680 * (int64_t)v71, v37 + 1680 * v69, v39 + 1024 * v69, v56, v36 + 128 * (int64_t)v70);
                            if ((int32_t)v72 == 0) {
                                // break (via goto) -> 0x140004e65
                                goto lab_0x140004e65_8;
                            }
                            // 0x140004f94
                            v73 = *v63;
                            v74 = v51 + 1 & 0xffffffff;
                            v51 = v74;
                        }
                        // 0x140004fdc
                        v45 = *v58;
                        v46 = v73;
                    }
                    // 0x140004fdc
                    v49 = v46;
                    v48 = v45;
                    v68 = 1;
                    v52 = v68 & 0xffffffff;
                    while (v48 > (int32_t)v68) {
                        // 0x140004f00
                        v45 = v48;
                        v46 = v49;
                        if (v49 >= 1) {
                            v69 = (int64_t)*v64;
                            v70 = *v65;
                            v71 = *v66;
                            v72 = function_140002f50(a1, &v14, v38 + 1680 * (int64_t)v71, v37 + 1680 * v69, v39 + 1024 * v69, v56, v36 + 128 * (int64_t)v70);
                            if ((int32_t)v72 == 0) {
                                // break (via goto) -> 0x140004e65
                                goto lab_0x140004e65_8;
                            }
                            // 0x140004f94
                            v73 = *v63;
                            v74 = 1;
                            v51 = v74;
                            while (v74 < (int64_t)v73) {
                                // 0x140004f11
                                v69 = (int64_t)*v64;
                                v70 = *v65;
                                v71 = *v66;
                                v72 = function_140002f50(a1, &v14, v38 + 1680 * (int64_t)v71, v37 + 1680 * v69, v39 + 1024 * v69, v56, v36 + 128 * (int64_t)v70);
                                if ((int32_t)v72 == 0) {
                                    // break (via goto) -> 0x140004e65
                                    goto lab_0x140004e65_8;
                                }
                                // 0x140004f94
                                v73 = *v63;
                                v74 = v51 + 1 & 0xffffffff;
                                v51 = v74;
                            }
                            // 0x140004fdc
                            v45 = *v58;
                            v46 = v73;
                        }
                        // 0x140004fdc
                        v49 = v46;
                        v48 = v45;
                        v68 = v52 + 1;
                        v52 = v68 & 0xffffffff;
                    }
                    // 0x140004fec
                    v47 = *v11;
                    v53 = 0;
                }
                // 0x140004ff1
                v62 = v53 + 1;
                v44 = v47;
                v55 = v62;
                v54 += 4;
                while (v47 > (int32_t)v62) {
                    // 0x140004ee1
                    v56 = (int64_t)*(int32_t *)v54;
                    v57 = 96 * v56 + a1;
                    v58 = (int32_t *)(v57 + 0x46a8);
                    v59 = *v58;
                    v47 = v44;
                    v53 = v62 & 0xffffffff;
                    if (v59 >= 1) {
                        // 0x140004f00
                        v63 = (int32_t *)(v57 + 0x46a4);
                        v64 = (int32_t *)(v57 + 0x46b4);
                        v65 = (int32_t *)(v57 + 0x46ac);
                        v66 = (int32_t *)(v57 + 0x46b0);
                        v49 = *v63;
                        v45 = v59;
                        v46 = v49;
                        if (v49 >= 1) {
                            v69 = (int64_t)*v64;
                            v70 = *v65;
                            v71 = *v66;
                            v72 = function_140002f50(a1, &v14, v38 + 1680 * (int64_t)v71, v37 + 1680 * v69, v39 + 1024 * v69, v56, v36 + 128 * (int64_t)v70);
                            if ((int32_t)v72 == 0) {
                                // break (via goto) -> 0x140004e65
                                goto lab_0x140004e65_8;
                            }
                            // 0x140004f94
                            v73 = *v63;
                            v74 = 1;
                            v51 = v74;
                            while (v74 < (int64_t)v73) {
                                // 0x140004f11
                                v69 = (int64_t)*v64;
                                v70 = *v65;
                                v71 = *v66;
                                v72 = function_140002f50(a1, &v14, v38 + 1680 * (int64_t)v71, v37 + 1680 * v69, v39 + 1024 * v69, v56, v36 + 128 * (int64_t)v70);
                                if ((int32_t)v72 == 0) {
                                    // break (via goto) -> 0x140004e65
                                    goto lab_0x140004e65_8;
                                }
                                // 0x140004f94
                                v73 = *v63;
                                v74 = v51 + 1 & 0xffffffff;
                                v51 = v74;
                            }
                            // 0x140004fdc
                            v45 = *v58;
                            v46 = v73;
                        }
                        // 0x140004fdc
                        v49 = v46;
                        v48 = v45;
                        v68 = 1;
                        v52 = v68 & 0xffffffff;
                        while (v48 > (int32_t)v68) {
                            // 0x140004f00
                            v45 = v48;
                            v46 = v49;
                            if (v49 >= 1) {
                                v69 = (int64_t)*v64;
                                v70 = *v65;
                                v71 = *v66;
                                v72 = function_140002f50(a1, &v14, v38 + 1680 * (int64_t)v71, v37 + 1680 * v69, v39 + 1024 * v69, v56, v36 + 128 * (int64_t)v70);
                                if ((int32_t)v72 == 0) {
                                    // break (via goto) -> 0x140004e65
                                    goto lab_0x140004e65_8;
                                }
                                // 0x140004f94
                                v73 = *v63;
                                v74 = 1;
                                v51 = v74;
                                while (v74 < (int64_t)v73) {
                                    // 0x140004f11
                                    v69 = (int64_t)*v64;
                                    v70 = *v65;
                                    v71 = *v66;
                                    v72 = function_140002f50(a1, &v14, v38 + 1680 * (int64_t)v71, v37 + 1680 * v69, v39 + 1024 * v69, v56, v36 + 128 * (int64_t)v70);
                                    if ((int32_t)v72 == 0) {
                                        // break (via goto) -> 0x140004e65
                                        goto lab_0x140004e65_8;
                                    }
                                    // 0x140004f94
                                    v73 = *v63;
                                    v74 = v51 + 1 & 0xffffffff;
                                    v51 = v74;
                                }
                                // 0x140004fdc
                                v45 = *v58;
                                v46 = v73;
                            }
                            // 0x140004fdc
                            v49 = v46;
                            v48 = v45;
                            v68 = v52 + 1;
                            v52 = v68 & 0xffffffff;
                        }
                        // 0x140004fec
                        v47 = *v11;
                        v53 = v55 & 0xffffffff;
                    }
                    // 0x140004ff1
                    v62 = v53 + 1;
                    v44 = v47;
                    v55 = v62;
                    v54 += 4;
                }
            }
            // 0x140005014
            v76 = *v13 - 1;
            *v13 = v76;
            if (v76 >= 0 != v76 != 0) {
                // 0x140005027
                if (*(int32_t *)(a1 + 0x4824) <= 23) {
                    // 0x140005030
                    function_140002dd0(a1);
                }
                // 0x140005038
                if ((*v9 & -8) != -48) {
                    // break (via goto) -> 0x140004e65
                    goto lab_0x140004e65_8;
                }
                // 0x140005049
                *v1 = 0;
                *v2 = 0;
                *v3 = 0;
                *v4 = 0;
                v67 = *v5;
                *v7 = 0;
                *v8 = 0;
                *v13 = v67 != 0 ? v67 : 0x7fffffff;
                *v9 = -1;
                *v10 = 0;
            }
            // 0x1400050ad
            v60 = 1;
            v61 = *v35;
            v50 = v60 & 0xffffffff;
            while (v61 > (int32_t)v60) {
                // 0x140004ec0
                v75 = *v11;
                v44 = v75;
                v54 = a1 + 0x4858;
                if (v75 >= 1) {
                    v56 = (int64_t)*(int32_t *)v54;
                    v57 = 96 * v56 + a1;
                    v58 = (int32_t *)(v57 + 0x46a8);
                    v59 = *v58;
                    v47 = v44;
                    v53 = 0;
                    if (v59 >= 1) {
                        // 0x140004f00
                        v63 = (int32_t *)(v57 + 0x46a4);
                        v64 = (int32_t *)(v57 + 0x46b4);
                        v65 = (int32_t *)(v57 + 0x46ac);
                        v66 = (int32_t *)(v57 + 0x46b0);
                        v49 = *v63;
                        v45 = v59;
                        v46 = v49;
                        if (v49 >= 1) {
                            v69 = (int64_t)*v64;
                            v70 = *v65;
                            v71 = *v66;
                            v72 = function_140002f50(a1, &v14, v38 + 1680 * (int64_t)v71, v37 + 1680 * v69, v39 + 1024 * v69, v56, v36 + 128 * (int64_t)v70);
                            if ((int32_t)v72 == 0) {
                                // break (via goto) -> 0x140004e65
                                goto lab_0x140004e65_8;
                            }
                            // 0x140004f94
                            v73 = *v63;
                            v74 = 1;
                            v51 = v74;
                            while (v74 < (int64_t)v73) {
                                // 0x140004f11
                                v69 = (int64_t)*v64;
                                v70 = *v65;
                                v71 = *v66;
                                v72 = function_140002f50(a1, &v14, v38 + 1680 * (int64_t)v71, v37 + 1680 * v69, v39 + 1024 * v69, v56, v36 + 128 * (int64_t)v70);
                                if ((int32_t)v72 == 0) {
                                    // break (via goto) -> 0x140004e65
                                    goto lab_0x140004e65_8;
                                }
                                // 0x140004f94
                                v73 = *v63;
                                v74 = v51 + 1 & 0xffffffff;
                                v51 = v74;
                            }
                            // 0x140004fdc
                            v45 = *v58;
                            v46 = v73;
                        }
                        // 0x140004fdc
                        v49 = v46;
                        v48 = v45;
                        v68 = 1;
                        v52 = v68 & 0xffffffff;
                        while (v48 > (int32_t)v68) {
                            // 0x140004f00
                            v45 = v48;
                            v46 = v49;
                            if (v49 >= 1) {
                                v69 = (int64_t)*v64;
                                v70 = *v65;
                                v71 = *v66;
                                v72 = function_140002f50(a1, &v14, v38 + 1680 * (int64_t)v71, v37 + 1680 * v69, v39 + 1024 * v69, v56, v36 + 128 * (int64_t)v70);
                                if ((int32_t)v72 == 0) {
                                    // break (via goto) -> 0x140004e65
                                    goto lab_0x140004e65_8;
                                }
                                // 0x140004f94
                                v73 = *v63;
                                v74 = 1;
                                v51 = v74;
                                while (v74 < (int64_t)v73) {
                                    // 0x140004f11
                                    v69 = (int64_t)*v64;
                                    v70 = *v65;
                                    v71 = *v66;
                                    v72 = function_140002f50(a1, &v14, v38 + 1680 * (int64_t)v71, v37 + 1680 * v69, v39 + 1024 * v69, v56, v36 + 128 * (int64_t)v70);
                                    if ((int32_t)v72 == 0) {
                                        // break (via goto) -> 0x140004e65
                                        goto lab_0x140004e65_8;
                                    }
                                    // 0x140004f94
                                    v73 = *v63;
                                    v74 = v51 + 1 & 0xffffffff;
                                    v51 = v74;
                                }
                                // 0x140004fdc
                                v45 = *v58;
                                v46 = v73;
                            }
                            // 0x140004fdc
                            v49 = v46;
                            v48 = v45;
                            v68 = v52 + 1;
                            v52 = v68 & 0xffffffff;
                        }
                        // 0x140004fec
                        v47 = *v11;
                        v53 = 0;
                    }
                    // 0x140004ff1
                    v62 = v53 + 1;
                    v44 = v47;
                    v55 = v62;
                    v54 += 4;
                    while (v47 > (int32_t)v62) {
                        // 0x140004ee1
                        v56 = (int64_t)*(int32_t *)v54;
                        v57 = 96 * v56 + a1;
                        v58 = (int32_t *)(v57 + 0x46a8);
                        v59 = *v58;
                        v47 = v44;
                        v53 = v62 & 0xffffffff;
                        if (v59 >= 1) {
                            // 0x140004f00
                            v63 = (int32_t *)(v57 + 0x46a4);
                            v64 = (int32_t *)(v57 + 0x46b4);
                            v65 = (int32_t *)(v57 + 0x46ac);
                            v66 = (int32_t *)(v57 + 0x46b0);
                            v49 = *v63;
                            v45 = v59;
                            v46 = v49;
                            if (v49 >= 1) {
                                v69 = (int64_t)*v64;
                                v70 = *v65;
                                v71 = *v66;
                                v72 = function_140002f50(a1, &v14, v38 + 1680 * (int64_t)v71, v37 + 1680 * v69, v39 + 1024 * v69, v56, v36 + 128 * (int64_t)v70);
                                if ((int32_t)v72 == 0) {
                                    // break (via goto) -> 0x140004e65
                                    goto lab_0x140004e65_8;
                                }
                                // 0x140004f94
                                v73 = *v63;
                                v74 = 1;
                                v51 = v74;
                                while (v74 < (int64_t)v73) {
                                    // 0x140004f11
                                    v69 = (int64_t)*v64;
                                    v70 = *v65;
                                    v71 = *v66;
                                    v72 = function_140002f50(a1, &v14, v38 + 1680 * (int64_t)v71, v37 + 1680 * v69, v39 + 1024 * v69, v56, v36 + 128 * (int64_t)v70);
                                    if ((int32_t)v72 == 0) {
                                        // break (via goto) -> 0x140004e65
                                        goto lab_0x140004e65_8;
                                    }
                                    // 0x140004f94
                                    v73 = *v63;
                                    v74 = v51 + 1 & 0xffffffff;
                                    v51 = v74;
                                }
                                // 0x140004fdc
                                v45 = *v58;
                                v46 = v73;
                            }
                            // 0x140004fdc
                            v49 = v46;
                            v48 = v45;
                            v68 = 1;
                            v52 = v68 & 0xffffffff;
                            while (v48 > (int32_t)v68) {
                                // 0x140004f00
                                v45 = v48;
                                v46 = v49;
                                if (v49 >= 1) {
                                    v69 = (int64_t)*v64;
                                    v70 = *v65;
                                    v71 = *v66;
                                    v72 = function_140002f50(a1, &v14, v38 + 1680 * (int64_t)v71, v37 + 1680 * v69, v39 + 1024 * v69, v56, v36 + 128 * (int64_t)v70);
                                    if ((int32_t)v72 == 0) {
                                        // break (via goto) -> 0x140004e65
                                        goto lab_0x140004e65_8;
                                    }
                                    // 0x140004f94
                                    v73 = *v63;
                                    v74 = 1;
                                    v51 = v74;
                                    while (v74 < (int64_t)v73) {
                                        // 0x140004f11
                                        v69 = (int64_t)*v64;
                                        v70 = *v65;
                                        v71 = *v66;
                                        v72 = function_140002f50(a1, &v14, v38 + 1680 * (int64_t)v71, v37 + 1680 * v69, v39 + 1024 * v69, v56, v36 + 128 * (int64_t)v70);
                                        if ((int32_t)v72 == 0) {
                                            // break (via goto) -> 0x140004e65
                                            goto lab_0x140004e65_8;
                                        }
                                        // 0x140004f94
                                        v73 = *v63;
                                        v74 = v51 + 1 & 0xffffffff;
                                        v51 = v74;
                                    }
                                    // 0x140004fdc
                                    v45 = *v58;
                                    v46 = v73;
                                }
                                // 0x140004fdc
                                v49 = v46;
                                v48 = v45;
                                v68 = v52 + 1;
                                v52 = v68 & 0xffffffff;
                            }
                            // 0x140004fec
                            v47 = *v11;
                            v53 = v55 & 0xffffffff;
                        }
                        // 0x140004ff1
                        v62 = v53 + 1;
                        v44 = v47;
                        v55 = v62;
                        v54 += 4;
                    }
                }
                // 0x140005014
                v76 = *v13 - 1;
                *v13 = v76;
                if (v76 >= 0 != v76 != 0) {
                    // 0x140005027
                    if (*(int32_t *)(a1 + 0x4824) <= 23) {
                        // 0x140005030
                        function_140002dd0(a1);
                    }
                    // 0x140005038
                    if ((*v9 & -8) != -48) {
                        // break (via goto) -> 0x140004e65
                        goto lab_0x140004e65_8;
                    }
                    // 0x140005049
                    *v1 = 0;
                    *v2 = 0;
                    *v3 = 0;
                    *v4 = 0;
                    v67 = *v5;
                    *v7 = 0;
                    *v8 = 0;
                    *v13 = v67 != 0 ? v67 : 0x7fffffff;
                    *v9 = -1;
                    *v10 = 0;
                }
                // 0x1400050ad
                v60 = v50 + 1;
                v61 = *v35;
                v50 = v60 & 0xffffffff;
            }
            // 0x1400050c1
            v41 = *v33;
            v42 = v61;
        }
        // 0x1400050c1
        v40 = v42;
        int32_t v77 = v41; // 0x1400050c7
        int64_t v78 = v43 + 1; // 0x1400050c1
        while (v77 > (int32_t)v78) {
            // 0x140004eb0
            v41 = v77;
            v42 = v40;
            v43 = v78 & 0xffffffff;
            if (v40 >= 1) {
                // 0x140004ec0
                v43 = v78 & 0xffffffff;
                v75 = *v11;
                v44 = v75;
                v54 = a1 + 0x4858;
                if (v75 >= 1) {
                    v56 = (int64_t)*(int32_t *)v54;
                    v57 = 96 * v56 + a1;
                    v58 = (int32_t *)(v57 + 0x46a8);
                    v59 = *v58;
                    v47 = v44;
                    v53 = 0;
                    if (v59 >= 1) {
                        // 0x140004f00
                        v63 = (int32_t *)(v57 + 0x46a4);
                        v64 = (int32_t *)(v57 + 0x46b4);
                        v65 = (int32_t *)(v57 + 0x46ac);
                        v66 = (int32_t *)(v57 + 0x46b0);
                        v49 = *v63;
                        v45 = v59;
                        v46 = v49;
                        if (v49 >= 1) {
                            v69 = (int64_t)*v64;
                            v70 = *v65;
                            v71 = *v66;
                            v72 = function_140002f50(a1, &v14, v38 + 1680 * (int64_t)v71, v37 + 1680 * v69, v39 + 1024 * v69, v56, v36 + 128 * (int64_t)v70);
                            if ((int32_t)v72 == 0) {
                                // break (via goto) -> 0x140004e65
                                goto lab_0x140004e65_8;
                            }
                            // 0x140004f94
                            v73 = *v63;
                            v74 = 1;
                            v51 = v74;
                            while (v74 < (int64_t)v73) {
                                // 0x140004f11
                                v69 = (int64_t)*v64;
                                v70 = *v65;
                                v71 = *v66;
                                v72 = function_140002f50(a1, &v14, v38 + 1680 * (int64_t)v71, v37 + 1680 * v69, v39 + 1024 * v69, v56, v36 + 128 * (int64_t)v70);
                                if ((int32_t)v72 == 0) {
                                    // break (via goto) -> 0x140004e65
                                    goto lab_0x140004e65_8;
                                }
                                // 0x140004f94
                                v73 = *v63;
                                v74 = v51 + 1 & 0xffffffff;
                                v51 = v74;
                            }
                            // 0x140004fdc
                            v45 = *v58;
                            v46 = v73;
                        }
                        // 0x140004fdc
                        v49 = v46;
                        v48 = v45;
                        v68 = 1;
                        v52 = v68 & 0xffffffff;
                        while (v48 > (int32_t)v68) {
                            // 0x140004f00
                            v45 = v48;
                            v46 = v49;
                            if (v49 >= 1) {
                                v69 = (int64_t)*v64;
                                v70 = *v65;
                                v71 = *v66;
                                v72 = function_140002f50(a1, &v14, v38 + 1680 * (int64_t)v71, v37 + 1680 * v69, v39 + 1024 * v69, v56, v36 + 128 * (int64_t)v70);
                                if ((int32_t)v72 == 0) {
                                    // break (via goto) -> 0x140004e65
                                    goto lab_0x140004e65_8;
                                }
                                // 0x140004f94
                                v73 = *v63;
                                v74 = 1;
                                v51 = v74;
                                while (v74 < (int64_t)v73) {
                                    // 0x140004f11
                                    v69 = (int64_t)*v64;
                                    v70 = *v65;
                                    v71 = *v66;
                                    v72 = function_140002f50(a1, &v14, v38 + 1680 * (int64_t)v71, v37 + 1680 * v69, v39 + 1024 * v69, v56, v36 + 128 * (int64_t)v70);
                                    if ((int32_t)v72 == 0) {
                                        // break (via goto) -> 0x140004e65
                                        goto lab_0x140004e65_8;
                                    }
                                    // 0x140004f94
                                    v73 = *v63;
                                    v74 = v51 + 1 & 0xffffffff;
                                    v51 = v74;
                                }
                                // 0x140004fdc
                                v45 = *v58;
                                v46 = v73;
                            }
                            // 0x140004fdc
                            v49 = v46;
                            v48 = v45;
                            v68 = v52 + 1;
                            v52 = v68 & 0xffffffff;
                        }
                        // 0x140004fec
                        v47 = *v11;
                        v53 = 0;
                    }
                    // 0x140004ff1
                    v62 = v53 + 1;
                    v44 = v47;
                    v55 = v62;
                    v54 += 4;
                    while (v47 > (int32_t)v62) {
                        // 0x140004ee1
                        v56 = (int64_t)*(int32_t *)v54;
                        v57 = 96 * v56 + a1;
                        v58 = (int32_t *)(v57 + 0x46a8);
                        v59 = *v58;
                        v47 = v44;
                        v53 = v62 & 0xffffffff;
                        if (v59 >= 1) {
                            // 0x140004f00
                            v63 = (int32_t *)(v57 + 0x46a4);
                            v64 = (int32_t *)(v57 + 0x46b4);
                            v65 = (int32_t *)(v57 + 0x46ac);
                            v66 = (int32_t *)(v57 + 0x46b0);
                            v49 = *v63;
                            v45 = v59;
                            v46 = v49;
                            if (v49 >= 1) {
                                v69 = (int64_t)*v64;
                                v70 = *v65;
                                v71 = *v66;
                                v72 = function_140002f50(a1, &v14, v38 + 1680 * (int64_t)v71, v37 + 1680 * v69, v39 + 1024 * v69, v56, v36 + 128 * (int64_t)v70);
                                if ((int32_t)v72 == 0) {
                                    // break (via goto) -> 0x140004e65
                                    goto lab_0x140004e65_8;
                                }
                                // 0x140004f94
                                v73 = *v63;
                                v74 = 1;
                                v51 = v74;
                                while (v74 < (int64_t)v73) {
                                    // 0x140004f11
                                    v69 = (int64_t)*v64;
                                    v70 = *v65;
                                    v71 = *v66;
                                    v72 = function_140002f50(a1, &v14, v38 + 1680 * (int64_t)v71, v37 + 1680 * v69, v39 + 1024 * v69, v56, v36 + 128 * (int64_t)v70);
                                    if ((int32_t)v72 == 0) {
                                        // break (via goto) -> 0x140004e65
                                        goto lab_0x140004e65_8;
                                    }
                                    // 0x140004f94
                                    v73 = *v63;
                                    v74 = v51 + 1 & 0xffffffff;
                                    v51 = v74;
                                }
                                // 0x140004fdc
                                v45 = *v58;
                                v46 = v73;
                            }
                            // 0x140004fdc
                            v49 = v46;
                            v48 = v45;
                            v68 = 1;
                            v52 = v68 & 0xffffffff;
                            while (v48 > (int32_t)v68) {
                                // 0x140004f00
                                v45 = v48;
                                v46 = v49;
                                if (v49 >= 1) {
                                    v69 = (int64_t)*v64;
                                    v70 = *v65;
                                    v71 = *v66;
                                    v72 = function_140002f50(a1, &v14, v38 + 1680 * (int64_t)v71, v37 + 1680 * v69, v39 + 1024 * v69, v56, v36 + 128 * (int64_t)v70);
                                    if ((int32_t)v72 == 0) {
                                        // break (via goto) -> 0x140004e65
                                        goto lab_0x140004e65_8;
                                    }
                                    // 0x140004f94
                                    v73 = *v63;
                                    v74 = 1;
                                    v51 = v74;
                                    while (v74 < (int64_t)v73) {
                                        // 0x140004f11
                                        v69 = (int64_t)*v64;
                                        v70 = *v65;
                                        v71 = *v66;
                                        v72 = function_140002f50(a1, &v14, v38 + 1680 * (int64_t)v71, v37 + 1680 * v69, v39 + 1024 * v69, v56, v36 + 128 * (int64_t)v70);
                                        if ((int32_t)v72 == 0) {
                                            // break (via goto) -> 0x140004e65
                                            goto lab_0x140004e65_8;
                                        }
                                        // 0x140004f94
                                        v73 = *v63;
                                        v74 = v51 + 1 & 0xffffffff;
                                        v51 = v74;
                                    }
                                    // 0x140004fdc
                                    v45 = *v58;
                                    v46 = v73;
                                }
                                // 0x140004fdc
                                v49 = v46;
                                v48 = v45;
                                v68 = v52 + 1;
                                v52 = v68 & 0xffffffff;
                            }
                            // 0x140004fec
                            v47 = *v11;
                            v53 = v55 & 0xffffffff;
                        }
                        // 0x140004ff1
                        v62 = v53 + 1;
                        v44 = v47;
                        v55 = v62;
                        v54 += 4;
                    }
                }
                // 0x140005014
                v76 = *v13 - 1;
                *v13 = v76;
                if (v76 >= 0 != v76 != 0) {
                    // 0x140005027
                    if (*(int32_t *)(a1 + 0x4824) <= 23) {
                        // 0x140005030
                        function_140002dd0(a1);
                    }
                    // 0x140005038
                    if ((*v9 & -8) != -48) {
                        // break (via goto) -> 0x140004e65
                        goto lab_0x140004e65_8;
                    }
                    // 0x140005049
                    *v1 = 0;
                    *v2 = 0;
                    *v3 = 0;
                    *v4 = 0;
                    v67 = *v5;
                    *v7 = 0;
                    *v8 = 0;
                    *v13 = v67 != 0 ? v67 : 0x7fffffff;
                    *v9 = -1;
                    *v10 = 0;
                }
                // 0x1400050ad
                v60 = 1;
                v61 = *v35;
                v50 = v60 & 0xffffffff;
                while (v61 > (int32_t)v60) {
                    // 0x140004ec0
                    v75 = *v11;
                    v44 = v75;
                    v54 = a1 + 0x4858;
                    if (v75 >= 1) {
                        v56 = (int64_t)*(int32_t *)v54;
                        v57 = 96 * v56 + a1;
                        v58 = (int32_t *)(v57 + 0x46a8);
                        v59 = *v58;
                        v47 = v44;
                        v53 = 0;
                        if (v59 >= 1) {
                            // 0x140004f00
                            v63 = (int32_t *)(v57 + 0x46a4);
                            v64 = (int32_t *)(v57 + 0x46b4);
                            v65 = (int32_t *)(v57 + 0x46ac);
                            v66 = (int32_t *)(v57 + 0x46b0);
                            v49 = *v63;
                            v45 = v59;
                            v46 = v49;
                            if (v49 >= 1) {
                                v69 = (int64_t)*v64;
                                v70 = *v65;
                                v71 = *v66;
                                v72 = function_140002f50(a1, &v14, v38 + 1680 * (int64_t)v71, v37 + 1680 * v69, v39 + 1024 * v69, v56, v36 + 128 * (int64_t)v70);
                                if ((int32_t)v72 == 0) {
                                    // break (via goto) -> 0x140004e65
                                    goto lab_0x140004e65_8;
                                }
                                // 0x140004f94
                                v73 = *v63;
                                v74 = 1;
                                v51 = v74;
                                while (v74 < (int64_t)v73) {
                                    // 0x140004f11
                                    v69 = (int64_t)*v64;
                                    v70 = *v65;
                                    v71 = *v66;
                                    v72 = function_140002f50(a1, &v14, v38 + 1680 * (int64_t)v71, v37 + 1680 * v69, v39 + 1024 * v69, v56, v36 + 128 * (int64_t)v70);
                                    if ((int32_t)v72 == 0) {
                                        // break (via goto) -> 0x140004e65
                                        goto lab_0x140004e65_8;
                                    }
                                    // 0x140004f94
                                    v73 = *v63;
                                    v74 = v51 + 1 & 0xffffffff;
                                    v51 = v74;
                                }
                                // 0x140004fdc
                                v45 = *v58;
                                v46 = v73;
                            }
                            // 0x140004fdc
                            v49 = v46;
                            v48 = v45;
                            v68 = 1;
                            v52 = v68 & 0xffffffff;
                            while (v48 > (int32_t)v68) {
                                // 0x140004f00
                                v45 = v48;
                                v46 = v49;
                                if (v49 >= 1) {
                                    v69 = (int64_t)*v64;
                                    v70 = *v65;
                                    v71 = *v66;
                                    v72 = function_140002f50(a1, &v14, v38 + 1680 * (int64_t)v71, v37 + 1680 * v69, v39 + 1024 * v69, v56, v36 + 128 * (int64_t)v70);
                                    if ((int32_t)v72 == 0) {
                                        // break (via goto) -> 0x140004e65
                                        goto lab_0x140004e65_8;
                                    }
                                    // 0x140004f94
                                    v73 = *v63;
                                    v74 = 1;
                                    v51 = v74;
                                    while (v74 < (int64_t)v73) {
                                        // 0x140004f11
                                        v69 = (int64_t)*v64;
                                        v70 = *v65;
                                        v71 = *v66;
                                        v72 = function_140002f50(a1, &v14, v38 + 1680 * (int64_t)v71, v37 + 1680 * v69, v39 + 1024 * v69, v56, v36 + 128 * (int64_t)v70);
                                        if ((int32_t)v72 == 0) {
                                            // break (via goto) -> 0x140004e65
                                            goto lab_0x140004e65_8;
                                        }
                                        // 0x140004f94
                                        v73 = *v63;
                                        v74 = v51 + 1 & 0xffffffff;
                                        v51 = v74;
                                    }
                                    // 0x140004fdc
                                    v45 = *v58;
                                    v46 = v73;
                                }
                                // 0x140004fdc
                                v49 = v46;
                                v48 = v45;
                                v68 = v52 + 1;
                                v52 = v68 & 0xffffffff;
                            }
                            // 0x140004fec
                            v47 = *v11;
                            v53 = 0;
                        }
                        // 0x140004ff1
                        v62 = v53 + 1;
                        v44 = v47;
                        v55 = v62;
                        v54 += 4;
                        while (v47 > (int32_t)v62) {
                            // 0x140004ee1
                            v56 = (int64_t)*(int32_t *)v54;
                            v57 = 96 * v56 + a1;
                            v58 = (int32_t *)(v57 + 0x46a8);
                            v59 = *v58;
                            v47 = v44;
                            v53 = v62 & 0xffffffff;
                            if (v59 >= 1) {
                                // 0x140004f00
                                v63 = (int32_t *)(v57 + 0x46a4);
                                v64 = (int32_t *)(v57 + 0x46b4);
                                v65 = (int32_t *)(v57 + 0x46ac);
                                v66 = (int32_t *)(v57 + 0x46b0);
                                v49 = *v63;
                                v45 = v59;
                                v46 = v49;
                                if (v49 >= 1) {
                                    v69 = (int64_t)*v64;
                                    v70 = *v65;
                                    v71 = *v66;
                                    v72 = function_140002f50(a1, &v14, v38 + 1680 * (int64_t)v71, v37 + 1680 * v69, v39 + 1024 * v69, v56, v36 + 128 * (int64_t)v70);
                                    if ((int32_t)v72 == 0) {
                                        // break (via goto) -> 0x140004e65
                                        goto lab_0x140004e65_8;
                                    }
                                    // 0x140004f94
                                    v73 = *v63;
                                    v74 = 1;
                                    v51 = v74;
                                    while (v74 < (int64_t)v73) {
                                        // 0x140004f11
                                        v69 = (int64_t)*v64;
                                        v70 = *v65;
                                        v71 = *v66;
                                        v72 = function_140002f50(a1, &v14, v38 + 1680 * (int64_t)v71, v37 + 1680 * v69, v39 + 1024 * v69, v56, v36 + 128 * (int64_t)v70);
                                        if ((int32_t)v72 == 0) {
                                            // break (via goto) -> 0x140004e65
                                            goto lab_0x140004e65_8;
                                        }
                                        // 0x140004f94
                                        v73 = *v63;
                                        v74 = v51 + 1 & 0xffffffff;
                                        v51 = v74;
                                    }
                                    // 0x140004fdc
                                    v45 = *v58;
                                    v46 = v73;
                                }
                                // 0x140004fdc
                                v49 = v46;
                                v48 = v45;
                                v68 = 1;
                                v52 = v68 & 0xffffffff;
                                while (v48 > (int32_t)v68) {
                                    // 0x140004f00
                                    v45 = v48;
                                    v46 = v49;
                                    if (v49 >= 1) {
                                        v69 = (int64_t)*v64;
                                        v70 = *v65;
                                        v71 = *v66;
                                        v72 = function_140002f50(a1, &v14, v38 + 1680 * (int64_t)v71, v37 + 1680 * v69, v39 + 1024 * v69, v56, v36 + 128 * (int64_t)v70);
                                        if ((int32_t)v72 == 0) {
                                            // break (via goto) -> 0x140004e65
                                            goto lab_0x140004e65_8;
                                        }
                                        // 0x140004f94
                                        v73 = *v63;
                                        v74 = 1;
                                        v51 = v74;
                                        while (v74 < (int64_t)v73) {
                                            // 0x140004f11
                                            v69 = (int64_t)*v64;
                                            v70 = *v65;
                                            v71 = *v66;
                                            v72 = function_140002f50(a1, &v14, v38 + 1680 * (int64_t)v71, v37 + 1680 * v69, v39 + 1024 * v69, v56, v36 + 128 * (int64_t)v70);
                                            if ((int32_t)v72 == 0) {
                                                // break (via goto) -> 0x140004e65
                                                goto lab_0x140004e65_8;
                                            }
                                            // 0x140004f94
                                            v73 = *v63;
                                            v74 = v51 + 1 & 0xffffffff;
                                            v51 = v74;
                                        }
                                        // 0x140004fdc
                                        v45 = *v58;
                                        v46 = v73;
                                    }
                                    // 0x140004fdc
                                    v49 = v46;
                                    v48 = v45;
                                    v68 = v52 + 1;
                                    v52 = v68 & 0xffffffff;
                                }
                                // 0x140004fec
                                v47 = *v11;
                                v53 = v55 & 0xffffffff;
                            }
                            // 0x140004ff1
                            v62 = v53 + 1;
                            v44 = v47;
                            v55 = v62;
                            v54 += 4;
                        }
                    }
                    // 0x140005014
                    v76 = *v13 - 1;
                    *v13 = v76;
                    if (v76 >= 0 != v76 != 0) {
                        // 0x140005027
                        if (*(int32_t *)(a1 + 0x4824) <= 23) {
                            // 0x140005030
                            function_140002dd0(a1);
                        }
                        // 0x140005038
                        if ((*v9 & -8) != -48) {
                            // break (via goto) -> 0x140004e65
                            goto lab_0x140004e65_8;
                        }
                        // 0x140005049
                        *v1 = 0;
                        *v2 = 0;
                        *v3 = 0;
                        *v4 = 0;
                        v67 = *v5;
                        *v7 = 0;
                        *v8 = 0;
                        *v13 = v67 != 0 ? v67 : 0x7fffffff;
                        *v9 = -1;
                        *v10 = 0;
                    }
                    // 0x1400050ad
                    v60 = v50 + 1;
                    v61 = *v35;
                    v50 = v60 & 0xffffffff;
                }
                // 0x1400050c1
                v41 = *v33;
                v42 = v61;
            }
            // 0x1400050c1
            v40 = v42;
            v77 = v41;
            v78 = v43 + 1;
        }
      lab_0x140004e65_8:
        // 0x140004e65
        __security_check_cookie(g66);
        return &g103;
    }
    if (v12 == 1) {
        int64_t v79 = (int64_t)*(int32_t *)(a1 + 0x4858); // 0x1400050e1
        int64_t v80 = 96 * v79 + a1;
        int32_t v81 = *(int32_t *)(v80 + 0x46c0) + 7; // 0x140005105
        uint32_t v82 = v81 >> 3; // 0x14000510c
        if (v81 < 0 || v82 == 0) {
            // 0x140004e65
            __security_check_cookie(g66);
            return &g103;
        }
        int32_t v83 = *(int32_t *)(v80 + 0x46bc) + 7; // 0x140005102
        int64_t v84 = v79 & 0xffffffff;
        int64_t v85 = a1 + 0x1a48;
        int64_t v86 = 0;
        int64_t v87; // 0x140004c10
        int32_t v88; // 0x1400051b5
        int64_t v89; // 0x14000524e
        int32_t v90; // 0x140005217
        int32_t v91; // 0x140005130
        int64_t v92; // 0x14000514a
        int64_t v93; // 0x140005152
        int64_t v94; // 0x14000517b
        int32_t v95; // 0x140005158
        if (v83 >= 8) {
            // 0x140005130
            v89 = 0;
            v91 = *(int32_t *)(v80 + 0x46f8);
            v92 = *(int64_t *)(v80 + 0x46f0);
            v93 = 2 * (int64_t)(64 * (v91 * (int32_t)v86 + (int32_t)v89)) + v92;
            if (*(int32_t *)(a1 + 0x4834) != 0) {
                // 0x14000517b
                v94 = (int64_t)*(int32_t *)(v80 + 0x46b4);
                v87 = function_140003660(a1, v93, v85 + 1680 * v94, a1 + 0x3688 + 1024 * v94);
            } else {
                // 0x140005158
                v95 = *(int32_t *)(v80 + 0x46b0);
                v87 = function_1400033e0(a1, v93, a1 + 8 + 1680 * (int64_t)v95, v84);
            }
            // 0x1400051ad
            if ((int32_t)v87 == 0) {
                // break (via goto) -> 0x140004e65
                goto lab_0x140004e65_8;
            }
            // 0x1400051b5
            v88 = *v13 - 1;
            *v13 = v88;
            if (v88 >= 0 != v88 != 0) {
                // 0x1400051c8
                if (*(int32_t *)(a1 + 0x4824) <= 23) {
                    // 0x1400051d1
                    function_140002dd0(a1);
                }
                // 0x1400051d9
                if ((*v9 & -8) != -48) {
                    // break (via goto) -> 0x140004e65
                    goto lab_0x140004e65_8;
                }
                // 0x1400051ea
                *v1 = 0;
                *v2 = 0;
                *v3 = 0;
                *v4 = 0;
                v90 = *v5;
                *v7 = 0;
                *v8 = 0;
                *v13 = v90 != 0 ? v90 : 0x7fffffff;
                *v9 = -1;
                *v10 = 0;
            }
            // 0x14000524e
            v89 = v89 + 1 & 0xffffffff;
            while (v89 < (int64_t)(v83 >> 3)) {
                // 0x140005130
                v91 = *(int32_t *)(v80 + 0x46f8);
                v92 = *(int64_t *)(v80 + 0x46f0);
                v93 = 2 * (int64_t)(64 * (v91 * (int32_t)v86 + (int32_t)v89)) + v92;
                if (*(int32_t *)(a1 + 0x4834) != 0) {
                    // 0x14000517b
                    v94 = (int64_t)*(int32_t *)(v80 + 0x46b4);
                    v87 = function_140003660(a1, v93, v85 + 1680 * v94, a1 + 0x3688 + 1024 * v94);
                } else {
                    // 0x140005158
                    v95 = *(int32_t *)(v80 + 0x46b0);
                    v87 = function_1400033e0(a1, v93, a1 + 8 + 1680 * (int64_t)v95, v84);
                }
                // 0x1400051ad
                if ((int32_t)v87 == 0) {
                    // break (via goto) -> 0x140004e65
                    goto lab_0x140004e65_8;
                }
                // 0x1400051b5
                v88 = *v13 - 1;
                *v13 = v88;
                if (v88 >= 0 != v88 != 0) {
                    // 0x1400051c8
                    if (*(int32_t *)(a1 + 0x4824) <= 23) {
                        // 0x1400051d1
                        function_140002dd0(a1);
                    }
                    // 0x1400051d9
                    if ((*v9 & -8) != -48) {
                        // break (via goto) -> 0x140004e65
                        goto lab_0x140004e65_8;
                    }
                    // 0x1400051ea
                    *v1 = 0;
                    *v2 = 0;
                    *v3 = 0;
                    *v4 = 0;
                    v90 = *v5;
                    *v7 = 0;
                    *v8 = 0;
                    *v13 = v90 != 0 ? v90 : 0x7fffffff;
                    *v9 = -1;
                    *v10 = 0;
                }
                // 0x14000524e
                v89 = v89 + 1 & 0xffffffff;
            }
        }
        int64_t v96 = v86 + 1 & 0xffffffff; // 0x140005258
        while (v96 < (int64_t)v82) {
            // 0x140005120
            v86 = v96;
            if (v83 >= 8) {
                // 0x140005130
                v89 = 0;
                v91 = *(int32_t *)(v80 + 0x46f8);
                v92 = *(int64_t *)(v80 + 0x46f0);
                v93 = 2 * (int64_t)(64 * (v91 * (int32_t)v86 + (int32_t)v89)) + v92;
                if (*(int32_t *)(a1 + 0x4834) != 0) {
                    // 0x14000517b
                    v94 = (int64_t)*(int32_t *)(v80 + 0x46b4);
                    v87 = function_140003660(a1, v93, v85 + 1680 * v94, a1 + 0x3688 + 1024 * v94);
                } else {
                    // 0x140005158
                    v95 = *(int32_t *)(v80 + 0x46b0);
                    v87 = function_1400033e0(a1, v93, a1 + 8 + 1680 * (int64_t)v95, v84);
                }
                // 0x1400051ad
                if ((int32_t)v87 == 0) {
                    // break (via goto) -> 0x140004e65
                    goto lab_0x140004e65_8;
                }
                // 0x1400051b5
                v88 = *v13 - 1;
                *v13 = v88;
                if (v88 >= 0 != v88 != 0) {
                    // 0x1400051c8
                    if (*(int32_t *)(a1 + 0x4824) <= 23) {
                        // 0x1400051d1
                        function_140002dd0(a1);
                    }
                    // 0x1400051d9
                    if ((*v9 & -8) != -48) {
                        // break (via goto) -> 0x140004e65
                        goto lab_0x140004e65_8;
                    }
                    // 0x1400051ea
                    *v1 = 0;
                    *v2 = 0;
                    *v3 = 0;
                    *v4 = 0;
                    v90 = *v5;
                    *v7 = 0;
                    *v8 = 0;
                    *v13 = v90 != 0 ? v90 : 0x7fffffff;
                    *v9 = -1;
                    *v10 = 0;
                }
                // 0x14000524e
                v89 = v89 + 1 & 0xffffffff;
                while (v89 < (int64_t)(v83 >> 3)) {
                    // 0x140005130
                    v91 = *(int32_t *)(v80 + 0x46f8);
                    v92 = *(int64_t *)(v80 + 0x46f0);
                    v93 = 2 * (int64_t)(64 * (v91 * (int32_t)v86 + (int32_t)v89)) + v92;
                    if (*(int32_t *)(a1 + 0x4834) != 0) {
                        // 0x14000517b
                        v94 = (int64_t)*(int32_t *)(v80 + 0x46b4);
                        v87 = function_140003660(a1, v93, v85 + 1680 * v94, a1 + 0x3688 + 1024 * v94);
                    } else {
                        // 0x140005158
                        v95 = *(int32_t *)(v80 + 0x46b0);
                        v87 = function_1400033e0(a1, v93, a1 + 8 + 1680 * (int64_t)v95, v84);
                    }
                    // 0x1400051ad
                    if ((int32_t)v87 == 0) {
                        // break (via goto) -> 0x140004e65
                        goto lab_0x140004e65_8;
                    }
                    // 0x1400051b5
                    v88 = *v13 - 1;
                    *v13 = v88;
                    if (v88 >= 0 != v88 != 0) {
                        // 0x1400051c8
                        if (*(int32_t *)(a1 + 0x4824) <= 23) {
                            // 0x1400051d1
                            function_140002dd0(a1);
                        }
                        // 0x1400051d9
                        if ((*v9 & -8) != -48) {
                            // break (via goto) -> 0x140004e65
                            goto lab_0x140004e65_8;
                        }
                        // 0x1400051ea
                        *v1 = 0;
                        *v2 = 0;
                        *v3 = 0;
                        *v4 = 0;
                        v90 = *v5;
                        *v7 = 0;
                        *v8 = 0;
                        *v13 = v90 != 0 ? v90 : 0x7fffffff;
                        *v9 = -1;
                        *v10 = 0;
                    }
                    // 0x14000524e
                    v89 = v89 + 1 & 0xffffffff;
                }
            }
            // 0x140005258
            v96 = v86 + 1 & 0xffffffff;
        }
        // 0x140004e65
        __security_check_cookie(g66);
        return &g103;
    }
    int32_t * v97 = (int32_t *)(a1 + 0x4694); // 0x14000526b
    int32_t v98 = *v97; // 0x14000526b
    if (v98 < 1) {
        // 0x140004e65
        __security_check_cookie(g66);
        return &g103;
    }
    int32_t * v99 = (int32_t *)(a1 + 0x4690); // 0x140005283
    int64_t v100 = a1 + 8;
    int32_t v101 = *v99;
    int64_t v102 = 0;
    int32_t v103 = v98; // 0x14000528a
    uint32_t v104 = v101; // 0x14000528a
    int32_t v105; // 0x140004c10
    int32_t v106; // 0x140004c10
    int32_t v107; // 0x140004c10
    int32_t v108; // 0x140004c10
    int32_t v109; // 0x140004c10
    uint32_t v110; // 0x1400052d0
    int32_t v111; // 0x140005342
    int32_t v112; // 0x14000535b
    int64_t v113; // 0x140004c10
    int64_t v114; // 0x140004c10
    int64_t v115; // 0x140004c10
    int64_t v116; // 0x140004c10
    int64_t v117; // 0x140005401
    int64_t v118; // 0x1400052b0
    int64_t v119; // 0x1400052bd
    int32_t * v120; // 0x1400052c0
    uint32_t v121; // 0x1400052c0
    int64_t v122; // 0x14000534f
    int32_t * v123; // 0x1400052d0
    int64_t v124; // 0x140004c10
    int32_t * v125; // 0x140004c10
    int64_t * v126; // 0x140004c10
    int32_t * v127; // 0x140004c10
    int32_t v128; // 0x1400053ca
    int64_t v129; // 0x140005340
    int32_t v130; // 0x1400052f7
    int64_t v131; // 0x140005308
    int32_t v132; // 0x140005313
    uint32_t v133; // 0x140005334
    int64_t v134; // 0x140005334
    int64_t v135; // 0x14000533a
    int32_t v136; // 0x140004c10
    uint32_t v137; // 0x140005293
    int32_t v138; // 0x140005368
    int64_t v139; // 0x140004c10
    if (v101 >= 1) {
        // 0x140005290
        v136 = v102;
        v114 = 0;
        v137 = *v11;
        if (v137 >= 1) {
            // 0x1400052a0
            v139 = 0x100000000 * v114 >> 32;
            v116 = a1 + 0x4858;
            v118 = (int64_t)*(int32_t *)v116;
            v119 = 96 * v118 + a1;
            v120 = (int32_t *)(v119 + 0x46a8);
            v121 = *v120;
            v108 = v137;
            if (v121 >= 1) {
                // 0x1400052d0
                v123 = (int32_t *)(v119 + 0x46a4);
                v124 = v118 & 0xffffffff;
                v125 = (int32_t *)(v119 + 0x46f8);
                v126 = (int64_t *)(v119 + 0x46f0);
                v127 = (int32_t *)(v119 + 0x46b0);
                v115 = 0;
                v110 = *v123;
                v109 = v121;
                v106 = v109;
                v107 = v110;
                if (v110 >= 1) {
                    // 0x1400052e0
                    v135 = 0;
                    v130 = *v125;
                    v131 = *v126;
                    v132 = *v127;
                    if ((int32_t)function_1400033e0(a1, 2 * (int64_t)(64 * (v130 * (v109 * v136 + (int32_t)v115) + (int32_t)v135 + (int32_t)((0x100000000 * (int64_t)v110 >> 32) * v139))) + v131, v100 + 1680 * (int64_t)v132, v124) == 0) {
                        // break (via goto) -> 0x140004e65
                        goto lab_0x140004e65_8;
                    }
                    // 0x140005334
                    v133 = *v123;
                    v134 = v133;
                    v135 = v135 + 1 & 0xffffffff;
                    v105 = *v120;
                    v106 = v105;
                    v107 = v133;
                    while (v135 < v134) {
                        // 0x1400052e0
                        v130 = *v125;
                        v131 = *v126;
                        v132 = *v127;
                        if ((int32_t)function_1400033e0(a1, 2 * (int64_t)(64 * (v130 * (v105 * v136 + (int32_t)v115) + (int32_t)v135 + (int32_t)((0x100000000 * v134 >> 32) * v139))) + v131, v100 + 1680 * (int64_t)v132, v124) == 0) {
                            // break (via goto) -> 0x140004e65
                            goto lab_0x140004e65_8;
                        }
                        // 0x140005334
                        v133 = *v123;
                        v134 = v133;
                        v135 = v135 + 1 & 0xffffffff;
                        v105 = *v120;
                        v106 = v105;
                        v107 = v133;
                    }
                }
                // 0x140005340
                v111 = v106;
                v129 = v115 + 1;
                while (v111 > (int32_t)v129) {
                    // 0x1400052d0
                    v115 = v129 & 0xffffffff;
                    v110 = v107;
                    v109 = v111;
                    v106 = v109;
                    v107 = v110;
                    if (v110 >= 1) {
                        // 0x1400052e0
                        v135 = 0;
                        v130 = *v125;
                        v131 = *v126;
                        v132 = *v127;
                        if ((int32_t)function_1400033e0(a1, 2 * (int64_t)(64 * (v130 * (v109 * v136 + (int32_t)v115) + (int32_t)v135 + (int32_t)((0x100000000 * (int64_t)v110 >> 32) * v139))) + v131, v100 + 1680 * (int64_t)v132, v124) == 0) {
                            // break (via goto) -> 0x140004e65
                            goto lab_0x140004e65_8;
                        }
                        // 0x140005334
                        v133 = *v123;
                        v134 = v133;
                        v135 = v135 + 1 & 0xffffffff;
                        v105 = *v120;
                        v106 = v105;
                        v107 = v133;
                        while (v135 < v134) {
                            // 0x1400052e0
                            v130 = *v125;
                            v131 = *v126;
                            v132 = *v127;
                            if ((int32_t)function_1400033e0(a1, 2 * (int64_t)(64 * (v130 * (v105 * v136 + (int32_t)v115) + (int32_t)v135 + (int32_t)((0x100000000 * v134 >> 32) * v139))) + v131, v100 + 1680 * (int64_t)v132, v124) == 0) {
                                // break (via goto) -> 0x140004e65
                                goto lab_0x140004e65_8;
                            }
                            // 0x140005334
                            v133 = *v123;
                            v134 = v133;
                            v135 = v135 + 1 & 0xffffffff;
                            v105 = *v120;
                            v106 = v105;
                            v107 = v133;
                        }
                    }
                    // 0x140005340
                    v111 = v106;
                    v129 = v115 + 1;
                }
                // 0x14000534a
                v108 = *v11;
            }
            // 0x14000534a
            v112 = v108;
            v122 = 1;
            v116 += 4;
            v113 = v122 & 0xffffffff;
            while (v112 > (int32_t)v122) {
                // 0x1400052b0
                v118 = (int64_t)*(int32_t *)v116;
                v119 = 96 * v118 + a1;
                v120 = (int32_t *)(v119 + 0x46a8);
                v121 = *v120;
                v108 = v112;
                if (v121 >= 1) {
                    // 0x1400052d0
                    v123 = (int32_t *)(v119 + 0x46a4);
                    v124 = v118 & 0xffffffff;
                    v125 = (int32_t *)(v119 + 0x46f8);
                    v126 = (int64_t *)(v119 + 0x46f0);
                    v127 = (int32_t *)(v119 + 0x46b0);
                    v115 = 0;
                    v110 = *v123;
                    v109 = v121;
                    v106 = v109;
                    v107 = v110;
                    if (v110 >= 1) {
                        // 0x1400052e0
                        v135 = 0;
                        v130 = *v125;
                        v131 = *v126;
                        v132 = *v127;
                        if ((int32_t)function_1400033e0(a1, 2 * (int64_t)(64 * (v130 * (v109 * v136 + (int32_t)v115) + (int32_t)v135 + (int32_t)((0x100000000 * (int64_t)v110 >> 32) * v139))) + v131, v100 + 1680 * (int64_t)v132, v124) == 0) {
                            // break (via goto) -> 0x140004e65
                            goto lab_0x140004e65_8;
                        }
                        // 0x140005334
                        v133 = *v123;
                        v134 = v133;
                        v135 = v135 + 1 & 0xffffffff;
                        v105 = *v120;
                        v106 = v105;
                        v107 = v133;
                        while (v135 < v134) {
                            // 0x1400052e0
                            v130 = *v125;
                            v131 = *v126;
                            v132 = *v127;
                            if ((int32_t)function_1400033e0(a1, 2 * (int64_t)(64 * (v130 * (v105 * v136 + (int32_t)v115) + (int32_t)v135 + (int32_t)((0x100000000 * v134 >> 32) * v139))) + v131, v100 + 1680 * (int64_t)v132, v124) == 0) {
                                // break (via goto) -> 0x140004e65
                                goto lab_0x140004e65_8;
                            }
                            // 0x140005334
                            v133 = *v123;
                            v134 = v133;
                            v135 = v135 + 1 & 0xffffffff;
                            v105 = *v120;
                            v106 = v105;
                            v107 = v133;
                        }
                    }
                    // 0x140005340
                    v111 = v106;
                    v129 = v115 + 1;
                    while (v111 > (int32_t)v129) {
                        // 0x1400052d0
                        v115 = v129 & 0xffffffff;
                        v110 = v107;
                        v109 = v111;
                        v106 = v109;
                        v107 = v110;
                        if (v110 >= 1) {
                            // 0x1400052e0
                            v135 = 0;
                            v130 = *v125;
                            v131 = *v126;
                            v132 = *v127;
                            if ((int32_t)function_1400033e0(a1, 2 * (int64_t)(64 * (v130 * (v109 * v136 + (int32_t)v115) + (int32_t)v135 + (int32_t)((0x100000000 * (int64_t)v110 >> 32) * v139))) + v131, v100 + 1680 * (int64_t)v132, v124) == 0) {
                                // break (via goto) -> 0x140004e65
                                goto lab_0x140004e65_8;
                            }
                            // 0x140005334
                            v133 = *v123;
                            v134 = v133;
                            v135 = v135 + 1 & 0xffffffff;
                            v105 = *v120;
                            v106 = v105;
                            v107 = v133;
                            while (v135 < v134) {
                                // 0x1400052e0
                                v130 = *v125;
                                v131 = *v126;
                                v132 = *v127;
                                if ((int32_t)function_1400033e0(a1, 2 * (int64_t)(64 * (v130 * (v105 * v136 + (int32_t)v115) + (int32_t)v135 + (int32_t)((0x100000000 * v134 >> 32) * v139))) + v131, v100 + 1680 * (int64_t)v132, v124) == 0) {
                                    // break (via goto) -> 0x140004e65
                                    goto lab_0x140004e65_8;
                                }
                                // 0x140005334
                                v133 = *v123;
                                v134 = v133;
                                v135 = v135 + 1 & 0xffffffff;
                                v105 = *v120;
                                v106 = v105;
                                v107 = v133;
                            }
                        }
                        // 0x140005340
                        v111 = v106;
                        v129 = v115 + 1;
                    }
                    // 0x14000534a
                    v108 = *v11;
                }
                // 0x14000534a
                v112 = v108;
                v122 = v113 + 1;
                v116 += 4;
                v113 = v122 & 0xffffffff;
            }
        }
        // 0x140005368
        v138 = *v13 - 1;
        *v13 = v138;
        if (v138 >= 0 != v138 != 0) {
            // 0x14000537b
            if (*(int32_t *)(a1 + 0x4824) <= 23) {
                // 0x140005384
                function_140002dd0(a1);
            }
            // 0x14000538c
            if ((*v9 & -8) != -48) {
                // break (via goto) -> 0x140004e65
                goto lab_0x140004e65_8;
            }
            // 0x14000539d
            *v1 = 0;
            *v2 = 0;
            *v3 = 0;
            *v4 = 0;
            v128 = *v5;
            *v7 = 0;
            *v8 = 0;
            *v13 = v128 != 0 ? v128 : 0x7fffffff;
            *v9 = -1;
            *v10 = 0;
        }
        // 0x140005401
        v117 = v114 + 1;
        v104 = *v99;
        while (v104 > (int32_t)v117) {
            // 0x140005290
            v114 = v117 & 0xffffffff;
            v137 = *v11;
            if (v137 >= 1) {
                // 0x1400052a0
                v139 = 0x100000000 * v114 >> 32;
                v116 = a1 + 0x4858;
                v118 = (int64_t)*(int32_t *)v116;
                v119 = 96 * v118 + a1;
                v120 = (int32_t *)(v119 + 0x46a8);
                v121 = *v120;
                v108 = v137;
                if (v121 >= 1) {
                    // 0x1400052d0
                    v123 = (int32_t *)(v119 + 0x46a4);
                    v124 = v118 & 0xffffffff;
                    v125 = (int32_t *)(v119 + 0x46f8);
                    v126 = (int64_t *)(v119 + 0x46f0);
                    v127 = (int32_t *)(v119 + 0x46b0);
                    v115 = 0;
                    v110 = *v123;
                    v109 = v121;
                    v106 = v109;
                    v107 = v110;
                    if (v110 >= 1) {
                        // 0x1400052e0
                        v135 = 0;
                        v130 = *v125;
                        v131 = *v126;
                        v132 = *v127;
                        if ((int32_t)function_1400033e0(a1, 2 * (int64_t)(64 * (v130 * (v109 * v136 + (int32_t)v115) + (int32_t)v135 + (int32_t)((0x100000000 * (int64_t)v110 >> 32) * v139))) + v131, v100 + 1680 * (int64_t)v132, v124) == 0) {
                            // break (via goto) -> 0x140004e65
                            goto lab_0x140004e65_8;
                        }
                        // 0x140005334
                        v133 = *v123;
                        v134 = v133;
                        v135 = v135 + 1 & 0xffffffff;
                        v105 = *v120;
                        v106 = v105;
                        v107 = v133;
                        while (v135 < v134) {
                            // 0x1400052e0
                            v130 = *v125;
                            v131 = *v126;
                            v132 = *v127;
                            if ((int32_t)function_1400033e0(a1, 2 * (int64_t)(64 * (v130 * (v105 * v136 + (int32_t)v115) + (int32_t)v135 + (int32_t)((0x100000000 * v134 >> 32) * v139))) + v131, v100 + 1680 * (int64_t)v132, v124) == 0) {
                                // break (via goto) -> 0x140004e65
                                goto lab_0x140004e65_8;
                            }
                            // 0x140005334
                            v133 = *v123;
                            v134 = v133;
                            v135 = v135 + 1 & 0xffffffff;
                            v105 = *v120;
                            v106 = v105;
                            v107 = v133;
                        }
                    }
                    // 0x140005340
                    v111 = v106;
                    v129 = v115 + 1;
                    while (v111 > (int32_t)v129) {
                        // 0x1400052d0
                        v115 = v129 & 0xffffffff;
                        v110 = v107;
                        v109 = v111;
                        v106 = v109;
                        v107 = v110;
                        if (v110 >= 1) {
                            // 0x1400052e0
                            v135 = 0;
                            v130 = *v125;
                            v131 = *v126;
                            v132 = *v127;
                            if ((int32_t)function_1400033e0(a1, 2 * (int64_t)(64 * (v130 * (v109 * v136 + (int32_t)v115) + (int32_t)v135 + (int32_t)((0x100000000 * (int64_t)v110 >> 32) * v139))) + v131, v100 + 1680 * (int64_t)v132, v124) == 0) {
                                // break (via goto) -> 0x140004e65
                                goto lab_0x140004e65_8;
                            }
                            // 0x140005334
                            v133 = *v123;
                            v134 = v133;
                            v135 = v135 + 1 & 0xffffffff;
                            v105 = *v120;
                            v106 = v105;
                            v107 = v133;
                            while (v135 < v134) {
                                // 0x1400052e0
                                v130 = *v125;
                                v131 = *v126;
                                v132 = *v127;
                                if ((int32_t)function_1400033e0(a1, 2 * (int64_t)(64 * (v130 * (v105 * v136 + (int32_t)v115) + (int32_t)v135 + (int32_t)((0x100000000 * v134 >> 32) * v139))) + v131, v100 + 1680 * (int64_t)v132, v124) == 0) {
                                    // break (via goto) -> 0x140004e65
                                    goto lab_0x140004e65_8;
                                }
                                // 0x140005334
                                v133 = *v123;
                                v134 = v133;
                                v135 = v135 + 1 & 0xffffffff;
                                v105 = *v120;
                                v106 = v105;
                                v107 = v133;
                            }
                        }
                        // 0x140005340
                        v111 = v106;
                        v129 = v115 + 1;
                    }
                    // 0x14000534a
                    v108 = *v11;
                }
                // 0x14000534a
                v112 = v108;
                v122 = 1;
                v116 += 4;
                v113 = v122 & 0xffffffff;
                while (v112 > (int32_t)v122) {
                    // 0x1400052b0
                    v118 = (int64_t)*(int32_t *)v116;
                    v119 = 96 * v118 + a1;
                    v120 = (int32_t *)(v119 + 0x46a8);
                    v121 = *v120;
                    v108 = v112;
                    if (v121 >= 1) {
                        // 0x1400052d0
                        v123 = (int32_t *)(v119 + 0x46a4);
                        v124 = v118 & 0xffffffff;
                        v125 = (int32_t *)(v119 + 0x46f8);
                        v126 = (int64_t *)(v119 + 0x46f0);
                        v127 = (int32_t *)(v119 + 0x46b0);
                        v115 = 0;
                        v110 = *v123;
                        v109 = v121;
                        v106 = v109;
                        v107 = v110;
                        if (v110 >= 1) {
                            // 0x1400052e0
                            v135 = 0;
                            v130 = *v125;
                            v131 = *v126;
                            v132 = *v127;
                            if ((int32_t)function_1400033e0(a1, 2 * (int64_t)(64 * (v130 * (v109 * v136 + (int32_t)v115) + (int32_t)v135 + (int32_t)((0x100000000 * (int64_t)v110 >> 32) * v139))) + v131, v100 + 1680 * (int64_t)v132, v124) == 0) {
                                // break (via goto) -> 0x140004e65
                                goto lab_0x140004e65_8;
                            }
                            // 0x140005334
                            v133 = *v123;
                            v134 = v133;
                            v135 = v135 + 1 & 0xffffffff;
                            v105 = *v120;
                            v106 = v105;
                            v107 = v133;
                            while (v135 < v134) {
                                // 0x1400052e0
                                v130 = *v125;
                                v131 = *v126;
                                v132 = *v127;
                                if ((int32_t)function_1400033e0(a1, 2 * (int64_t)(64 * (v130 * (v105 * v136 + (int32_t)v115) + (int32_t)v135 + (int32_t)((0x100000000 * v134 >> 32) * v139))) + v131, v100 + 1680 * (int64_t)v132, v124) == 0) {
                                    // break (via goto) -> 0x140004e65
                                    goto lab_0x140004e65_8;
                                }
                                // 0x140005334
                                v133 = *v123;
                                v134 = v133;
                                v135 = v135 + 1 & 0xffffffff;
                                v105 = *v120;
                                v106 = v105;
                                v107 = v133;
                            }
                        }
                        // 0x140005340
                        v111 = v106;
                        v129 = v115 + 1;
                        while (v111 > (int32_t)v129) {
                            // 0x1400052d0
                            v115 = v129 & 0xffffffff;
                            v110 = v107;
                            v109 = v111;
                            v106 = v109;
                            v107 = v110;
                            if (v110 >= 1) {
                                // 0x1400052e0
                                v135 = 0;
                                v130 = *v125;
                                v131 = *v126;
                                v132 = *v127;
                                if ((int32_t)function_1400033e0(a1, 2 * (int64_t)(64 * (v130 * (v109 * v136 + (int32_t)v115) + (int32_t)v135 + (int32_t)((0x100000000 * (int64_t)v110 >> 32) * v139))) + v131, v100 + 1680 * (int64_t)v132, v124) == 0) {
                                    // break (via goto) -> 0x140004e65
                                    goto lab_0x140004e65_8;
                                }
                                // 0x140005334
                                v133 = *v123;
                                v134 = v133;
                                v135 = v135 + 1 & 0xffffffff;
                                v105 = *v120;
                                v106 = v105;
                                v107 = v133;
                                while (v135 < v134) {
                                    // 0x1400052e0
                                    v130 = *v125;
                                    v131 = *v126;
                                    v132 = *v127;
                                    if ((int32_t)function_1400033e0(a1, 2 * (int64_t)(64 * (v130 * (v105 * v136 + (int32_t)v115) + (int32_t)v135 + (int32_t)((0x100000000 * v134 >> 32) * v139))) + v131, v100 + 1680 * (int64_t)v132, v124) == 0) {
                                        // break (via goto) -> 0x140004e65
                                        goto lab_0x140004e65_8;
                                    }
                                    // 0x140005334
                                    v133 = *v123;
                                    v134 = v133;
                                    v135 = v135 + 1 & 0xffffffff;
                                    v105 = *v120;
                                    v106 = v105;
                                    v107 = v133;
                                }
                            }
                            // 0x140005340
                            v111 = v106;
                            v129 = v115 + 1;
                        }
                        // 0x14000534a
                        v108 = *v11;
                    }
                    // 0x14000534a
                    v112 = v108;
                    v122 = v113 + 1;
                    v116 += 4;
                    v113 = v122 & 0xffffffff;
                }
            }
            // 0x140005368
            v138 = *v13 - 1;
            *v13 = v138;
            if (v138 >= 0 != v138 != 0) {
                // 0x14000537b
                if (*(int32_t *)(a1 + 0x4824) <= 23) {
                    // 0x140005384
                    function_140002dd0(a1);
                }
                // 0x14000538c
                if ((*v9 & -8) != -48) {
                    // break (via goto) -> 0x140004e65
                    goto lab_0x140004e65_8;
                }
                // 0x14000539d
                *v1 = 0;
                *v2 = 0;
                *v3 = 0;
                *v4 = 0;
                v128 = *v5;
                *v7 = 0;
                *v8 = 0;
                *v13 = v128 != 0 ? v128 : 0x7fffffff;
                *v9 = -1;
                *v10 = 0;
            }
            // 0x140005401
            v117 = v114 + 1;
            v104 = *v99;
        }
        // 0x140005411
        v103 = *v97;
    }
    // 0x140005411
    v101 = v104;
    int64_t v140 = v102 + 1; // 0x140005411
    while (v103 > (int32_t)v140) {
        // 0x140005280
        v102 = v140 & 0xffffffff;
        int32_t v141 = v101; // 0x14000528a
        if (v101 >= 1) {
            // 0x140005290
            v136 = v102;
            v114 = 0;
            v137 = *v11;
            if (v137 >= 1) {
                // 0x1400052a0
                v139 = 0x100000000 * v114 >> 32;
                v116 = a1 + 0x4858;
                v118 = (int64_t)*(int32_t *)v116;
                v119 = 96 * v118 + a1;
                v120 = (int32_t *)(v119 + 0x46a8);
                v121 = *v120;
                v108 = v137;
                if (v121 >= 1) {
                    // 0x1400052d0
                    v123 = (int32_t *)(v119 + 0x46a4);
                    v124 = v118 & 0xffffffff;
                    v125 = (int32_t *)(v119 + 0x46f8);
                    v126 = (int64_t *)(v119 + 0x46f0);
                    v127 = (int32_t *)(v119 + 0x46b0);
                    v115 = 0;
                    v110 = *v123;
                    v109 = v121;
                    v106 = v109;
                    v107 = v110;
                    if (v110 >= 1) {
                        // 0x1400052e0
                        v135 = 0;
                        v130 = *v125;
                        v131 = *v126;
                        v132 = *v127;
                        if ((int32_t)function_1400033e0(a1, 2 * (int64_t)(64 * (v130 * (v109 * v136 + (int32_t)v115) + (int32_t)v135 + (int32_t)((0x100000000 * (int64_t)v110 >> 32) * v139))) + v131, v100 + 1680 * (int64_t)v132, v124) == 0) {
                            // break (via goto) -> 0x140004e65
                            goto lab_0x140004e65_8;
                        }
                        // 0x140005334
                        v133 = *v123;
                        v134 = v133;
                        v135 = v135 + 1 & 0xffffffff;
                        v105 = *v120;
                        v106 = v105;
                        v107 = v133;
                        while (v135 < v134) {
                            // 0x1400052e0
                            v130 = *v125;
                            v131 = *v126;
                            v132 = *v127;
                            if ((int32_t)function_1400033e0(a1, 2 * (int64_t)(64 * (v130 * (v105 * v136 + (int32_t)v115) + (int32_t)v135 + (int32_t)((0x100000000 * v134 >> 32) * v139))) + v131, v100 + 1680 * (int64_t)v132, v124) == 0) {
                                // break (via goto) -> 0x140004e65
                                goto lab_0x140004e65_8;
                            }
                            // 0x140005334
                            v133 = *v123;
                            v134 = v133;
                            v135 = v135 + 1 & 0xffffffff;
                            v105 = *v120;
                            v106 = v105;
                            v107 = v133;
                        }
                    }
                    // 0x140005340
                    v111 = v106;
                    v129 = v115 + 1;
                    while (v111 > (int32_t)v129) {
                        // 0x1400052d0
                        v115 = v129 & 0xffffffff;
                        v110 = v107;
                        v109 = v111;
                        v106 = v109;
                        v107 = v110;
                        if (v110 >= 1) {
                            // 0x1400052e0
                            v135 = 0;
                            v130 = *v125;
                            v131 = *v126;
                            v132 = *v127;
                            if ((int32_t)function_1400033e0(a1, 2 * (int64_t)(64 * (v130 * (v109 * v136 + (int32_t)v115) + (int32_t)v135 + (int32_t)((0x100000000 * (int64_t)v110 >> 32) * v139))) + v131, v100 + 1680 * (int64_t)v132, v124) == 0) {
                                // break (via goto) -> 0x140004e65
                                goto lab_0x140004e65_8;
                            }
                            // 0x140005334
                            v133 = *v123;
                            v134 = v133;
                            v135 = v135 + 1 & 0xffffffff;
                            v105 = *v120;
                            v106 = v105;
                            v107 = v133;
                            while (v135 < v134) {
                                // 0x1400052e0
                                v130 = *v125;
                                v131 = *v126;
                                v132 = *v127;
                                if ((int32_t)function_1400033e0(a1, 2 * (int64_t)(64 * (v130 * (v105 * v136 + (int32_t)v115) + (int32_t)v135 + (int32_t)((0x100000000 * v134 >> 32) * v139))) + v131, v100 + 1680 * (int64_t)v132, v124) == 0) {
                                    // break (via goto) -> 0x140004e65
                                    goto lab_0x140004e65_8;
                                }
                                // 0x140005334
                                v133 = *v123;
                                v134 = v133;
                                v135 = v135 + 1 & 0xffffffff;
                                v105 = *v120;
                                v106 = v105;
                                v107 = v133;
                            }
                        }
                        // 0x140005340
                        v111 = v106;
                        v129 = v115 + 1;
                    }
                    // 0x14000534a
                    v108 = *v11;
                }
                // 0x14000534a
                v112 = v108;
                v122 = 1;
                v116 += 4;
                v113 = v122 & 0xffffffff;
                while (v112 > (int32_t)v122) {
                    // 0x1400052b0
                    v118 = (int64_t)*(int32_t *)v116;
                    v119 = 96 * v118 + a1;
                    v120 = (int32_t *)(v119 + 0x46a8);
                    v121 = *v120;
                    v108 = v112;
                    if (v121 >= 1) {
                        // 0x1400052d0
                        v123 = (int32_t *)(v119 + 0x46a4);
                        v124 = v118 & 0xffffffff;
                        v125 = (int32_t *)(v119 + 0x46f8);
                        v126 = (int64_t *)(v119 + 0x46f0);
                        v127 = (int32_t *)(v119 + 0x46b0);
                        v115 = 0;
                        v110 = *v123;
                        v109 = v121;
                        v106 = v109;
                        v107 = v110;
                        if (v110 >= 1) {
                            // 0x1400052e0
                            v135 = 0;
                            v130 = *v125;
                            v131 = *v126;
                            v132 = *v127;
                            if ((int32_t)function_1400033e0(a1, 2 * (int64_t)(64 * (v130 * (v109 * v136 + (int32_t)v115) + (int32_t)v135 + (int32_t)((0x100000000 * (int64_t)v110 >> 32) * v139))) + v131, v100 + 1680 * (int64_t)v132, v124) == 0) {
                                // break (via goto) -> 0x140004e65
                                goto lab_0x140004e65_8;
                            }
                            // 0x140005334
                            v133 = *v123;
                            v134 = v133;
                            v135 = v135 + 1 & 0xffffffff;
                            v105 = *v120;
                            v106 = v105;
                            v107 = v133;
                            while (v135 < v134) {
                                // 0x1400052e0
                                v130 = *v125;
                                v131 = *v126;
                                v132 = *v127;
                                if ((int32_t)function_1400033e0(a1, 2 * (int64_t)(64 * (v130 * (v105 * v136 + (int32_t)v115) + (int32_t)v135 + (int32_t)((0x100000000 * v134 >> 32) * v139))) + v131, v100 + 1680 * (int64_t)v132, v124) == 0) {
                                    // break (via goto) -> 0x140004e65
                                    goto lab_0x140004e65_8;
                                }
                                // 0x140005334
                                v133 = *v123;
                                v134 = v133;
                                v135 = v135 + 1 & 0xffffffff;
                                v105 = *v120;
                                v106 = v105;
                                v107 = v133;
                            }
                        }
                        // 0x140005340
                        v111 = v106;
                        v129 = v115 + 1;
                        while (v111 > (int32_t)v129) {
                            // 0x1400052d0
                            v115 = v129 & 0xffffffff;
                            v110 = v107;
                            v109 = v111;
                            v106 = v109;
                            v107 = v110;
                            if (v110 >= 1) {
                                // 0x1400052e0
                                v135 = 0;
                                v130 = *v125;
                                v131 = *v126;
                                v132 = *v127;
                                if ((int32_t)function_1400033e0(a1, 2 * (int64_t)(64 * (v130 * (v109 * v136 + (int32_t)v115) + (int32_t)v135 + (int32_t)((0x100000000 * (int64_t)v110 >> 32) * v139))) + v131, v100 + 1680 * (int64_t)v132, v124) == 0) {
                                    // break (via goto) -> 0x140004e65
                                    goto lab_0x140004e65_8;
                                }
                                // 0x140005334
                                v133 = *v123;
                                v134 = v133;
                                v135 = v135 + 1 & 0xffffffff;
                                v105 = *v120;
                                v106 = v105;
                                v107 = v133;
                                while (v135 < v134) {
                                    // 0x1400052e0
                                    v130 = *v125;
                                    v131 = *v126;
                                    v132 = *v127;
                                    if ((int32_t)function_1400033e0(a1, 2 * (int64_t)(64 * (v130 * (v105 * v136 + (int32_t)v115) + (int32_t)v135 + (int32_t)((0x100000000 * v134 >> 32) * v139))) + v131, v100 + 1680 * (int64_t)v132, v124) == 0) {
                                        // break (via goto) -> 0x140004e65
                                        goto lab_0x140004e65_8;
                                    }
                                    // 0x140005334
                                    v133 = *v123;
                                    v134 = v133;
                                    v135 = v135 + 1 & 0xffffffff;
                                    v105 = *v120;
                                    v106 = v105;
                                    v107 = v133;
                                }
                            }
                            // 0x140005340
                            v111 = v106;
                            v129 = v115 + 1;
                        }
                        // 0x14000534a
                        v108 = *v11;
                    }
                    // 0x14000534a
                    v112 = v108;
                    v122 = v113 + 1;
                    v116 += 4;
                    v113 = v122 & 0xffffffff;
                }
            }
            // 0x140005368
            v138 = *v13 - 1;
            *v13 = v138;
            if (v138 >= 0 != v138 != 0) {
                // 0x14000537b
                if (*(int32_t *)(a1 + 0x4824) <= 23) {
                    // 0x140005384
                    function_140002dd0(a1);
                }
                // 0x14000538c
                if ((*v9 & -8) != -48) {
                    // break (via goto) -> 0x140004e65
                    goto lab_0x140004e65_8;
                }
                // 0x14000539d
                *v1 = 0;
                *v2 = 0;
                *v3 = 0;
                *v4 = 0;
                v128 = *v5;
                *v7 = 0;
                *v8 = 0;
                *v13 = v128 != 0 ? v128 : 0x7fffffff;
                *v9 = -1;
                *v10 = 0;
            }
            // 0x140005401
            v117 = v114 + 1;
            v104 = *v99;
            while (v104 > (int32_t)v117) {
                // 0x140005290
                v114 = v117 & 0xffffffff;
                v137 = *v11;
                if (v137 >= 1) {
                    // 0x1400052a0
                    v139 = 0x100000000 * v114 >> 32;
                    v116 = a1 + 0x4858;
                    v118 = (int64_t)*(int32_t *)v116;
                    v119 = 96 * v118 + a1;
                    v120 = (int32_t *)(v119 + 0x46a8);
                    v121 = *v120;
                    v108 = v137;
                    if (v121 >= 1) {
                        // 0x1400052d0
                        v123 = (int32_t *)(v119 + 0x46a4);
                        v124 = v118 & 0xffffffff;
                        v125 = (int32_t *)(v119 + 0x46f8);
                        v126 = (int64_t *)(v119 + 0x46f0);
                        v127 = (int32_t *)(v119 + 0x46b0);
                        v115 = 0;
                        v110 = *v123;
                        v109 = v121;
                        v106 = v109;
                        v107 = v110;
                        if (v110 >= 1) {
                            // 0x1400052e0
                            v135 = 0;
                            v130 = *v125;
                            v131 = *v126;
                            v132 = *v127;
                            if ((int32_t)function_1400033e0(a1, 2 * (int64_t)(64 * (v130 * (v109 * v136 + (int32_t)v115) + (int32_t)v135 + (int32_t)((0x100000000 * (int64_t)v110 >> 32) * v139))) + v131, v100 + 1680 * (int64_t)v132, v124) == 0) {
                                // break (via goto) -> 0x140004e65
                                goto lab_0x140004e65_8;
                            }
                            // 0x140005334
                            v133 = *v123;
                            v134 = v133;
                            v135 = v135 + 1 & 0xffffffff;
                            v105 = *v120;
                            v106 = v105;
                            v107 = v133;
                            while (v135 < v134) {
                                // 0x1400052e0
                                v130 = *v125;
                                v131 = *v126;
                                v132 = *v127;
                                if ((int32_t)function_1400033e0(a1, 2 * (int64_t)(64 * (v130 * (v105 * v136 + (int32_t)v115) + (int32_t)v135 + (int32_t)((0x100000000 * v134 >> 32) * v139))) + v131, v100 + 1680 * (int64_t)v132, v124) == 0) {
                                    // break (via goto) -> 0x140004e65
                                    goto lab_0x140004e65_8;
                                }
                                // 0x140005334
                                v133 = *v123;
                                v134 = v133;
                                v135 = v135 + 1 & 0xffffffff;
                                v105 = *v120;
                                v106 = v105;
                                v107 = v133;
                            }
                        }
                        // 0x140005340
                        v111 = v106;
                        v129 = v115 + 1;
                        while (v111 > (int32_t)v129) {
                            // 0x1400052d0
                            v115 = v129 & 0xffffffff;
                            v110 = v107;
                            v109 = v111;
                            v106 = v109;
                            v107 = v110;
                            if (v110 >= 1) {
                                // 0x1400052e0
                                v135 = 0;
                                v130 = *v125;
                                v131 = *v126;
                                v132 = *v127;
                                if ((int32_t)function_1400033e0(a1, 2 * (int64_t)(64 * (v130 * (v109 * v136 + (int32_t)v115) + (int32_t)v135 + (int32_t)((0x100000000 * (int64_t)v110 >> 32) * v139))) + v131, v100 + 1680 * (int64_t)v132, v124) == 0) {
                                    // break (via goto) -> 0x140004e65
                                    goto lab_0x140004e65_8;
                                }
                                // 0x140005334
                                v133 = *v123;
                                v134 = v133;
                                v135 = v135 + 1 & 0xffffffff;
                                v105 = *v120;
                                v106 = v105;
                                v107 = v133;
                                while (v135 < v134) {
                                    // 0x1400052e0
                                    v130 = *v125;
                                    v131 = *v126;
                                    v132 = *v127;
                                    if ((int32_t)function_1400033e0(a1, 2 * (int64_t)(64 * (v130 * (v105 * v136 + (int32_t)v115) + (int32_t)v135 + (int32_t)((0x100000000 * v134 >> 32) * v139))) + v131, v100 + 1680 * (int64_t)v132, v124) == 0) {
                                        // break (via goto) -> 0x140004e65
                                        goto lab_0x140004e65_8;
                                    }
                                    // 0x140005334
                                    v133 = *v123;
                                    v134 = v133;
                                    v135 = v135 + 1 & 0xffffffff;
                                    v105 = *v120;
                                    v106 = v105;
                                    v107 = v133;
                                }
                            }
                            // 0x140005340
                            v111 = v106;
                            v129 = v115 + 1;
                        }
                        // 0x14000534a
                        v108 = *v11;
                    }
                    // 0x14000534a
                    v112 = v108;
                    v122 = 1;
                    v116 += 4;
                    v113 = v122 & 0xffffffff;
                    while (v112 > (int32_t)v122) {
                        // 0x1400052b0
                        v118 = (int64_t)*(int32_t *)v116;
                        v119 = 96 * v118 + a1;
                        v120 = (int32_t *)(v119 + 0x46a8);
                        v121 = *v120;
                        v108 = v112;
                        if (v121 >= 1) {
                            // 0x1400052d0
                            v123 = (int32_t *)(v119 + 0x46a4);
                            v124 = v118 & 0xffffffff;
                            v125 = (int32_t *)(v119 + 0x46f8);
                            v126 = (int64_t *)(v119 + 0x46f0);
                            v127 = (int32_t *)(v119 + 0x46b0);
                            v115 = 0;
                            v110 = *v123;
                            v109 = v121;
                            v106 = v109;
                            v107 = v110;
                            if (v110 >= 1) {
                                // 0x1400052e0
                                v135 = 0;
                                v130 = *v125;
                                v131 = *v126;
                                v132 = *v127;
                                if ((int32_t)function_1400033e0(a1, 2 * (int64_t)(64 * (v130 * (v109 * v136 + (int32_t)v115) + (int32_t)v135 + (int32_t)((0x100000000 * (int64_t)v110 >> 32) * v139))) + v131, v100 + 1680 * (int64_t)v132, v124) == 0) {
                                    // break (via goto) -> 0x140004e65
                                    goto lab_0x140004e65_8;
                                }
                                // 0x140005334
                                v133 = *v123;
                                v134 = v133;
                                v135 = v135 + 1 & 0xffffffff;
                                v105 = *v120;
                                v106 = v105;
                                v107 = v133;
                                while (v135 < v134) {
                                    // 0x1400052e0
                                    v130 = *v125;
                                    v131 = *v126;
                                    v132 = *v127;
                                    if ((int32_t)function_1400033e0(a1, 2 * (int64_t)(64 * (v130 * (v105 * v136 + (int32_t)v115) + (int32_t)v135 + (int32_t)((0x100000000 * v134 >> 32) * v139))) + v131, v100 + 1680 * (int64_t)v132, v124) == 0) {
                                        // break (via goto) -> 0x140004e65
                                        goto lab_0x140004e65_8;
                                    }
                                    // 0x140005334
                                    v133 = *v123;
                                    v134 = v133;
                                    v135 = v135 + 1 & 0xffffffff;
                                    v105 = *v120;
                                    v106 = v105;
                                    v107 = v133;
                                }
                            }
                            // 0x140005340
                            v111 = v106;
                            v129 = v115 + 1;
                            while (v111 > (int32_t)v129) {
                                // 0x1400052d0
                                v115 = v129 & 0xffffffff;
                                v110 = v107;
                                v109 = v111;
                                v106 = v109;
                                v107 = v110;
                                if (v110 >= 1) {
                                    // 0x1400052e0
                                    v135 = 0;
                                    v130 = *v125;
                                    v131 = *v126;
                                    v132 = *v127;
                                    if ((int32_t)function_1400033e0(a1, 2 * (int64_t)(64 * (v130 * (v109 * v136 + (int32_t)v115) + (int32_t)v135 + (int32_t)((0x100000000 * (int64_t)v110 >> 32) * v139))) + v131, v100 + 1680 * (int64_t)v132, v124) == 0) {
                                        // break (via goto) -> 0x140004e65
                                        goto lab_0x140004e65_8;
                                    }
                                    // 0x140005334
                                    v133 = *v123;
                                    v134 = v133;
                                    v135 = v135 + 1 & 0xffffffff;
                                    v105 = *v120;
                                    v106 = v105;
                                    v107 = v133;
                                    while (v135 < v134) {
                                        // 0x1400052e0
                                        v130 = *v125;
                                        v131 = *v126;
                                        v132 = *v127;
                                        if ((int32_t)function_1400033e0(a1, 2 * (int64_t)(64 * (v130 * (v105 * v136 + (int32_t)v115) + (int32_t)v135 + (int32_t)((0x100000000 * v134 >> 32) * v139))) + v131, v100 + 1680 * (int64_t)v132, v124) == 0) {
                                            // break (via goto) -> 0x140004e65
                                            goto lab_0x140004e65_8;
                                        }
                                        // 0x140005334
                                        v133 = *v123;
                                        v134 = v133;
                                        v135 = v135 + 1 & 0xffffffff;
                                        v105 = *v120;
                                        v106 = v105;
                                        v107 = v133;
                                    }
                                }
                                // 0x140005340
                                v111 = v106;
                                v129 = v115 + 1;
                            }
                            // 0x14000534a
                            v108 = *v11;
                        }
                        // 0x14000534a
                        v112 = v108;
                        v122 = v113 + 1;
                        v116 += 4;
                        v113 = v122 & 0xffffffff;
                    }
                }
                // 0x140005368
                v138 = *v13 - 1;
                *v13 = v138;
                if (v138 >= 0 != v138 != 0) {
                    // 0x14000537b
                    if (*(int32_t *)(a1 + 0x4824) <= 23) {
                        // 0x140005384
                        function_140002dd0(a1);
                    }
                    // 0x14000538c
                    if ((*v9 & -8) != -48) {
                        // break (via goto) -> 0x140004e65
                        goto lab_0x140004e65_8;
                    }
                    // 0x14000539d
                    *v1 = 0;
                    *v2 = 0;
                    *v3 = 0;
                    *v4 = 0;
                    v128 = *v5;
                    *v7 = 0;
                    *v8 = 0;
                    *v13 = v128 != 0 ? v128 : 0x7fffffff;
                    *v9 = -1;
                    *v10 = 0;
                }
                // 0x140005401
                v117 = v114 + 1;
                v104 = *v99;
            }
            // 0x140005411
            v103 = *v97;
            v141 = v104;
        }
        // 0x140005411
        v101 = v141;
        v140 = v102 + 1;
    }
    // 0x140004e65
    __security_check_cookie(g66);
    return &g103;
}

// Address range: 0x140005430 - 0x140005c46
int64_t function_140005430(int64_t a1, int64_t a2) {
    int32_t v1 = a2; // 0x140005463
    switch (v1) {
        case 196: {
            int64_t v2 = function_140001ec0(0) + 0xfffffffe; // 0x140005948
            if ((int32_t)v2 < 1) {
                // 0x140005bf8
                __security_check_cookie(g66);
                return &g103;
            }
            int64_t v3 = v2 & 0xffffffff; // 0x140005430
            uint64_t v4 = *(int64_t *)192; // 0x140005966
            char v5; // 0x140005430
            int64_t v6; // 0x140005993
            if (v4 >= *(int64_t *)200) {
                // 0x140005985
                v5 = 0;
                if (*(int32_t *)48 != 0) {
                    // 0x14000598b
                    function_140001d70(0);
                    v6 = *(int64_t *)192;
                    *(int64_t *)192 = v6 + 1;
                    v5 = *(char *)v6;
                }
            } else {
                // 0x140005976
                *(int64_t *)192 = v4 + 1;
                v5 = *(char *)v4;
            }
            int64_t v7 = v5;
            int64_t v8 = v7 & 15; // 0x1400059b2
            int64_t v9 = 16; // 0x1400059be
            int64_t v10; // bp-120, 0x140005430
            int64_t v11 = &v10; // 0x1400059be
            int64_t v12 = 0; // 0x1400059be
            while ((int32_t)(v7 / 16) < 2 == (int32_t)v8 < 4) {
                int64_t v13 = v7;
                int64_t * v14 = (int64_t *)(v13 + 192); // 0x1400059e3
                uint64_t v15 = *v14; // 0x1400059e3
                int64_t v16; // 0x140005430
                int64_t v17; // 0x140005a10
                if (v15 >= *(int64_t *)(v13 + 200)) {
                    // 0x140005a02
                    if (*(int32_t *)(v13 + 48) == 0) {
                        // 0x140005a26
                        v16 = v13 & -256;
                    } else {
                        // 0x140005a08
                        function_140001d70(v13);
                        v17 = *v14;
                        *v14 = v17 + 1;
                        v16 = (int64_t)*(char *)v17;
                    }
                } else {
                    // 0x1400059f3
                    *v14 = v15 + 1;
                    v16 = (int64_t)*(char *)v15;
                }
                int64_t v18 = v16;
                int64_t v19 = v18 & 255; // 0x140005a28
                *(int32_t *)v11 = (int32_t)v19;
                int64_t v20 = v19 + v12; // 0x140005a2d
                v9--;
                v11 += 4;
                v12 = v20 & 0xffffffff;
                while (v9 != 0) {
                    // 0x1400059e0
                    v13 = v18;
                    v14 = (int64_t *)(v13 + 192);
                    v15 = *v14;
                    if (v15 >= *(int64_t *)(v13 + 200)) {
                        // 0x140005a02
                        if (*(int32_t *)(v13 + 48) == 0) {
                            // 0x140005a26
                            v16 = v13 & -256;
                        } else {
                            // 0x140005a08
                            function_140001d70(v13);
                            v17 = *v14;
                            *v14 = v17 + 1;
                            v16 = (int64_t)*(char *)v17;
                        }
                    } else {
                        // 0x1400059f3
                        *v14 = v15 + 1;
                        v16 = (int64_t)*(char *)v15;
                    }
                    // 0x140005a28
                    v18 = v16;
                    v19 = v18 & 255;
                    *(int32_t *)v11 = (int32_t)v19;
                    v20 = v19 + v12;
                    v9--;
                    v11 += 4;
                    v12 = v20 & 0xffffffff;
                }
                int64_t v21 = 1680 * v8 + a1; // 0x140005a57
                int64_t v22; // 0x140005430
                if (v5 >= 16) {
                    int64_t v23 = function_140002c10(v21 + 0x1a48, &v10); // 0x140005a80
                    v22 = 0x1e48;
                    if ((int32_t)v23 == 0) {
                        // 0x140005bf8
                        __security_check_cookie(g66);
                        return &g103;
                    }
                } else {
                    int64_t v24 = function_140002c10(v21 + 8, &v10); // 0x140005a64
                    v22 = 1032;
                    if ((int32_t)v24 == 0) {
                        // 0x140005bf8
                        __security_check_cookie(g66);
                        return &g103;
                    }
                }
                uint32_t v25 = (int32_t)v20; // 0x140005a3e
                if (v25 >= 1) {
                    int64_t v26 = 0; // 0x140005af0
                    int64_t v27 = 0;
                    int64_t * v28 = (int64_t *)(v27 + 192); // 0x140005aa7
                    uint64_t v29 = *v28; // 0x140005aa7
                    int64_t v30; // 0x140005430
                    int64_t v31; // 0x140005ad4
                    if (v29 >= *(int64_t *)(v27 + 200)) {
                        // 0x140005ac6
                        if (*(int32_t *)(v27 + 48) == 0) {
                            // 0x140005aea
                            v30 = v27 & -256;
                        } else {
                            // 0x140005acc
                            function_140001d70(v27);
                            v31 = *v28;
                            *v28 = v31 + 1;
                            v30 = (int64_t)*(char *)v31;
                        }
                    } else {
                        // 0x140005ab7
                        *v28 = v29 + 1;
                        v30 = (int64_t)*(char *)v29;
                    }
                    int64_t v32 = v30;
                    *(char *)(v22 + v21 + v26) = (char)v32;
                    v26++;
                    while (v26 != 0x100000000 * v20 >> 32) {
                        // 0x140005aa4
                        v27 = v32;
                        v28 = (int64_t *)(v27 + 192);
                        v29 = *v28;
                        if (v29 >= *(int64_t *)(v27 + 200)) {
                            // 0x140005ac6
                            if (*(int32_t *)(v27 + 48) == 0) {
                                // 0x140005aea
                                v30 = v27 & -256;
                            } else {
                                // 0x140005acc
                                function_140001d70(v27);
                                v31 = *v28;
                                *v28 = v31 + 1;
                                v30 = (int64_t)*(char *)v31;
                            }
                        } else {
                            // 0x140005ab7
                            *v28 = v29 + 1;
                            v30 = (int64_t)*(char *)v29;
                        }
                        // 0x140005aec
                        v32 = v30;
                        *(char *)(v22 + v21 + v26) = (char)v32;
                        v26++;
                    }
                }
                if (v5 >= 16) {
                    int64_t v33 = v21 + 0x1a48; // 0x140005b1c
                    int64_t v34 = a1 + 0x3688 + 1024 * v8; // 0x140005b1c
                    int64_t v35 = 0;
                    unsigned char v36 = *(char *)v33; // 0x140005b20
                    int16_t * v37 = (int16_t *)v34; // 0x140005b23
                    *v37 = 0;
                    int64_t v38; // 0x140005430
                    int64_t v39; // 0x140005430
                    int64_t v40; // 0x140005430
                    int64_t v41; // 0x140005430
                    int64_t v42; // 0x140005430
                    int64_t v43; // 0x140005430
                    int64_t v44; // 0x140005430
                    unsigned char v45; // 0x140005b2f
                    unsigned char v46; // 0x140005430
                    unsigned char v47; // 0x140005b38
                    int64_t v48; // 0x140005b38
                    int64_t v49; // 0x140005b47
                    unsigned char v50; // 0x140005430
                    int64_t v51; // 0x140005b63
                    unsigned char v52; // 0x140005430
                    unsigned char v53; // 0x140005430
                    if (v36 != -1) {
                        // 0x140005b2f
                        v44 = v21 + (int64_t)v36;
                        v45 = *(char *)(v44 + 0x1e48);
                        v46 = v45 & 15;
                        if (v46 != 0) {
                            // 0x140005b4d
                            v47 = *(char *)(v44 + 0x1f48);
                            v48 = v47;
                            v49 = v46;
                            if ((int32_t)(v48 + v49) < 10) {
                                // 0x140005b56
                                v50 = v47 & 31;
                                v43 = v50 == 0 ? v35 : (int64_t)((int32_t)v35 << (int32_t)v50);
                                v51 = v43 & 511;
                                v52 = 9 - v46 & 31;
                                v38 = v51;
                                if (v52 != 0) {
                                    v38 = (int32_t)v51 >> (int32_t)v52;
                                }
                                v39 = v38;
                                v53 = v46 + 31 & 31;
                                v42 = 1;
                                if (v53 != 0) {
                                    v42 = 1 << (int32_t)v53;
                                }
                                v40 = v39;
                                if (v39 < v42) {
                                    // 0x140005b80
                                    v40 = 1 - (int64_t)(1 << (int32_t)v46) + v39 & 0xffffffff;
                                }
                                // 0x140005b94
                                v41 = v40;
                                if ((int32_t)v41 < 128) {
                                    // 0x140005ba2
                                    *v37 = (int16_t)((16 * (16 * v41 | (int64_t)(v45 / 16)) | v49) + v48);
                                }
                            }
                        }
                    }
                    int64_t v54 = v35 + 1; // 0x140005bbe
                    v33++;
                    v34 += 2;
                    while ((int32_t)v54 < 512) {
                        // 0x140005b20
                        v35 = v54 & 0xffffffff;
                        v36 = *(char *)v33;
                        v37 = (int16_t *)v34;
                        *v37 = 0;
                        if (v36 != -1) {
                            // 0x140005b2f
                            v44 = v21 + (int64_t)v36;
                            v45 = *(char *)(v44 + 0x1e48);
                            v46 = v45 & 15;
                            if (v46 != 0) {
                                // 0x140005b4d
                                v47 = *(char *)(v44 + 0x1f48);
                                v48 = v47;
                                v49 = v46;
                                if ((int32_t)(v48 + v49) < 10) {
                                    // 0x140005b56
                                    v50 = v47 & 31;
                                    v43 = v50 == 0 ? v35 : (int64_t)((int32_t)v35 << (int32_t)v50);
                                    v51 = v43 & 511;
                                    v52 = 9 - v46 & 31;
                                    v38 = v51;
                                    if (v52 != 0) {
                                        v38 = (int32_t)v51 >> (int32_t)v52;
                                    }
                                    v39 = v38;
                                    v53 = v46 + 31 & 31;
                                    v42 = 1;
                                    if (v53 != 0) {
                                        v42 = 1 << (int32_t)v53;
                                    }
                                    v40 = v39;
                                    if (v39 < v42) {
                                        // 0x140005b80
                                        v40 = 1 - (int64_t)(1 << (int32_t)v46) + v39 & 0xffffffff;
                                    }
                                    // 0x140005b94
                                    v41 = v40;
                                    if ((int32_t)v41 < 128) {
                                        // 0x140005ba2
                                        *v37 = (int16_t)((16 * (16 * v41 | (int64_t)(v45 / 16)) | v49) + v48);
                                    }
                                }
                            }
                        }
                        // 0x140005bbe
                        v54 = v35 + 1;
                        v33++;
                        v34 += 2;
                    }
                }
                int32_t v55 = (int32_t)v3 - 17 - v25; // 0x140005bda
                v3 = v55;
                if (v55 >= 0 != v55 != 0) {
                    // 0x140005bf8
                    __security_check_cookie(g66);
                    return &g103;
                }
                v4 = *(int64_t *)192;
                if (v4 >= *(int64_t *)200) {
                    // 0x140005985
                    v5 = 0;
                    if (*(int32_t *)48 != 0) {
                        // 0x14000598b
                        function_140001d70(0);
                        v6 = *(int64_t *)192;
                        *(int64_t *)192 = v6 + 1;
                        v5 = *(char *)v6;
                    }
                } else {
                    // 0x140005976
                    *(int64_t *)192 = v4 + 1;
                    v5 = *(char *)v4;
                }
                // 0x1400059ab
                v7 = v5;
                v8 = v7 & 15;
                v9 = 16;
                v11 = &v10;
                v12 = 0;
            }
            // 0x140005c26
            *(int64_t *)(*(int64_t *)__readgsqword(88) + 16) = (int64_t)"bad DHT header";
            // 0x140005bf8
            __security_check_cookie(g66);
            return &g103;
        }
        case 219: {
            int64_t v56 = function_140001ec0(0) + 0xfffffffe; // 0x1400057d3
            if ((int32_t)v56 < 1) {
                // 0x140005bf8
                __security_check_cookie(g66);
                return &g103;
            }
            int64_t v57 = a1 + 0x3488;
            int64_t v58 = v56; // 0x1400058e7
            int64_t v59 = 0;
            int64_t * v60 = (int64_t *)(v59 + 192); // 0x1400057f3
            uint64_t v61 = *v60; // 0x1400057f3
            char v62; // 0x140005430
            int64_t v63; // 0x140005820
            if (v61 >= *(int64_t *)(v59 + 200)) {
                // 0x140005812
                v62 = 0;
                if (*(int32_t *)(v59 || 48) != 0) {
                    // 0x140005818
                    function_140001d70(v59);
                    v63 = *v60;
                    *v60 = v63 + 1;
                    v62 = *(char *)v63;
                }
            } else {
                // 0x140005803
                *v60 = v61 + 1;
                v62 = *(char *)v61;
            }
            int64_t v64 = v62;
            while ((int32_t)(v64 / 16) < 2) {
                int64_t v65 = v64 & 15; // 0x14000583d
                if ((int32_t)v65 >= 4) {
                    // 0x1400058f8
                    *(int64_t *)(*(int64_t *)__readgsqword(88) + 16) = (int64_t)"bad DQT table";
                    goto lab_0x140005bf8;
                }
                int64_t v66 = 64 * v65; // 0x140005855
                int64_t v67 = 0; // 0x14000585f
                int64_t v68 = v64;
                char v69; // 0x140005430
                int64_t v70; // 0x140005430
                int64_t v71; // 0x1400058a0
                int64_t * v72; // 0x140005873
                uint64_t v73; // 0x140005873
                if (v62 < 16) {
                    // 0x140005873
                    v72 = (int64_t *)(v68 + 192);
                    v73 = *v72;
                    if (v73 >= *(int64_t *)(v68 + 200)) {
                        // 0x140005892
                        v69 = 0;
                        if (*(int32_t *)(v68 + 48) != 0) {
                            // 0x140005898
                            function_140001d70(v68);
                            v71 = *v72;
                            *v72 = v71 + 1;
                            v69 = *(char *)v71;
                        }
                    } else {
                        // 0x140005883
                        *v72 = v73 + 1;
                        v69 = *(char *)v73;
                    }
                    // 0x1400058b8
                    v70 = v69;
                } else {
                    // 0x140005867
                    v70 = function_140001ec0(v68) & 0xffffffff;
                }
                int64_t v74 = v70;
                unsigned char v75 = *(char *)(v67 + 0x1400220c0); // 0x1400058bb
                v67++;
                *(int16_t *)(v57 + 2 * (v66 + (int64_t)v75)) = (int16_t)v74;
                while (v67 != 64) {
                    // 0x140005860
                    v68 = v74;
                    if (v62 < 16) {
                        // 0x140005873
                        v72 = (int64_t *)(v68 + 192);
                        v73 = *v72;
                        if (v73 >= *(int64_t *)(v68 + 200)) {
                            // 0x140005892
                            v69 = 0;
                            if (*(int32_t *)(v68 + 48) != 0) {
                                // 0x140005898
                                function_140001d70(v68);
                                v71 = *v72;
                                *v72 = v71 + 1;
                                v69 = *(char *)v71;
                            }
                        } else {
                            // 0x140005883
                            *v72 = v73 + 1;
                            v69 = *(char *)v73;
                        }
                        // 0x1400058b8
                        v70 = v69;
                    } else {
                        // 0x140005867
                        v70 = function_140001ec0(v68) & 0xffffffff;
                    }
                    // 0x1400058bb
                    v74 = v70;
                    v75 = *(char *)(v67 + 0x1400220c0);
                    v67++;
                    *(int16_t *)(v57 + 2 * (v66 + (int64_t)v75)) = (int16_t)v74;
                }
                // 0x1400058d8
                v58 = (v58 & 0xffffffff) - (v62 >= 16 ? 129 : 65);
                int32_t v76 = v58; // 0x1400058ea
                if (v76 >= 0 != v76 != 0) {
                    // 0x140005bf8
                    __security_check_cookie(g66);
                    return &g103;
                }
                v59 = 129;
                v60 = (int64_t *)(v59 + 192);
                v61 = *v60;
                if (v61 >= *(int64_t *)(v59 + 200)) {
                    // 0x140005812
                    v62 = 0;
                    if (*(int32_t *)(v59 || 48) != 0) {
                        // 0x140005818
                        function_140001d70(v59);
                        v63 = *v60;
                        *v60 = v63 + 1;
                        v62 = *(char *)v63;
                    }
                } else {
                    // 0x140005803
                    *v60 = v61 + 1;
                    v62 = *(char *)v61;
                }
                // 0x140005838
                v64 = v62;
            }
            // 0x14000591b
            *(int64_t *)(*(int64_t *)__readgsqword(88) + 16) = (int64_t)"bad DQT type";
            // 0x140005bf8
            __security_check_cookie(g66);
            return &g103;
        }
    }
    int64_t v77 = a2 + 0xffffff23 & 0xffffffff; // 0x14000547a
    switch (v1) {
        case 221: {
            // 0x140005780
            if ((int32_t)function_140001ec0(v77) == 4) {
                // 0x1400057b0
                *(int32_t *)(a1 + 0x4868) = (int32_t)function_140001ec0(v77);
            } else {
                // 0x14000578d
                *(int64_t *)(*(int64_t *)__readgsqword(88) + 16) = (int64_t)"bad DRI len";
            }
            // 0x140005bf8
            __security_check_cookie(g66);
            return &g103;
        }
        case 255: {
            int64_t v78 = __readgsqword(88); // 0x14000575d
            *(int64_t *)(*(int64_t *)v78 + 16) = (int64_t)"expected marker";
            // 0x140005bf8
            __security_check_cookie(g66);
            return &g103;
        }
    }
    if ((a2 & 0xfffffff0) != 224 && v1 != 254) {
        // 0x14000549f
        *(int64_t *)(*(int64_t *)__readgsqword(88) + 16) = (int64_t)"unknown marker";
        // 0x140005bf8
        __security_check_cookie(g66);
        return &g103;
    }
    int64_t v79 = function_140001ec0(v77); // 0x1400054c5
    if ((int32_t)v79 <= 1) {
        int64_t * v80 = (int64_t *)(*(int64_t *)__readgsqword(88) + 16);
        if (v1 != 254) {
            // 0x1400054fc
            *v80 = (int64_t)"bad APP len";
        } else {
            // 0x1400054ea
            *v80 = (int64_t)"bad COM len";
        }
      lab_0x140005bf8:
        // 0x140005bf8
        __security_check_cookie(g66);
        return &g103;
    }
    int64_t v81 = v79 + 0xfffffffe; // 0x14000550e
    int64_t v82 = v81 & 0xffffffff; // 0x14000550e
    int64_t v83; // 0x140005430
    int64_t v84; // 0x140005430
    if (v1 != 224) {
        int64_t v85 = 0; // 0x1400055c3
        v83 = v77;
        v84 = v82;
        if (v1 == 238 && (int32_t)v81 >= 12) {
            int64_t * v86 = (int64_t *)(v77 + 192); // 0x1400055e8
            uint64_t v87 = *v86; // 0x1400055e8
            int64_t v88; // 0x140005430
            int64_t v89; // 0x140005615
            if (v87 >= *(int64_t *)(v77 + 200)) {
                // 0x140005607
                if (*(int32_t *)(v77 + 48) == 0) {
                    // 0x14000562b
                    v88 = v77 & -256;
                } else {
                    // 0x14000560d
                    function_140001d70(v77);
                    v89 = *v86;
                    *v86 = v89 + 1;
                    v88 = (int64_t)*(char *)v89;
                }
            } else {
                // 0x1400055f8
                *v86 = v87 + 1;
                v88 = (int64_t)*(char *)v87;
            }
            int64_t v90 = v88;
            int64_t v91 = *(char *)(v85 + 0x140022bf0) == (char)v90 ? 1 : 0;
            int64_t v92 = v85 + 1; // 0x14000563c
            v85 = v92;
            int64_t v93 = v91; // 0x140005646
            while (v92 != 6) {
                int64_t v94 = v90;
                v86 = (int64_t *)(v94 + 192);
                v87 = *v86;
                if (v87 >= *(int64_t *)(v94 + 200)) {
                    // 0x140005607
                    if (*(int32_t *)(v94 + 48) == 0) {
                        // 0x14000562b
                        v88 = v94 & -256;
                    } else {
                        // 0x14000560d
                        function_140001d70(v94);
                        v89 = *v86;
                        *v86 = v89 + 1;
                        v88 = (int64_t)*(char *)v89;
                    }
                } else {
                    // 0x1400055f8
                    *v86 = v87 + 1;
                    v88 = (int64_t)*(char *)v87;
                }
                // 0x14000562d
                v90 = v88;
                char v95 = *(char *)(v85 + 0x140022bf0); // 0x14000562d
                v91 = v95 == (char)v90 ? v93 : 0;
                v92 = v85 + 1;
                v85 = v92;
                v93 = v91;
            }
            // 0x140005648
            v83 = v90;
            v84 = v79 + 0xfffffff8 & 0xffffffff;
            if ((int32_t)v91 != 0) {
                int64_t * v96 = (int64_t *)(v90 + 192); // 0x140005656
                uint64_t v97 = *v96; // 0x140005656
                int64_t * v98 = (int64_t *)(v90 + 200); // 0x14000565d
                if (v97 >= *v98) {
                    // 0x140005672
                    if (*(int32_t *)(v90 + 48) != 0) {
                        // 0x140005678
                        function_140001d70(v90);
                        *v96 = *v96 + 1;
                    }
                } else {
                    // 0x140005666
                    *v96 = v97 + 1;
                }
                // 0x140005687
                function_140001ec0(v90);
                function_140001ec0(v90);
                uint64_t v99 = *v96; // 0x14000569a
                int64_t v100; // 0x140005430
                if (v99 >= *v98) {
                    // 0x1400056b9
                    if (*(int32_t *)(v90 + 48) == 0) {
                        // 0x1400056dd
                        v100 = v90 & -256;
                    } else {
                        // 0x1400056bf
                        function_140001d70(v90);
                        int64_t v101 = *v96; // 0x1400056c7
                        *v96 = v101 + 1;
                        v100 = (int64_t)*(char *)v101;
                    }
                } else {
                    // 0x1400056aa
                    *v96 = v99 + 1;
                    v100 = (int64_t)*(char *)v99;
                }
                // 0x1400056df
                *(int32_t *)(a1 + 0x484c) = (int32_t)v100 & 255;
                v83 = v100;
                v84 = v79 + 0xfffffff2 & 0xffffffff;
            }
        }
    } else {
        int64_t v102 = 0; // 0x140005520
        v83 = v77;
        v84 = v82;
        if ((int32_t)v81 >= 5) {
            int64_t * v103 = (int64_t *)(v77 + 192); // 0x140005543
            uint64_t v104 = *v103; // 0x140005543
            int64_t v105; // 0x140005430
            int64_t v106; // 0x140005570
            if (v104 >= *(int64_t *)(v77 + 200)) {
                // 0x140005562
                if (*(int32_t *)(v77 + 48) == 0) {
                    // 0x140005586
                    v105 = v77 & -256;
                } else {
                    // 0x140005568
                    function_140001d70(v77);
                    v106 = *v103;
                    *v103 = v106 + 1;
                    v105 = (int64_t)*(char *)v106;
                }
            } else {
                // 0x140005553
                *v103 = v104 + 1;
                v105 = (int64_t)*(char *)v104;
            }
            int64_t v107 = v105;
            int64_t v108 = *(char *)(v102 + 0x1400229d0) == (char)v107 ? 1 : 0;
            int64_t v109 = v102 + 1; // 0x140005597
            v102 = v109;
            int64_t v110 = v108; // 0x1400055a1
            while (v109 != 5) {
                int64_t v111 = v107;
                v103 = (int64_t *)(v111 + 192);
                v104 = *v103;
                if (v104 >= *(int64_t *)(v111 + 200)) {
                    // 0x140005562
                    if (*(int32_t *)(v111 + 48) == 0) {
                        // 0x140005586
                        v105 = v111 & -256;
                    } else {
                        // 0x140005568
                        function_140001d70(v111);
                        v106 = *v103;
                        *v103 = v106 + 1;
                        v105 = (int64_t)*(char *)v106;
                    }
                } else {
                    // 0x140005553
                    *v103 = v104 + 1;
                    v105 = (int64_t)*(char *)v104;
                }
                // 0x140005588
                v107 = v105;
                char v112 = *(char *)(v102 + 0x1400229d0); // 0x140005588
                v108 = v112 == (char)v107 ? v110 : 0;
                v109 = v102 + 1;
                v102 = v109;
                v110 = v108;
            }
            int64_t v113 = v79 + 0xfffffff9 & 0xffffffff; // 0x1400055a3
            v83 = v107;
            v84 = v113;
            if ((int32_t)v108 != 0) {
                // 0x1400055ae
                *(int32_t *)(a1 + 0x4848) = 1;
                v83 = v107;
                v84 = v113;
            }
        }
    }
    int32_t v114 = v84; // 0x1400056ee
    if (v114 == 0) {
        // 0x140005bf8
        __security_check_cookie(g66);
        return &g103;
    }
    int64_t v115 = v83;
    if (v114 < 0) {
        // 0x1400056f4
        *(int64_t *)(v115 + 192) = *(int64_t *)(v115 + 200);
        // 0x140005bf8
        __security_check_cookie(g66);
        return &g103;
    }
    // 0x14000570c
    int64_t v116; // 0x140005430
    if (*(int64_t *)(v115 + 16) == 0) {
        // 0x14000570c
        v116 = v115 + 192;
    } else {
        int64_t v117 = v115 + 200; // 0x140005713
        int64_t v118 = v115 + 192;
        v116 = v118;
        if (v84 > (int64_t)(*(int32_t *)v117 - *(int32_t *)v118)) {
            // 0x140005725
            *(int64_t *)v118 = *(int64_t *)v117;
            // 0x140005bf8
            __security_check_cookie(g66);
            return &g103;
        }
    }
    int64_t * v119 = (int64_t *)v116; // 0x14000574c
    *v119 = *v119 + (0x100000000 * v84 >> 32);
    // 0x140005bf8
    __security_check_cookie(g66);
    return &g103;
}

// Address range: 0x140005c50 - 0x14000602a
int64_t function_140005c50(int64_t a1) {
    int64_t v1 = function_140001ec0(a1); // 0x140005c65
    int64_t * v2 = (int64_t *)(a1 + 192); // 0x140005c6f
    uint64_t v3 = *v2; // 0x140005c6f
    char v4; // 0x140005c50
    if (v3 >= *(int64_t *)(a1 + 200)) {
        // 0x140005c8e
        v4 = 0;
        if (*(int32_t *)(a1 + 48) != 0) {
            // 0x140005c94
            function_140001d70(a1);
            int64_t v5 = *v2; // 0x140005c9c
            *v2 = v5 + 1;
            v4 = *(char *)v5;
        }
    } else {
        // 0x140005c7f
        *v2 = v3 + 1;
        v4 = *(char *)v3;
    }
    int32_t v6 = v4; // 0x140005cb7
    int32_t * v7 = (int32_t *)(a1 + 0x4854); // 0x140005cb7
    *v7 = v6;
    int64_t v8; // 0x140006014
    if (v4 >= 5) {
        // 0x140005ffc
        v8 = *(int64_t *)__readgsqword(88);
        *(int64_t *)(v8 + 16) = (int64_t)"bad SOS component count";
        return (int32_t)"bad SOS component count" ^ (int32_t)"bad SOS component count";
    }
    int64_t v9 = v4;
    if (*(int32_t *)(v9 + 8) < v6) {
        // 0x140005ffc
        v8 = *(int64_t *)__readgsqword(88);
        *(int64_t *)(v8 + 16) = (int64_t)"bad SOS component count";
        return (int32_t)"bad SOS component count" ^ (int32_t)"bad SOS component count";
    }
    if (2 * v6 + 6 != (int32_t)v1) {
        // 0x140005ce6
        *(int64_t *)(*(int64_t *)__readgsqword(88) + 16) = (int64_t)"bad SOS len";
        return (int32_t)"bad SOS len" ^ (int32_t)"bad SOS len";
    }
    int64_t v10 = v9; // 0x140005d27
    int64_t v11 = 0; // 0x140005d27
    int64_t v12 = a1 + 0x4858; // 0x140005d27
    int64_t v13; // 0x140005c50
    char v14; // 0x140005c50
    int64_t v15; // 0x140005c50
    int64_t result; // 0x140005c50
    while (true) {
        int64_t v16 = v10;
        int64_t * v17 = (int64_t *)(v16 + 192); // 0x140005d33
        uint64_t v18 = *v17; // 0x140005d33
        char v19; // 0x140005c50
        if (v18 >= *(int64_t *)(v16 + 200)) {
            // 0x140005d52
            v19 = 0;
            if (*(int32_t *)(v16 + 48) != 0) {
                // 0x140005d58
                function_140001d70(v16);
                int64_t v20 = *v17; // 0x140005d60
                *v17 = v20 + 1;
                v19 = *(char *)v20;
            }
        } else {
            // 0x140005d43
            *v17 = v18 + 1;
            v19 = *(char *)v18;
        }
        unsigned char v21 = v19;
        int64_t v22 = v21;
        int64_t * v23 = (int64_t *)(v22 + 192); // 0x140005d7e
        uint64_t v24 = *v23; // 0x140005d7e
        char v25; // 0x140005c50
        if (v24 >= *(int64_t *)(v22 + 200)) {
            // 0x140005d9d
            v25 = 0;
            if (*(int32_t *)(v22 + 48) != 0) {
                // 0x140005da3
                function_140001d70(v22);
                int64_t v26 = *v23; // 0x140005dab
                *v23 = v26 + 1;
                v25 = *(char *)v26;
            }
        } else {
            // 0x140005d8e
            *v23 = v24 + 1;
            v25 = *(char *)v24;
        }
        uint64_t v27 = (int64_t)v25;
        uint32_t v28 = *(int32_t *)(v27 + 8); // 0x140005dcf
        int64_t v29 = 0; // 0x140005dd4
        int64_t v30 = 0; // 0x140005dd4
        int64_t v31; // 0x140005c50
        int64_t v32; // 0x140005c50
        if (v28 < 1) {
          lab_0x140005df1:
            // 0x140005df1
            v32 = v29;
            v31 = v30;
            result = 0;
            if (v28 == (int32_t)v29) {
                // break -> 0x140005f91
                break;
            }
        } else {
            uint64_t v33 = (int64_t)v28; // 0x140005dcf
            int64_t v34 = 0;
            int64_t v35 = 0;
            int64_t v36 = a1 + 0x46a0;
            v32 = v35;
            v31 = v34;
            while (*(int32_t *)v36 != (int32_t)v21) {
                int64_t v37 = v35 + 1 & 0xffffffff; // 0x140005de4
                int64_t v38 = v34 + 1; // 0x140005de6
                int64_t v39 = v36 + 96; // 0x140005def
                v29 = v37;
                v30 = v38;
                if (v37 >= v33) {
                    goto lab_0x140005df1;
                }
                v34 = v38;
                v35 = v37;
                v36 = v39;
                v32 = v35;
                v31 = v34;
            }
        }
        // 0x140005df9
        v10 = v27 / 16;
        uint32_t v40 = (int32_t)v10; // 0x140005e07
        int64_t v41 = 96 * v31 + a1;
        *(int32_t *)(v41 + 0x46b0) = v40;
        if (v40 >= 4) {
            // 0x140005fe2
            v13 = (int64_t)"bad DC huff";
            v15 = __readgsqword(88);
            goto lab_0x140005f8b;
        }
        unsigned char v42 = v25 & 15;
        *(int32_t *)(v41 + 0x46b4) = (int32_t)v42;
        if (v42 >= 4) {
            // 0x140005fc8
            v13 = (int64_t)"bad AC huff";
            v15 = __readgsqword(88);
            goto lab_0x140005f8b;
        }
        // 0x140005e2d
        *(int32_t *)v12 = (int32_t)v32;
        int64_t v43 = v11 + 1; // 0x140005e30
        v11 = v43 & 0xffffffff;
        v12 += 4;
        if (*v7 <= (int32_t)v43) {
            int64_t * v44 = (int64_t *)(v10 | 192); // 0x140005e45
            uint64_t v45 = *v44; // 0x140005e45
            if (v45 >= *(int64_t *)(v10 + 200)) {
                // 0x140005e64
                v14 = 0;
                if (*(int32_t *)(v10 || 48) == 0) {
                    goto lab_0x140005e8a;
                } else {
                    // 0x140005e6a
                    function_140001d70(v10);
                    int64_t v46 = *v44; // 0x140005e72
                    *v44 = v46 + 1;
                    v14 = *(char *)v46;
                    goto lab_0x140005e8a;
                }
            } else {
                // 0x140005e55
                *v44 = v45 + 1;
                v14 = *(char *)v45;
                goto lab_0x140005e8a;
            }
        }
    }
    // 0x140005f91
    return result;
  lab_0x140005f8b:
    // 0x140005f8b
    *(int64_t *)(*(int64_t *)v15 + 16) = v13;
    // 0x140005f91
    return 0;
  lab_0x140005e8a:;
    int64_t v47 = v14;
    int32_t * v48 = (int32_t *)(a1 + 0x4834); // 0x140005e90
    *v48 = (int32_t)v14;
    int64_t * v49 = (int64_t *)(v47 + 192); // 0x140005e96
    uint64_t v50 = *v49; // 0x140005e96
    char v51; // 0x140005c50
    if (v50 >= *(int64_t *)(v47 + 200)) {
        // 0x140005eb5
        v51 = 0;
        if (*(int32_t *)(v47 + 48) == 0) {
            goto lab_0x140005edb;
        } else {
            // 0x140005ebb
            function_140001d70(v47);
            int64_t v52 = *v49; // 0x140005ec3
            *v49 = v52 + 1;
            v51 = *(char *)v52;
            goto lab_0x140005edb;
        }
    } else {
        // 0x140005ea6
        *v49 = v50 + 1;
        v51 = *(char *)v50;
        goto lab_0x140005edb;
    }
  lab_0x140005edb:;
    int64_t v53 = v51;
    int32_t * v54 = (int32_t *)(a1 + 0x4838); // 0x140005ee1
    *v54 = (int32_t)v51;
    int64_t * v55 = (int64_t *)(v53 + 192); // 0x140005ee7
    uint64_t v56 = *v55; // 0x140005ee7
    char v57; // 0x140005c50
    if (v56 >= *(int64_t *)(v53 + 200)) {
        // 0x140005f06
        v57 = 0;
        if (*(int32_t *)(v53 + 48) == 0) {
            goto lab_0x140005f2c;
        } else {
            // 0x140005f0c
            function_140001d70(v53);
            int64_t v58 = *v55; // 0x140005f14
            *v55 = v58 + 1;
            v57 = *(char *)v58;
            goto lab_0x140005f2c;
        }
    } else {
        // 0x140005ef7
        *v55 = v56 + 1;
        v57 = *(char *)v56;
        goto lab_0x140005f2c;
    }
  lab_0x140005f2c:;
    uint64_t v59 = (int64_t)v57;
    uint32_t v60 = *v48; // 0x140005f2c
    int64_t v61 = v59 & 15; // 0x140005f37
    uint32_t v62 = (int32_t)(v59 / 16); // 0x140005f44
    *(int32_t *)(a1 + 0x483c) = v62;
    uint32_t v63 = (int32_t)v61; // 0x140005f4a
    *(int32_t *)(a1 + 0x4840) = v63;
    if (*(int32_t *)(a1 + 0x4830) == 0) {
        if (v61 == 0 == v60 == 0 == v57 < 16) {
            // 0x140005fb7
            *v54 = 63;
            result = 1;
            return result;
        } else {
            goto lab_0x140005f73;
        }
    } else {
        if (v60 > 63) {
            goto lab_0x140005f73;
        } else {
            uint32_t v64 = *v54; // 0x140005f57
            result = 1;
            if (v63 < 14 == v62 < 14 == v60 <= v64 == v64 < 64) {
                return result;
            } else {
                goto lab_0x140005f73;
            }
        }
    }
  lab_0x140005f73:
    // 0x140005f73
    v13 = (int64_t)"bad SOS";
    v15 = __readgsqword(88);
    goto lab_0x140005f8b;
}

// Address range: 0x140006030 - 0x1400060b7
int64_t function_140006030(int64_t a1, int64_t a2, uint32_t result) {
    if ((int32_t)a2 < 1) {
        // 0x1400060af
        return result;
    }
    int64_t v1 = a2 & 0xffffffff; // 0x140006055
    int64_t v2 = a1 + 0x46d8;
    int64_t * v3 = (int64_t *)v2; // 0x140006057
    int64_t v4 = *v3; // 0x140006057
    if (v4 != 0) {
        // 0x14000605f
        free((int64_t *)v4);
        *v3 = 0;
        *(int64_t *)(v2 - 8) = 0;
    }
    int64_t * v5 = (int64_t *)(v2 + 8); // 0x14000606c
    int64_t v6 = *v5; // 0x14000606c
    if (v6 != 0) {
        // 0x140006075
        free((int64_t *)v6);
        *v5 = 0;
        *(int64_t *)(v2 + 24) = 0;
    }
    int64_t * v7 = (int64_t *)(v2 + 16); // 0x140006083
    int64_t v8 = *v7; // 0x140006083
    if (v8 != 0) {
        // 0x14000608c
        free((int64_t *)v8);
        *v7 = 0;
    }
    // 0x140006096
    v1--;
    int64_t v9 = v2 + 96; // 0x14000609e
    while (v1 != 0) {
        // 0x140006057
        v2 = v9;
        v3 = (int64_t *)v2;
        v4 = *v3;
        if (v4 != 0) {
            // 0x14000605f
            free((int64_t *)v4);
            *v3 = 0;
            *(int64_t *)(v2 - 8) = 0;
        }
        // 0x14000606c
        v5 = (int64_t *)(v2 + 8);
        v6 = *v5;
        if (v6 != 0) {
            // 0x140006075
            free((int64_t *)v6);
            *v5 = 0;
            *(int64_t *)(v2 + 24) = 0;
        }
        // 0x140006083
        v7 = (int64_t *)(v2 + 16);
        v8 = *v7;
        if (v8 != 0) {
            // 0x14000608c
            free((int64_t *)v8);
            *v7 = 0;
        }
        // 0x140006096
        v1--;
        v9 = v2 + 96;
    }
    // 0x1400060af
    return result;
}

// Address range: 0x1400060c0 - 0x1400067b3
int64_t function_1400060c0(int64_t a1, int64_t a2) {
    uint32_t v1 = (int32_t)function_140001ec0(a1); // 0x1400060f0
    if (v1 <= 10) {
        // 0x1400060f2
        *(int64_t *)(*(int64_t *)__readgsqword(88) + 16) = (int64_t)"bad SOF len";
        return (int32_t)"bad SOF len" ^ (int32_t)"bad SOF len";
    }
    int64_t * v2 = (int64_t *)(a1 + 192); // 0x140006122
    uint64_t v3 = *v2; // 0x140006122
    int64_t * v4 = (int64_t *)(a1 + 200); // 0x140006129
    int64_t v5 = v3; // 0x140006130
    if (v3 >= *v4) {
        // 0x140006132
        if (*(int32_t *)(a1 + 48) == 0) {
            // 0x140006783
            *(int64_t *)(*(int64_t *)__readgsqword(88) + 16) = (int64_t)"only 8-bit";
            return (int32_t)"only 8-bit" ^ (int32_t)"only 8-bit";
        }
        // 0x14000613c
        function_140001d70(a1);
        v5 = *v2;
    }
    // 0x14000614b
    *v2 = v5 + 1;
    if (*(char *)v5 != 8) {
        // 0x140006783
        *(int64_t *)(*(int64_t *)__readgsqword(88) + 16) = (int64_t)"only 8-bit";
        return (int32_t)"only 8-bit" ^ (int32_t)"only 8-bit";
    }
    int32_t v6 = function_140001ec0(a1); // 0x140006169
    int32_t * v7 = (int32_t *)(a1 + 4); // 0x140006169
    *v7 = v6;
    if (v6 == 0) {
        int64_t v8 = *(int64_t *)__readgsqword(88); // 0x14000617e
        *(int64_t *)(v8 + 16) = (int64_t)"no header height";
        return (int32_t)"no header height" ^ (int32_t)"no header height";
    }
    int64_t v9 = a1; // 0x1400061a0
    uint32_t v10 = (int32_t)function_140001ec0(a1); // 0x1400061a8
    *(int32_t *)a1 = v10;
    if (v10 == 0) {
        // 0x1400061ae
        *(int64_t *)(*(int64_t *)__readgsqword(88) + 16) = (int64_t)"0 width";
        return (int32_t)"0 width" ^ (int32_t)"0 width";
    }
    // 0x1400061de
    if (v10 < 0x1000001 != *v7 < 0x1000001) {
        // 0x1400061e7
        *(int64_t *)(*(int64_t *)__readgsqword(88) + 16) = (int64_t)"too large";
        return (int32_t)"too large" ^ (int32_t)"too large";
    }
    uint64_t v11 = *v2; // 0x14000621e
    if (v11 >= *v4) {
        // 0x14000623d
        if (*(int32_t *)(a1 + 48) == 0) {
            // 0x140006261
            v9 &= -256;
        } else {
            // 0x140006243
            function_140001d70(a1);
            int64_t v12 = *v2; // 0x14000624b
            v9 = (int64_t)*(char *)v12;
            *v2 = v12 + 1;
        }
    } else {
        // 0x14000622e
        v9 = (int64_t)*(char *)v11;
        *v2 = v11 + 1;
    }
    int64_t v13 = v9 & 255; // 0x140006263
    int32_t v14 = v13;
    if (v14 == 2 || v14 >= 5) {
        int64_t v15 = *(int64_t *)__readgsqword(88); // 0x140006761
        *(int64_t *)(v15 + 16) = (int64_t)"bad component count";
        return (int32_t)"bad component count" ^ (int32_t)"bad component count";
    }
    int32_t * v16 = (int32_t *)(a1 + 8); // 0x140006280
    *v16 = v14;
    v9 = v13;
    int64_t v17 = 0; // 0x140006287
    if (v13 != 0) {
        int64_t v18 = a1 + 0x46e8; // 0x140006289
        *(int64_t *)(v18 - 24) = 0;
        *(int64_t *)v18 = 0;
        int64_t v19 = v9 - 1; // 0x14000629b
        v9 = v19;
        v18 += 96;
        while (v19 != 0) {
            // 0x140006290
            *(int64_t *)(v18 - 24) = 0;
            *(int64_t *)v18 = 0;
            v19 = v9 - 1;
            v9 = v19;
            v18 += 96;
        }
        // 0x1400062a0
        v17 = (int64_t)*v16;
    }
    int64_t v20 = v17;
    if (v1 != (int32_t)(v20 + 8 + 2 * v20)) {
        // 0x1400060f2
        *(int64_t *)(*(int64_t *)__readgsqword(88) + 16) = (int64_t)"bad SOF len";
        return (int32_t)"bad SOF len" ^ (int32_t)"bad SOF len";
    }
    int32_t * v21 = (int32_t *)(a1 + 0x4850); // 0x1400062b1
    *v21 = 0;
    int32_t v22 = *v16; // 0x1400062b8
    int64_t v23 = v22; // 0x1400062b8
    v9 = v23;
    int32_t v24 = v22; // 0x1400062ca
    int64_t v25; // 0x1400060c0
    int64_t v26; // 0x1400060c0
    if (v22 < 1) {
        goto lab_0x140006421;
    } else {
        int32_t * v27 = (int32_t *)(a1 + 48);
        int64_t v28 = a1 + 0x46a4; // 0x1400062de
        int64_t v29 = 0; // 0x1400062de
        int64_t v30 = (int64_t)"RGB";
        uint64_t v31 = *v2; // 0x1400062e0
        int64_t v32; // 0x14000630d
        if (v31 >= *v4) {
            // 0x1400062ff
            if (*v27 == 0) {
                // 0x140006323
                v9 = v23 & 0xffffff00;
            } else {
                // 0x140006305
                function_140001d70(a1);
                v32 = *v2;
                v9 = (int64_t)*(char *)v32;
                *v2 = v32 + 1;
            }
        } else {
            // 0x1400062f0
            v9 = (int64_t)*(char *)v31;
            *v2 = v31 + 1;
        }
        int64_t v33 = v9; // 0x140006325
        *(int32_t *)(v28 - 4) = (int32_t)v33 & 255;
        if (*v16 == 3) {
            // 0x140006331
            if (*(char *)v30 == (char)v33) {
                // 0x140006339
                *v21 = *v21 + 1;
            }
        }
        uint64_t v34 = *v2; // 0x14000633f
        int64_t v35; // 0x14000636c
        if (v34 >= *v4) {
            // 0x14000635e
            if (*v27 == 0) {
                // 0x140006382
                v9 &= -256;
            } else {
                // 0x140006364
                function_140001d70(a1);
                v35 = *v2;
                v9 = (int64_t)*(char *)v35;
                *v2 = v35 + 1;
            }
        } else {
            // 0x14000634f
            v9 = (int64_t)*(char *)v34;
            *v2 = v34 + 1;
        }
        uint64_t v36 = v9; // 0x140006384
        int64_t v37 = v36 / 16 & 15; // 0x140006389
        v9 = v37;
        *(int32_t *)v28 = (int32_t)v37;
        while (v37 != 0) {
            // 0x140006396
            if ((int32_t)v9 >= 5) {
                // break -> 0x1400066d5
                break;
            }
            int32_t v38 = (int32_t)v36 & 15; // 0x14000639f
            *(int32_t *)(v28 + 4) = v38;
            if (v38 >= 5) {
                int64_t v39 = *(int64_t *)__readgsqword(88); // 0x1400066c9
                v9 = v39;
                v25 = v39;
                v26 = (int64_t)"bad V";
                goto lab_0x140006699;
            }
            uint64_t v40 = *v2; // 0x1400063b4
            if (v40 >= *v4) {
                // 0x1400063d3
                if (*v27 == 0) {
                    // 0x1400063f7
                    v9 &= -256;
                } else {
                    // 0x1400063d9
                    function_140001d70(a1);
                    int64_t v41 = *v2; // 0x1400063e1
                    v9 = (int64_t)*(char *)v41;
                    *v2 = v41 + 1;
                }
            } else {
                // 0x1400063c4
                v9 = (int64_t)*(char *)v40;
                *v2 = v40 + 1;
            }
            uint32_t v42 = (int32_t)v9 & 255; // 0x1400063fc
            *(int32_t *)(v28 + 8) = v42;
            if (v42 >= 4) {
                int64_t v43 = *(int64_t *)__readgsqword(88); // 0x14000668f
                v9 = v43;
                v25 = v43;
                v26 = (int64_t)"bad TQ";
                goto lab_0x140006699;
            }
            uint32_t v44 = *v16; // 0x140006408
            int64_t v45 = v44; // 0x140006408
            v9 = v45;
            v29 = v29 + 1 & 0xffffffff;
            int64_t v46 = v45; // 0x140006418
            v28 += 96;
            v24 = v44;
            if (v29 >= v45) {
                goto lab_0x140006421;
            }
            v30++;
            v31 = *v2;
            if (v31 >= *v4) {
                // 0x1400062ff
                if (*v27 == 0) {
                    // 0x140006323
                    v9 = v46 & 0xffffff00;
                } else {
                    // 0x140006305
                    function_140001d70(a1);
                    v32 = *v2;
                    v9 = (int64_t)*(char *)v32;
                    *v2 = v32 + 1;
                }
            } else {
                // 0x1400062f0
                v9 = (int64_t)*(char *)v31;
                *v2 = v31 + 1;
            }
            // 0x140006325
            v33 = v9;
            *(int32_t *)(v28 - 4) = (int32_t)v33 & 255;
            if (*v16 == 3) {
                // 0x140006331
                if (*(char *)v30 == (char)v33) {
                    // 0x140006339
                    *v21 = *v21 + 1;
                }
            }
            // 0x14000633f
            v34 = *v2;
            if (v34 >= *v4) {
                // 0x14000635e
                if (*v27 == 0) {
                    // 0x140006382
                    v9 &= -256;
                } else {
                    // 0x140006364
                    function_140001d70(a1);
                    v35 = *v2;
                    v9 = (int64_t)*(char *)v35;
                    *v2 = v35 + 1;
                }
            } else {
                // 0x14000634f
                v9 = (int64_t)*(char *)v34;
                *v2 = v34 + 1;
            }
            // 0x140006384
            v36 = v9;
            v37 = v36 / 16 & 15;
            v9 = v37;
            *(int32_t *)v28 = (int32_t)v37;
        }
        int64_t v47 = *(int64_t *)__readgsqword(88); // 0x1400066e3
        v9 = v47;
        v25 = v47;
        v26 = (int64_t)"bad H";
        goto lab_0x140006699;
    }
  lab_0x140006421:
    // 0x140006421
    if ((int32_t)a2 != 0) {
        // 0x14000669f
        return 1;
    }
    int32_t v48 = *v7; // 0x14000642d
    if (v24 < 0 || v48 < 0) {
        goto lab_0x14000672c;
    } else {
        if (v48 == 0) {
            goto lab_0x140006457;
        } else {
            if (0x7fffffff / v48 < v24) {
                goto lab_0x14000672c;
            } else {
                goto lab_0x140006457;
            }
        }
    }
  lab_0x1400066fd_2:
    // 0x1400066fd
    *(int64_t *)(*(int64_t *)__readgsqword(88) + 16) = (int64_t)"outofmem";
    // 0x14000669f
    int64_t v49; // 0x1400060c0
    return function_140006030(a1, v49 & 0xffffffff, 0);
  lab_0x14000672c:;
    int64_t v50 = *(int64_t *)__readgsqword(88); // 0x14000673a
    v9 = v50;
    v25 = v50;
    v26 = (int64_t)"too large";
    goto lab_0x140006699;
  lab_0x140006699:
    // 0x140006699
    *(int64_t *)(v25 + 16) = v26;
    // 0x14000669f
    return 0;
  lab_0x140006457:;
    int64_t v51 = (int64_t)v48 * (int64_t)v24; // 0x140006457
    if ((int32_t)v51 < 0) {
        goto lab_0x14000672c;
    } else {
        if (v24 == 0) {
            goto lab_0x14000647f;
        } else {
            if ((v51 & 0xffffffff) > (int64_t)(0x7fffffff / v24)) {
                goto lab_0x14000672c;
            } else {
                goto lab_0x14000647f;
            }
        }
    }
  lab_0x14000647f:;
    uint32_t v52 = *v16; // 0x14000647f
    int64_t v53 = 1; // 0x140006484
    int64_t v54 = 1; // 0x140006484
    if (v52 >= 1) {
        int64_t v55 = a1 + 0x46a8; // 0x14000648d
        int64_t v56 = v52; // 0x14000648d
        int32_t v57 = 1;
        int32_t v58 = 1;
        int32_t v59 = *(int32_t *)(v55 - 4); // 0x140006493
        int32_t v60 = v59 - v57; // 0x140006497
        int32_t v61 = *(int32_t *)v55; // 0x1400064a1
        int32_t v62 = v60 == 0 | v60 < 0 != ((v60 ^ v59) & (v59 ^ v57)) < 0 ? v57 : v59; // 0x1400064a5
        int32_t v63 = v61 - v58; // 0x1400064a9
        int32_t v64 = v63 == 0 | v63 < 0 != ((v63 ^ v61) & (v61 ^ v58)) < 0 ? v58 : v61; // 0x1400064ac
        v56--;
        v55 += 96;
        while (v56 != 0) {
            // 0x140006490
            v57 = v62;
            v58 = v64;
            v59 = *(int32_t *)(v55 - 4);
            v60 = v59 - v57;
            v61 = *(int32_t *)v55;
            v62 = v60 == 0 | v60 < 0 != ((v60 ^ v59) & (v59 ^ v57)) < 0 ? v57 : v59;
            v63 = v61 - v58;
            v64 = v63 == 0 | v63 < 0 != ((v63 ^ v61) & (v61 ^ v58)) < 0 ? v58 : v61;
            v56--;
            v55 += 96;
        }
        // 0x1400064b6
        v53 = v64;
        v54 = v62;
    }
    int32_t v65 = v54; // 0x1400064b8
    *(int32_t *)(a1 + 0x4688) = v65;
    int32_t v66 = v53; // 0x1400064c7
    *(int32_t *)(a1 + 0x468c) = v66;
    uint32_t v67 = 8 * v65;
    *(int32_t *)(a1 + 0x4698) = v67;
    uint32_t v68 = 8 * v66;
    *(int32_t *)(a1 + 0x469c) = v68;
    int32_t * v69 = (int32_t *)(a1 + 0x4690); // 0x1400064f0
    *v69 = (v67 - 1 + *(int32_t *)&v9) / v67;
    int32_t * v70 = (int32_t *)(a1 + 0x4694); // 0x140006501
    *v70 = (v68 - 1 + *v7) / v68;
    if (*v16 < 1) {
        // 0x14000669f
        return 1;
    }
    int32_t v71 = v65 - 1; // 0x14000652c
    int32_t v72 = v66 - 1; // 0x14000653f
    int64_t v73 = a1 + 0x46bc;
    v49 = 1;
    int32_t * v74 = (int32_t *)(v73 - 24); // 0x140006520
    int32_t v75 = *v74; // 0x140006520
    int32_t v76 = *(int32_t *)&v9; // 0x140006525
    int32_t v77 = *(int32_t *)(v73 - 20); // 0x140006528
    *(int32_t *)v73 = (int32_t)((int64_t)(v71 + v76 * v75) / v54);
    int32_t v78 = *v7; // 0x140006538
    *(int32_t *)(v73 + 4) = (int32_t)((int64_t)(v72 + v78 * v77) / v53);
    int32_t v79 = 8 * *v69 * *v74; // 0x140006556
    int32_t * v80 = (int32_t *)(v73 + 8); // 0x14000655a
    *v80 = v79;
    int64_t * v81 = (int64_t *)(v73 + 52); // 0x140006566
    *v81 = 0;
    int64_t * v82 = (int64_t *)(v73 + 36);
    *v82 = 0;
    *(int64_t *)(v73 + 44) = 0;
    int32_t v83 = *v70 * 8 * v77; // 0x140006572
    int32_t * v84 = (int32_t *)(v73 + 12); // 0x140006576
    *v84 = v83;
    while (v79 >= 0 && v83 >= 0) {
        if (v83 != 0) {
            if (0x7fffffff / v83 < v79) {
                // break -> 0x1400066f9
                break;
            }
        }
        int64_t * mem = malloc(v83 * v79 | 15); // 0x1400065ab
        int64_t v85 = (int64_t)mem; // 0x1400065ab
        *(int64_t *)(v73 + 28) = v85;
        if (mem == NULL) {
            goto lab_0x1400066fd_2;
        }
        // 0x1400065be
        *(int64_t *)(v73 + 20) = v85 + 15 & -16;
        if (*(int32_t *)(a1 + 0x4830) != 0) {
            int32_t v86 = *v80; // 0x1400065d7
            v9 = v86;
            int32_t v87 = *v84; // 0x1400065dc
            *(int32_t *)(v73 + 60) = ((v86 >> 31 & 7) + v86) / 8;
            *(int32_t *)(v73 + 64) = ((v87 >> 31 & 7) + v87) / 8;
            if (v86 < 0 || v87 < 0) {
                // 0x1400066ef
                *v82 = 0;
                goto lab_0x1400066fd_2;
            }
            if (v87 == 0) {
                // branch -> 0x14000661f
            } else {
                // 0x14000660e
                if (v9 > (int64_t)(0x7fffffff / v87)) {
                    // 0x1400066ef
                    *v82 = 0;
                    goto lab_0x1400066fd_2;
                }
            }
            int64_t v88 = (0x100000000 * v9 >> 32) * (int64_t)v87; // 0x14000661f
            v9 = v88 & 0xffffffff;
            uint32_t v89 = (int32_t)v88;
            if (v89 > 0x3fffffff) {
                // 0x1400066ef
                *v82 = 0;
                goto lab_0x1400066fd_2;
            }
            int32_t v90 = 2 * v89; // 0x14000663f
            if (v90 > 0x7ffffff0) {
                // 0x1400066ef
                *v82 = 0;
                goto lab_0x1400066fd_2;
            }
            int64_t * mem2 = malloc(v90 + 15); // 0x14000664b
            int64_t v91 = (int64_t)mem2; // 0x14000664b
            *v82 = v91;
            if (mem2 == NULL) {
                goto lab_0x1400066fd_2;
            }
            // 0x14000665e
            *v81 = v91 + 15 & -16;
        }
        // 0x14000666a
        if (*v16 <= (int32_t)v49) {
            // 0x14000669f
            return 1;
        }
        // 0x140006679
        v73 += 96;
        v49 = (v49 & 0xffffffff) + 1;
        v74 = (int32_t *)(v73 - 24);
        v75 = *v74;
        v76 = *(int32_t *)&v9;
        v77 = *(int32_t *)(v73 - 20);
        *(int32_t *)v73 = (int32_t)((int64_t)(v71 + v76 * v75) / v54);
        v78 = *v7;
        *(int32_t *)(v73 + 4) = (int32_t)((int64_t)(v72 + v78 * v77) / v53);
        v79 = 8 * *v69 * *v74;
        v80 = (int32_t *)(v73 + 8);
        *v80 = v79;
        v81 = (int64_t *)(v73 + 52);
        *v81 = 0;
        v82 = (int64_t *)(v73 + 36);
        *v82 = 0;
        *(int64_t *)(v73 + 44) = 0;
        v83 = *v70 * 8 * v77;
        v84 = (int32_t *)(v73 + 12);
        *v84 = v83;
    }
    // 0x1400066f9
    *(int64_t *)(v73 + 28) = 0;
    goto lab_0x1400066fd_2;
}

// Address range: 0x1400067c0 - 0x140006911
int64_t function_1400067c0(int64_t a1, uint32_t a2) {
    // 0x1400067c0
    *(int32_t *)(a1 + 0x484c) = -1;
    *(int32_t *)(a1 + 0x4848) = 0;
    *(char *)(a1 + 0x4828) = -1;
    if ((char)function_140004b40(a1) != -40) {
        // 0x1400067f6
        *(int64_t *)(*(int64_t *)__readgsqword(88) + 16) = (int64_t)"no SOI";
        return (int32_t)"no SOI" ^ (int32_t)"no SOI";
    }
    // 0x140006824
    if (a2 == 1) {
        // 0x1400068dc
        return 1;
    }
    int64_t v1 = function_140004b40(a1) & 255; // 0x14000683a
    int64_t v2 = v1; // 0x140006843
    int64_t v3 = 192; // 0x140006843
    int64_t v4; // 0x1400067c0
    int64_t v5; // 0x1400067c0
    int64_t v6; // 0x1400067c0
    if (v1 != 192) {
        while (true) {
            // 0x140006845
            v3 = v2;
            if ((int32_t)v2 < 195) {
                // break -> 0x1400068b9
                break;
            }
            // 0x140006850
            if ((int32_t)function_140005430(a1, v2) == 0) {
                return 0;
            }
            int64_t v7 = function_140004b40(a1); // 0x140006865
            int64_t v8 = v7 & 255; // 0x14000686a
            v4 = v7;
            v5 = v8;
            if (v8 == 255) {
                while (true) {
                  lab_0x140006875:
                    // 0x140006875
                    v6 = v5;
                    if (*(int64_t *)(v6 + 16) == 0) {
                        goto lab_0x14000688e;
                    } else {
                        // 0x14000687e
                        if ((int32_t)v4 == 0) {
                            goto lab_0x14000689e;
                        } else {
                            // 0x140006889
                            if (*(int32_t *)(v6 + 48) == 0) {
                                goto lab_0x1400068f1_2;
                            }
                            goto lab_0x14000688e;
                        }
                    }
                }
            }
          lab_0x1400068b1:
            // 0x1400068b1
            v2 = v8;
            v3 = v2;
            if (v2 == 192) {
                // break -> 0x1400068b9
                break;
            }
        }
    }
    // 0x1400068b9
    *(int32_t *)(a1 + 0x4830) = (int32_t)((int32_t)v3 == 194);
    if ((int32_t)function_1400060c0(a1, (int64_t)a2) != 0) {
        // 0x1400068dc
        return 1;
    }
  lab_0x14000690d:
    // 0x1400068dc
    return 0;
  lab_0x1400068f1_2:
    // 0x1400068f1
    *(int64_t *)(*(int64_t *)__readgsqword(88) + 16) = (int64_t)"no SOF";
    return 0;
  lab_0x14000688e:
    // 0x14000688e
    if (*(int64_t *)(v6 + 192) >= *(int64_t *)(v6 + 200)) {
        goto lab_0x1400068f1_2;
    }
    goto lab_0x14000689e;
  lab_0x14000689e:;
    int64_t v9 = function_140004b40(a1); // 0x1400068a1
    v4 = v9;
    v5 = 255;
    if ((v9 & 255) != 255) {
        // break -> 0x1400068b1
        goto lab_0x1400068b1;
    }
    goto lab_0x140006875;
}

// Address range: 0x140006920 - 0x140006cc8
int64_t function_140006920(int64_t a1, int64_t a2) {
    // 0x140006920
    *(int64_t *)(a1 + 0x46d8) = 0;
    *(int64_t *)(a1 + 0x46e0) = 0;
    *(int64_t *)(a1 + 0x4738) = 0;
    *(int64_t *)(a1 + 0x4740) = 0;
    *(int64_t *)(a1 + 0x4798) = 0;
    *(int64_t *)(a1 + 0x47a0) = 0;
    *(int64_t *)(a1 + 0x47f8) = 0;
    *(int64_t *)(a1 + 0x4800) = 0;
    *(int32_t *)(a1 + 0x4868) = 0;
    if ((int32_t)function_1400067c0(a1, 0) == 0) {
        // 0x140006b02
        return 0;
    }
    int64_t v1 = function_140004b40(a1) & 255; // 0x1400069a3
    int64_t result; // 0x140006920
    int64_t v2; // 0x140006920
    int64_t v3; // 0x140006920
    int64_t v4; // 0x140006920
    int64_t v5; // 0x140006920
    int64_t v6; // 0x140006920
    int64_t v7; // 0x140006920
    int64_t v8; // 0x140006920
    int64_t v9; // 0x140006920
    int64_t v10; // 0x140006920
    char * v11; // 0x140006920
    if (v1 != 217) {
        // 0x1400069b1
        v11 = (char *)(a1 + 0x4828);
        v2 = v1;
        v8 = 0;
        while (true) {
          lab_0x1400069b1:
            // 0x1400069b1
            v9 = v8;
            int64_t v12 = v2;
            if (v12 != 218) {
                if (v12 != 220) {
                    int64_t v13 = function_140005430(a1, v12); // 0x140006b10
                    result = 0;
                    v10 = v12;
                    if ((int32_t)v13 == 0) {
                        // break -> 0x140006b02
                        break;
                    }
                } else {
                    int64_t v14 = function_140001ec0(a1); // 0x140006ac6
                    int64_t v15 = function_140001ec0(a1); // 0x140006ad0
                    if ((int32_t)v14 != 4) {
                        // 0x140006ca3
                        *(int64_t *)(*(int64_t *)__readgsqword(88) + 16) = (int64_t)"bad DNL len";
                        return (int32_t)"bad DNL len" ^ (int32_t)"bad DNL len";
                    }
                    // 0x140006ade
                    v10 = v9;
                    if (*(int32_t *)(a1 + 4) != (int32_t)v15) {
                        // 0x140006ae6
                        *(int64_t *)(*(int64_t *)__readgsqword(88) + 16) = (int64_t)"bad DNL height";
                        result = 0;
                        return result;
                    }
                }
            } else {
                // 0x1400069bc
                result = 0;
                if ((int32_t)function_140005c50(a1) == 0) {
                    // break -> 0x140006b02
                    break;
                }
                int64_t v16 = function_140004c10(a1, v9); // 0x1400069cf
                result = 0;
                if ((int32_t)v16 == 0) {
                    // break -> 0x140006b02
                    break;
                }
                // 0x1400069dc
                v3 = v16;
                v4 = a1;
                v10 = v9;
                if (*v11 == -1) {
                    while (true) {
                      lab_0x1400069f0_2:
                        // 0x1400069f0
                        v5 = v4;
                        v6 = v5;
                        if (*(int64_t *)(v5 + 16) == 0) {
                            goto lab_0x140006a0f;
                        } else {
                            int64_t v17 = *(int64_t *)(v5 + 40); // 0x1400069fa
                            v7 = v17;
                            if ((int32_t)v3 == 0) {
                                goto lab_0x140006a23;
                            } else {
                                // 0x140006a05
                                v6 = v17;
                                v10 = v9;
                                if (*(int32_t *)(v5 + 48) == 0) {
                                    // break -> 0x140006b19
                                    break;
                                }
                                goto lab_0x140006a0f;
                            }
                        }
                    }
                }
            }
            goto lab_0x140006b19_2;
        }
        // 0x140006b02
        return result;
    }
  lab_0x140006b2f:
    // 0x140006b2f
    if (*(int32_t *)(a1 + 0x4830) == 0 || *(int32_t *)(a1 + 8) < 1) {
        // 0x140006b02
        return 1;
    }
    int64_t v18 = a1 + 0x46f0;
    int32_t v19 = *(int32_t *)(v18 - 52); // 0x140006b71
    int32_t v20 = *(int32_t *)(v18 - 48) + 7; // 0x140006b80
    uint32_t v21 = v20 >> 3; // 0x140006b88
    int64_t v22 = a1; // 0x140006b8f
    int64_t v23; // 0x140006920
    int64_t v24; // 0x140006920
    int64_t v25; // 0x140006920
    int64_t v26; // 0x140006920
    int64_t v27; // 0x140006920
    int64_t v28; // 0x140006920
    int32_t v29; // 0x140006b7c
    uint64_t v30; // 0x140006b84
    int32_t * v31; // 0x140006920
    int32_t * v32; // 0x140006920
    int64_t * v33; // 0x140006920
    int32_t * v34; // 0x140006920
    int64_t * v35; // 0x140006920
    int64_t v36; // 0x140006c59
    int32_t v37; // 0x140006920
    int64_t v38; // 0x140006bc1
    int64_t v39; // 0x140006bd4
    int64_t v40; // 0x140006920
    int16_t * v41; // 0x140006be6
    int64_t v42; // 0x140006bea
    int16_t * v43; // 0x140006bfb
    int16_t * v44; // 0x140006c0c
    int16_t * v45; // 0x140006c1d
    int64_t v46; // 0x140006c4a
    if (v20 >= 0 && v21 != 0) {
        // 0x140006b95
        v29 = v19 + 7;
        v30 = (int64_t)(v29 >> 3);
        v31 = (int32_t *)(v18 - 44);
        v32 = (int32_t *)(v18 + 8);
        v33 = (int64_t *)v18;
        v34 = (int32_t *)(v18 - 68);
        v35 = (int64_t *)(v18 - 32);
        v23 = 0;
        v27 = a1;
        if (v29 >= 8) {
            // 0x140006ba2
            v37 = v23;
            v46 = 0;
            v26 = 0;
            v38 = 2 * (int64_t)(64 * (*v32 * v37 + (int32_t)v46)) + *v33;
            v39 = a1 + 0x3488 + 128 * (int64_t)*v34 - v38;
            v42 = v38 + 2;
            for (int64_t i = 16; i > 0; i--) {
                // 0x140006be0
                v24 = v42;
                v40 = v24 - 2;
                v41 = (int16_t *)v40;
                v42 = v24 + 8;
                *v41 = *v41 * *(int16_t *)(v40 + v39);
                v43 = (int16_t *)v24;
                *v43 = *v43 * *(int16_t *)(v24 + v39);
                v44 = (int16_t *)(v24 + 2);
                *v44 = *v44 * *(int16_t *)(v39 - 6 + v42);
                v45 = (int16_t *)(v24 + 4);
                *v45 = *v45 * *(int16_t *)(v39 - 4 + v42);
            }
            // 0x140006c2e
            v46 = v46 + 1 & 0xffffffff;
            v25 = v26 + 8;
            while (v46 < v30) {
                // 0x140006ba2
                v26 = v25;
                v38 = 2 * (int64_t)(64 * (*v32 * v37 + (int32_t)v46)) + *v33;
                v39 = a1 + 0x3488 + 128 * (int64_t)*v34 - v38;
                v42 = v38 + 2;
                for (int64_t i = 16; i > 0; i--) {
                    // 0x140006be0
                    v24 = v42;
                    v40 = v24 - 2;
                    v41 = (int16_t *)v40;
                    v42 = v24 + 8;
                    *v41 = *v41 * *(int16_t *)(v40 + v39);
                    v43 = (int16_t *)v24;
                    *v43 = *v43 * *(int16_t *)(v24 + v39);
                    v44 = (int16_t *)(v24 + 2);
                    *v44 = *v44 * *(int16_t *)(v39 - 6 + v42);
                    v45 = (int16_t *)(v24 + 4);
                    *v45 = *v45 * *(int16_t *)(v39 - 4 + v42);
                }
                // 0x140006c2e
                v46 = v46 + 1 & 0xffffffff;
                v25 = v26 + 8;
            }
            // 0x140006c59
            v27 = *v35 + v26 + (int64_t)(8 * v37 * *v31);
        }
        // 0x140006c59
        v28 = v27;
        v36 = v23 + 1 & 0xffffffff;
        v22 = v28;
        while (v36 < (int64_t)v21) {
            // 0x140006b95
            v23 = v36;
            v27 = v28;
            if (v29 >= 8) {
                // 0x140006ba2
                v37 = v23;
                v46 = 0;
                v26 = 0;
                v38 = 2 * (int64_t)(64 * (*v32 * v37 + (int32_t)v46)) + *v33;
                v39 = a1 + 0x3488 + 128 * (int64_t)*v34 - v38;
                v42 = v38 + 2;
                for (int64_t i = 16; i > 0; i--) {
                    // 0x140006be0
                    v24 = v42;
                    v40 = v24 - 2;
                    v41 = (int16_t *)v40;
                    v42 = v24 + 8;
                    *v41 = *v41 * *(int16_t *)(v40 + v39);
                    v43 = (int16_t *)v24;
                    *v43 = *v43 * *(int16_t *)(v24 + v39);
                    v44 = (int16_t *)(v24 + 2);
                    *v44 = *v44 * *(int16_t *)(v39 - 6 + v42);
                    v45 = (int16_t *)(v24 + 4);
                    *v45 = *v45 * *(int16_t *)(v39 - 4 + v42);
                }
                // 0x140006c2e
                v46 = v46 + 1 & 0xffffffff;
                v25 = v26 + 8;
                while (v46 < v30) {
                    // 0x140006ba2
                    v26 = v25;
                    v38 = 2 * (int64_t)(64 * (*v32 * v37 + (int32_t)v46)) + *v33;
                    v39 = a1 + 0x3488 + 128 * (int64_t)*v34 - v38;
                    v42 = v38 + 2;
                    for (int64_t i = 16; i > 0; i--) {
                        // 0x140006be0
                        v24 = v42;
                        v40 = v24 - 2;
                        v41 = (int16_t *)v40;
                        v42 = v24 + 8;
                        *v41 = *v41 * *(int16_t *)(v40 + v39);
                        v43 = (int16_t *)v24;
                        *v43 = *v43 * *(int16_t *)(v24 + v39);
                        v44 = (int16_t *)(v24 + 2);
                        *v44 = *v44 * *(int16_t *)(v39 - 6 + v42);
                        v45 = (int16_t *)(v24 + 4);
                        *v45 = *v45 * *(int16_t *)(v39 - 4 + v42);
                    }
                    // 0x140006c2e
                    v46 = v46 + 1 & 0xffffffff;
                    v25 = v26 + 8;
                }
                // 0x140006c59
                v27 = *v35 + v26 + (int64_t)(8 * v37 * *v31);
            }
            // 0x140006c59
            v28 = v27;
            v36 = v23 + 1 & 0xffffffff;
            v22 = v28;
        }
    }
    int64_t v47 = 1; // 0x140006c68
    result = 1;
    int64_t v48 = v18 + 96; // 0x140006c73
    int64_t v49 = v47 & 0xffffffff; // 0x140006c73
    while (*(int32_t *)(v22 + 8) > (int32_t)v47) {
        // 0x140006b71
        v18 = v48;
        int64_t v50 = v22;
        v19 = *(int32_t *)(v18 - 52);
        v20 = *(int32_t *)(v18 - 48) + 7;
        v21 = v20 >> 3;
        v22 = v50;
        if (v20 >= 0 && v21 != 0) {
            // 0x140006b95
            v29 = v19 + 7;
            v30 = (int64_t)(v29 >> 3);
            v31 = (int32_t *)(v18 - 44);
            v32 = (int32_t *)(v18 + 8);
            v33 = (int64_t *)v18;
            v34 = (int32_t *)(v18 - 68);
            v35 = (int64_t *)(v18 - 32);
            v23 = 0;
            v27 = v50;
            if (v29 >= 8) {
                // 0x140006ba2
                v37 = v23;
                v46 = 0;
                v26 = 0;
                v38 = 2 * (int64_t)(64 * (*v32 * v37 + (int32_t)v46)) + *v33;
                v39 = a1 + 0x3488 + 128 * (int64_t)*v34 - v38;
                v42 = v38 + 2;
                for (int64_t i = 16; i > 0; i--) {
                    // 0x140006be0
                    v24 = v42;
                    v40 = v24 - 2;
                    v41 = (int16_t *)v40;
                    v42 = v24 + 8;
                    *v41 = *v41 * *(int16_t *)(v40 + v39);
                    v43 = (int16_t *)v24;
                    *v43 = *v43 * *(int16_t *)(v24 + v39);
                    v44 = (int16_t *)(v24 + 2);
                    *v44 = *v44 * *(int16_t *)(v39 - 6 + v42);
                    v45 = (int16_t *)(v24 + 4);
                    *v45 = *v45 * *(int16_t *)(v39 - 4 + v42);
                }
                // 0x140006c2e
                v46 = v46 + 1 & 0xffffffff;
                v25 = v26 + 8;
                while (v46 < v30) {
                    // 0x140006ba2
                    v26 = v25;
                    v38 = 2 * (int64_t)(64 * (*v32 * v37 + (int32_t)v46)) + *v33;
                    v39 = a1 + 0x3488 + 128 * (int64_t)*v34 - v38;
                    v42 = v38 + 2;
                    for (int64_t i = 16; i > 0; i--) {
                        // 0x140006be0
                        v24 = v42;
                        v40 = v24 - 2;
                        v41 = (int16_t *)v40;
                        v42 = v24 + 8;
                        *v41 = *v41 * *(int16_t *)(v40 + v39);
                        v43 = (int16_t *)v24;
                        *v43 = *v43 * *(int16_t *)(v24 + v39);
                        v44 = (int16_t *)(v24 + 2);
                        *v44 = *v44 * *(int16_t *)(v39 - 6 + v42);
                        v45 = (int16_t *)(v24 + 4);
                        *v45 = *v45 * *(int16_t *)(v39 - 4 + v42);
                    }
                    // 0x140006c2e
                    v46 = v46 + 1 & 0xffffffff;
                    v25 = v26 + 8;
                }
                // 0x140006c59
                v27 = *v35 + v26 + (int64_t)(8 * v37 * *v31);
            }
            // 0x140006c59
            v28 = v27;
            v36 = v23 + 1 & 0xffffffff;
            v22 = v28;
            while (v36 < (int64_t)v21) {
                // 0x140006b95
                v23 = v36;
                v27 = v28;
                if (v29 >= 8) {
                    // 0x140006ba2
                    v37 = v23;
                    v46 = 0;
                    v26 = 0;
                    v38 = 2 * (int64_t)(64 * (*v32 * v37 + (int32_t)v46)) + *v33;
                    v39 = a1 + 0x3488 + 128 * (int64_t)*v34 - v38;
                    v42 = v38 + 2;
                    for (int64_t i = 16; i > 0; i--) {
                        // 0x140006be0
                        v24 = v42;
                        v40 = v24 - 2;
                        v41 = (int16_t *)v40;
                        v42 = v24 + 8;
                        *v41 = *v41 * *(int16_t *)(v40 + v39);
                        v43 = (int16_t *)v24;
                        *v43 = *v43 * *(int16_t *)(v24 + v39);
                        v44 = (int16_t *)(v24 + 2);
                        *v44 = *v44 * *(int16_t *)(v39 - 6 + v42);
                        v45 = (int16_t *)(v24 + 4);
                        *v45 = *v45 * *(int16_t *)(v39 - 4 + v42);
                    }
                    // 0x140006c2e
                    v46 = v46 + 1 & 0xffffffff;
                    v25 = v26 + 8;
                    while (v46 < v30) {
                        // 0x140006ba2
                        v26 = v25;
                        v38 = 2 * (int64_t)(64 * (*v32 * v37 + (int32_t)v46)) + *v33;
                        v39 = a1 + 0x3488 + 128 * (int64_t)*v34 - v38;
                        v42 = v38 + 2;
                        for (int64_t i = 16; i > 0; i--) {
                            // 0x140006be0
                            v24 = v42;
                            v40 = v24 - 2;
                            v41 = (int16_t *)v40;
                            v42 = v24 + 8;
                            *v41 = *v41 * *(int16_t *)(v40 + v39);
                            v43 = (int16_t *)v24;
                            *v43 = *v43 * *(int16_t *)(v24 + v39);
                            v44 = (int16_t *)(v24 + 2);
                            *v44 = *v44 * *(int16_t *)(v39 - 6 + v42);
                            v45 = (int16_t *)(v24 + 4);
                            *v45 = *v45 * *(int16_t *)(v39 - 4 + v42);
                        }
                        // 0x140006c2e
                        v46 = v46 + 1 & 0xffffffff;
                        v25 = v26 + 8;
                    }
                    // 0x140006c59
                    v27 = *v35 + v26 + (int64_t)(8 * v37 * *v31);
                }
                // 0x140006c59
                v28 = v27;
                v36 = v23 + 1 & 0xffffffff;
                v22 = v28;
            }
        }
        // 0x140006c65
        v47 = v49 + 1;
        result = 1;
        v48 = v18 + 96;
        v49 = v47 & 0xffffffff;
    }
    // 0x140006b02
    return result;
  lab_0x140006a0f:
    // 0x140006a0f
    v7 = v6;
    v10 = v9;
    if (*(int64_t *)(v5 + 192) >= *(int64_t *)(v5 + 200)) {
        // break -> 0x140006b19
        goto lab_0x140006b19_2;
    }
    goto lab_0x140006a23;
  lab_0x140006a23:;
    int64_t v51 = v7;
    int64_t * v52 = (int64_t *)(v51 + 192); // 0x140006a26
    int64_t v53 = *v52; // 0x140006a26
    int64_t v54 = v53; // 0x140006a34
    if (v53 < *(int64_t *)(v51 + 200)) {
        goto lab_0x140006a4b;
    } else {
        // 0x140006a36
        if (*(int32_t *)(v51 + 48) == 0) {
            goto lab_0x1400069f0;
        } else {
            // 0x140006a3c
            function_140001d70(v51);
            v54 = *v52;
            goto lab_0x140006a4b;
        }
    }
  lab_0x140006a4b:;
    unsigned char v55 = *(char *)v54; // 0x140006a4b
    int64_t v56 = v55; // 0x140006a4b
    int64_t v57 = v54 + 1; // 0x140006a4e
    *v52 = v57;
    int64_t v58 = v57; // 0x140006a5b
    int64_t v59 = v56; // 0x140006a5b
    if (v55 == -1) {
        int64_t * v60 = (int64_t *)(v56 + 192); // 0x140006a60
        uint64_t v61 = *v60; // 0x140006a60
        if (v61 >= *(int64_t *)(v56 + 200)) {
            // 0x140006a88
            if (*(int32_t *)(v56 + 48) == 0) {
                // 0x140006ab2
                *v11 = 0;
                v10 = v9;
                goto lab_0x140006b19_2;
            } else {
                // 0x140006a8e
                function_140001d70(v56);
                int64_t v62 = *v60; // 0x140006a96
                *v60 = v62 + 1;
                *v11 = *(char *)v62;
                v10 = v9;
                goto lab_0x140006b19_2;
            }
        } else {
            // 0x140006a70
            *v60 = v61 + 1;
            *v11 = *(char *)v61;
            v10 = v9;
            goto lab_0x140006b19_2;
        }
    }
    goto lab_0x1400069f0;
  lab_0x1400069f0:
    // 0x1400069f0
    v3 = v58;
    v4 = v59;
    goto lab_0x1400069f0_2;
  lab_0x140006b19_2:;
    int64_t v63 = function_140004b40(a1) & 255; // 0x140006b21
    v2 = v63;
    v8 = v10;
    if (v63 == 217) {
        goto lab_0x140006b2f;
    }
    goto lab_0x1400069b1;
}

// Address range: 0x140006cd0 - 0x140006cd4
int64_t function_140006cd0(void) {
    // 0x140006cd0
    int64_t result; // 0x140006cd0
    return result;
}

// Address range: 0x140006ce0 - 0x140006f0b
int64_t function_140006ce0(uint64_t result, uint64_t a2, uint64_t a3, int64_t a4) {
    uint32_t v1 = (int32_t)a4; // 0x140006cea
    int64_t v2 = 0; // 0x140006ced
    if (v1 >= 1) {
        // 0x140006cf3
        v2 = 0;
        if (v1 >= 16 && g68 >= 2) {
            int64_t v3 = 0x100000000 * a4 >> 32; // 0x140006d0a
            int64_t v4 = v3 - 1; // 0x140006d0d
            uint64_t v5 = v4 + result; // 0x140006d14
            v2 = 0;
            if (v4 + a3 >= result != v5 >= a3) {
                // 0x140006d26
                v2 = 0;
                if (v4 + a2 >= result != v5 >= a2) {
                    int128_t v6 = __asm_movdqa(g41); // 0x140006d47
                    int128_t v7 = __asm_movdqa(g39); // 0x140006d53
                    int64_t v8 = a2 - a3; // 0x140006d6d
                    int64_t v9 = result - a3; // 0x140006d70
                    int128_t v10 = __asm_movd(2); // 0x140006d7a
                    int64_t v11 = a3 + 4;
                    int64_t v12 = v11 + v8;
                    int64_t v13 = v11 + 16; // 0x140006d87
                    int128_t v14 = __asm_pmovzxbd(__asm_movd(*(int32_t *)(v12 - 4))); // 0x140006d8b
                    int128_t v15 = __asm_movd(*(int32_t *)(v11 - 4)); // 0x140006d90
                    int128_t v16 = __asm_paddd(__asm_pmulld(v14, v6), __asm_pmovzxbd(v15)); // 0x140006da3
                    int64_t v17 = 16; // 0x140006da7
                    int128_t v18 = __asm_pshufhw(__asm_pshuflw(__asm_psrad_16(__asm_paddd(v16, v7), v10), -40), -40); // 0x140006db7
                    int128_t v19 = __asm_movd(*(int32_t *)v12); // 0x140006dbc
                    int128_t v20 = __asm_pand(__asm_pshufd(v18, -40), g46); // 0x140006dc7
                    int64_t v21 = __asm_movd_17(__asm_packuswb(v20, v20)); // 0x140006dd3
                    int64_t v22 = v13 + v9;
                    *(int32_t *)(v22 - 20) = (int32_t)v21;
                    int128_t v23 = __asm_pmovzxbd(v19); // 0x140006dd9
                    int128_t v24 = __asm_paddd(__asm_pmulld(v23, v6), __asm_pmovzxbd(__asm_movd(*(int32_t *)v11))); // 0x140006ded
                    int128_t v25 = __asm_pshufhw(__asm_pshuflw(__asm_psrad_16(__asm_paddd(v24, v7), v10), -40), -40); // 0x140006dfe
                    int64_t v26 = v13 + v8;
                    int128_t v27 = __asm_movd(*(int32_t *)(v26 - 12)); // 0x140006e03
                    int128_t v28 = __asm_pand(__asm_pshufd(v25, -40), g46); // 0x140006e0e
                    *(int32_t *)(v11 + v9) = (int32_t)__asm_movd_17(__asm_packuswb(v28, v28));
                    int128_t v29 = __asm_pmovzxbd(v27); // 0x140006e20
                    int128_t v30 = __asm_movd(*(int32_t *)(v11 + 4)); // 0x140006e25
                    int128_t v31 = __asm_paddd(__asm_pmulld(v29, v6), __asm_pmovzxbd(v30)); // 0x140006e34
                    int128_t v32 = __asm_pshufhw(__asm_pshuflw(__asm_psrad_16(__asm_paddd(v31, v7), v10), -40), -40); // 0x140006e45
                    int128_t v33 = __asm_movd(*(int32_t *)(v26 - 8)); // 0x140006e4a
                    int128_t v34 = __asm_pand(__asm_pshufd(v32, -40), g46); // 0x140006e55
                    *(int32_t *)(v22 - 12) = (int32_t)__asm_movd_17(__asm_packuswb(v34, v34));
                    int128_t v35 = __asm_pmovzxbd(v33); // 0x140006e67
                    int128_t v36 = __asm_movd(*(int32_t *)(v11 + 8)); // 0x140006e6c
                    int128_t v37 = __asm_paddd(__asm_pmulld(v35, v6), __asm_pmovzxbd(v36)); // 0x140006e7b
                    int128_t v38 = __asm_pshufhw(__asm_pshuflw(__asm_psrad_16(__asm_paddd(v37, v7), v10), -40), -40); // 0x140006e8c
                    int128_t v39 = __asm_pand(__asm_pshufd(v38, -40), g46); // 0x140006e96
                    *(int32_t *)(v22 - 8) = (int32_t)__asm_movd_17(__asm_packuswb(v39, v39));
                    int64_t v40 = v17 & 0xffffffff; // 0x140006eab
                    while (-4 - a3 + v13 < (v3 & -16)) {
                        // 0x140006d81
                        v11 = v13;
                        v12 = v11 + v8;
                        v13 = v11 + 16;
                        v14 = __asm_pmovzxbd(__asm_movd(*(int32_t *)(v12 - 4)));
                        v15 = __asm_movd(*(int32_t *)(v11 - 4));
                        v16 = __asm_paddd(__asm_pmulld(v14, v6), __asm_pmovzxbd(v15));
                        v17 = v40 + 16;
                        v18 = __asm_pshufhw(__asm_pshuflw(__asm_psrad_16(__asm_paddd(v16, v7), v10), -40), -40);
                        v19 = __asm_movd(*(int32_t *)v12);
                        v20 = __asm_pand(__asm_pshufd(v18, -40), g46);
                        v21 = __asm_movd_17(__asm_packuswb(v20, v20));
                        v22 = v13 + v9;
                        *(int32_t *)(v22 - 20) = (int32_t)v21;
                        v23 = __asm_pmovzxbd(v19);
                        v24 = __asm_paddd(__asm_pmulld(v23, v6), __asm_pmovzxbd(__asm_movd(*(int32_t *)v11)));
                        v25 = __asm_pshufhw(__asm_pshuflw(__asm_psrad_16(__asm_paddd(v24, v7), v10), -40), -40);
                        v26 = v13 + v8;
                        v27 = __asm_movd(*(int32_t *)(v26 - 12));
                        v28 = __asm_pand(__asm_pshufd(v25, -40), g46);
                        *(int32_t *)(v11 + v9) = (int32_t)__asm_movd_17(__asm_packuswb(v28, v28));
                        v29 = __asm_pmovzxbd(v27);
                        v30 = __asm_movd(*(int32_t *)(v11 + 4));
                        v31 = __asm_paddd(__asm_pmulld(v29, v6), __asm_pmovzxbd(v30));
                        v32 = __asm_pshufhw(__asm_pshuflw(__asm_psrad_16(__asm_paddd(v31, v7), v10), -40), -40);
                        v33 = __asm_movd(*(int32_t *)(v26 - 8));
                        v34 = __asm_pand(__asm_pshufd(v32, -40), g46);
                        *(int32_t *)(v22 - 12) = (int32_t)__asm_movd_17(__asm_packuswb(v34, v34));
                        v35 = __asm_pmovzxbd(v33);
                        v36 = __asm_movd(*(int32_t *)(v11 + 8));
                        v37 = __asm_paddd(__asm_pmulld(v35, v6), __asm_pmovzxbd(v36));
                        v38 = __asm_pshufhw(__asm_pshuflw(__asm_psrad_16(__asm_paddd(v37, v7), v10), -40), -40);
                        v39 = __asm_pand(__asm_pshufd(v38, -40), g46);
                        *(int32_t *)(v22 - 8) = (int32_t)__asm_movd_17(__asm_packuswb(v39, v39));
                        v40 = v17 & 0xffffffff;
                    }
                    // 0x140006ec0
                    v2 = 0x100000000 * v17 >> 32;
                }
            }
        }
    }
    uint64_t v41 = 0x100000000 * a4 >> 32; // 0x140006ec3
    if (v41 <= v2) {
        // 0x140006f06
        return result;
    }
    int64_t v42 = result - a3; // 0x140006ed2
    int64_t v43 = v2 + a3; // 0x140006edb
    int64_t v44 = v41 - v2; // 0x140006edb
    unsigned char v45 = *(char *)(a2 - a3 + v43); // 0x140006ee0
    unsigned char v46 = *(char *)v43; // 0x140006ee5
    *(char *)(v42 + v43) = (char)(((int32_t)v46 + 2 + 3 * (int32_t)v45) / 4);
    v44--;
    v43++;
    while (v44 != 0) {
        // 0x140006ee0
        v45 = *(char *)(a2 - a3 + v43);
        v46 = *(char *)v43;
        *(char *)(v42 + v43) = (char)(((int32_t)v46 + 2 + 3 * (int32_t)v45) / 4);
        v44--;
        v43++;
    }
    // 0x140006f06
    return result;
}

// Address range: 0x140006f10 - 0x140006ff2
int64_t function_140006f10(int64_t result, int64_t a2) {
    int64_t v1 = a2;
    char v2 = a2;
    *(char *)result = v2;
    int64_t v3; // 0x140006f10
    if ((int32_t)v3 == 1) {
        // 0x140006f25
        *(char *)(result + 1) = v2;
        return result;
    }
    unsigned char v4 = *(char *)&v1; // 0x140006f30
    unsigned char v5 = *(char *)(v1 + 1); // 0x140006f33
    int64_t v6 = 0x100000000 * v3;
    int64_t v7 = v6 >> 32; // 0x140006f44
    *(char *)(result + 1) = (char)((3 * (int32_t)v4 + 2 + (int32_t)v5) / 4);
    int64_t v8 = v7 - 1; // 0x140006f5c
    int64_t v9 = v7 - 2;
    int64_t v10 = 2; // 0x140006f63
    if (v6 >= 0x300000000) {
        int64_t v11 = a2 + 2; // 0x140006f71
        v1 = v11;
        int64_t v12 = v9; // 0x140006f75
        int64_t v13 = result + 2;
        int64_t v14 = (int64_t)*(char *)(v11 - 1); // 0x140006f80
        v1 = v11 + 1;
        unsigned char v15 = *(char *)(v11 - 2); // 0x140006f92
        int32_t v16 = v14 + 2 + 2 * v14; // 0x140006f96
        *(char *)v13 = (char)((v16 + (int32_t)v15) / 4);
        unsigned char v17 = *(char *)v11; // 0x140006f9f
        *(char *)(result + 3) = (char)(((int32_t)v17 + v16) / 4);
        while (v12 != 1) {
            // 0x140006f80
            v12--;
            int64_t v18 = v1; // 0x140006f10
            int64_t v19 = v13;
            v13 = v19 + 2;
            v14 = (int64_t)*(char *)(v18 - 1);
            v1 = v18 + 1;
            v15 = *(char *)(v18 - 2);
            v16 = v14 + 2 + 2 * v14;
            *(char *)v13 = (char)((v16 + (int32_t)v15) / 4);
            v17 = *(char *)v18;
            *(char *)(v19 + 3) = (char)(((int32_t)v17 + v16) / 4);
        }
        // 0x140006fb2
        v10 = 2 * (int32_t)v8;
    }
    char * v20 = (char *)(v8 + a2); // 0x140006fb2
    unsigned char v21 = *v20; // 0x140006fb2
    unsigned char v22 = *(char *)(v9 + a2); // 0x140006fc4
    *(char *)(v10 + result) = (char)(((int32_t)v21 + 2 + 3 * (int32_t)v22) / 4);
    *(char *)((v10 | 1) + result) = *v20;
    return result;
}

// Address range: 0x140007000 - 0x1400070c0
int64_t function_140007000(int64_t result, int64_t a2, int64_t a3, int64_t a4) {
    int64_t v1 = 0x100000000 * a4;
    int64_t v2 = v1 >> 32; // 0x140007013
    int64_t v3; // 0x140007000
    int64_t v4 = 3 * (v3 & 255) + (a3 & 255); // 0x140007019
    if ((int32_t)v2 == 1) {
        char v5 = (v4 + 2) / 4; // 0x140007027
        *(char *)(result + 1) = v5;
        *(char *)result = v5;
        return result;
    }
    char v6 = ((int32_t)v4 + 2) / 4;
    *(char *)result = v6;
    if (v1 < 0x200000000) {
        // 0x1400070a0
        *(char *)(result - 1 + (0x200000000 * a4 >> 32)) = v6;
        return result;
    }
    int64_t v7 = v2 - 1; // 0x14000705b
    int64_t v8 = a3; // 0x14000705b
    int64_t v9 = v4;
    int64_t v10 = result + 2;
    v8++;
    unsigned char v11 = *(char *)(a2 - a3 + v8); // 0x14000706b
    int64_t v12 = 3 * (int64_t)v11 + (int64_t)*(char *)v8; // 0x140007077
    *(char *)(result + 1) = (char)(((int32_t)(2 * v9 + 8 + v12) + (int32_t)v9) / 16);
    int32_t v13 = v12;
    *(char *)v10 = (char)(((int32_t)(v9 + 8 + 2 * v12) + v13) / 16);
    v7--;
    while (v7 != 0) {
        int64_t v14 = v10;
        v9 = v12;
        v10 = v14 + 2;
        v8++;
        v11 = *(char *)(a2 - a3 + v8);
        v12 = 3 * (int64_t)v11 + (int64_t)*(char *)v8;
        *(char *)(v14 + 1) = (char)(((int32_t)(2 * v9 + 8 + v12) + (int32_t)v9) / 16);
        v13 = v12;
        *(char *)v10 = (char)(((int32_t)(v9 + 8 + 2 * v12) + v13) / 16);
        v7--;
    }
    // 0x1400070a0
    *(char *)(result - 1 + (0x200000000 * a4 >> 32)) = (char)((v13 + 2) / 4);
    return result;
}

// Address range: 0x1400070c0 - 0x1400072b2
int64_t function_1400070c0(int64_t result, int64_t a2, int64_t a3, int64_t a4) {
    // 0x1400070c0
    int128_t v1; // 0x1400070c0
    int128_t v2 = v1;
    uint64_t v3 = 0x100000000 * a4 >> 32; // 0x1400070d3
    int64_t v4; // 0x1400070c0
    int64_t v5 = 3 * (v4 & 255) + (a3 & 255); // 0x1400070e6
    int32_t v6 = v3; // 0x1400070e8
    if (v6 == 1) {
        char v7 = (v5 + 2) / 4; // 0x1400070f4
        *(char *)(result + 1) = v7;
        *(char *)result = v7;
        return result;
    }
    uint32_t v8 = v6 - 1 & -8; // 0x14000710e
    int64_t v9 = v5; // 0x140007111
    int64_t v10 = 0; // 0x140007111
    if (v8 >= 1) {
        int128_t v11 = __asm_movdqa(g45); // 0x140007117
        int64_t v12 = a2 - a3; // 0x14000712b
        int128_t v13 = __asm_xorps(v2, v2); // 0x140007135
        uint32_t v14 = (v8 - 1) / 8 + 1; // 0x14000713e
        int64_t v15 = result; // 0x14000714e
        int64_t v16 = v14; // 0x14000714e
        int64_t v17 = a3 + 8;
        unsigned char v18 = *(char *)(v17 + v12); // 0x140007150
        int128_t v19 = __asm_movq_18(*(int64_t *)(a3 + v12)); // 0x140007159
        int128_t v20 = __asm_movq_18(*(int64_t *)a3); // 0x140007163
        int128_t v21 = __asm_punpcklbw(v19, v13); // 0x14000716c
        int128_t v22 = __asm_paddw(__asm_psubw(__asm_punpcklbw(v20, v13), v21), __asm_psllw(v21, 2)); // 0x140007187
        int128_t v23 = __asm_movdqa(v22); // 0x14000718b
        int128_t v24 = __asm_movdqa(v22); // 0x14000718f
        int128_t v25 = __asm_pslldq(v23, 2); // 0x140007193
        int128_t v26 = __asm_movdqa(v22); // 0x140007198
        int128_t v27 = __asm_pinsrw(v25, (int32_t)v5, 0); // 0x14000719c
        int128_t v28 = __asm_psllw(v26, 2); // 0x1400071a1
        int128_t v29 = __asm_psubw(v27, v22); // 0x1400071a6
        int128_t v30 = __asm_paddw(v28, v11); // 0x1400071aa
        int128_t v31 = __asm_psrldq(v24, 2); // 0x1400071ae
        int128_t v32 = __asm_paddw(v29, v30); // 0x1400071b3
        int128_t v33 = __asm_pinsrw(v31, 3 * (int32_t)v18 + (int32_t)*(char *)v17, 7); // 0x1400071b7
        int128_t v34 = __asm_paddw(__asm_psubw(v33, v22), v30); // 0x1400071c0
        int128_t v35 = __asm_punpcklwd(__asm_movdqa(v32), v34); // 0x1400071c8
        int64_t v36 = __asm_movdqu(__asm_packuswb(__asm_psrlw_19(v35, 4), __asm_psrlw_19(__asm_punpckhwd(v32, v34), 4))); // 0x1400071de
        *(int128_t *)v15 = (int128_t)v36;
        int64_t v37 = a3 + 7;
        unsigned char v38 = *(char *)v37; // 0x1400071ec
        v9 = 3 * (int64_t)*(char *)(v37 + v12) + (int64_t)v38;
        v16--;
        int64_t v39 = v9; // 0x1400071f7
        v15 += 16;
        while (v16 != 0) {
            int64_t v40 = v17;
            v17 = v40 + 8;
            v18 = *(char *)(v17 + v12);
            v19 = __asm_movq_18(*(int64_t *)(v40 + v12));
            v20 = __asm_movq_18(*(int64_t *)v40);
            v21 = __asm_punpcklbw(v19, v13);
            v22 = __asm_paddw(__asm_psubw(__asm_punpcklbw(v20, v13), v21), __asm_psllw(v21, 2));
            v23 = __asm_movdqa(v22);
            v24 = __asm_movdqa(v22);
            v25 = __asm_pslldq(v23, 2);
            v26 = __asm_movdqa(v22);
            v27 = __asm_pinsrw(v25, (int32_t)v39, 0);
            v28 = __asm_psllw(v26, 2);
            v29 = __asm_psubw(v27, v22);
            v30 = __asm_paddw(v28, v11);
            v31 = __asm_psrldq(v24, 2);
            v32 = __asm_paddw(v29, v30);
            v33 = __asm_pinsrw(v31, 3 * (int32_t)v18 + (int32_t)*(char *)v17, 7);
            v34 = __asm_paddw(__asm_psubw(v33, v22), v30);
            v35 = __asm_punpcklwd(__asm_movdqa(v32), v34);
            v36 = __asm_movdqu(__asm_packuswb(__asm_psrlw_19(v35, 4), __asm_psrlw_19(__asm_punpckhwd(v32, v34), 4)));
            *(int128_t *)v15 = (int128_t)v36;
            v37 = v40 + 7;
            v38 = *(char *)v37;
            v9 = 3 * (int64_t)*(char *)(v37 + v12) + (int64_t)v38;
            v16--;
            v39 = v9;
            v15 += 16;
        }
        // 0x140007207
        v10 = 8 * v14;
    }
    int64_t v41 = 0x100000000 * v10;
    int64_t v42 = v41 >> 32; // 0x14000720b
    unsigned char v43 = *(char *)(v42 + a3); // 0x140007215
    int64_t v44 = 3 * (int64_t)*(char *)(v42 + a2) + (int64_t)v43; // 0x14000721c
    int32_t v45 = v44;
    *(char *)((int64_t)(2 * (int32_t)v10) + result) = (char)(((int32_t)(v9 + 8 + 2 * v44) + v45) / 16);
    int64_t v46 = v41 + 0x100000000;
    uint64_t v47 = v46 >> 32; // 0x140007238
    if (v3 <= v47) {
        // 0x140007290
        *(char *)(result - 1 + (0x200000000 * a4 >> 32)) = (char)((v45 + 2) / 4);
        return result;
    }
    int64_t v48 = v47 + a3; // 0x14000724e
    int64_t v49 = (v46 >> 31) + result; // 0x14000724e
    int64_t v50 = v3 - v47; // 0x14000724e
    int64_t v51 = v44;
    unsigned char v52 = *(char *)(a2 - a3 + v48); // 0x14000725b
    int64_t v53 = 3 * (int64_t)v52 + (int64_t)*(char *)v48; // 0x140007267
    *(char *)(v49 - 1) = (char)(((int32_t)(2 * v51 + 8 + v53) + (int32_t)v51) / 16);
    int32_t v54 = v53;
    *(char *)v49 = (char)(((int32_t)(v51 + 8 + 2 * v53) + v54) / 16);
    v50--;
    v48++;
    v49 += 2;
    while (v50 != 0) {
        // 0x140007250
        v51 = v53;
        v52 = *(char *)(a2 - a3 + v48);
        v53 = 3 * (int64_t)v52 + (int64_t)*(char *)v48;
        *(char *)(v49 - 1) = (char)(((int32_t)(2 * v51 + 8 + v53) + (int32_t)v51) / 16);
        v54 = v53;
        *(char *)v49 = (char)(((int32_t)(v51 + 8 + 2 * v53) + v54) / 16);
        v50--;
        v48++;
        v49 += 2;
    }
    // 0x140007290
    *(char *)(result - 1 + (0x200000000 * a4 >> 32)) = (char)((v54 + 2) / 4);
    return result;
}

// Address range: 0x1400072c0 - 0x1400072ff
int64_t function_1400072c0(int64_t result) {
    // 0x1400072c0
    int64_t v1; // 0x1400072c0
    if ((int32_t)v1 < 1) {
        // 0x1400072fb
        return result;
    }
    // 0x1400072c8
    int32_t v2; // 0x1400072c0
    int64_t v3 = v2; // 0x1400072c8
    int64_t v4 = v1 & 0xffffffff; // 0x1400072d0
    int64_t v5; // 0x1400072c0
    int64_t v6 = v5;
    int64_t v7; // 0x1400072e7
    if (v2 >= 1) {
        // 0x1400072e0
        v7 = 0;
        *(char *)(v7 + result) = *(char *)v6;
        v7++;
        while (v7 != v3) {
            // 0x1400072e0
            *(char *)(v7 + result) = *(char *)v6;
            v7++;
        }
    }
    // 0x1400072ef
    v4--;
    v5 = v6 + 1;
    int64_t v8 = result + v3; // 0x1400072f9
    while (v4 != 0) {
        int64_t v9 = v8;
        v6 = v5;
        if (v2 >= 1) {
            // 0x1400072e0
            v7 = 0;
            *(char *)(v7 + v9) = *(char *)v6;
            v7++;
            while (v7 != v3) {
                // 0x1400072e0
                *(char *)(v7 + v9) = *(char *)v6;
                v7++;
            }
        }
        // 0x1400072ef
        v4--;
        v5 = v6 + 1;
        v8 = v9 + v3;
    }
    // 0x1400072fb
    return result;
}

// Address range: 0x140007300 - 0x140007424
int64_t function_140007300(int64_t a1, int64_t a2, int64_t a3, int64_t a4, int32_t a5, int32_t a6) {
    if (a5 < 1) {
        // 0x140007416
        int64_t result; // 0x140007300
        return result;
    }
    int64_t result2 = a1 + 2; // 0x14000733d
    int64_t v1 = a4; // 0x14000733d
    int64_t v2 = a5; // 0x14000733d
    unsigned char v3 = *(char *)(a3 - a4 + v1); // 0x140007344
    int32_t v4 = (int32_t)*(char *)v1;
    int64_t v5 = 0x100000 * (int64_t)*(char *)(a2 - a4 + v1) | 0x80000; // 0x140007356
    int32_t v6 = v5; // 0x140007381
    int32_t v7 = 0x166f00 * v4 - 0xb378000 + v6; // 0x140007381
    uint32_t v8 = v7 >> 20; // 0x140007384
    int32_t v9 = 0xb6d00 * (128 - v4) + (int32_t)(v5 + (0x58200 * (128 - (int64_t)v3) & 0xffff0000)); // 0x140007392
    uint32_t v10 = v9 >> 20; // 0x14000739f
    int32_t v11 = 0x1c5a00 * (int32_t)v3 - 0xe2d0000 + v6; // 0x1400073a3
    uint32_t v12 = v11 >> 20; // 0x1400073a6
    char v13 = v8 < 256 ? (char)v8 : (char)(v7 > -1);
    char v14 = v10 < 256 ? (char)v10 : (char)(v9 > -1);
    *(char *)(result2 - 2) = v13;
    *(char *)(result2 - 1) = v14;
    *(char *)result2 = v12 < 256 ? (char)v12 : (char)(v11 > -1);
    *(char *)(result2 + 1) = -1;
    result2 += (int64_t)a6;
    v2--;
    v1++;
    while (v2 != 0) {
        // 0x140007340
        v3 = *(char *)(a3 - a4 + v1);
        v4 = (int32_t)*(char *)v1;
        v5 = 0x100000 * (int64_t)*(char *)(a2 - a4 + v1) | 0x80000;
        v6 = v5;
        v7 = 0x166f00 * v4 - 0xb378000 + v6;
        v8 = v7 >> 20;
        v9 = 0xb6d00 * (128 - v4) + (int32_t)(v5 + (0x58200 * (128 - (int64_t)v3) & 0xffff0000));
        v10 = v9 >> 20;
        v11 = 0x1c5a00 * (int32_t)v3 - 0xe2d0000 + v6;
        v12 = v11 >> 20;
        v13 = v8 < 256 ? (char)v8 : (char)(v7 > -1);
        v14 = v10 < 256 ? (char)v10 : (char)(v9 > -1);
        *(char *)(result2 - 2) = v13;
        *(char *)(result2 - 1) = v14;
        *(char *)result2 = v12 < 256 ? (char)v12 : (char)(v11 > -1);
        *(char *)(result2 + 1) = -1;
        result2 += (int64_t)a6;
        v2--;
        v1++;
    }
    // 0x140007416
    return result2;
}

// Address range: 0x140007430 - 0x1400076c5
int64_t function_140007430(void) {
    // 0x140007430
    int128_t v1; // 0x140007430
    int128_t v2 = v1;
    int32_t v3; // 0x140007430
    uint64_t v4 = (int64_t)v3; // 0x14000744e
    int64_t v5 = 0; // 0x14000745d
    int64_t v6; // 0x140007430
    int64_t v7; // 0x140007430
    if (v3 == 4) {
        int128_t v8 = __asm_movdqa(g54); // 0x140007463
        int64_t v9 = __asm_movaps(v1); // 0x14000746b
        int128_t v10 = __asm_movdqa(g52); // 0x140007470
        int64_t v11 = __asm_movaps(v1); // 0x140007478
        int128_t v12 = __asm_movdqa(g58); // 0x14000747e
        int64_t v13 = __asm_movaps(v1); // 0x140007487
        int128_t v14 = __asm_movdqa(g60); // 0x14000748d
        int64_t v15 = __asm_movaps(v1); // 0x140007496
        int128_t v16 = __asm_movdqa(g53); // 0x14000749c
        int64_t v17 = __asm_movaps(v1); // 0x1400074a5
        int128_t v18 = __asm_movdqa(g46); // 0x1400074aa
        v5 = 0;
        int64_t v19; // 0x140007430
        if (v3 >= 8) {
            int64_t v20 = __asm_movaps(v2); // 0x1400074bc
            int128_t v21 = __asm_xorps(v2, v2); // 0x1400074c1
            int64_t v22 = 0;
            int64_t v23 = 0x100000000 * v22 >> 32; // 0x1400074d0
            int128_t v24 = __asm_movdqa(v21); // 0x1400074d3
            int64_t v25 = v22 + 8 & 0xffffffff; // 0x1400074d7
            int128_t v26 = __asm_movdqa(v21); // 0x1400074db
            int128_t v27 = __asm_movdqa(v8); // 0x1400074df
            int128_t v28 = __asm_punpcklbw(v24, __asm_pxor(__asm_movq_18(*(int64_t *)(v23 + v7)), v8)); // 0x1400074ed
            int128_t v29 = __asm_movq_18(*(int64_t *)(v23 + v7)); // 0x1400074f1
            int128_t v30 = __asm_movdqa(v28); // 0x1400074f6
            int128_t v31 = __asm_pxor(v29, v8); // 0x1400074fa
            int128_t v32 = __asm_pmulhw(v30, v10); // 0x1400074fe
            int128_t v33 = __asm_punpcklbw(v26, v31); // 0x140007502
            int128_t v34 = __asm_punpcklbw(v27, __asm_movq_18(*(int64_t *)(v23 + v7))); // 0x14000750f
            int128_t v35 = __asm_movdqa(v33); // 0x140007513
            int128_t v36 = __asm_psrlw_19(v34, 4); // 0x140007517
            int128_t v37 = __asm_paddw(v32, v36); // 0x14000751c
            int128_t v38 = __asm_pmulhw(v35, v16); // 0x140007520
            int128_t v39 = __asm_pmulhw(v33, v14); // 0x140007525
            int128_t v40 = __asm_psraw(v37, 4); // 0x14000752a
            int128_t v41 = __asm_pmulhw(v28, v12); // 0x14000752f
            int128_t v42 = __asm_paddw(v38, v36); // 0x140007534
            int128_t v43 = __asm_paddw(v39, v36); // 0x140007538
            int128_t v44 = __asm_packuswb(v40, __asm_psraw(v42, 4)); // 0x140007541
            int128_t v45 = __asm_paddw(v43, v41); // 0x140007545
            int128_t v46 = __asm_movdqa(v44); // 0x140007549
            int128_t v47 = __asm_packuswb(__asm_psraw(v45, 4), v18); // 0x140007552
            int128_t v48 = __asm_punpcklbw(v46, v47); // 0x140007557
            int128_t v49 = __asm_movdqa(v48); // 0x14000755b
            int128_t v50 = __asm_punpckhbw(v44, v47); // 0x14000755f
            int128_t v51 = __asm_punpcklwd(v49, v50); // 0x140007563
            int128_t v52 = __asm_punpckhwd(v48, v50); // 0x140007567
            int64_t v53; // 0x140007430
            *(int128_t *)v53 = (int128_t)__asm_movdqu(v51);
            *(int128_t *)(v53 + 16) = (int128_t)__asm_movdqu(v52);
            int64_t v54 = v53 + 32; // 0x140007574
            v53 = v54;
            while ((v22 + 15 & 0xffffffff) < v4) {
                // 0x1400074d0
                v22 = v25;
                v23 = 0x100000000 * v22 >> 32;
                v24 = __asm_movdqa(v21);
                v25 = v22 + 8 & 0xffffffff;
                v26 = __asm_movdqa(v21);
                v27 = __asm_movdqa(v8);
                v28 = __asm_punpcklbw(v24, __asm_pxor(__asm_movq_18(*(int64_t *)(v23 + v7)), v8));
                v29 = __asm_movq_18(*(int64_t *)(v23 + v7));
                v30 = __asm_movdqa(v28);
                v31 = __asm_pxor(v29, v8);
                v32 = __asm_pmulhw(v30, v10);
                v33 = __asm_punpcklbw(v26, v31);
                v34 = __asm_punpcklbw(v27, __asm_movq_18(*(int64_t *)(v23 + v7)));
                v35 = __asm_movdqa(v33);
                v36 = __asm_psrlw_19(v34, 4);
                v37 = __asm_paddw(v32, v36);
                v38 = __asm_pmulhw(v35, v16);
                v39 = __asm_pmulhw(v33, v14);
                v40 = __asm_psraw(v37, 4);
                v41 = __asm_pmulhw(v28, v12);
                v42 = __asm_paddw(v38, v36);
                v43 = __asm_paddw(v39, v36);
                v44 = __asm_packuswb(v40, __asm_psraw(v42, 4));
                v45 = __asm_paddw(v43, v41);
                v46 = __asm_movdqa(v44);
                v47 = __asm_packuswb(__asm_psraw(v45, 4), v18);
                v48 = __asm_punpcklbw(v46, v47);
                v49 = __asm_movdqa(v48);
                v50 = __asm_punpckhbw(v44, v47);
                v51 = __asm_punpcklwd(v49, v50);
                v52 = __asm_punpckhwd(v48, v50);
                *(int128_t *)v53 = (int128_t)__asm_movdqu(v51);
                *(int128_t *)(v53 + 16) = (int128_t)__asm_movdqu(v52);
                v54 = v53 + 32;
                v53 = v54;
            }
            // 0x140007580
            __asm_movaps_2((int128_t)v20);
            v19 = v54;
            v5 = v25;
        }
        // 0x140007585
        __asm_movaps_2((int128_t)v15);
        __asm_movaps_2((int128_t)v13);
        __asm_movaps_2((int128_t)v11);
        __asm_movaps_2((int128_t)v9);
        __asm_movaps_2((int128_t)v17);
        v6 = v19;
    }
    int64_t result = 0x100000000 * v5 >> 32; // 0x1400075a1
    if (result >= v4) {
        // 0x1400076b4
        return result;
    }
    int64_t v55 = result + v7; // 0x1400075d8
    int64_t v56 = v4 - result; // 0x1400075d8
    int64_t v57 = v6 + 2; // 0x1400075d8
    unsigned char v58 = *(char *)v55; // 0x1400075e3
    int32_t v59 = (int32_t)*(char *)v55;
    int64_t v60 = 0x100000 * (int64_t)*(char *)v55 | 0x80000; // 0x1400075f4
    int32_t v61 = v60; // 0x14000761d
    int32_t v62 = 0x166f00 * v59 - 0xb378000 + v61; // 0x14000761d
    uint32_t v63 = v62 >> 20; // 0x140007620
    int32_t v64 = 0xb6d00 * (128 - v59) + (int32_t)(v60 + (0x58200 * (128 - (int64_t)v58) & 0xffff0000)); // 0x14000762e
    uint32_t v65 = v64 >> 20; // 0x14000763a
    int32_t v66 = 0x1c5a00 * (int32_t)v58 - 0xe2d0000 + v61; // 0x14000763d
    uint32_t v67 = v66 >> 20; // 0x140007640
    char v68 = v63 < 256 ? (char)v63 : (char)(v62 > -1);
    char v69 = v65 < 256 ? (char)v65 : (char)(v64 > -1);
    int64_t result2 = v67 < 256 ? (int64_t)v67 : v66 < 0 ? 0 : 255;
    *(char *)(v57 - 2) = v68;
    *(char *)(v57 - 1) = v69;
    *(char *)v57 = (char)result2;
    *(char *)(v57 + 1) = -1;
    v56--;
    v55++;
    v57 += (int64_t)v3;
    while (v56 != 0) {
        // 0x1400075e0
        v58 = *(char *)v55;
        v59 = (int32_t)*(char *)v55;
        v60 = 0x100000 * (int64_t)*(char *)v55 | 0x80000;
        v61 = v60;
        v62 = 0x166f00 * v59 - 0xb378000 + v61;
        v63 = v62 >> 20;
        v64 = 0xb6d00 * (128 - v59) + (int32_t)(v60 + (0x58200 * (128 - (int64_t)v58) & 0xffff0000));
        v65 = v64 >> 20;
        v66 = 0x1c5a00 * (int32_t)v58 - 0xe2d0000 + v61;
        v67 = v66 >> 20;
        v68 = v63 < 256 ? (char)v63 : (char)(v62 > -1);
        v69 = v65 < 256 ? (char)v65 : (char)(v64 > -1);
        result2 = v67 < 256 ? (int64_t)v67 : v66 < 0 ? 0 : 255;
        *(char *)(v57 - 2) = v68;
        *(char *)(v57 - 1) = v69;
        *(char *)v57 = (char)result2;
        *(char *)(v57 + 1) = -1;
        v56--;
        v55++;
        v57 += (int64_t)v3;
    }
    // 0x1400076b4
    return result2;
}

// Address range: 0x1400076d0 - 0x140007742
int64_t function_1400076d0(int64_t a1) {
    struct struct2 v1; // 0x14000770a
    int64_t * v2 = (int64_t *)(a1 + 0x4870); // 0x1400076e0
    *v2 = 0x140003cf0;
    int64_t * v3 = (int64_t *)(a1 + 0x4878); // 0x1400076ee
    *v3 = 0x140007300;
    int64_t * v4 = (int64_t *)(a1 + 0x4880); // 0x1400076fc
    *v4 = 0x140007000;
    v1 = __asm_cpuid(1);
    int64_t result = v1.e0; // 0x140007710
    if ((v1.e3 & 0x4000000) != 0) {
        // 0x140007712
        *v2 = 0x140004310;
        *v3 = 0x140007430;
        *v4 = 0x1400070c0;
        result = 0x1400070c0;
    }
    // 0x14000773c
    return result;
}

// Address range: 0x140007750 - 0x140007fe0
int64_t function_140007750(int64_t a1, int64_t a2, int64_t a3, int64_t a4, int64_t a5) {
    // 0x140007750
    int128_t v1; // 0x140007750
    int128_t v2 = v1;
    int128_t v3 = v1;
    int64_t v4 = a1;
    *(int32_t *)(a1 + 8) = 0;
    uint32_t v5 = (int32_t)a5; // 0x1400077a0
    if (v5 >= 5) {
        // 0x140007fc0
        *(int64_t *)(*(int64_t *)__readgsqword(88) + 16) = (int64_t)"bad req_comp";
        // 0x140007f72
        __security_check_cookie(g66);
        return &g103;
    }
    int64_t v6 = function_140006920(v4, a2); // 0x1400077aa
    uint32_t v7 = *(int32_t *)(v4 + 8);
    int64_t v8 = v7;
    if ((int32_t)v6 == 0) {
        // 0x1400077b6
        function_140006030(a1, v8, 0);
        // 0x140007f72
        __security_check_cookie(g66);
        return &g103;
    }
    int64_t v9 = a5 & 0xffffffff; // 0x1400077ea
    if (v5 == 0) {
        // 0x1400077ec
        v9 = v7 < 3 == (2 - v7 & v7) < 0 ? 3 : 1;
    }
    int64_t v10 = 0; // 0x1400077fc
    int64_t v11 = v8; // 0x1400077fc
    bool v12; // 0x140007750
    if (v7 != 3) {
        goto lab_0x14000783c;
    } else {
        // 0x1400077fe
        v10 = 1;
        v12 = true;
        if (*(int32_t *)(a1 + 0x4850) == 3) {
            goto lab_0x14000782f;
        } else {
            // 0x140007806
            if (*(int32_t *)(a1 + 0x484c) != 0) {
                // 0x140007822
                v10 = 0;
                v12 = false;
                goto lab_0x14000782f;
            } else {
                // 0x14000780f
                v10 = 1;
                v12 = true;
                if (*(int32_t *)(a1 + 0x4848) != 0) {
                    // 0x140007822
                    v10 = 0;
                    v12 = false;
                    goto lab_0x14000782f;
                } else {
                    goto lab_0x14000782f;
                }
            }
        }
    }
  lab_0x14000793e:;
    // 0x14000793e
    int64_t v13; // 0x140007750
    int64_t v14; // 0x140007750
    *(int64_t *)(v14 - 24) = v13;
    int64_t v15; // 0x140007750
    int64_t v16 = v15 + 1; // 0x140007942
    v14 += 48;
    v15 = v16;
    int64_t v17; // 0x140007750
    v17 += 96;
    int32_t * v18 = (int32_t *)&v4; // 0x140007950
    uint64_t v19; // 0x140007847
    if (v16 >= v19) {
        goto lab_0x140007959;
    }
    goto lab_0x140007890;
  lab_0x140007ee7:;
    // 0x140007ee7
    int32_t v28; // 0x140007750
    int32_t v29 = v28 + 1; // 0x140007eeb
    int64_t v30 = v4; // 0x140007ef4
    int32_t v31 = v29; // 0x140007ef4
    int64_t v32 = v4; // 0x140007ef4
    if (v29 >= *(int32_t *)(v4 + 4)) {
        // break -> 0x140007f00
        goto lab_0x140007f00;
    }
    goto lab_0x140007a10;
  lab_0x140007e95:;
    // 0x140007e95
    int64_t v52; // 0x140007750
    int32_t v122 = *(int32_t *)v52; // 0x140007e95
    int32_t * v69; // 0x140007750
    int64_t v63; // 0x140007862
    int32_t v54; // 0x140007aed
    int64_t v51; // 0x140007a1c
    if (v54 != 1) {
        int64_t v123 = 0; // 0x140007ec4
        int64_t v124 = v51; // 0x140007ec4
        if (v122 != 0) {
            unsigned char v125 = *(char *)(v123 + v63); // 0x140007ed0
            int64_t v126 = v123 + 1; // 0x140007ed4
            *(char *)v124 = v125;
            *(char *)(v124 + 1) = -1;
            v4 = v125;
            v123 = v126 & 0xffffffff;
            v124 += 2;
            while ((int32_t)v125 > (int32_t)v126) {
                // 0x140007ed0
                v125 = *(char *)(v123 + v63);
                v126 = v123 + 1;
                *(char *)v124 = v125;
                *(char *)(v124 + 1) = -1;
                v4 = v125;
                v123 = v126 & 0xffffffff;
                v124 += 2;
            }
        }
    } else {
        // 0x140007e9f
        if (v122 != 0) {
            int64_t v127 = 0;
            *(char *)(v127 + v51) = *(char *)(v127 + v63);
            int64_t v128 = v127 + 1; // 0x140007eb7
            while (*v69 > (int32_t)v128) {
                // 0x140007eb0
                v127 = v128 & 0xffffffff;
                *(char *)(v127 + v51) = *(char *)(v127 + v63);
                v128 = v127 + 1;
            }
        }
    }
    goto lab_0x140007ee7;
  lab_0x14000783c:;
    int128_t v129 = __asm_xorps(v3, v3); // 0x140007844
    int64_t v36 = 0x100000000 * v11;
    v19 = v36 >> 32;
    int128_t v130 = __asm_xorps(v2, v2); // 0x14000784a
    v63 = __asm_movdqu(v129);
    int64_t v78 = __asm_movdqu(v130); // 0x140007868
    int64_t v131; // 0x140007750
    int64_t v132; // 0x140007959
    uint32_t v133; // 0x140007959
    int64_t v134; // 0x14000795d
    if ((int32_t)v11 < 1) {
        // 0x14000783c
        v18 = (int32_t *)&v4;
      lab_0x140007959:
        // 0x140007959
        v132 = v4;
        v133 = *(int32_t *)(v132 + 4);
        int32_t v135 = v132;
        v134 = v132 & 0xffffffff;
        v4 = v134;
        v131 = v134;
        if ((int32_t)v9 < 0 || v135 < 0) {
            goto lab_0x140007f95;
        } else {
            // 0x140007970
            v69 = v18;
            if (v135 == 0) {
                goto lab_0x140007983;
            } else {
                // 0x140007972
                v131 = v134;
                if (v9 > (int64_t)(0x7fffffff / v135)) {
                    goto lab_0x140007f95;
                } else {
                    goto lab_0x140007983;
                }
            }
        }
    } else {
        // 0x140007876
        int64_t v136; // bp-256, 0x140007750
        v14 = &v136;
        v15 = 0;
        v17 = a1 + 0x46a4;
        while (true) {
          lab_0x140007890:;
            uint32_t size = *(int32_t *)&v4 + 3; // 0x140007895
            v4 = size;
            int64_t * mem = malloc(size); // 0x140007898
            *(int64_t *)(v17 + 68) = (int64_t)mem;
            if (mem == NULL) {
                // break -> 0x140007f95
                break;
            }
            uint32_t v20 = *(int32_t *)(a1 + 0x4688); // 0x1400078ab
            *(int32_t *)(v14 + 16) = 0;
            uint32_t v21 = *(int32_t *)v17; // 0x1400078b6
            uint32_t v22 = (int32_t)((0x100000000 * (int64_t)(v20 / 0x80000000) | (int64_t)v20) / (int64_t)v21);
            *(int32_t *)v14 = v22;
            uint32_t v23 = *(int32_t *)(a1 + 0x468c); // 0x1400078bd
            uint32_t v24 = *(int32_t *)(v17 + 4); // 0x1400078c4
            int32_t v25 = (0x100000000 * (int64_t)(v23 / 0x80000000) | (int64_t)v23) / (int64_t)v24; // 0x1400078c9
            *(int32_t *)(v14 | 4) = v25;
            *(int32_t *)(v14 + 12) = v25 >> 1;
            int32_t v26 = *(int32_t *)&v4; // 0x1400078d9
            int64_t v27 = *(int64_t *)(v17 + 44); // 0x1400078db
            v4 = v27;
            *(int64_t *)(v14 - 8) = v27;
            *(int64_t *)(v14 - 16) = v27;
            *(int32_t *)(v14 + 8) = (v22 - 1 + v26) / v22;
            if (v22 != 1) {
                if (v22 != 2) {
                    // 0x140007937
                    v13 = 0x1400072c0;
                    goto lab_0x14000793e;
                } else {
                    // 0x14000791a
                    v13 = 0x140006f10;
                    if (v25 != 1) {
                        if (v25 != 2) {
                            // 0x140007937
                            v13 = 0x1400072c0;
                            goto lab_0x14000793e;
                        } else {
                            // 0x14000792e
                            v13 = *(int64_t *)(a1 + 0x4880);
                            goto lab_0x14000793e;
                        }
                    } else {
                        goto lab_0x14000793e;
                    }
                }
            } else {
                // 0x1400078f7
                v13 = 0x140006cd0;
                if (v25 != 1) {
                    // 0x140007905
                    v13 = 0x140006ce0;
                    if (v25 != 2) {
                        // 0x140007937
                        v13 = 0x1400072c0;
                        goto lab_0x14000793e;
                    } else {
                        goto lab_0x14000793e;
                    }
                } else {
                    goto lab_0x14000793e;
                }
            }
        }
        // 0x140007f95
        v131 = v4;
        goto lab_0x140007f95;
    }
  lab_0x14000782f:
    // 0x14000782f
    v11 = (int32_t)v9 > 2 | v12 ? v8 : 1;
    goto lab_0x14000783c;
  lab_0x140007f95:
    // 0x140007f95
    function_140006030(a1, (int64_t)*(int32_t *)(v131 + 8), 0);
    *(int64_t *)(*(int64_t *)__readgsqword(88) + 16) = (int64_t)"outofmem";
    // 0x140007f72
    __security_check_cookie(g66);
    return &g103;
  lab_0x140007983:;
    int64_t v137 = 0x100000000 * v132 >> 32;
    int64_t v138 = 0x100000000 * v9 >> 32; // 0x140007986
    int64_t v139 = v137 * v138; // 0x140007986
    v131 = v134;
    if (v133 < 0 || (int32_t)v139 < 0) {
        goto lab_0x140007f95;
    } else {
        if (v133 == 0) {
            goto lab_0x1400079b0;
        } else {
            // 0x14000799e
            v131 = v134;
            if ((v139 & 0xffffffff) > (int64_t)(0x7fffffff / v133)) {
                goto lab_0x140007f95;
            } else {
                goto lab_0x1400079b0;
            }
        }
    }
  lab_0x1400079b0:;
    int64_t v140 = (0x100000000 * (int64_t)v133 * v137 >> 32) * v138; // 0x1400079b4
    int64_t v141 = v140 & 0xffffffff; // 0x1400079b4
    v4 = v141;
    v131 = v141;
    if ((int32_t)v140 != 0x7fffffff) {
        int64_t size2 = 0x100000000 * v140 + 0x100000000 >> 32; // 0x1400079c7
        int64_t * mem2 = malloc((int32_t)size2); // 0x1400079ca
        v4 = size2;
        v131 = size2;
        if (mem2 != NULL) {
            // 0x1400079df
            v32 = size2;
            if (*(int32_t *)(size2 + 4) != 0) {
                // 0x1400079ee
                int32_t v142; // 0x140007750
                int64_t v76 = v142; // 0x1400079f8
                int64_t v143; // bp-424, 0x140007750
                int64_t v42 = (int64_t)&v143 + 72;
                v54 = v9;
                int32_t * v55 = (int32_t *)(a1 + 0x484c);
                v30 = size2;
                v31 = 0;
                while (true) {
                  lab_0x140007a10:
                    // 0x140007a10
                    v28 = v31;
                    int32_t v33 = *(int32_t *)v30; // 0x140007a10
                    int64_t v34 = 0; // 0x140007a24
                    int64_t v35 = v30; // 0x140007a24
                    if (v36 >= 0x100000000) {
                        int64_t v37; // bp-244, 0x140007750
                        int64_t v38 = &v37;
                        int64_t v39 = a1 + 0x46c0;
                        int32_t * v40 = (int32_t *)v38; // 0x140007a47
                        uint32_t v41 = *(int32_t *)(v38 - 12); // 0x140007a6e
                        v4 = *(int64_t *)(v39 + 40);
                        *(int64_t *)(v42 + 8 * v34) = (int64_t)v41;
                        uint32_t v43 = *v40 + 1; // 0x140007a85
                        *v40 = v43;
                        int32_t * v44; // 0x140007a90
                        int32_t v45; // 0x140007a90
                        int64_t * v46; // 0x140007a96
                        int64_t v47; // 0x140007a96
                        if (v43 >= *(int32_t *)(v38 - 8)) {
                            // 0x140007a90
                            v44 = (int32_t *)(v38 | 4);
                            v45 = *v44 + 1;
                            *v44 = v45;
                            v46 = (int64_t *)(v38 - 20);
                            v47 = *v46;
                            v4 = v47;
                            *v40 = 0;
                            *(int64_t *)(v38 - 28) = v47;
                            if (v45 < *(int32_t *)v39) {
                                // 0x140007aa9
                                *v46 = v4 + (int64_t)*(int32_t *)(v39 + 4);
                            }
                        }
                        int64_t v48 = v34 + 1; // 0x140007ab4
                        int64_t v49 = v39 + 96; // 0x140007ac2
                        int64_t v50 = v38 + 48; // 0x140007ac2
                        v34 = v48;
                        while (v48 < v19) {
                            // 0x140007a40
                            v38 = v50;
                            v39 = v49;
                            v40 = (int32_t *)v38;
                            v41 = *(int32_t *)(v38 - 12);
                            v4 = *(int64_t *)(v39 + 40);
                            *(int64_t *)(v42 + 8 * v34) = (int64_t)v41;
                            v43 = *v40 + 1;
                            *v40 = v43;
                            if (v43 >= *(int32_t *)(v38 - 8)) {
                                // 0x140007a90
                                v44 = (int32_t *)(v38 | 4);
                                v45 = *v44 + 1;
                                *v44 = v45;
                                v46 = (int64_t *)(v38 - 20);
                                v47 = *v46;
                                v4 = v47;
                                *v40 = 0;
                                *(int64_t *)(v38 - 28) = v47;
                                if (v45 < *(int32_t *)v39) {
                                    // 0x140007aa9
                                    *v46 = v4 + (int64_t)*(int32_t *)(v39 + 4);
                                }
                            }
                            // 0x140007ab4
                            v48 = v34 + 1;
                            v49 = v39 + 96;
                            v50 = v38 + 48;
                            v34 = v48;
                        }
                        // 0x140007ae4
                        v35 = v4;
                    }
                    // 0x140007ae4
                    v51 = (int64_t)(v28 * (int32_t)v9 * v33) + (int64_t)mem2;
                    v52 = v35;
                    int64_t v53; // 0x140007750
                    if (v54 < 3) {
                        if (v10 == 0) {
                            // 0x140007d92
                            if (*(int32_t *)(v52 + 8) != 4) {
                                goto lab_0x140007e95;
                            } else {
                                // 0x140007d9c
                                if (*v55 != 0) {
                                    int32_t v56; // 0x140007d9c
                                    if (v56 != 2) {
                                        goto lab_0x140007e95;
                                    } else {
                                        int32_t v57 = *(int32_t *)v52; // 0x140007e49
                                        int64_t v58 = v51; // 0x140007e4c
                                        int64_t v59 = 0; // 0x140007e4c
                                        if (v57 != 0) {
                                            int64_t v60 = v59;
                                            int64_t v61 = v58;
                                            char v62 = *(char *)(v60 + v63); // 0x140007e60
                                            int64_t v64; // 0x140007750
                                            unsigned char v65 = *(char *)(v60 + v64); // 0x140007e6a
                                            int64_t v66 = v60 + 1; // 0x140007e6f
                                            *(char *)(v61 + 1) = -1;
                                            uint32_t v67 = (int32_t)v65 * (int32_t)(-1 - v62) + 128; // 0x140007e79
                                            *(char *)v61 = (char)((v67 / 256 + v67) / 256);
                                            uint32_t v68 = *v69; // 0x140007e8e
                                            int64_t v70; // 0x140007750
                                            v58 = v61 + v70;
                                            v59 = v66 & 0xffffffff;
                                            while (v68 > (int32_t)v66) {
                                                // 0x140007e60
                                                v60 = v59;
                                                v61 = v58;
                                                v62 = *(char *)(v60 + v63);
                                                v65 = *(char *)(v60 + v64);
                                                v66 = v60 + 1;
                                                *(char *)(v61 + 1) = -1;
                                                v67 = (int32_t)v65 * (int32_t)(-1 - v62) + 128;
                                                *(char *)v61 = (char)((v67 / 256 + v67) / 256);
                                                v68 = *v69;
                                                v58 = v61 + v70;
                                                v59 = v66 & 0xffffffff;
                                            }
                                        }
                                        goto lab_0x140007ee7;
                                    }
                                } else {
                                    int64_t v71 = v51; // 0x140007db0
                                    int64_t v72 = 0; // 0x140007db0
                                    if (*(int32_t *)v52 != 0) {
                                        int64_t v73 = v72 + 1; // 0x140007dd4
                                        int64_t v74 = (int64_t)*(char *)(v72 + v53); // 0x140007dd7
                                        *(char *)(v71 + 1) = -1;
                                        uint32_t v75 = (int32_t)((int64_t)*(char *)(v72 + v76) * v74) + 128; // 0x140007de9
                                        uint32_t v77 = (int32_t)((int64_t)*(char *)(v72 + v78) * v74) + 128; // 0x140007e04
                                        uint32_t v79 = (int32_t)((int64_t)*(char *)(v72 + v63) * v74) + 128; // 0x140007e16
                                        uint32_t v80 = 77 * ((v79 / 256 + v79) / 256 & 255);
                                        *(char *)v71 = (char)((29 * ((v77 / 256 + v77) / 256 & 255) + 150 * ((v75 / 256 + v75) / 256 & 255) + v80) / 256);
                                        v4 = v80;
                                        v71 += v9;
                                        v72 = v73 & 0xffffffff;
                                        while (v80 > (int32_t)v73) {
                                            // 0x140007dc0
                                            v73 = v72 + 1;
                                            v74 = (int64_t)*(char *)(v72 + v53);
                                            *(char *)(v71 + 1) = -1;
                                            v75 = (int32_t)((int64_t)*(char *)(v72 + v76) * v74) + 128;
                                            v77 = (int32_t)((int64_t)*(char *)(v72 + v78) * v74) + 128;
                                            v79 = (int32_t)((int64_t)*(char *)(v72 + v63) * v74) + 128;
                                            v80 = 77 * ((v79 / 256 + v79) / 256 & 255);
                                            *(char *)v71 = (char)((29 * ((v77 / 256 + v77) / 256 & 255) + 150 * ((v75 / 256 + v75) / 256 & 255) + v80) / 256);
                                            v4 = v80;
                                            v71 += v9;
                                            v72 = v73 & 0xffffffff;
                                        }
                                    }
                                    goto lab_0x140007ee7;
                                }
                            }
                        } else {
                            int32_t v81 = *(int32_t *)v52; // 0x140007ce0
                            if (v54 != 1) {
                                int64_t v82 = v51; // 0x140007d40
                                int64_t v83 = 0; // 0x140007d40
                                if (v81 != 0) {
                                    unsigned char v84 = *(char *)(v83 + v76); // 0x140007d50
                                    unsigned char v85 = *(char *)(v83 + v78); // 0x140007d60
                                    int64_t v86 = v83 + 1; // 0x140007d6d
                                    *(char *)(v82 + 1) = -1;
                                    int64_t v87 = 77 * (int64_t)*(char *)(v83 + v63); // 0x140007d77
                                    *(char *)v82 = (char)((29 * (int64_t)v85 + 150 * (int64_t)v84 + v87) / 256);
                                    v4 = v87;
                                    v82 += 2;
                                    v83 = v86 & 0xffffffff;
                                    while ((int32_t)v87 > (int32_t)v86) {
                                        // 0x140007d50
                                        v84 = *(char *)(v83 + v76);
                                        v85 = *(char *)(v83 + v78);
                                        v86 = v83 + 1;
                                        *(char *)(v82 + 1) = -1;
                                        v87 = 77 * (int64_t)*(char *)(v83 + v63);
                                        *(char *)v82 = (char)((29 * (int64_t)v85 + 150 * (int64_t)v84 + v87) / 256);
                                        v4 = v87;
                                        v82 += 2;
                                        v83 = v86 & 0xffffffff;
                                    }
                                }
                            } else {
                                int64_t v88 = v51; // 0x140007ced
                                int64_t v89 = 0; // 0x140007ced
                                if (v81 != 0) {
                                    unsigned char v90 = *(char *)(v89 + v76); // 0x140007d00
                                    unsigned char v91 = *(char *)(v89 + v78); // 0x140007d10
                                    int64_t v92 = v89 + 1; // 0x140007d1d
                                    int64_t v93 = 77 * (int64_t)*(char *)(v89 + v63); // 0x140007d23
                                    *(char *)v88 = (char)((29 * (int64_t)v91 + 150 * (int64_t)v90 + v93) / 256);
                                    v4 = v93;
                                    v88++;
                                    v89 = v92 & 0xffffffff;
                                    while ((int32_t)v93 > (int32_t)v92) {
                                        // 0x140007d00
                                        v90 = *(char *)(v89 + v76);
                                        v91 = *(char *)(v89 + v78);
                                        v92 = v89 + 1;
                                        v93 = 77 * (int64_t)*(char *)(v89 + v63);
                                        *(char *)v88 = (char)((29 * (int64_t)v91 + 150 * (int64_t)v90 + v93) / 256);
                                        v4 = v93;
                                        v88++;
                                        v89 = v92 & 0xffffffff;
                                    }
                                }
                            }
                            goto lab_0x140007ee7;
                        }
                    } else {
                        int32_t v94 = *(int32_t *)(v52 + 8); // 0x140007af3
                        if (v94 != 3) {
                            if (v94 != 4) {
                                int64_t v95 = 0; // 0x140007cac
                                int64_t v96 = v51; // 0x140007cac
                                if (*(int32_t *)v52 != 0) {
                                    unsigned char v97 = *(char *)(v95 + v63); // 0x140007cb0
                                    v4 = v97;
                                    int64_t v98 = v95 + 1; // 0x140007cb4
                                    *(char *)(v96 + 2) = v97;
                                    *(char *)(v96 + 1) = v97;
                                    *(char *)v96 = v97;
                                    *(char *)(v96 + 3) = -1;
                                    v95 = v98 & 0xffffffff;
                                    v96 += v9;
                                    while (*v69 > (int32_t)v98) {
                                        // 0x140007cb0
                                        v97 = *(char *)(v95 + v63);
                                        v4 = v97;
                                        v98 = v95 + 1;
                                        *(char *)(v96 + 2) = v97;
                                        *(char *)(v96 + 1) = v97;
                                        *(char *)v96 = v97;
                                        *(char *)(v96 + 3) = -1;
                                        v95 = v98 & 0xffffffff;
                                        v96 += v9;
                                    }
                                }
                            } else {
                                int32_t v99 = *v55; // 0x140007b6b
                                if (v99 != 0) {
                                    // 0x140007bea
                                    v4 = v51;
                                    int64_t v100 = v51; // 0x140007c0b
                                    int64_t v101 = 0; // 0x140007c0b
                                    if ((int32_t)v51 != 0 && v99 == 2) {
                                        int64_t v102 = v101 + 1; // 0x140007c35
                                        char * v103 = (char *)v100; // 0x140007c38
                                        int64_t v104 = (int64_t)*(char *)(v101 + v53); // 0x140007c40
                                        uint32_t v105 = (int32_t)((int64_t)(-1 - *v103) * v104) + 128; // 0x140007c46
                                        *v103 = (char)((v105 / 256 + v105) / 256);
                                        char * v106 = (char *)(v100 + 1); // 0x140007c52
                                        uint32_t v107 = (int32_t)((int64_t)(-1 - *v106) * v104) + 128; // 0x140007c61
                                        *v106 = (char)((v107 / 256 + v107) / 256);
                                        char * v108 = (char *)(v100 + 2); // 0x140007c6e
                                        int64_t v109 = (int64_t)(-1 - *v108) * v104 + 128; // 0x140007c7a
                                        uint32_t v110 = (int32_t)v109; // 0x140007c7d
                                        *v108 = (char)((v110 / 256 + v110) / 256);
                                        v100 += v9;
                                        v101 = v102 & 0xffffffff;
                                        while (*v69 > (int32_t)v102) {
                                            // 0x140007c30
                                            v102 = v101 + 1;
                                            v103 = (char *)v100;
                                            v104 = (int64_t)*(char *)(v101 + v53);
                                            v105 = (int32_t)((int64_t)(-1 - *v103) * v104) + 128;
                                            *v103 = (char)((v105 / 256 + v105) / 256);
                                            v106 = (char *)(v100 + 1);
                                            v107 = (int32_t)((int64_t)(-1 - *v106) * v104) + 128;
                                            *v106 = (char)((v107 / 256 + v107) / 256);
                                            v108 = (char *)(v100 + 2);
                                            v109 = (int64_t)(-1 - *v108) * v104 + 128;
                                            v110 = (int32_t)v109;
                                            *v108 = (char)((v110 / 256 + v110) / 256);
                                            v100 += v9;
                                            v101 = v102 & 0xffffffff;
                                        }
                                        // 0x140007c95
                                        v4 = v109;
                                    }
                                } else {
                                    int64_t v111 = v51; // 0x140007b7b
                                    int64_t v112 = 0; // 0x140007b7b
                                    if (*(int32_t *)v52 != 0) {
                                        int64_t v113 = (int64_t)*(char *)(v112 + v53); // 0x140007b81
                                        uint32_t v114 = (int32_t)((int64_t)*(char *)(v112 + v63) * v113) + 128; // 0x140007b92
                                        *(char *)v111 = (char)((v114 / 256 + v114) / 256);
                                        uint32_t v115 = (int32_t)((int64_t)*(char *)(v112 + v76) * v113) + 128; // 0x140007baa
                                        *(char *)(v111 + 1) = (char)((v115 / 256 + v115) / 256);
                                        int64_t v116 = v112 + 1; // 0x140007bbc
                                        *(char *)(v111 + 3) = -1;
                                        int64_t v117 = (int64_t)*(char *)(v112 + v78) * v113 + 128; // 0x140007bc7
                                        uint32_t v118 = (int32_t)v117; // 0x140007bca
                                        *(char *)(v111 + 2) = (char)((v118 / 256 + v118) / 256);
                                        v111 += v9;
                                        v112 = v116 & 0xffffffff;
                                        while (*v69 > (int32_t)v116) {
                                            // 0x140007b81
                                            v113 = (int64_t)*(char *)(v112 + v53);
                                            v114 = (int32_t)((int64_t)*(char *)(v112 + v63) * v113) + 128;
                                            *(char *)v111 = (char)((v114 / 256 + v114) / 256);
                                            v115 = (int32_t)((int64_t)*(char *)(v112 + v76) * v113) + 128;
                                            *(char *)(v111 + 1) = (char)((v115 / 256 + v115) / 256);
                                            v116 = v112 + 1;
                                            *(char *)(v111 + 3) = -1;
                                            v117 = (int64_t)*(char *)(v112 + v78) * v113 + 128;
                                            v118 = (int32_t)v117;
                                            *(char *)(v111 + 2) = (char)((v118 / 256 + v118) / 256);
                                            v111 += v9;
                                            v112 = v116 & 0xffffffff;
                                        }
                                        // 0x140007be2
                                        v4 = v117;
                                    }
                                }
                            }
                        } else {
                            if (v10 == 0) {
                                // 0x140007b3d
                                v4 = v51;
                            } else {
                                int64_t v119 = 0; // 0x140007b07
                                int64_t v120 = v51; // 0x140007b07
                                if (*(int32_t *)v52 != 0) {
                                    *(char *)v120 = *(char *)(v119 + v63);
                                    *(char *)(v120 + 1) = *(char *)(v119 + v76);
                                    int64_t v121 = v119 + 1; // 0x140007b22
                                    *(char *)(v120 + 2) = *(char *)(v119 + v78);
                                    *(char *)(v120 + 3) = -1;
                                    v119 = v121 & 0xffffffff;
                                    v120 += v9;
                                    while (*v69 > (int32_t)v121) {
                                        // 0x140007b10
                                        *(char *)v120 = *(char *)(v119 + v63);
                                        *(char *)(v120 + 1) = *(char *)(v119 + v76);
                                        v121 = v119 + 1;
                                        *(char *)(v120 + 2) = *(char *)(v119 + v78);
                                        *(char *)(v120 + 3) = -1;
                                        v119 = v121 & 0xffffffff;
                                        v120 += v9;
                                    }
                                }
                            }
                        }
                        goto lab_0x140007ee7;
                    }
                }
            }
          lab_0x140007f00:
            // 0x140007f00
            function_140006030(a1, (int64_t)*(int32_t *)(v32 + 8), 0);
            uint32_t v144 = *v69; // 0x140007f11
            int64_t v145 = v144; // 0x140007f11
            *(int32_t *)a2 = v144;
            v4 = v145;
            *(int32_t *)a3 = *(int32_t *)(v145 + 4);
            if (a4 != 0) {
                int32_t v146 = *(int32_t *)(v4 + 8); // 0x140007f37
                *(int32_t *)a4 = v146 < 3 == (2 - v146 & v146) < 0 ? 3 : 1;
            }
            // 0x140007f72
            __security_check_cookie(g66);
            return &g103;
        }
    }
    goto lab_0x140007f95;
}

// Address range: 0x140007fe0 - 0x140008272
int64_t function_140007fe0(int64_t * a1, int128_t * a2, int64_t a3) {
    // 0x140007fe0
    int128_t v1; // 0x140007fe0
    int128_t v2 = v1;
    int64_t v3 = (int64_t)a2;
    int64_t v4; // bp-232, 0x140007fe0
    int64_t v5 = &v4; // 0x140007fea
    int128_t v6 = __asm_xorps(v2, v2); // 0x140008003
    int64_t v7 = a3 & 0xffffffff; // 0x140008006
    __asm_movups(v1, v6);
    __asm_movups(v1, v6);
    __asm_movups(v1, v6);
    __asm_movups(v1, v6);
    memset(a1, 0, 1024);
    int64_t v8 = v5 + 96;
    int64_t v9 = v3; // 0x14000803d
    int64_t v10 = v7; // 0x14000803d
    if ((int32_t)a3 >= 1) {
        int32_t * v11 = (int32_t *)(4 * (int64_t)*(char *)v9 + v8); // 0x140008057
        *v11 = *v11 + 1;
        v10--;
        v9++;
        while (v10 != 0) {
            // 0x140008050
            v11 = (int32_t *)(4 * (int64_t)*(char *)v9 + v8);
            *v11 = *v11 + 1;
            v10--;
            v9++;
        }
    }
    int64_t v12 = (int64_t)a1;
    int64_t v13 = 1; // 0x14000806a
    int32_t v14 = *(int32_t *)(4 * v13 + v8); // 0x140008079
    int64_t v15; // 0x140007fe0
    int64_t v16; // 0x140007fe0
    int64_t v17; // 0x140007fe0
    int64_t v18; // 0x140007fe0
    int64_t v19; // 0x1400080ad
    int64_t v20; // 0x1400080b9
    while ((int64_t)(1 << ((int32_t)v13 & 31)) >= (int64_t)v14) {
        int64_t v21 = v13 + 1; // 0x140008083
        v13 = v21 & 0xffffffff;
        if ((int32_t)v21 >= 16) {
            // 0x1400080a0
            v19 = v12 + 1024;
            v20 = v12 + 1124;
            v18 = 0;
            v17 = 0;
            v15 = 1;
            v16 = 15;
            goto lab_0x1400080a0_2;
        }
        v14 = *(int32_t *)(4 * v13 + v8);
    }
    // 0x140008252
    *(int64_t *)(*(int64_t *)__readgsqword(88) + 16) = (int64_t)"bad sizes";
  lab_0x140008213:
    // 0x140008213
    __security_check_cookie(g66);
    return &g103;
  lab_0x1400080a0_2:;
    int64_t v22 = v15;
    int64_t v23 = 0x100000000 * v22;
    int64_t v24 = v23 >> 30; // 0x1400080a3
    uint32_t v25 = *(int32_t *)(v24 + v8); // 0x1400080a3
    int32_t v26 = v17; // 0x1400080a8
    *(int32_t *)(v5 + 32 + v24) = v26;
    int64_t v27 = v23 >> 31; // 0x1400080ad
    *(int16_t *)(v27 + v19) = (int16_t)v17;
    uint32_t v28 = v25 + v26; // 0x1400080b6
    *(int16_t *)(v27 + v20) = (int16_t)v18;
    if (v25 == 0) {
        goto lab_0x1400080dc;
    } else {
        if (v28 - 1 >> ((int32_t)v22 & 31) == 0) {
            goto lab_0x1400080dc;
        } else {
            int64_t v29 = *(int64_t *)__readgsqword(88); // 0x140008240
            *(int64_t *)(v29 + 16) = (int64_t)"bad codelengths";
            goto lab_0x140008213;
        }
    }
  lab_0x1400080dc:
    // 0x1400080dc
    *(int32_t *)(v12 + 1056 + v24) = v28 << ((int32_t)v16 & 31);
    int64_t v30 = v16 + 0xffffffff; // 0x1400080f4
    int32_t v31 = v30; // 0x1400080f7
    v18 = v18 + (int64_t)v25 & 0xffffffff;
    v17 = 2 * (int64_t)v28 & 0xfffffffe;
    v15 = v22 + 1 & 0xffffffff;
    v16 = v30 & 0xffffffff;
    int64_t v32; // 0x140007fe0
    int64_t v33; // 0x140007fe0
    if (v31 >= 0 == (v31 != 0)) {
        goto lab_0x1400080a0_2;
    } else {
        // 0x1400080fc
        *(int32_t *)(v12 + 1120) = 0x10000;
        if ((int32_t)a3 < 1) {
            goto lab_0x140008213;
        } else {
            // 0x140008110
            v33 = 0;
            v32 = v3;
            goto lab_0x140008110_2;
        }
    }
  lab_0x140008110_2:;
    int64_t v34 = v33;
    unsigned char v35 = *(char *)v32; // 0x140008110
    int64_t v36; // 0x140007fe0
    int32_t * v37; // 0x140008138
    uint32_t v38; // 0x140008138
    unsigned char v39; // 0x140007fe0
    int16_t v40; // 0x1400081e5
    if (v35 == 0) {
        goto lab_0x1400081f8;
    } else {
        int64_t v41 = v35; // 0x140008110
        int64_t v42 = 2 * v41; // 0x14000811d
        uint16_t v43 = *(int16_t *)(v42 + v19); // 0x14000811d
        uint16_t v44 = *(int16_t *)(v42 + v20); // 0x14000812b
        int64_t v45; // bp-200, 0x140007fe0
        v37 = (int32_t *)(4 * v41 + (int64_t)&v45);
        v38 = *v37;
        int64_t v46 = (int32_t)v44 - (int32_t)v43 + v38; // 0x14000814e
        *(char *)(v12 + 1156 + v46) = v35;
        *(int16_t *)(v12 + 1444 + 2 * v46) = (int16_t)v34;
        if (v35 < 10) {
            uint64_t v47 = (int64_t)v38; // 0x140008138
            uint64_t v48 = v47 / 2 & 0x5555 | 2 * v47 & 0xaaaa; // 0x14000817f
            uint64_t v49 = v48 / 4 & 0x3333 | 4 * v48 & 0xcccc; // 0x140008194
            uint64_t v50 = v49 / 16 & 3855 | 16 * v49 & 0xf0f0; // 0x1400081b1
            int64_t v51 = 256 * v50 & 0xff00 | v50 / 256; // 0x1400081c1
            unsigned char v52 = 16 - v35 & 31;
            int64_t v53 = v52 == 0 ? v51 : (int64_t)((int32_t)v51 >> (int32_t)v52);
            if ((int32_t)v53 > 511) {
                // 0x1400081f1
                *v37 = v38 + 1;
                goto lab_0x1400081f8;
            } else {
                // 0x1400081cc
                v39 = v35 & 31;
                v40 = 512 * v41 | v34;
                v36 = v53;
                goto lab_0x1400081e0;
            }
        } else {
            // 0x1400081f1
            *v37 = v38 + 1;
            goto lab_0x1400081f8;
        }
    }
  lab_0x1400081f8:;
    int64_t v54 = v34 + 1 & 0xffffffff; // 0x1400081f8
    v33 = v54;
    v32++;
    if (v54 < v7) {
        goto lab_0x140008110_2;
    } else {
        goto lab_0x140008213;
    }
  lab_0x1400081e0:;
    int64_t v55 = v36 + (v39 == 0 ? 1 : (int64_t)(1 << (int32_t)v39)); // 0x1400081e3
    *(int16_t *)((0x100000000 * v36 >> 31) + v12) = v40;
    v36 = v55 & 0xffffffff;
    if ((int32_t)v55 < 512) {
        goto lab_0x1400081e0;
    } else {
        // 0x1400081f1
        *v37 = v38 + 1;
        goto lab_0x1400081f8;
    }
}

// Address range: 0x140008280 - 0x14000835c
int64_t function_140008280(int64_t a1, int64_t a2) {
    int32_t * v1 = (int32_t *)(a1 + 20); // 0x140008280
    uint32_t v2 = *v1; // 0x140008280
    uint32_t v3 = v2 / 2 & 0x5555 | 2 * v2 & 0xaaaa; // 0x14000829e
    uint32_t v4 = v3 / 4 & 0x3333 | 4 * v3 & 0xcccc; // 0x1400082bb
    uint32_t v5 = v4 / 16 & 3855 | 16 * v4 & 0xf0f0; // 0x1400082d1
    int64_t v6 = a2 + 1096; // 0x1400082d3
    uint32_t v7 = 256 * v5 & 0xff00 | v5 / 256; // 0x1400082e5
    int64_t v8 = v6; // 0x1400082f0
    int64_t v9 = 10; // 0x1400082f0
    if (v7 >= *(int32_t *)v6) {
        int64_t v10 = v9 + 1; // 0x1400082f2
        v9 = v10 & 0xffffffff;
        v8 += 4;
        while (*(int32_t *)v8 <= v7) {
            // 0x1400082f2
            v10 = v9 + 1;
            v9 = v10 & 0xffffffff;
            v8 += 4;
        }
        // 0x1400082fd
        if ((int32_t)v10 > 15) {
            // 0x140008356
            return 0xffffffff;
        }
    }
    int32_t v11 = v9; // 0x14000830a
    int64_t v12 = (0x100000000 * v9 >> 31) + a2;
    uint16_t v13 = *(int16_t *)(v12 + 1024); // 0x14000830f
    uint16_t v14 = *(int16_t *)(v12 + 1124); // 0x140008318
    int64_t v15 = (int64_t)(v7 >> (16 - v11 & 31)) - (int64_t)v13 + (int64_t)v14; // 0x140008324
    if ((int32_t)v15 >= 288) {
        // 0x140008356
        return 0xffffffff;
    }
    int64_t v16 = 0x100000000 * v15;
    if ((int32_t)*(char *)(a2 + 1156 + (v16 >> 32)) != v11) {
        // 0x140008356
        return 0xffffffff;
    }
    int32_t * v17 = (int32_t *)(a1 + 16); // 0x140008344
    *v17 = *v17 - v11;
    *v1 = v2 >> (v11 & 31);
    return (int64_t)*(int16_t *)(a2 + 1444 + (v16 >> 31));
}

// Address range: 0x140008360 - 0x140008467
int64_t function_140008360(int64_t a1, int64_t a2, int64_t a3) {
    int64_t * v1 = (int64_t *)(a1 + 24); // 0x140008374
    *v1 = a2;
    if (*(int32_t *)(a1 + 48) == 0) {
        int64_t v2 = *(int64_t *)__readgsqword(88); // 0x140008388
        *(int64_t *)(v2 + 16) = (int64_t)"output buffer limit";
        return (int32_t)"output buffer limit" ^ (int32_t)"output buffer limit";
    }
    int64_t v3 = a1 + 32; // 0x1400083a3
    int32_t v4 = *(int32_t *)v3; // 0x1400083a3
    uint32_t v5 = (int32_t)a2 - v4; // 0x1400083a3
    uint32_t v6 = (int32_t)a3;
    if (-1 - v5 < v6) {
        // 0x1400083b5
        *(int64_t *)(*(int64_t *)__readgsqword(88) + 16) = (int64_t)"outofmem";
        return (int32_t)"outofmem" ^ (int32_t)"outofmem";
    }
    int64_t v7 = a1 + 40; // 0x1400083a6
    uint32_t v8 = *(int32_t *)v7 - v4; // 0x1400083ab
    int64_t v9 = v8; // 0x1400083ab
    uint32_t v10 = v5 + v6; // 0x1400083e2
    int64_t v11 = v9; // 0x1400083e4
    int64_t v12 = v9; // 0x1400083e4
    if (v8 < v10) {
        while ((int32_t)v11 > 0xffffffff) {
            int64_t v13 = 2 * v11; // 0x1400083ee
            v11 = v13 & 0xfffffffe;
            v12 = v11;
            if (v10 <= (int32_t)v13) {
                goto lab_0x1400083f4;
            }
        }
        // 0x1400083b5
        *(int64_t *)(*(int64_t *)__readgsqword(88) + 16) = (int64_t)"outofmem";
        return (int32_t)"outofmem" ^ (int32_t)"outofmem";
    }
  lab_0x1400083f4:;
    int64_t * v14 = (int64_t *)v3; // 0x1400083fd
    int64_t * mem = realloc((int64_t *)*v14, (int32_t)v12); // 0x140008401
    if (mem == NULL) {
        // 0x14000840f
        *(int64_t *)(*(int64_t *)__readgsqword(88) + 16) = (int64_t)"outofmem";
        return (int32_t)"outofmem" ^ (int32_t)"outofmem";
    }
    int64_t v15 = (int64_t)mem; // 0x140008401
    *v14 = v15;
    *v1 = v15 + (int64_t)v5;
    *(int64_t *)v7 = v12 + v15;
    return 1;
}

// Address range: 0x140008470 - 0x14000888d
int64_t function_140008470(int64_t a1) {
    int64_t * v1 = (int64_t *)(a1 + 24); // 0x140008483
    int32_t * v2 = (int32_t *)(a1 + 16); // 0x1400084a0
    int64_t * v3 = (int64_t *)(a1 + 8);
    int32_t * v4 = (int32_t *)(a1 + 20);
    int64_t * v5 = (int64_t *)a1;
    int64_t v6 = a1 + 52;
    int64_t * v7 = (int64_t *)(a1 + 40);
    int64_t v8 = a1 + 2072;
    int64_t v9 = a1; // 0x14000849b
    int64_t v10 = *v1; // 0x14000849b
    while (true) {
        int64_t v11 = v10;
        uint32_t v12 = *v2; // 0x1400084a0
        int64_t v13 = v12; // 0x1400084a0
        int64_t v14 = v13; // 0x1400084a6
        if (v12 <= 15) {
            uint64_t v15 = *v3; // 0x1400084a8
            if (v9 >= v15) {
                // break -> 0x140008826
                break;
            }
            uint32_t v16 = *v4; // 0x1400084b5
            int64_t v17 = v13; // 0x1400084c8
            if (v16 >> (v12 & 31) != 0) {
              lab_0x140008511:
                // 0x140008511
                *v5 = v15;
                v14 = v17;
            } else {
                int64_t v18 = v13; // 0x140008470
                int64_t v19 = v16;
                uint64_t v20 = v13; // 0x1400084d0
                int64_t v21; // 0x140008470
                if (v20 < v15) {
                    // 0x1400084dc
                    *v5 = v20 + 1;
                    v21 = v18 & 255;
                } else {
                    // 0x1400084d8
                    v21 = 0;
                }
                int64_t v22 = v21; // 0x1400084e5
                int64_t v23 = v20 + 8; // 0x1400084e8
                int64_t v24 = v23 & 0xffffffff; // 0x1400084e8
                int32_t v25 = v23; // 0x1400084ef
                *v2 = v25;
                uint32_t v26 = (int32_t)v20 & 31; // 0x1400084f2
                v19 |= (v26 == 0 ? v22 : (int64_t)((int32_t)v22 << v26));
                uint32_t v27 = (int32_t)v19; // 0x1400084f7
                *v4 = v27;
                v14 = v24;
                while (v25 <= 24) {
                    // 0x140008500
                    v18 = v23;
                    v17 = v24;
                    if (v27 >> (v25 & 31) != 0) {
                        goto lab_0x140008511;
                    }
                    v20 = v24;
                    if (v20 < v15) {
                        // 0x1400084dc
                        *v5 = v20 + 1;
                        v21 = v18 & 255;
                    } else {
                        // 0x1400084d8
                        v21 = 0;
                    }
                    // 0x1400084e5
                    v22 = v21;
                    v23 = v20 + 8;
                    v24 = v23 & 0xffffffff;
                    v25 = v23;
                    *v2 = v25;
                    v26 = (int32_t)v20 & 31;
                    v19 |= (v26 == 0 ? v22 : (int64_t)((int32_t)v22 << v26));
                    v27 = (int32_t)v19;
                    *v4 = v27;
                    v14 = v24;
                }
            }
        }
        uint32_t v28 = *v4; // 0x140008514
        uint16_t v29 = *(int16_t *)(v6 + (int64_t)(2 * v28 & 1022)); // 0x140008520
        int64_t v30; // 0x140008470
        int64_t v31; // 0x140008470
        if (v29 == 0) {
            int64_t v32 = function_140008280(a1, v6); // 0x140008549
            v30 = a1;
            v31 = v32 & 0xffffffff;
        } else {
            uint64_t v33 = (int64_t)v29; // 0x140008520
            int64_t v34 = v33 / 512; // 0x14000852b
            int32_t v35 = v34; // 0x14000852e
            *v4 = v28 >> (v35 & 31);
            *v2 = (int32_t)v14 - v35;
            v30 = v34;
            v31 = v33 & 511;
        }
        int64_t v36 = v31;
        int64_t v37 = v30;
        int32_t v38 = v36; // 0x140008550
        int64_t v39; // 0x140008470
        if (v38 > 255) {
            int64_t result; // 0x140008470
            if (v38 == 256) {
                // 0x140008866
                *v1 = v11;
                result = 1;
                return result;
            }
            uint32_t v40 = *v2; // 0x140008594
            int64_t v41 = v40; // 0x140008594
            int64_t v42 = 0x100000000 * v36 >> 30; // 0x14000859b
            uint32_t v43 = *(int32_t *)(v42 + 0x140021e5c); // 0x14000859b
            int64_t v44 = (int64_t)*(int32_t *)(v42 + 0x140021d0c); // 0x1400085a3
            int64_t v45 = v37; // 0x1400085ae
            int64_t v46 = v44; // 0x1400085ae
            int64_t v47 = v41; // 0x1400085ae
            if (v43 != 0) {
                int64_t v48 = v41; // 0x1400085b7
                if (v40 < v43) {
                    uint32_t v49 = *v4; // 0x1400085b9
                    int64_t v50 = v41; // 0x1400085cd
                    if (v49 >> (v40 & 31) != 0) {
                      lab_0x140008616:
                        // 0x140008616
                        *v5 = *v3;
                        v48 = v50;
                    } else {
                        int64_t v51 = v41; // 0x1400085cf
                        int64_t v52 = v49; // 0x1400085cf
                        uint64_t v53 = v41; // 0x1400085d3
                        int64_t v54; // 0x140008470
                        if (v53 < *v3) {
                            // 0x1400085df
                            *v5 = v53 + 1;
                            v54 = v51 & 255;
                        } else {
                            // 0x1400085db
                            v54 = 0;
                        }
                        int64_t v55 = v54; // 0x1400085e8
                        int64_t v56 = v53 + 8; // 0x1400085eb
                        int64_t v57 = v56 & 0xffffffff; // 0x1400085eb
                        int32_t v58 = v56; // 0x1400085f1
                        *v2 = v58;
                        uint32_t v59 = (int32_t)v53 & 31; // 0x1400085f5
                        v52 |= (v59 == 0 ? v55 : (int64_t)((int32_t)v55 << v59));
                        uint32_t v60 = (int32_t)v52; // 0x1400085fa
                        *v4 = v60;
                        v48 = v57;
                        while (v58 <= 24) {
                            // 0x140008604
                            v51 = v56;
                            v50 = v57;
                            if (v60 >> (v58 & 31) != 0) {
                                goto lab_0x140008616;
                            }
                            v53 = v57;
                            if (v53 < *v3) {
                                // 0x1400085df
                                *v5 = v53 + 1;
                                v54 = v51 & 255;
                            } else {
                                // 0x1400085db
                                v54 = 0;
                            }
                            // 0x1400085e8
                            v55 = v54;
                            v56 = v53 + 8;
                            v57 = v56 & 0xffffffff;
                            v58 = v56;
                            *v2 = v58;
                            v59 = (int32_t)v53 & 31;
                            v52 |= (v59 == 0 ? v55 : (int64_t)((int32_t)v55 << v59));
                            v60 = (int32_t)v52;
                            *v4 = v60;
                            v48 = v57;
                        }
                    }
                }
                int64_t v61 = v43; // 0x14000859b
                uint32_t v62 = *v4; // 0x14000861d
                int64_t v63 = v48 - v61; // 0x140008623
                uint32_t v64 = v43 & 31; // 0x140008628
                *v4 = v62 >> v64;
                *v2 = (int32_t)v63;
                v45 = v61;
                v46 = ((int64_t)(1 << v64) + 0xffffffff & (int64_t)v62) + v44 & 0xffffffff;
                v47 = v63 & 0xffffffff;
            }
            int64_t v65 = v47;
            int64_t v66 = v46;
            uint32_t v67 = (int32_t)v65; // 0x140008644
            int64_t v68 = v65; // 0x140008644
            if (v67 <= 15) {
                uint64_t v69 = *v3; // 0x140008646
                if (v45 >= v69) {
                    // break -> 0x140008826
                    break;
                }
                uint32_t v70 = *v4; // 0x140008653
                int64_t v71 = v65; // 0x140008666
                if (v70 >> (v67 & 31) != 0) {
                  lab_0x1400086af:
                    // 0x1400086af
                    *v5 = v69;
                    v68 = v71;
                } else {
                    int64_t v72 = v70;
                    uint64_t v73 = v65;
                    int64_t v74; // 0x140008470
                    if (v73 < v69) {
                        // 0x140008674
                        *v5 = v73 + 1;
                        v74 = v73 & 255;
                    } else {
                        // 0x140008670
                        v74 = 0;
                    }
                    int64_t v75 = v74; // 0x14000867d
                    int64_t v76 = v73 + 8; // 0x140008680
                    int64_t v77 = v76 & 0xffffffff; // 0x140008680
                    int32_t v78 = v76; // 0x140008687
                    *v2 = v78;
                    uint32_t v79 = (int32_t)v73 & 31; // 0x14000868b
                    v72 |= (v79 == 0 ? v75 : (int64_t)((int32_t)v75 << v79));
                    uint32_t v80 = (int32_t)v72; // 0x140008690
                    *v4 = v80;
                    v68 = v77;
                    while (v78 <= 24) {
                        // 0x14000869a
                        v71 = v77;
                        if (v80 >> (v78 & 31) != 0) {
                            goto lab_0x1400086af;
                        }
                        v73 = v77;
                        if (v73 < v69) {
                            // 0x140008674
                            *v5 = v73 + 1;
                            v74 = v73 & 255;
                        } else {
                            // 0x140008670
                            v74 = 0;
                        }
                        // 0x14000867d
                        v75 = v74;
                        v76 = v73 + 8;
                        v77 = v76 & 0xffffffff;
                        v78 = v76;
                        *v2 = v78;
                        v79 = (int32_t)v73 & 31;
                        v72 |= (v79 == 0 ? v75 : (int64_t)((int32_t)v75 << v79));
                        v80 = (int32_t)v72;
                        *v4 = v80;
                        v68 = v77;
                    }
                }
            }
            uint32_t v81 = *v4; // 0x1400086b2
            uint16_t v82 = *(int16_t *)(v8 + (int64_t)(2 * v81 & 1022)); // 0x1400086bc
            int64_t v83; // 0x140008470
            if (v82 == 0) {
                // 0x1400086e0
                v83 = function_140008280(a1, v8);
            } else {
                int32_t v84 = v82 / 512; // 0x1400086cd
                *v4 = v81 >> (v84 & 31);
                *v2 = (int32_t)v68 - v84;
                v83 = v82 & 511;
            }
            // 0x1400086ef
            if ((int32_t)v83 < 0) {
                // break -> 0x140008826
                break;
            }
            int64_t v85 = 0x100000000 * v83 >> 30; // 0x1400086f9
            uint32_t v86 = *(int32_t *)(v85 + 0x140022360); // 0x1400086f9
            int64_t v87 = (int64_t)*(int32_t *)(v85 + 0x140022190); // 0x140008701
            int64_t v88 = v87; // 0x14000870c
            if (v86 != 0) {
                uint32_t v89 = *v2; // 0x140008712
                int64_t v90 = v89; // 0x140008712
                int64_t v91 = v90; // 0x140008719
                if (v86 > v89) {
                    uint32_t v92 = *v4; // 0x14000871b
                    int64_t v93 = v90; // 0x14000872f
                    if (v92 >> (v89 & 31) != 0) {
                      lab_0x140008778:
                        // 0x140008778
                        *v5 = *v3;
                        v91 = v93;
                    } else {
                        int64_t v94 = v90; // 0x140008731
                        int64_t v95 = v92; // 0x140008731
                        uint64_t v96 = v90; // 0x140008735
                        int64_t v97; // 0x140008470
                        if (v96 < *v3) {
                            // 0x140008741
                            *v5 = v96 + 1;
                            v97 = v94 & 255;
                        } else {
                            // 0x14000873d
                            v97 = 0;
                        }
                        int64_t v98 = v97; // 0x14000874a
                        int64_t v99 = v96 + 8; // 0x14000874d
                        int64_t v100 = v99 & 0xffffffff; // 0x14000874d
                        int32_t v101 = v99; // 0x140008753
                        *v2 = v101;
                        uint32_t v102 = (int32_t)v96 & 31; // 0x140008757
                        v95 |= (v102 == 0 ? v98 : (int64_t)((int32_t)v98 << v102));
                        uint32_t v103 = (int32_t)v95; // 0x14000875c
                        *v4 = v103;
                        v91 = v100;
                        while (v101 <= 24) {
                            // 0x140008766
                            v94 = v99;
                            v93 = v100;
                            if (v103 >> (v101 & 31) != 0) {
                                goto lab_0x140008778;
                            }
                            v96 = v100;
                            if (v96 < *v3) {
                                // 0x140008741
                                *v5 = v96 + 1;
                                v97 = v94 & 255;
                            } else {
                                // 0x14000873d
                                v97 = 0;
                            }
                            // 0x14000874a
                            v98 = v97;
                            v99 = v96 + 8;
                            v100 = v99 & 0xffffffff;
                            v101 = v99;
                            *v2 = v101;
                            v102 = (int32_t)v96 & 31;
                            v95 |= (v102 == 0 ? v98 : (int64_t)((int32_t)v98 << v102));
                            v103 = (int32_t)v95;
                            *v4 = v103;
                            v91 = v100;
                        }
                    }
                }
                uint32_t v104 = *v4; // 0x14000877f
                uint32_t v105 = v86 & 31; // 0x14000878a
                *v4 = v104 >> v105;
                *v2 = (int32_t)v91 - v86;
                v88 = ((int64_t)(1 << v105) + 0xffffffff & (int64_t)v104) + v87 & 0xffffffff;
            }
            int64_t v106 = 0x100000000 * v88 >> 32; // 0x1400087a4
            if (v11 - *(int64_t *)(a1 + 32) < v106) {
                // 0x140008846
                *(int64_t *)(*(int64_t *)__readgsqword(88) + 16) = (int64_t)"bad dist";
                result = (int32_t)"bad dist" ^ (int32_t)"bad dist";
                return result;
            }
            int64_t v107 = v11; // 0x1400087be
            if ((0x100000000 * v66 >> 32) + v11 > *v7) {
                // 0x1400087c0
                result = 0;
                if ((int32_t)function_140008360(a1, v11, v66) == 0) {
                  lab_0x14000886f:
                    // 0x14000886f
                    return result;
                }
                // 0x1400087d2
                v107 = *v1;
            }
            int64_t v108 = v107;
            int64_t v109 = v108 - v106; // 0x1400087d9
            if (v88 != 1) {
                // 0x140008802
                v39 = v109;
                v10 = v108;
                int64_t v110 = v109; // 0x140008804
                int64_t v111 = v66; // 0x140008804
                int64_t v112 = v108; // 0x140008804
                if (v66 != 0) {
                    int64_t v113 = v110 + 1; // 0x140008813
                    *(char *)v112 = *(char *)v110;
                    int64_t v114 = v112 + 1; // 0x140008819
                    uint32_t v115 = (int32_t)v111 - 1; // 0x14000881c
                    v39 = v113;
                    v10 = v114;
                    v110 = v113;
                    v111 = v115;
                    v112 = v114;
                    while (v115 != 0) {
                        // 0x140008810
                        v113 = v110 + 1;
                        *(char *)v112 = *(char *)v110;
                        v114 = v112 + 1;
                        v115 = (int32_t)v111 - 1;
                        v39 = v113;
                        v10 = v114;
                        v110 = v113;
                        v111 = v115;
                        v112 = v114;
                    }
                }
            } else {
                // 0x1400087e2
                v39 = v109;
                v10 = v108;
                if (v66 != 0) {
                    unsigned char v116 = *(char *)v109; // 0x1400087ea
                    memset((int64_t *)v108, (int32_t)v116, (int32_t)v66);
                    v39 = v108;
                    v10 = v108 + v66;
                }
            }
        } else {
            if (v38 < 0) {
                // break -> 0x140008826
                break;
            }
            int64_t v117 = v37; // 0x140008564
            int64_t v118 = v11; // 0x140008564
            if (v11 >= *v7) {
                // 0x140008566
                if ((int32_t)function_140008360(a1, v11, 1) == 0) {
                    // 0x14000886f
                    return 0;
                }
                // 0x14000857f
                v118 = *v1;
                v117 = a1;
            }
            // 0x140008583
            *(char *)v118 = (char)v36;
            v39 = v117;
            v10 = v118 + 1;
        }
        // 0x1400084a0
        v9 = v39;
    }
    int64_t v119 = *(int64_t *)__readgsqword(88); // 0x140008834
    *(int64_t *)(v119 + 16) = (int64_t)"bad huffman code";
    // 0x14000886f
    return 0;
}

// Address range: 0x140008890 - 0x140008eba
int64_t function_140008890(int64_t a1) {
    // 0x140008890
    int128_t v1; // 0x140008890
    int128_t v2 = v1;
    int32_t * v3 = (int32_t *)(a1 + 16); // 0x1400088b2
    uint32_t v4 = *v3; // 0x1400088b2
    int64_t v5 = v4; // 0x1400088b2
    int32_t * v6 = (int32_t *)(a1 + 20);
    int64_t v7 = v5; // 0x1400088c3
    if (v4 <= 4) {
        uint32_t v8 = *v6; // 0x1400088c5
        int64_t * v9; // 0x140008890
        int64_t * v10; // 0x140008890
        int64_t v11; // 0x140008890
        if (v8 >> (v4 & 31) != 0) {
            // 0x1400088c5
            v10 = (int64_t *)a1;
            v9 = (int64_t *)(a1 + 8);
            v11 = v5;
          lab_0x14000891a:
            // 0x14000891a
            *v10 = *v9;
            v7 = v11;
        } else {
            int64_t * v12 = (int64_t *)(a1 + 8);
            int64_t * v13 = (int64_t *)a1;
            int64_t v14 = v8; // 0x1400088db
            int64_t v15 = 0; // 0x1400088e6
            if (v5 < *v12) {
                // 0x1400088ec
                *v13 = v5 + 1;
                v15 = v5 & 255;
            }
            int64_t v16 = v15;
            int64_t v17 = v5 + 8; // 0x1400088f8
            int64_t v18 = v17 & 0xffffffff; // 0x1400088f8
            uint32_t v19 = (int32_t)v5 & 31; // 0x1400088fb
            v14 |= (v19 == 0 ? v16 : (int64_t)((int32_t)v16 << v19));
            int32_t v20 = v17; // 0x140008900
            *v3 = v20;
            uint32_t v21 = (int32_t)v14; // 0x140008903
            *v6 = v21;
            v7 = v18;
            while (v20 <= 24) {
                int64_t v22 = v17; // 0x140008918
                v10 = v13;
                v9 = v12;
                v11 = v18;
                if (v21 >> (v20 & 31) != 0) {
                    goto lab_0x14000891a;
                }
                uint64_t v23 = v18;
                v15 = 0;
                if (v23 < *v12) {
                    // 0x1400088ec
                    *v13 = v23 + 1;
                    v15 = v22 & 255;
                }
                // 0x1400088f5
                v16 = v15;
                v17 = v23 + 8;
                v18 = v17 & 0xffffffff;
                v19 = (int32_t)v23 & 31;
                v14 |= (v19 == 0 ? v16 : (int64_t)((int32_t)v16 << v19));
                v20 = v17;
                *v3 = v20;
                v21 = (int32_t)v14;
                *v6 = v21;
                v7 = v18;
            }
        }
    }
    uint32_t v24 = *v6; // 0x140008921
    int64_t v25 = v7 + 0xfffffffb; // 0x140008924
    int64_t v26 = v25 & 0xffffffff; // 0x140008924
    uint32_t v27 = (int32_t)v25; // 0x14000892b
    *v3 = v27;
    uint32_t v28 = v24 / 32; // 0x140008932
    int64_t v29 = v28; // 0x140008932
    *v6 = v28;
    int64_t v30 = v26; // 0x140008948
    int64_t v31 = v29; // 0x140008948
    if (v27 <= 4) {
        int64_t * v32 = (int64_t *)(a1 + 8);
        int64_t * v33; // 0x140008890
        int64_t v34; // 0x140008890
        int64_t v35; // 0x140008890
        if (v28 >> (v27 & 31) != 0) {
            // 0x14000894a
            v33 = (int64_t *)a1;
            v35 = v26;
            v34 = v29;
          lab_0x1400089a3:
            // 0x1400089a3
            *v33 = *v32;
            v30 = v35;
            v31 = v34;
        } else {
            int64_t * v36 = (int64_t *)a1;
            int64_t v37 = v29; // 0x14000895c
            int64_t v38 = 0; // 0x140008966
            if (v26 < *v32) {
                // 0x14000896c
                *v36 = v26 + 1;
                v38 = v25 & 255;
            }
            int64_t v39 = v38;
            int64_t v40 = v26 + 8; // 0x140008975
            int64_t v41 = v40 & 0xffffffff; // 0x140008975
            uint32_t v42 = (int32_t)v26 & 31; // 0x14000897d
            v37 |= (v42 == 0 ? v39 : (int64_t)((int32_t)v39 << v42));
            int32_t v43 = v40; // 0x140008983
            *v3 = v43;
            uint32_t v44 = (int32_t)v37; // 0x140008987
            *v6 = v44;
            v30 = v41;
            v31 = v37;
            while (v43 <= 24) {
                int64_t v45 = v41; // 0x1400089a1
                v33 = v36;
                v35 = v41;
                v34 = v37;
                if (v44 >> (v43 & 31) != 0) {
                    goto lab_0x1400089a3;
                }
                uint64_t v46 = v41;
                v38 = 0;
                if (v46 < *v32) {
                    // 0x14000896c
                    *v36 = v46 + 1;
                    v38 = v45 & 255;
                }
                // 0x140008975
                v39 = v38;
                v40 = v46 + 8;
                v41 = v40 & 0xffffffff;
                v42 = (int32_t)v46 & 31;
                v37 |= (v42 == 0 ? v39 : (int64_t)((int32_t)v39 << v42));
                v43 = v40;
                *v3 = v43;
                v44 = (int32_t)v37;
                *v6 = v44;
                v30 = v41;
                v31 = v37;
            }
        }
    }
    int64_t v47 = v30 + 0xfffffffb; // 0x1400089ad
    int64_t v48 = v47 & 0xffffffff; // 0x1400089ad
    int64_t v49 = v31 / 32 & 0x7ffffff; // 0x1400089b5
    uint32_t v50 = (int32_t)v49; // 0x1400089bb
    *v6 = v50;
    int32_t v51 = v47; // 0x1400089be
    *v3 = v51;
    int64_t * v52; // 0x140008890
    int64_t * v53; // 0x140008890
    int64_t v54; // 0x140008890
    int64_t v55; // 0x140008890
    if (v51 > 3) {
        // 0x1400089aa
        v53 = (int64_t *)a1;
        v52 = (int64_t *)(a1 + 8);
        v55 = v49;
        v54 = v48;
    } else {
        int64_t * v56 = (int64_t *)(a1 + 8);
        int64_t * v57; // 0x140008890
        int64_t v58; // 0x140008890
        int64_t v59; // 0x140008890
        if (v50 >> (v51 & 31) != 0) {
            // 0x1400089c8
            v57 = (int64_t *)a1;
            v59 = v49;
            v58 = v48;
          lab_0x140008a1f:
            // 0x140008a1f
            *v57 = *v56;
            v53 = v57;
            v52 = v56;
            v55 = v59;
            v54 = v58;
        } else {
            int64_t * v60 = (int64_t *)a1;
            int64_t v61 = v49; // 0x1400089dd
            int64_t v62 = 0; // 0x1400089e6
            if (v48 < *v56) {
                // 0x1400089ec
                *v60 = v48 + 1;
                v62 = v47 & 255;
            }
            int64_t v63 = v62;
            int64_t v64 = v48 + 8; // 0x1400089f8
            int64_t v65 = v64 & 0xffffffff; // 0x1400089f8
            uint32_t v66 = (int32_t)v48 & 31; // 0x1400089fc
            v61 |= (v66 == 0 ? v63 : (int64_t)((int32_t)v63 << v66));
            int32_t v67 = v64; // 0x140008a01
            *v3 = v67;
            uint32_t v68 = (int32_t)v61; // 0x140008a05
            *v6 = v68;
            v53 = v60;
            v52 = v56;
            v55 = v61;
            v54 = v65;
            while (v67 <= 24) {
                int64_t v69 = v65; // 0x140008a1d
                v57 = v60;
                v59 = v61;
                v58 = v65;
                if (v68 >> (v67 & 31) != 0) {
                    goto lab_0x140008a1f;
                }
                uint64_t v70 = v65;
                v62 = 0;
                if (v70 < *v56) {
                    // 0x1400089ec
                    *v60 = v70 + 1;
                    v62 = v69 & 255;
                }
                // 0x1400089f5
                v63 = v62;
                v64 = v70 + 8;
                v65 = v64 & 0xffffffff;
                v66 = (int32_t)v70 & 31;
                v61 |= (v66 == 0 ? v63 : (int64_t)((int32_t)v63 << v66));
                v67 = v64;
                *v3 = v67;
                v68 = (int32_t)v61;
                *v6 = v68;
                v53 = v60;
                v52 = v56;
                v55 = v61;
                v54 = v65;
            }
        }
    }
    // 0x140008a26
    int64_t v71; // bp-2632, 0x140008890
    int64_t v72 = &v71; // 0x140008899
    uint32_t v73 = (v24 & 31) + 257; // 0x14000893a
    int64_t v74 = (v31 & 31) + 1; // 0x1400089b8
    int64_t v75 = v55 / 16 & 0xfffffff; // 0x140008a33
    *v6 = (int32_t)v75;
    int64_t v76 = v54 + 0xfffffffc; // 0x140008a53
    *v3 = (int32_t)v76;
    int128_t v77; // bp-552, 0x140008890
    __asm_movups(v77, __asm_xorps(v2, v2));
    int64_t v78 = 0; // 0x140008a8d
    int64_t v79 = v76 & 0xffffffff;
    uint32_t v80 = (int32_t)v76; // 0x140008a97
    int64_t v81 = v75; // 0x140008a97
    int64_t v82 = v79; // 0x140008a97
    int64_t v83; // 0x140008890
    int64_t v84; // 0x140008890
    uint64_t v85; // 0x140008ab2
    int64_t v86; // 0x140008ac7
    int64_t v87; // 0x140008890
    int64_t v88; // 0x140008aca
    int64_t v89; // 0x140008aca
    int32_t v90; // 0x140008ad1
    uint32_t v91; // 0x140008ad5
    int64_t v92; // 0x140008890
    int64_t v93; // 0x140008ad7
    uint32_t v94; // 0x140008ad9
    if (v80 <= 2) {
        // 0x140008a99
        v87 = v79;
        if ((int32_t)v75 >> (v80 & 31) != 0) {
            // 0x140008afb
            *v53 = *v52;
            v81 = v75 & 0xffffffff;
            v82 = v87;
        } else {
            // 0x140008aae
            v85 = v79;
            if (v85 < *v52) {
                // 0x140008abe
                *v53 = v85 + 1;
                v84 = v76 & 255;
            } else {
                // 0x140008aba
                v84 = 0;
            }
            // 0x140008ac7
            v86 = v84;
            v88 = v85 + 8;
            v89 = v88 & 0xffffffff;
            v90 = v88;
            *v3 = v90;
            v91 = (int32_t)v85 & 31;
            v92 = (v91 == 0 ? v86 : (int64_t)((int32_t)v86 << v91)) | v75;
            v93 = v92 & 0xffffffff;
            v94 = (int32_t)v92;
            *v6 = v94;
            v81 = v93;
            v82 = v89;
            while (v90 <= 24) {
                // 0x140008ae2
                v83 = v89;
                if (v94 >> (v90 & 31) != 0) {
                    goto lab_0x140008afb;
                }
                v85 = v89;
                if (v85 < *v52) {
                    // 0x140008abe
                    *v53 = v85 + 1;
                    v84 = v83 & 255;
                } else {
                    // 0x140008aba
                    v84 = 0;
                }
                // 0x140008ac7
                v86 = v84;
                v88 = v85 + 8;
                v89 = v88 & 0xffffffff;
                v90 = v88;
                *v3 = v90;
                v91 = (int32_t)v85 & 31;
                v92 = (v91 == 0 ? v86 : (int64_t)((int32_t)v86 << v91)) | v93;
                v93 = v92 & 0xffffffff;
                v94 = (int32_t)v92;
                *v6 = v94;
                v81 = v93;
                v82 = v89;
            }
        }
    }
    unsigned char v95 = *(char *)(v78 + (int64_t)&g25); // 0x140008b05
    int64_t v96 = v82 + 0xfffffffd; // 0x140008b0b
    *v3 = (int32_t)v96;
    int64_t v97 = v81 / 8 & 0x1fffffff; // 0x140008b16
    *v6 = (int32_t)v97;
    *(char *)(v72 + 2080 + (int64_t)v95) = (char)v81 & 7;
    while (v78 != (v55 & 15) + 3) {
        // 0x140008a90
        v78++;
        int64_t v98 = v97;
        int64_t v99 = v96;
        v79 = v99 & 0xffffffff;
        v80 = (int32_t)v99;
        v81 = v98;
        v82 = v79;
        if (v80 <= 2) {
            // 0x140008a99
            v87 = v79;
            int64_t v100 = v98; // 0x140008aac
            if ((int32_t)v98 >> (v80 & 31) != 0) {
                // 0x140008afb
                *v53 = *v52;
                v81 = v100 & 0xffffffff;
                v82 = v87;
            } else {
                // 0x140008aae
                v83 = v99;
                v85 = v79;
                if (v85 < *v52) {
                    // 0x140008abe
                    *v53 = v85 + 1;
                    v84 = v83 & 255;
                } else {
                    // 0x140008aba
                    v84 = 0;
                }
                // 0x140008ac7
                v86 = v84;
                v88 = v85 + 8;
                v89 = v88 & 0xffffffff;
                v90 = v88;
                *v3 = v90;
                v91 = (int32_t)v85 & 31;
                v92 = (v91 == 0 ? v86 : (int64_t)((int32_t)v86 << v91)) | v98;
                v93 = v92 & 0xffffffff;
                v94 = (int32_t)v92;
                *v6 = v94;
                v81 = v93;
                v82 = v89;
                while (v90 <= 24) {
                    // 0x140008ae2
                    v83 = v89;
                    if (v94 >> (v90 & 31) != 0) {
                        goto lab_0x140008afb;
                    }
                    v85 = v89;
                    if (v85 < *v52) {
                        // 0x140008abe
                        *v53 = v85 + 1;
                        v84 = v83 & 255;
                    } else {
                        // 0x140008aba
                        v84 = 0;
                    }
                    // 0x140008ac7
                    v86 = v84;
                    v88 = v85 + 8;
                    v89 = v88 & 0xffffffff;
                    v90 = v88;
                    *v3 = v90;
                    v91 = (int32_t)v85 & 31;
                    v92 = (v91 == 0 ? v86 : (int64_t)((int32_t)v86 << v91)) | v93;
                    v93 = v92 & 0xffffffff;
                    v94 = (int32_t)v92;
                    *v6 = v94;
                    v81 = v93;
                    v82 = v89;
                }
            }
        }
        // 0x140008b05
        v95 = *(char *)(v78 + (int64_t)&g25);
        v96 = v82 + 0xfffffffd;
        *v3 = (int32_t)v96;
        v97 = v81 / 8 & 0x1fffffff;
        *v6 = (int32_t)v97;
        *(char *)(v72 + 2080 + (int64_t)v95) = (char)v81 & 7;
    }
    // 0x140008b37
    int64_t v101; // bp-2584, 0x140008890
    if ((int32_t)function_140007fe0(&v101, &v77, 19) == 0) {
        // 0x140008e92
        __security_check_cookie(g66);
        return &g103;
    }
    uint32_t v102 = v73 + (int32_t)v74; // 0x140008a65
    uint64_t v103 = (int64_t)v102; // 0x140008b37
    int64_t v104 = v73; // 0x140008b3c
    int64_t v105 = &v101; // 0x140008b56
    int64_t v106; // bp-520, 0x140008890
    int64_t v107 = &v106;
    int64_t v108 = 0;
    uint32_t v109 = *v3; // 0x140008b70
    int64_t v110 = v109; // 0x140008b70
    int64_t v111 = v110; // 0x140008b76
    int64_t v112; // 0x140008890
    int64_t v113; // 0x140008890
    uint64_t v114; // 0x140008ba0
    int64_t v115; // 0x140008bb5
    int64_t v116; // 0x140008890
    uint64_t v117; // 0x140008b78
    uint32_t v118; // 0x140008b85
    int64_t v119; // 0x140008bb8
    int64_t v120; // 0x140008bb8
    int32_t v121; // 0x140008bbf
    uint32_t v122; // 0x140008bc2
    int64_t v123; // 0x140008890
    uint32_t v124; // 0x140008bc7
    if (v109 <= 15) {
        // 0x140008b78
        v117 = *v52;
        if (v105 >= v117) {
            // break -> 0x140008e74
            break;
        }
        // 0x140008b85
        v118 = *v6;
        v116 = v110;
        if (v118 >> (v109 & 31) != 0) {
            // 0x140008be1
            *v53 = v117;
            v111 = v116;
        } else {
            // 0x140008ba0
            v112 = v110;
            v123 = v118;
            v114 = v110;
            if (v114 < v117) {
                // 0x140008bac
                *v53 = v114 + 1;
                v113 = v112 & 255;
            } else {
                // 0x140008ba8
                v113 = 0;
            }
            // 0x140008bb5
            v115 = v113;
            v119 = v114 + 8;
            v120 = v119 & 0xffffffff;
            v121 = v119;
            *v3 = v121;
            v122 = (int32_t)v114 & 31;
            v123 |= (v122 == 0 ? v115 : (int64_t)((int32_t)v115 << v122));
            v124 = (int32_t)v123;
            *v6 = v124;
            v111 = v120;
            while (v121 <= 24) {
                // 0x140008bd0
                v112 = v119;
                if (v124 >> (v121 & 31) != 0) {
                    goto lab_0x140008be1;
                }
                v114 = v120;
                if (v114 < v117) {
                    // 0x140008bac
                    *v53 = v114 + 1;
                    v113 = v112 & 255;
                } else {
                    // 0x140008ba8
                    v113 = 0;
                }
                // 0x140008bb5
                v115 = v113;
                v119 = v114 + 8;
                v120 = v119 & 0xffffffff;
                v121 = v119;
                *v3 = v121;
                v122 = (int32_t)v114 & 31;
                v123 |= (v122 == 0 ? v115 : (int64_t)((int32_t)v115 << v122));
                v124 = (int32_t)v123;
                *v6 = v124;
                v111 = v120;
            }
        }
    }
    uint32_t v125 = *v6; // 0x140008be4
    uint16_t v126 = *(int16_t *)(v72 + 48 + (int64_t)(2 * v125 & 1022)); // 0x140008bf0
    int64_t v127; // 0x140008890
    int32_t v128; // 0x140008bfe
    if (v126 == 0) {
        // 0x140008c11
        v127 = function_140008280(a1, v105);
    } else {
        // 0x140008bf9
        v128 = v126 / 512;
        *v6 = v125 >> (v128 & 31);
        *v3 = (int32_t)v111 - v128;
        v127 = v126 & 511;
    }
    int64_t v129 = v127;
    int32_t v130 = v129; // 0x140008c1e
    while (v130 < 19) {
        int64_t v131; // 0x140008890
        int64_t v132; // 0x140008890
        if (v130 > 15) {
            int32_t v133; // 0x140008890
            int32_t v134; // 0x140008890
            if (v130 != 16) {
                int32_t v135; // 0x140008890
                int64_t v136; // 0x140008890
                if (v130 != 17) {
                    if (v130 != 18) {
                        // break -> 0x140008e74
                        break;
                    }
                    uint32_t v137 = *v3; // 0x140008d7b
                    int64_t v138 = v137; // 0x140008d7b
                    int64_t v139 = v138; // 0x140008d81
                    if (v137 <= 6) {
                        uint32_t v140 = *v6; // 0x140008d83
                        int64_t v141 = v138; // 0x140008d96
                        if (v140 >> (v137 & 31) != 0) {
                            // 0x140008de1
                            *v53 = *v52;
                            v139 = v141;
                        } else {
                            int64_t v142 = v138; // 0x140008d9c
                            int64_t v143 = v140; // 0x140008d9c
                            uint64_t v144 = v138; // 0x140008da0
                            int64_t v145; // 0x140008890
                            if (v144 < *v52) {
                                // 0x140008dac
                                *v53 = v144 + 1;
                                v145 = v142 & 255;
                            } else {
                                // 0x140008da8
                                v145 = 0;
                            }
                            int64_t v146 = v145; // 0x140008db5
                            int64_t v147 = v144 + 8; // 0x140008db8
                            int64_t v148 = v147 & 0xffffffff; // 0x140008db8
                            int32_t v149 = v147; // 0x140008dbf
                            *v3 = v149;
                            uint32_t v150 = (int32_t)v144 & 31; // 0x140008dc2
                            v143 |= (v150 == 0 ? v146 : (int64_t)((int32_t)v146 << v150));
                            uint32_t v151 = (int32_t)v143; // 0x140008dc7
                            *v6 = v151;
                            v139 = v148;
                            while (v149 <= 24) {
                                // 0x140008dd0
                                v142 = v147;
                                if (v151 >> (v149 & 31) != 0) {
                                    goto lab_0x140008de1;
                                }
                                v144 = v148;
                                if (v144 < *v52) {
                                    // 0x140008dac
                                    *v53 = v144 + 1;
                                    v145 = v142 & 255;
                                } else {
                                    // 0x140008da8
                                    v145 = 0;
                                }
                                // 0x140008db5
                                v146 = v145;
                                v147 = v144 + 8;
                                v148 = v147 & 0xffffffff;
                                v149 = v147;
                                *v3 = v149;
                                v150 = (int32_t)v144 & 31;
                                v143 |= (v150 == 0 ? v146 : (int64_t)((int32_t)v146 << v150));
                                v151 = (int32_t)v143;
                                *v6 = v151;
                                v139 = v148;
                            }
                        }
                    }
                    uint32_t v152 = *v6; // 0x140008de8
                    *v6 = v152 / 128;
                    v135 = (v152 & 127) + 11;
                    v136 = v139 + 0xfffffff9;
                } else {
                    uint32_t v153 = *v3; // 0x140008cf2
                    int64_t v154 = v153; // 0x140008cf2
                    int64_t v155 = v154; // 0x140008cfa
                    if (v153 <= 2) {
                        uint32_t v156 = *v6; // 0x140008cfc
                        int64_t v157 = v154; // 0x140008d0d
                        if (v156 >> (v153 & 31) != 0) {
                            // 0x140008d51
                            *v53 = *v52;
                            v155 = v157;
                        } else {
                            int64_t v158 = v156; // 0x140008d13
                            int64_t v159 = v154;
                            int64_t v160 = 0; // 0x140008d19
                            int64_t v161 = v159; // 0x140008d19
                            if (v159 < *v52) {
                                // 0x140008d1f
                                v161 = v159 + 1;
                                *v53 = v161;
                                v160 = (int64_t)*(char *)v159;
                            }
                            int64_t v162 = v160;
                            int64_t v163 = v154 + 8; // 0x140008d28
                            int64_t v164 = v163 & 0xffffffff; // 0x140008d28
                            uint32_t v165 = (int32_t)v154 & 31; // 0x140008d2f
                            int64_t v166 = v165 == 0 ? v162 : (int64_t)((int32_t)v162 << v165);
                            v158 |= v166;
                            int32_t v167 = v163; // 0x140008d34
                            *v3 = v167;
                            uint32_t v168 = (int32_t)v158; // 0x140008d38
                            *v6 = v168;
                            v155 = v164;
                            while (v167 <= 24) {
                                // 0x140008d42
                                if (v168 >> (v167 & 31) != 0) {
                                    goto lab_0x140008d51;
                                }
                                v159 = v161;
                                int64_t v169 = v164;
                                v160 = 0;
                                v161 = v159;
                                if (v159 < *v52) {
                                    // 0x140008d1f
                                    v161 = v159 + 1;
                                    *v53 = v161;
                                    v160 = (int64_t)*(char *)v159;
                                }
                                // 0x140008d28
                                v162 = v160;
                                v163 = v169 + 8;
                                v164 = v163 & 0xffffffff;
                                v165 = (int32_t)v169 & 31;
                                v166 = v165 == 0 ? v162 : (int64_t)((int32_t)v162 << v165);
                                v158 |= v166;
                                v167 = v163;
                                *v3 = v167;
                                v168 = (int32_t)v158;
                                *v6 = v168;
                                v155 = v164;
                            }
                        }
                    }
                    uint32_t v170 = *v6; // 0x140008d58
                    *v6 = v170 / 8;
                    v135 = (v170 & 7) + 3;
                    v136 = v155 + 0xfffffffd;
                }
                // 0x140008dfc
                *v3 = (int32_t)v136;
                v134 = v135;
                v133 = 0;
            } else {
                uint32_t v171 = *v3; // 0x140008c4c
                int64_t v172 = v171; // 0x140008c4c
                int64_t v173 = v172; // 0x140008c52
                if (v171 <= 1) {
                    uint32_t v174 = *v6; // 0x140008c54
                    int64_t v175 = v172; // 0x140008c67
                    if (v174 >> (v171 & 31) != 0) {
                        // 0x140008cb1
                        *v53 = *v52;
                        v173 = v175;
                    } else {
                        int64_t v176 = v172; // 0x140008c6d
                        int64_t v177 = v174; // 0x140008c6d
                        uint64_t v178 = v172; // 0x140008c70
                        int64_t v179; // 0x140008890
                        if (v178 < *v52) {
                            // 0x140008c7c
                            *v53 = v178 + 1;
                            v179 = v176 & 255;
                        } else {
                            // 0x140008c78
                            v179 = 0;
                        }
                        int64_t v180 = v179; // 0x140008c85
                        int64_t v181 = v178 + 8; // 0x140008c88
                        int64_t v182 = v181 & 0xffffffff; // 0x140008c88
                        int32_t v183 = v181; // 0x140008c8f
                        *v3 = v183;
                        uint32_t v184 = (int32_t)v178 & 31; // 0x140008c92
                        v177 |= (v184 == 0 ? v180 : (int64_t)((int32_t)v180 << v184));
                        uint32_t v185 = (int32_t)v177; // 0x140008c97
                        *v6 = v185;
                        v173 = v182;
                        while (v183 <= 24) {
                            // 0x140008ca0
                            v176 = v181;
                            if (v185 >> (v183 & 31) != 0) {
                                goto lab_0x140008cb1;
                            }
                            v178 = v182;
                            if (v178 < *v52) {
                                // 0x140008c7c
                                *v53 = v178 + 1;
                                v179 = v176 & 255;
                            } else {
                                // 0x140008c78
                                v179 = 0;
                            }
                            // 0x140008c85
                            v180 = v179;
                            v181 = v178 + 8;
                            v182 = v181 & 0xffffffff;
                            v183 = v181;
                            *v3 = v183;
                            v184 = (int32_t)v178 & 31;
                            v177 |= (v184 == 0 ? v180 : (int64_t)((int32_t)v180 << v184));
                            v185 = (int32_t)v177;
                            *v6 = v185;
                            v173 = v182;
                        }
                    }
                }
                uint32_t v186 = *v6; // 0x140008cb8
                *v6 = v186 / 4;
                *v3 = (int32_t)v173 - 2;
                if (v108 == 0) {
                    // break -> 0x140008e74
                    break;
                }
                // 0x140008cd8
                v134 = (v186 & 3) + 3;
                v133 = (int32_t)*(char *)(v72 + 2111 + (0x100000000 * v108 >> 32));
            }
            int64_t v187 = v134;
            if ((v103 - v108 & 0xffffffff) < v187) {
                // break -> 0x140008e74
                break;
            }
            int64_t v188 = (0x100000000 * v108 >> 32) + v107; // 0x140008e14
            memset((int64_t *)v188, v133, v134);
            v131 = v188;
            v132 = v187;
        } else {
            int64_t v189 = 0x100000000 * v108 >> 32; // 0x140008c2c
            *(char *)(v72 + 2112 + v189) = (char)v129;
            v131 = v189;
            v132 = 1;
        }
        int64_t v190 = v132 + v108; // 0x140008e23
        int64_t v191 = v190 & 0xffffffff; // 0x140008e23
        int64_t v192 = v131; // 0x140008e2d
        if (v191 >= v103) {
            if (v102 != (int32_t)v190) {
                goto lab_0x140008e74;
            } else {
                int64_t v193 = function_140007fe0((int64_t *)(a1 + 52), (int128_t *)&v106, v104); // 0x140008e44
                if ((int32_t)v193 == 0) {
                    goto lab_0x140008e92;
                } else {
                    // 0x140008e4d
                    function_140007fe0((int64_t *)(a1 + 2072), (int128_t *)(v104 + v107), v74);
                    goto lab_0x140008e92;
                }
            }
        }
        v108 = v191;
        v109 = *v3;
        v110 = v109;
        v111 = v110;
        if (v109 <= 15) {
            // 0x140008b78
            v117 = *v52;
            if (v192 >= v117) {
                // break -> 0x140008e74
                break;
            }
            // 0x140008b85
            v118 = *v6;
            v116 = v110;
            if (v118 >> (v109 & 31) != 0) {
                // 0x140008be1
                *v53 = v117;
                v111 = v116;
            } else {
                // 0x140008ba0
                v112 = v110;
                v123 = v118;
                v114 = v110;
                if (v114 < v117) {
                    // 0x140008bac
                    *v53 = v114 + 1;
                    v113 = v112 & 255;
                } else {
                    // 0x140008ba8
                    v113 = 0;
                }
                // 0x140008bb5
                v115 = v113;
                v119 = v114 + 8;
                v120 = v119 & 0xffffffff;
                v121 = v119;
                *v3 = v121;
                v122 = (int32_t)v114 & 31;
                v123 |= (v122 == 0 ? v115 : (int64_t)((int32_t)v115 << v122));
                v124 = (int32_t)v123;
                *v6 = v124;
                v111 = v120;
                while (v121 <= 24) {
                    // 0x140008bd0
                    v112 = v119;
                    if (v124 >> (v121 & 31) != 0) {
                        goto lab_0x140008be1;
                    }
                    v114 = v120;
                    if (v114 < v117) {
                        // 0x140008bac
                        *v53 = v114 + 1;
                        v113 = v112 & 255;
                    } else {
                        // 0x140008ba8
                        v113 = 0;
                    }
                    // 0x140008bb5
                    v115 = v113;
                    v119 = v114 + 8;
                    v120 = v119 & 0xffffffff;
                    v121 = v119;
                    *v3 = v121;
                    v122 = (int32_t)v114 & 31;
                    v123 |= (v122 == 0 ? v115 : (int64_t)((int32_t)v115 << v122));
                    v124 = (int32_t)v123;
                    *v6 = v124;
                    v111 = v120;
                }
            }
        }
        // 0x140008be4
        v125 = *v6;
        v126 = *(int16_t *)(v72 + 48 + (int64_t)(2 * v125 & 1022));
        if (v126 == 0) {
            // 0x140008c11
            v127 = function_140008280(a1, v105);
        } else {
            // 0x140008bf9
            v128 = v126 / 512;
            *v6 = v125 >> (v128 & 31);
            *v3 = (int32_t)v111 - v128;
            v127 = v126 & 511;
        }
        // 0x140008c1e
        v129 = v127;
        v130 = v129;
    }
  lab_0x140008e74:;
    int64_t v194 = *(int64_t *)__readgsqword(88); // 0x140008e82
    *(int64_t *)(v194 + 16) = (int64_t)"bad codelengths";
    // 0x140008e92
    __security_check_cookie(g66);
    return &g103;
}

// Address range: 0x140008ec0 - 0x140009081
int64_t function_140008ec0(int64_t a1) {
    int32_t * v1 = (int32_t *)(a1 + 16); // 0x140008ec6
    uint32_t v2 = *v1; // 0x140008ec6
    int64_t v3 = v2; // 0x140008ec6
    uint32_t v4 = v2 & 7; // 0x140008ed2
    int64_t v5 = v3; // 0x140008ed6
    if (v4 != 0) {
        int32_t * v6 = (int32_t *)(a1 + 20); // 0x140008f41
        *v6 = *v6 >> v4;
        int64_t v7 = v3 - (int64_t)v4; // 0x140008f44
        *v1 = (int32_t)v7;
        v5 = v7 & 0xffffffff;
    }
    int32_t v8 = v5; // 0x140008f50
    bool v9 = v8 < 0; // 0x140008f52
    int64_t v10 = 0; // 0x140008f52
    int32_t v11; // 0x140008ec0
    if (v8 >= 1) {
        int64_t v12 = a1 + 20; // 0x140008f54
        int32_t * v13 = (int32_t *)v12; // 0x140008f54
        char * v14 = (char *)v12; // 0x140008f60
        int64_t v15 = v5 + 0xfffffff8; // 0x140008f64
        uint32_t v16 = *v13 / 256;
        *(char *)&v11 = *v14;
        *v13 = v16;
        int32_t v17 = v15;
        v10 = 0x100000000;
        int32_t v18 = v17; // 0x140008f7d
        v9 = v17 < 0;
        if (v17 >= 0 == (v17 != 0)) {
            int64_t v19 = v16; // 0x140008f68
            int64_t v20 = v15; // 0x140008f64
            int64_t v21 = &v11; // 0x140008f71
            v21++;
            v20 = (v20 & 0xffffffff) + 0xfffffff8;
            v19 /= 256;
            int64_t v22 = 2; // 0x140008f6b
            *(char *)v21 = *v14;
            *v13 = (int32_t)v19;
            int32_t v23 = v20;
            int64_t v24 = v22; // 0x140008f7d
            while (v23 >= 0 == (v23 != 0)) {
                // 0x140008f60
                v21++;
                v20 = (v20 & 0xffffffff) + 0xfffffff8;
                v19 /= 256;
                v22 = (v24 & 0xffffffff) + 1;
                *(char *)v21 = *v14;
                *v13 = (int32_t)v19;
                v23 = v20;
                v24 = v22;
            }
            // 0x140008f60
            v10 = 0x100000000 * v22;
            v18 = v23;
            v9 = v23 < 0;
        }
        // 0x140008f7f
        *v1 = v18;
    }
    // 0x140008f82
    if (v9) {
        // 0x140008f84
        *(int64_t *)(*(int64_t *)__readgsqword(88) + 16) = (int64_t)"zlib corrupt";
        return (int32_t)"zlib corrupt" ^ (int32_t)"zlib corrupt";
    }
    // 0x140008fa8
    if (v10 <= 0x300000000) {
        int64_t v25 = v10 >> 32; // 0x140008fa8
        int64_t v26 = v25; // 0x140008fb5
        for (int64_t i = v25; i < 4; i++) {
            int64_t v27 = v26;
            int64_t v28 = v27; // 0x140008fbb
            char v29 = 0; // 0x140008fbb
            if (v27 < *(int64_t *)(a1 + 8)) {
                // 0x140008fc1
                v29 = *(char *)v27;
                v28 = v27 + 1;
                *(int64_t *)a1 = v28;
            }
            // 0x140008fca
            v26 = v28;
            int64_t v30; // bp-40, 0x140008ec0
            *(char *)((int64_t)&v30 + 48 + i) = v29;
        }
    }
    // 0x140008fd7
    int32_t v31; // 0x140008ec0
    uint32_t v32 = v11 & 255 | 256 * v31 & 0xff00; // 0x140008feb
    int32_t v33 = 256 * v31 & 0xff00 | v31 & 255; // 0x140008ff6
    if (v33 != (v32 ^ 0xffff)) {
        // 0x140008f84
        *(int64_t *)(*(int64_t *)__readgsqword(88) + 16) = (int64_t)"zlib corrupt";
        return (int32_t)"zlib corrupt" ^ (int32_t)"zlib corrupt";
    }
    int64_t v34 = v32 + v33; // 0x14000900f
    if (*(int64_t *)(a1 + 8) < v34) {
        int64_t v35 = *(int64_t *)__readgsqword(88); // 0x140009026
        *(int64_t *)(v35 + 16) = (int64_t)"read past buffer";
        // 0x140009034
        return 0;
    }
    int64_t v36 = v32; // 0x140008feb
    int64_t * v37 = (int64_t *)(a1 + 24); // 0x140009041
    int64_t v38 = *v37; // 0x140009041
    int64_t v39 = v38 + v36;
    int64_t v40 = v39; // 0x14000904d
    int64_t v41 = v38; // 0x14000904d
    int64_t v42 = v34; // 0x14000904d
    if (v39 > *(int64_t *)(a1 + 40)) {
        // 0x14000904f
        if ((int32_t)function_140008360(a1, v38, v36) == 0) {
            // 0x140009034
            return 0;
        }
        // 0x14000904f
        v41 = *v37;
        v40 = v41 + v36;
        v42 = a1;
    }
    // 0x14000905b
    memcpy((int64_t *)v41, (int64_t *)v42, v32);
    *(int64_t *)a1 = v40;
    *v37 = *v37 + v36;
    return 1;
}

// Address range: 0x140009090 - 0x14000931d
int64_t function_140009090(uint64_t a1, int64_t a2) {
    int64_t * v1 = (int64_t *)(a1 + 8);
    int64_t * v2; // 0x140009090
    if ((int32_t)a2 == 0) {
        // 0x140009090
        v2 = (int64_t *)a1;
    } else {
        uint64_t v3 = *v1; // 0x1400090a8
        int64_t v4; // 0x140009173
        if (v3 <= a1) {
            // 0x140009165
            v4 = *(int64_t *)__readgsqword(88);
            *(int64_t *)(v4 + 16) = (int64_t)"bad zlib header";
            return (int32_t)"bad zlib header" ^ (int32_t)"bad zlib header";
        }
        uint64_t v5 = a1 + 1; // 0x1400090b8
        int64_t * v6 = (int64_t *)a1;
        *v6 = v5;
        if (v5 >= v3) {
            // 0x140009165
            v4 = *(int64_t *)__readgsqword(88);
            *(int64_t *)(v4 + 16) = (int64_t)"bad zlib header";
            return (int32_t)"bad zlib header" ^ (int32_t)"bad zlib header";
        }
        uint64_t v7 = a1 + 2; // 0x1400090d5
        *v6 = v7;
        if (v7 >= v3) {
            // 0x140009165
            v4 = *(int64_t *)__readgsqword(88);
            *(int64_t *)(v4 + 16) = (int64_t)"bad zlib header";
            return (int32_t)"bad zlib header" ^ (int32_t)"bad zlib header";
        }
        int64_t v8 = (int64_t)*(char *)v5; // 0x1400090d1
        int64_t v9 = 256 * a1 & 0xff00 | v8; // 0x1400090ed
        int32_t v10 = v9; // 0x1400090f3
        int32_t v11 = 0x8421085 * v9 / 0x100000000; // 0x1400090f6
        if (31 * ((v10 - v11) / 2 + v11) / 16 != v10) {
            // 0x140009165
            v4 = *(int64_t *)__readgsqword(88);
            *(int64_t *)(v4 + 16) = (int64_t)"bad zlib header";
            return (int32_t)"bad zlib header" ^ (int32_t)"bad zlib header";
        }
        if ((v8 & 32) != 0) {
            // 0x14000910d
            *(int64_t *)(*(int64_t *)__readgsqword(88) + 16) = (int64_t)"no preset dict";
            // 0x140009129
            return 0;
        }
        // 0x140009136
        v2 = v6;
        if ((a1 & 15) != 8) {
            int64_t v12 = *(int64_t *)__readgsqword(88); // 0x14000914a
            *(int64_t *)(v12 + 16) = (int64_t)"bad compression";
            return (int32_t)"bad compression" ^ (int32_t)"bad compression";
        }
    }
    int64_t v13 = a1 + 16; // 0x140009190
    *(int64_t *)v13 = 0;
    int32_t * v14 = (int32_t *)v13; // 0x140009194
    int32_t * v15 = (int32_t *)(a1 + 20);
    int64_t * v16 = (int64_t *)(a1 + 2072);
    uint32_t v17 = *v14; // 0x140009194
    int64_t v18 = v17; // 0x140009194
    int64_t v19 = v18; // 0x14000919c
    int64_t v20; // 0x140009090
    int64_t v21; // 0x140009090
    uint64_t v22; // 0x1400091b8
    int64_t v23; // 0x1400091cd
    int64_t v24; // 0x140009090
    uint32_t v25; // 0x14000919e
    int64_t v26; // 0x1400091d0
    int64_t v27; // 0x1400091d0
    int32_t v28; // 0x1400091d6
    uint32_t v29; // 0x1400091da
    int64_t v30; // 0x140009090
    uint32_t v31; // 0x1400091df
    if (v17 <= 0) {
        // 0x14000919e
        v25 = *v15;
        v24 = v18;
        if (v25 >> (v17 & 31) != 0) {
            // 0x1400091fb
            *v2 = *v1;
            v19 = v24;
        } else {
            // 0x1400091b4
            v20 = v18;
            v30 = v25;
            v22 = v18;
            if (v22 < *v1) {
                // 0x1400091c4
                *v2 = v22 + 1;
                v21 = v20 & 255;
            } else {
                // 0x1400091c0
                v21 = 0;
            }
            // 0x1400091cd
            v23 = v21;
            v26 = v22 + 8;
            v27 = v26 & 0xffffffff;
            v28 = v26;
            *v14 = v28;
            v29 = (int32_t)v22 & 31;
            v30 |= (v29 == 0 ? v23 : (int64_t)((int32_t)v23 << v29));
            v31 = (int32_t)v30;
            *v15 = v31;
            v19 = v27;
            while (v28 <= 24) {
                // 0x1400091e9
                v20 = v26;
                if (v31 >> (v28 & 31) != 0) {
                    goto lab_0x1400091fb;
                }
                v22 = v27;
                if (v22 < *v1) {
                    // 0x1400091c4
                    *v2 = v22 + 1;
                    v21 = v20 & 255;
                } else {
                    // 0x1400091c0
                    v21 = 0;
                }
                // 0x1400091cd
                v23 = v21;
                v26 = v22 + 8;
                v27 = v26 & 0xffffffff;
                v28 = v26;
                *v14 = v28;
                v29 = (int32_t)v22 & 31;
                v30 |= (v29 == 0 ? v23 : (int64_t)((int32_t)v23 << v29));
                v31 = (int32_t)v30;
                *v15 = v31;
                v19 = v27;
            }
        }
    }
    uint32_t v32 = *v15; // 0x140009202
    uint32_t v33 = v32 / 2; // 0x140009207
    int64_t v34 = v33; // 0x140009207
    int64_t v35 = v19 + 0xffffffff; // 0x14000920c
    int64_t v36 = v35 & 0xffffffff; // 0x14000920c
    *v15 = v33;
    uint32_t v37 = (int32_t)v35; // 0x140009212
    *v14 = v37;
    int64_t v38 = v34; // 0x14000921a
    int64_t v39 = v36; // 0x14000921a
    int64_t v40; // 0x140009090
    int64_t v41; // 0x140009090
    uint64_t v42; // 0x140009234
    int64_t v43; // 0x140009249
    int64_t v44; // 0x140009090
    int64_t v45; // 0x140009090
    int64_t v46; // 0x14000924c
    int64_t v47; // 0x14000924c
    int32_t v48; // 0x140009253
    uint32_t v49; // 0x140009257
    int64_t v50; // 0x140009090
    uint32_t v51; // 0x14000925c
    if (v37 <= 1) {
        // 0x14000921c
        v45 = v34;
        v44 = v36;
        if (v33 >> (v37 & 31) != 0) {
            // 0x140009279
            *v2 = *v1;
            v38 = v45;
            v39 = v44;
        } else {
            // 0x140009230
            v40 = v35;
            v50 = v34;
            v42 = v36;
            if (v42 < *v1) {
                // 0x140009240
                *v2 = v42 + 1;
                v41 = v40 & 255;
            } else {
                // 0x14000923c
                v41 = 0;
            }
            // 0x140009249
            v43 = v41;
            v46 = v42 + 8;
            v47 = v46 & 0xffffffff;
            v48 = v46;
            *v14 = v48;
            v49 = (int32_t)v42 & 31;
            v50 |= (v49 == 0 ? v43 : (int64_t)((int32_t)v43 << v49));
            v51 = (int32_t)v50;
            *v15 = v51;
            v38 = v50;
            v39 = v47;
            while (v48 <= 24) {
                // 0x140009268
                v40 = v47;
                if (v51 >> (v48 & 31) != 0) {
                    goto lab_0x140009279;
                }
                v42 = v47;
                if (v42 < *v1) {
                    // 0x140009240
                    *v2 = v42 + 1;
                    v41 = v40 & 255;
                } else {
                    // 0x14000923c
                    v41 = 0;
                }
                // 0x140009249
                v43 = v41;
                v46 = v42 + 8;
                v47 = v46 & 0xffffffff;
                v48 = v46;
                *v14 = v48;
                v49 = (int32_t)v42 & 31;
                v50 |= (v49 == 0 ? v43 : (int64_t)((int32_t)v43 << v49));
                v51 = (int32_t)v50;
                *v15 = v51;
                v38 = v50;
                v39 = v47;
            }
        }
    }
    uint32_t v52 = (int32_t)v38; // 0x140009280
    *v15 = v52 / 4;
    *v14 = (int32_t)v39 - 2;
    int32_t v53 = v52 & 3; // 0x14000928f
    int64_t v54; // 0x140009090
    int64_t v55; // 0x140009090
    int64_t v56; // 0x1400092bd
    if (v53 != 0) {
        // 0x14000929e
        if (v53 == 3) {
            // break -> 0x140009129
            break;
        }
        if (v53 != 1) {
            // 0x1400092e5
            v55 = function_140008890(a1);
        } else {
            // 0x1400092ac
            v56 = function_140007fe0((int64_t *)(a1 + 52), (int128_t *)&g16, 288);
            if ((int32_t)v56 == 0) {
                // break -> 0x140009129
                break;
            }
            // 0x1400092ca
            v55 = function_140007fe0(v16, (int128_t *)&g18, 32);
        }
        // 0x1400092ed
        if ((int32_t)v55 == 0) {
            // break -> 0x140009129
            break;
        }
        // 0x1400092f5
        v54 = function_140008470(a1);
    } else {
        // 0x140009294
        v54 = function_140008ec0(a1);
    }
    int64_t result = 0; // 0x1400092ff
    while ((int32_t)v54 != 0) {
        // 0x140009305
        result = 1;
        if ((v32 & 1) != 0) {
            // break -> 0x140009129
            break;
        }
        v17 = *v14;
        v18 = v17;
        v19 = v18;
        if (v17 <= 0) {
            // 0x14000919e
            v25 = *v15;
            v24 = v18;
            if (v25 >> (v17 & 31) != 0) {
                // 0x1400091fb
                *v2 = *v1;
                v19 = v24;
            } else {
                // 0x1400091b4
                v20 = v18;
                v30 = v25;
                v22 = v18;
                if (v22 < *v1) {
                    // 0x1400091c4
                    *v2 = v22 + 1;
                    v21 = v20 & 255;
                } else {
                    // 0x1400091c0
                    v21 = 0;
                }
                // 0x1400091cd
                v23 = v21;
                v26 = v22 + 8;
                v27 = v26 & 0xffffffff;
                v28 = v26;
                *v14 = v28;
                v29 = (int32_t)v22 & 31;
                v30 |= (v29 == 0 ? v23 : (int64_t)((int32_t)v23 << v29));
                v31 = (int32_t)v30;
                *v15 = v31;
                v19 = v27;
                while (v28 <= 24) {
                    // 0x1400091e9
                    v20 = v26;
                    if (v31 >> (v28 & 31) != 0) {
                        goto lab_0x1400091fb;
                    }
                    v22 = v27;
                    if (v22 < *v1) {
                        // 0x1400091c4
                        *v2 = v22 + 1;
                        v21 = v20 & 255;
                    } else {
                        // 0x1400091c0
                        v21 = 0;
                    }
                    // 0x1400091cd
                    v23 = v21;
                    v26 = v22 + 8;
                    v27 = v26 & 0xffffffff;
                    v28 = v26;
                    *v14 = v28;
                    v29 = (int32_t)v22 & 31;
                    v30 |= (v29 == 0 ? v23 : (int64_t)((int32_t)v23 << v29));
                    v31 = (int32_t)v30;
                    *v15 = v31;
                    v19 = v27;
                }
            }
        }
        // 0x140009202
        v32 = *v15;
        v33 = v32 / 2;
        v34 = v33;
        v35 = v19 + 0xffffffff;
        v36 = v35 & 0xffffffff;
        *v15 = v33;
        v37 = (int32_t)v35;
        *v14 = v37;
        v38 = v34;
        v39 = v36;
        if (v37 <= 1) {
            // 0x14000921c
            v45 = v34;
            v44 = v36;
            if (v33 >> (v37 & 31) != 0) {
                // 0x140009279
                *v2 = *v1;
                v38 = v45;
                v39 = v44;
            } else {
                // 0x140009230
                v40 = v35;
                v50 = v34;
                v42 = v36;
                if (v42 < *v1) {
                    // 0x140009240
                    *v2 = v42 + 1;
                    v41 = v40 & 255;
                } else {
                    // 0x14000923c
                    v41 = 0;
                }
                // 0x140009249
                v43 = v41;
                v46 = v42 + 8;
                v47 = v46 & 0xffffffff;
                v48 = v46;
                *v14 = v48;
                v49 = (int32_t)v42 & 31;
                v50 |= (v49 == 0 ? v43 : (int64_t)((int32_t)v43 << v49));
                v51 = (int32_t)v50;
                *v15 = v51;
                v38 = v50;
                v39 = v47;
                while (v48 <= 24) {
                    // 0x140009268
                    v40 = v47;
                    if (v51 >> (v48 & 31) != 0) {
                        goto lab_0x140009279;
                    }
                    v42 = v47;
                    if (v42 < *v1) {
                        // 0x140009240
                        *v2 = v42 + 1;
                        v41 = v40 & 255;
                    } else {
                        // 0x14000923c
                        v41 = 0;
                    }
                    // 0x140009249
                    v43 = v41;
                    v46 = v42 + 8;
                    v47 = v46 & 0xffffffff;
                    v48 = v46;
                    *v14 = v48;
                    v49 = (int32_t)v42 & 31;
                    v50 |= (v49 == 0 ? v43 : (int64_t)((int32_t)v43 << v49));
                    v51 = (int32_t)v50;
                    *v15 = v51;
                    v38 = v50;
                    v39 = v47;
                }
            }
        }
        // 0x140009280
        v52 = (int32_t)v38;
        *v15 = v52 / 4;
        *v14 = (int32_t)v39 - 2;
        v53 = v52 & 3;
        if (v53 != 0) {
            // 0x14000929e
            result = 0;
            if (v53 == 3) {
                // break -> 0x140009129
                break;
            }
            if (v53 != 1) {
                // 0x1400092e5
                v55 = function_140008890(a1);
            } else {
                // 0x1400092ac
                v56 = function_140007fe0((int64_t *)(a1 + 52), (int128_t *)&g16, 288);
                result = 0;
                if ((int32_t)v56 == 0) {
                    // break -> 0x140009129
                    break;
                }
                // 0x1400092ca
                v55 = function_140007fe0(v16, (int128_t *)&g18, 32);
            }
            // 0x1400092ed
            result = 0;
            if ((int32_t)v55 == 0) {
                // break -> 0x140009129
                break;
            }
            // 0x1400092f5
            v54 = function_140008470(a1);
        } else {
            // 0x140009294
            v54 = function_140008ec0(a1);
        }
        // 0x1400092fd
        result = 0;
    }
    // 0x140009129
    return result;
}

// Address range: 0x140009320 - 0x1400093d6
int64_t function_140009320(int64_t a1) {
    int64_t * v1 = (int64_t *)(a1 + 192); // 0x140009340
    int64_t v2 = 0; // 0x14000933b
    int64_t v3 = *v1; // 0x140009340
    int64_t v4; // 0x140009320
    char v5; // 0x140009320
    int64_t v6; // 0x140009377
    int64_t v7; // 0x140009353
    int64_t v8; // 0x14000936d
    if (v3 >= *(int64_t *)(a1 + 200)) {
        // 0x14000935f
        v4 = v3;
        v5 = 0;
        if (*(int32_t *)(a1 + 48) != 0) {
            // 0x140009365
            function_140001d70(a1);
            v8 = *v1;
            v6 = v8 + 1;
            *v1 = v6;
            v4 = v6;
            v5 = *(char *)v8;
        }
    } else {
        // 0x140009350
        v7 = v3 + 1;
        *v1 = v7;
        v4 = v7;
        v5 = *(char *)v3;
    }
    // 0x140009385
    while (*(char *)(v2 + (int64_t)&g34) == v5) {
        // 0x14000938a
        v2++;
        if (v2 >= 8) {
            // 0x140009393
            return 1;
        }
        v3 = v4;
        if (v3 >= *(int64_t *)(a1 + 200)) {
            // 0x14000935f
            v4 = v3;
            v5 = 0;
            if (*(int32_t *)(a1 + 48) != 0) {
                // 0x140009365
                function_140001d70(a1);
                v8 = *v1;
                v6 = v8 + 1;
                *v1 = v6;
                v4 = v6;
                v5 = *(char *)v8;
            }
        } else {
            // 0x140009350
            v7 = v3 + 1;
            *v1 = v7;
            v4 = v7;
            v5 = *(char *)v3;
        }
    }
    // 0x1400093a8
    *(int64_t *)(*(int64_t *)__readgsqword(88) + 16) = (int64_t)"bad png sig";
    return (int32_t)"bad png sig" ^ (int32_t)"bad png sig";
}

// Address range: 0x1400093e0 - 0x14000a51f
int64_t function_1400093e0(int64_t a1, int64_t a2, int64_t a3, int64_t a4, int64_t a5, int64_t a6, int64_t a7, int64_t a8, int64_t a9) {
    int32_t v1; // 0x1400093e0
    int32_t v2; // 0x140009452
    if ((int32_t)a5 < 0) {
        // 0x14000a4e2
        *(int64_t *)(a1 + 24) = 0;
        goto lab_0x14000a4e6;
    } else {
        // 0x140009471
        v1 = a6;
        if (v1 < 0) {
            // 0x14000a4e2
            *(int64_t *)(a1 + 24) = 0;
            goto lab_0x14000a4e6;
        } else {
            // 0x14000947a
            v2 = *(int32_t *)(a1 + 8);
            if (v1 == 0) {
                goto lab_0x14000948f;
            } else {
                if ((a5 & 0xffffffff) > (int64_t)(0x7fffffff / v1)) {
                    // 0x14000a4e2
                    *(int64_t *)(a1 + 24) = 0;
                    goto lab_0x14000a4e6;
                } else {
                    goto lab_0x14000948f;
                }
            }
        }
    }
  lab_0x140009808:;
    // 0x140009808
    int64_t v3; // 0x1400093e0
    int64_t v4 = v3;
    int64_t v5 = v4; // 0x140009816
    int64_t v6; // 0x1400093e0
    int64_t result; // 0x1400093e0
    int64_t v7; // 0x1400093e0
    int64_t v8; // 0x1400093e0
    int64_t v9; // 0x1400093e0
    int64_t v10; // 0x140009447
    uint32_t v11; // 0x1400093e0
    int32_t v12; // 0x1400093e0
    int32_t v13; // 0x1400093e0
    int64_t v14; // 0x1400093e0
    if (v2 == v13) {
        goto lab_0x140009cf4;
    } else {
        // 0x14000981c
        result = v7;
        if ((int32_t)v7 < 7) {
            // 0x140009826
            return result;
        }
        // 0x140009cb5
        v8 = v4;
        if (v11 != 0 && v12 == 16) {
            int64_t v15 = v14 & 0xffffffff; // 0x140009ce9
            int64_t v16 = v6; // 0x1400093e0
            *(char *)(v9 + 1 + v16) = -1;
            v15--;
            v16 += v10;
            v8 = v4;
            while (v15 != 0) {
                // 0x140009ce0
                *(char *)(v9 + 1 + v16) = -1;
                v15--;
                v16 += v10;
                v8 = v4;
            }
        }
        goto lab_0x140009fba;
    }
  lab_0x140009cf4:
    // 0x140009cf4
    result = v7;
    if ((int32_t)v7 < 7) {
        // 0x140009826
        return result;
    }
    // 0x140009fa4
    int64_t v17; // 0x1400093e0
    int64_t v18; // 0x1400093e0
    v8 = v5 + (0x100000000 * v17 >> 32) * (0x100000000 * v18 - 0x100000000) / 0x100000000;
    goto lab_0x140009fba;
  lab_0x140009fba:;
    // 0x140009fba
    int32_t v19; // 0x1400093e0
    uint32_t v20 = v19 + 1; // 0x140009fc3
    int32_t v21 = v12; // 0x140009fd5
    int64_t v22; // 0x1400093e5
    int64_t v23 = v22; // 0x140009fd5
    int64_t v24; // 0x1400093e0
    int64_t v25 = v24; // 0x140009fd5
    if (v20 >= (int32_t)v24) {
        goto lab_0x14000a037;
    }
    int64_t v26 = v20; // 0x140009fc3
    unsigned char v27 = *(char *)v8; // 0x1400095cc
    int64_t v28 = v8; // 0x1400095e2
    char v29 = v27; // 0x1400095e2
    int64_t v30; // 0x140009447
    int64_t v31; // 0x1400094c5
    int64_t v32 = (v30 * v26 & 0xffffffff) + v31; // 0x1400095e2
    int64_t v33; // 0x1400093e0
    int64_t v34 = v33; // 0x1400095e2
    int64_t v35 = v2; // 0x1400095e2
    int64_t v36 = v9; // 0x1400095e2
    int64_t v37 = v26; // 0x1400095e2
    v19 = v20;
    int32_t v38; // 0x1400093e0
    int32_t v39 = v38; // 0x1400095e2
    int64_t v40 = v18; // 0x1400095e2
    if (v27 >= 5) {
        goto lab_0x14000a006;
    }
    goto lab_0x1400095e8;
  lab_0x14000a3cb:;
    uint64_t v55; // 0x1400093e0
    int64_t v56; // 0x1400093e0
    if (v2 != (int32_t)v22) {
        if (v2 != 1) {
            if (v55 >= 0x100000000) {
                int64_t v57; // 0x1400093e0
                int64_t v58 = v57 - 1; // 0x14000a430
                int64_t v59; // 0x1400093e0
                *(char *)(v59 + 1) = -1;
                int64_t v60; // 0x1400093e0
                *(char *)v59 = *(char *)(v60 + 1);
                *(char *)(v59 - 1) = *(char *)v60;
                *(char *)(v59 - 2) = *(char *)(v60 - 1);
                v57 = v58;
                v59 -= 4;
                v60 -= 3;
                // 0x14000a40c
                while (v58 >= 0) {
                    int64_t v61 = v60;
                    int64_t v62 = v59;
                    int64_t v63 = v57;
                    v58 = v63 - 1;
                    *(char *)(v62 + 1) = -1;
                    char v64 = *(char *)(v61 + 1); // 0x14000a438
                    *(char *)v62 = v64;
                    char v65 = *(char *)v61; // 0x14000a447
                    *(char *)(v62 - 1) = v65;
                    char v66 = *(char *)(v61 - 1); // 0x14000a44f
                    *(char *)(v62 - 2) = v66;
                    v57 = v58;
                    v59 = v62 - 4;
                    v60 = v61 - 3;
                }
            }
        } else {
            int64_t v67 = v14 - 1; // 0x14000a3eb
            if (v55 >= 0x100000000) {
                int64_t v68 = 2 * v67 + v56;
                *(char *)(v68 + 1) = -1;
                *(char *)v68 = *(char *)(v67 + v56);
                int64_t v69 = v67 - 1; // 0x14000a3ff
                v67 = v69;
                while (v69 >= 0) {
                    // 0x14000a3f0
                    v68 = 2 * v67 + v56;
                    *(char *)(v68 + 1) = -1;
                    *(char *)v68 = *(char *)(v67 + v56);
                    v69 = v67 - 1;
                    v67 = v69;
                }
            }
        }
    }
    // 0x14000a459
    int64_t v70; // 0x1400093e0
    int64_t v71 = v70 + 1;
    v70 = v71;
    int64_t v72 = v33 & 0xffffffff; // 0x14000a47e
    if (v71 >= (v24 & 0xffffffff)) {
        // break -> 0x140009826
        goto lab_0x140009826;
    }
    goto lab_0x14000a080;
  lab_0x14000a3be:;
    // 0x14000a3be
    char v92; // 0x1400093e0
    int64_t v93; // 0x1400093e0
    char v94; // 0x1400093e0
    *(char *)v93 = v94 * v92;
    goto lab_0x14000a3cb;
  lab_0x14000a4e6:;
    int64_t v116 = (int64_t)"outofmem"; // 0x14000a4f2
    int64_t v117 = __readgsqword(88); // 0x14000a4f2
    goto lab_0x14000a4f9;
  lab_0x14000a4f9:
    // 0x14000a4f9
    *(int64_t *)(*(int64_t *)v117 + 16) = v116;
    // 0x140009826
    return 0;
  lab_0x14000948f:
    // 0x14000948f
    v55 = 0x100000000 * a5;
    v14 = v55 / 0x100000000;
    v24 = 0x100000000 * a6 >> 32;
    int64_t v118 = v24 * v14; // 0x140009492
    int64_t v119; // 0x140009434
    int32_t v120; // 0x1400093e0
    int64_t v121; // 0x14000942b
    if ((int32_t)v118 < 0) {
        // 0x14000a4e2
        *(int64_t *)(a1 + 24) = 0;
        goto lab_0x14000a4e6;
    } else {
        // 0x14000949e
        v22 = 0x100000000 * a4 >> 32;
        v120 = a7;
        v121 = v120 == 16 ? 2 : 1;
        v119 = v121 * v22;
        int32_t v122 = v119;
        if (v122 < 0) {
            // 0x14000a4e2
            *(int64_t *)(a1 + 24) = 0;
            goto lab_0x14000a4e6;
        } else {
            if (v122 == 0) {
                goto lab_0x1400094b8;
            } else {
                if ((v118 & 0xffffffff) > (int64_t)(0x7fffffff / v122)) {
                    // 0x14000a4e2
                    *(int64_t *)(a1 + 24) = 0;
                    goto lab_0x14000a4e6;
                } else {
                    goto lab_0x1400094b8;
                }
            }
        }
    }
  lab_0x1400094b8:
    // 0x1400094b8
    v10 = 0x100000000 * v119 >> 32;
    v30 = v10 * v14;
    int64_t * mem = malloc((int32_t)((0x100000000 * v30 >> 32) * v24)); // 0x1400094c5
    v31 = (int64_t)mem;
    *(int64_t *)(a1 + 24) = v31;
    int64_t v54; // 0x1400094e0
    if (mem == NULL) {
        goto lab_0x14000a4e6;
    } else {
        if (v2 < 0) {
            goto lab_0x14000a4cd;
        } else {
            // 0x1400094f1
            v54 = v2;
            v11 = (int32_t)v14;
            if (v11 == 0) {
                goto lab_0x140009511;
            } else {
                if ((int64_t)(0x7fffffff / v11) < v54) {
                    goto lab_0x14000a4cd;
                } else {
                    goto lab_0x140009511;
                }
            }
        }
    }
  lab_0x14000a4cd:
    // 0x14000a4cd
    v116 = (int64_t)"too large";
    v117 = __readgsqword(88);
    goto lab_0x14000a4f9;
  lab_0x140009511:;
    int64_t v87 = v14 * v54; // 0x140009514
    uint32_t v81 = (int32_t)v87; // 0x140009518
    uint64_t v78; // 0x140009514
    if (v120 < 0 || v81 < 0) {
        goto lab_0x14000a4cd;
    } else {
        // 0x14000952d
        v78 = v87 & 0xffffffff;
        if (v120 == 0) {
            goto lab_0x140009541;
        } else {
            if (v78 > (int64_t)(0x7fffffff / v120)) {
                goto lab_0x14000a4cd;
            } else {
                goto lab_0x140009541;
            }
        }
    }
  lab_0x140009541:
    // 0x140009541
    v33 = 0x100000000 * a7 >> 32;
    int64_t v123 = (0x100000000 * v87 >> 32) * v33; // 0x140009543
    if ((int32_t)v123 > 0x7ffffff8) {
        goto lab_0x14000a4cd;
    } else {
        int64_t v46 = (v123 + 7) / 8 & 0x1fffffff; // 0x140009556
        if ((int32_t)a3 >= (int32_t)((v46 + 1) * v24)) {
            if (v1 == 0) {
                // 0x140009583
                v21 = v33;
                v23 = a4;
                v25 = a6;
              lab_0x14000a037:
                // 0x14000a037
                if (v21 > 7) {
                    // 0x14000a48b
                    if (v21 != 16) {
                        // 0x140009826
                        return 1;
                    }
                    int64_t v124 = (0x100000000 * v23 >> 32) * v55 / 0x100000000 * (0x100000000 * v25 >> 32); // 0x14000a497
                    if ((int32_t)v124 == 0) {
                        // 0x140009826
                        return 1;
                    }
                    int64_t v125 = v31; // 0x14000a4a0
                    int64_t v126 = v124 & 0xffffffff; // 0x14000a4a0
                    unsigned char v127 = *(char *)v125; // 0x14000a4a3
                    unsigned char v128 = *(char *)(v125 + 1); // 0x14000a4ab
                    *(int16_t *)v125 = 256 * (int16_t)v127 | (int16_t)v128;
                    v126--;
                    v125 += 2;
                    while (v126 != 0) {
                        // 0x14000a4a3
                        v127 = *(char *)v125;
                        v128 = *(char *)(v125 + 1);
                        *(int16_t *)v125 = 256 * (int16_t)v127 | (int16_t)v128;
                        v126--;
                        v125 += 2;
                    }
                  lab_0x140009826:
                    // 0x140009826
                    return 1;
                }
                // 0x14000a048
                if ((v25 & 0xffffffff) == 0) {
                    // 0x140009826
                    return 1;
                }
                // 0x14000a051
                v70 = 0;
                v72 = v33;
                while (true) {
                  lab_0x14000a080:;
                    int64_t v73 = 1; // 0x14000a09f
                    if ((int32_t)a8 == 0) {
                        // 0x14000a0a1
                        v73 = (int64_t)*(char *)(v33 + 0x140022320);
                    }
                    // 0x14000a0aa
                    v56 = (v70 * v30 & 0xffffffff) + v31;
                    int64_t v74 = v56 - v46 + ((0x100000000 * v23 >> 32) * v14 & 0xffffffff); // 0x14000a092
                    int64_t v75 = v73;
                    int32_t v76 = v72; // 0x14000a0aa
                    if (v76 != 4) {
                        if (v76 != 2) {
                            if (v76 != 1) {
                                goto lab_0x14000a3cb;
                            } else {
                                int64_t v77 = v78; // 0x14000a217
                                int64_t v79 = v56; // 0x14000a217
                                int64_t v80 = v74; // 0x14000a217
                                if (v81 >= 8) {
                                    char v82 = v75;
                                    int64_t v83 = v78 / 8; // 0x14000a22f
                                    int64_t v84 = v56; // 0x14000a22f
                                    int64_t v85 = v74; // 0x14000a22f
                                    char * v86 = (char *)v85; // 0x14000a232
                                    *(char *)v84 = *v86 >> 7 & v82;
                                    *(char *)(v84 + 1) = (*v86 / 64 & 1) * v82;
                                    *(char *)(v84 + 2) = (*v86 / 32 & 1) * v82;
                                    *(char *)(v84 + 3) = (*v86 / 16 & 1) * v82;
                                    *(char *)(v84 + 4) = (*v86 / 8 & 1) * v82;
                                    *(char *)(v84 + 5) = (*v86 / 4 & 1) * v82;
                                    *(char *)(v84 + 6) = (*v86 / 2 & 1) * v82;
                                    v85++;
                                    *(char *)(v84 + 7) = (*v86 & 1) * v82;
                                    v84 += 8;
                                    v83--;
                                    v77 = v87 & 7;
                                    v79 = v84;
                                    v80 = v85;
                                    while (v83 != 0) {
                                        // 0x14000a232
                                        v86 = (char *)v85;
                                        *(char *)v84 = *v86 >> 7 & v82;
                                        *(char *)(v84 + 1) = (*v86 / 64 & 1) * v82;
                                        *(char *)(v84 + 2) = (*v86 / 32 & 1) * v82;
                                        *(char *)(v84 + 3) = (*v86 / 16 & 1) * v82;
                                        *(char *)(v84 + 4) = (*v86 / 8 & 1) * v82;
                                        *(char *)(v84 + 5) = (*v86 / 4 & 1) * v82;
                                        *(char *)(v84 + 6) = (*v86 / 2 & 1) * v82;
                                        v85++;
                                        *(char *)(v84 + 7) = (*v86 & 1) * v82;
                                        v84 += 8;
                                        v83--;
                                        v77 = v87 & 7;
                                        v79 = v84;
                                        v80 = v85;
                                    }
                                }
                                int32_t v88 = v77; // 0x14000a2fa
                                if (v88 < 1) {
                                    goto lab_0x14000a3cb;
                                } else {
                                    int64_t v89 = v79;
                                    char * v90 = (char *)v80;
                                    char v91 = v75;
                                    *(char *)v89 = *v90 >> 7 & v91;
                                    if (v88 == 1) {
                                        goto lab_0x14000a3cb;
                                    } else {
                                        // 0x14000a334
                                        *(char *)(v89 + 1) = (*v90 / 64 & 1) * v91;
                                        if (v88 < 3) {
                                            goto lab_0x14000a3cb;
                                        } else {
                                            // 0x14000a353
                                            *(char *)(v89 + 2) = (*v90 / 32 & 1) * v91;
                                            if (v88 == 3) {
                                                goto lab_0x14000a3cb;
                                            } else {
                                                // 0x14000a372
                                                *(char *)(v89 + 3) = (*v90 / 16 & 1) * v91;
                                                if (v88 < 5) {
                                                    goto lab_0x14000a3cb;
                                                } else {
                                                    // 0x14000a391
                                                    *(char *)(v89 + 4) = (*v90 / 8 & 1) * v91;
                                                    if (v88 == 5) {
                                                        goto lab_0x14000a3cb;
                                                    } else {
                                                        // 0x14000a3b0
                                                        *(char *)(v89 + 5) = (*v90 / 4 & 1) * v91;
                                                        if (v88 < 7) {
                                                            goto lab_0x14000a3cb;
                                                        } else {
                                                            // 0x14000a3b5
                                                            v92 = v91;
                                                            v93 = v89 + 6;
                                                            v94 = *v90 / 2 & 1;
                                                            goto lab_0x14000a3be;
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        } else {
                            int64_t v95 = v78; // 0x14000a136
                            int64_t v96 = v56; // 0x14000a136
                            int64_t v97 = v74; // 0x14000a136
                            if (v81 >= 4) {
                                char v98 = v75;
                                int64_t v99 = v78 / 4; // 0x14000a14d
                                int64_t v100 = v56; // 0x14000a14d
                                int64_t v101 = v74; // 0x14000a14d
                                char * v102 = (char *)v101; // 0x14000a150
                                *(char *)v100 = *v102 / 64 * v98;
                                *(char *)(v100 + 1) = (*v102 / 16 & 3) * v98;
                                *(char *)(v100 + 2) = (*v102 / 4 & 3) * v98;
                                v101++;
                                *(char *)(v100 + 3) = (*v102 & 3) * v98;
                                v100 += 4;
                                v99--;
                                v95 = v87 & 3;
                                v96 = v100;
                                v97 = v101;
                                while (v99 != 0) {
                                    // 0x14000a150
                                    v102 = (char *)v101;
                                    *(char *)v100 = *v102 / 64 * v98;
                                    *(char *)(v100 + 1) = (*v102 / 16 & 3) * v98;
                                    *(char *)(v100 + 2) = (*v102 / 4 & 3) * v98;
                                    v101++;
                                    *(char *)(v100 + 3) = (*v102 & 3) * v98;
                                    v100 += 4;
                                    v99--;
                                    v95 = v87 & 3;
                                    v96 = v100;
                                    v97 = v101;
                                }
                            }
                            int32_t v103 = v95; // 0x14000a1b5
                            if (v103 < 1) {
                                goto lab_0x14000a3cb;
                            } else {
                                int64_t v104 = v96;
                                char * v105 = (char *)v97;
                                char v106 = v75;
                                *(char *)v104 = *v105 / 64 * v106;
                                if (v103 == 1) {
                                    goto lab_0x14000a3cb;
                                } else {
                                    // 0x14000a1ef
                                    *(char *)(v104 + 1) = (*v105 / 16 & 3) * v106;
                                    if (v103 < 3) {
                                        goto lab_0x14000a3cb;
                                    } else {
                                        // 0x14000a1f8
                                        v92 = v106;
                                        v93 = v104 + 2;
                                        v94 = *v105 / 4 & 3;
                                        goto lab_0x14000a3be;
                                    }
                                }
                            }
                        }
                    } else {
                        int64_t v107 = v78; // 0x14000a0b6
                        int64_t v108 = v56; // 0x14000a0b6
                        int64_t v109 = v74; // 0x14000a0b6
                        if (v81 >= 2) {
                            char v110 = v75;
                            int64_t v111 = v78 / 2; // 0x14000a0cc
                            int64_t v112 = v56; // 0x14000a0cc
                            int64_t v113 = v74; // 0x14000a0cc
                            char * v114 = (char *)v113; // 0x14000a0d0
                            *(char *)v112 = *v114 / 16 * v110;
                            v113++;
                            *(char *)(v112 + 1) = (*v114 & 15) * v110;
                            v112 += 2;
                            v111--;
                            v107 = v87 & 1;
                            v108 = v112;
                            v109 = v113;
                            while (v111 != 0) {
                                // 0x14000a0d0
                                v114 = (char *)v113;
                                *(char *)v112 = *v114 / 16 * v110;
                                v113++;
                                *(char *)(v112 + 1) = (*v114 & 15) * v110;
                                v112 += 2;
                                v111--;
                                v107 = v87 & 1;
                                v108 = v112;
                                v109 = v113;
                            }
                        }
                        // 0x14000a105
                        if ((int32_t)v107 >= 1) {
                            unsigned char v115 = *(char *)v109; // 0x14000a10d
                            *(char *)v108 = v115 / 16 * (char)v75;
                        }
                        goto lab_0x14000a3cb;
                    }
                }
                int64_t result2 = result;
                return result2;
            }
            unsigned char v129 = *(char *)a2; // 0x1400095cc
            if (v129 < 5) {
                int32_t v130 = v2 * (int32_t)v121; // 0x140009458
                v12 = v33;
                v13 = v22;
                v28 = a2;
                v29 = v129;
                v32 = v31;
                v34 = a7;
                v35 = v54;
                v36 = v130;
                v37 = 0;
                v19 = 0;
                v39 = v130;
                v40 = v14;
                while (true) {
                  lab_0x1400095e8:
                    // 0x1400095e8
                    v6 = v32;
                    int64_t v41 = v28;
                    int64_t v42 = v40; // 0x1400095ec
                    v38 = v39;
                    int64_t v43 = v36; // 0x1400095ec
                    int64_t v44 = v6; // 0x1400095ec
                    int64_t v45 = v39; // 0x1400095ec
                    if ((int32_t)v34 <= 7) {
                        if ((int32_t)v46 > v11) {
                            // break -> 0x140009fee
                            break;
                        }
                        // 0x1400095f7
                        v42 = v46;
                        v38 = 1;
                        v43 = 1;
                        v44 = v6 + (v14 * v22 - v46 & 0xffffffff);
                        v45 = 1;
                    }
                    int64_t v47 = v29;
                    v17 = v45;
                    int64_t v48 = v44;
                    v9 = v43;
                    v18 = v42;
                    int64_t v49 = v47; // 0x14000962c
                    if (v37 == 0) {
                        // 0x14000962e
                        v49 = (int64_t)*(char *)(v47 + 0x140022254);
                    }
                    // 0x14000963e
                    v7 = v49;
                    if (v9 >= 1) {
                        int64_t v50 = v9; // 0x14000967f
                        while ((int32_t)v7 >= 7) {
                            // 0x14000967c
                            v50--;
                            if (v50 == 0) {
                                // break -> 0x14000977e
                                break;
                            }
                        }
                        // 0x140009666
                        return (int64_t)*(int32_t *)(4 * v7 + 0x14000a520) + 0x140000000;
                    }
                    int64_t v51 = v41 + 1;
                    int64_t v52 = v35;
                    if (v12 != 8) {
                        if (v12 != 16) {
                            int64_t v53 = v41 + 2; // 0x1400097e7
                            v3 = v53;
                            v5 = v53;
                            if (v12 < 8) {
                                goto lab_0x140009cf4;
                            } else {
                                goto lab_0x140009808;
                            }
                        } else {
                            if ((int32_t)v52 != v13) {
                                // 0x1400097c4
                                *(int16_t *)(v48 + v9) = -1;
                            }
                            // 0x1400097ca
                            v3 = (0x100000000 * v17 >> 32) + v51;
                            goto lab_0x140009808;
                        }
                    } else {
                        if ((int32_t)v52 != (int32_t)a4) {
                            // 0x140009797
                            *(char *)(v48 + v54) = -1;
                        }
                        // 0x14000979b
                        v3 = v51 + v54;
                        goto lab_0x140009808;
                    }
                }
                // 0x140009fee
                v116 = (int64_t)"invalid width";
                v117 = __readgsqword(88);
            } else {
              lab_0x14000a006:
                // 0x14000a006
                v116 = (int64_t)"invalid filter";
                v117 = __readgsqword(88);
            }
        } else {
            // 0x14000956b
            v116 = (int64_t)"not enough pixels";
            v117 = __readgsqword(88);
        }
        goto lab_0x14000a4f9;
    }
}

// Address range: 0x14000a580 - 0x14000a92f
int64_t function_14000a580(int64_t a1, int64_t a2, int64_t a3, int64_t a4, int64_t a5, int64_t a6, int64_t a7) {
    int64_t v1 = 0x100000000 * a6;
    int64_t v2 = 0x100000000 * a5;
    int64_t v3 = a5 & 0xffffffff; // 0x14000a5ac
    if ((int32_t)a7 == 0) {
        int32_t v4 = *(int32_t *)(v3 + 4); // 0x14000a5df
        int64_t v5 = v2 >> 32; // 0x14000a5f8
        int64_t result = function_1400093e0(a1, a2, a3, a4 & 0xffffffff, v5, (int64_t)v4, v5, v1 >> 32, (int64_t)&g103); // 0x14000a5f8
        return result;
    }
    int64_t v6 = 0x100000000 * a4 >> 32; // 0x14000a580
    int64_t v7 = 0x100000000 * a3 >> 32; // 0x14000a585
    int32_t v8 = a5; // 0x14000a5b4
    int64_t v9 = (v8 == 16 ? 2 : 1) * v6; // 0x14000a5c6
    int32_t v10 = *(int32_t *)(v3 + 4); // 0x14000a60f
    int64_t v11 = v3; // 0x14000a62d
    int64_t v12 = a3; // 0x14000a62d
    int64_t v13 = 0; // 0x14000a62d
    if (v8 < 0 || v10 < 0) {
        goto lab_0x14000a679;
    } else {
        if (v10 == 0) {
            goto lab_0x14000a643;
        } else {
            // 0x14000a636
            v11 = v3;
            v12 = a3;
            v13 = 0;
            if (0x7fffffff / v10 < v8) {
                goto lab_0x14000a679;
            } else {
                goto lab_0x14000a643;
            }
        }
    }
  lab_0x14000a679:;
    int64_t v14 = v6 & 0xffffffff;
    int64_t v15 = v2 >> 32;
    int64_t v16 = v1 >> 32;
    int32_t v17 = v9;
    int64_t * v18 = (int64_t *)(a1 + 24);
    int64_t v19 = 0; // 0x14000a688
    int64_t v20 = v12 & 0xffffffff;
    int64_t v21 = 0;
    __asm_movdqu(__asm_movdqa(g38));
    __asm_movdqu(__asm_movdqa(g37));
    __asm_movdqu(__asm_movdqa(g42));
    int64_t v22; // bp-88, 0x14000a580
    int64_t v23 = v19 + (int64_t)&v22;
    uint32_t v24 = *(int32_t *)(v23 - 120); // 0x14000a6d1
    int128_t v25 = __asm_movdqa(g43); // 0x14000a6d9
    int32_t v26 = *(int32_t *)(v23 - 88); // 0x14000a6ec
    uint32_t v27 = v24 - v26; // 0x14000a6f1
    uint32_t v28 = 2 * v27 - 1; // 0x14000a703
    __asm_movdqu(v25);
    uint32_t v29 = *(int32_t *)(v23 - 56); // 0x14000a723
    v22 = 1;
    int64_t v30 = v27; // 0x14000a743
    int64_t v31 = v7; // 0x14000a743
    int64_t v32 = a2; // 0x14000a743
    int64_t v33 = v21; // 0x14000a743
    int64_t v34 = v20; // 0x14000a743
    int64_t v35 = a2; // 0x14000a743
    int64_t v36; // 0x14000a580
    int64_t v37; // 0x14000a580
    int64_t v38; // 0x14000a580
    int64_t v39; // 0x14000a580
    int64_t v40; // 0x14000a580
    int64_t v41; // 0x14000a580
    int64_t v42; // 0x14000a580
    int64_t v43; // 0x14000a580
    int64_t v44; // 0x14000a580
    int64_t result2; // 0x14000a580
    int32_t v45; // 0x14000a749
    uint32_t v46; // 0x14000a754
    uint32_t v47; // 0x14000a75e
    uint32_t v48; // 0x14000a70c
    uint32_t v49; // 0x14000a580
    int64_t v50; // 0x14000a7b5
    int64_t v51; // 0x14000a7b5
    int64_t v52; // 0x14000a8a7
    int64_t v53; // 0x14000a8b9
    int64_t v54; // 0x14000a8c3
    int64_t v55; // 0x14000a714
    int64_t v56; // 0x14000a580
    int64_t v57; // 0x14000a580
    int64_t v58; // 0x14000a87f
    int64_t v59; // 0x14000a87f
    int64_t v60; // 0x14000a882
    int32_t v61; // 0x14000a81d
    int64_t v62; // 0x14000a846
    int64_t v63; // 0x14000a839
    int64_t v64; // 0x14000a860
    if (v24 <= v28) {
        // 0x14000a749
        v45 = *(int32_t *)(v23 - 24);
        v46 = *(int32_t *)(v11 + 4) - v45;
        v47 = v29 - 1 + v46;
        v30 = v46;
        v31 = v7;
        v32 = a2;
        v33 = v21;
        v34 = v20;
        v35 = a2;
        if (v29 <= v47) {
            // 0x14000a771
            v48 = v28 / v24;
            v49 = v47 / v29;
            v50 = v48;
            v51 = function_1400093e0(a1, a2, v20 & 0xffffffff, v14, v50, (int64_t)v49, v15, v16, (int64_t)&g103);
            if ((int32_t)v51 == 0) {
                // 0x14000a920
                free((int64_t *)v13);
                result2 = (int32_t)&g103 ^ (int32_t)&g103;
                return result2;
            }
            // 0x14000a7c2
            if (v49 >= 1) {
                // 0x14000a7d4
                v55 = v48;
                v56 = v24 * v17;
                v57 = v26 * v17;
                v38 = 0;
                v36 = 0;
                v37 = v36;
                v39 = v38;
                if (v48 >= 1) {
                    // 0x14000a7ef
                    v61 = v29 * (int32_t)v38 + v45;
                    v62 = v13 + (int64_t)(v61 * v17 * v61);
                    v40 = v57;
                    v42 = v36;
                    v64 = v55;
                    v63 = *v18;
                    memcpy((int64_t *)(v62 + (0x100000000 * v40 >> 32)), (int64_t *)(v63 + (0x100000000 * v42 >> 32)), v17);
                    v64--;
                    v40 = v40 + v56 & 0xffffffff;
                    v42 = v42 + v9 & 0xffffffff;
                    while (v64 != 0) {
                        // 0x14000a830
                        v63 = *v18;
                        memcpy((int64_t *)(v62 + (0x100000000 * v40 >> 32)), (int64_t *)(v63 + (0x100000000 * v42 >> 32)), v17);
                        v64--;
                        v40 = v40 + v56 & 0xffffffff;
                        v42 = v42 + v9 & 0xffffffff;
                    }
                    // 0x14000a866
                    v37 = 0;
                    v39 = 0;
                }
                // 0x14000a87f
                v58 = v39 + 1;
                v59 = v58 & 0xffffffff;
                v60 = v37 + ((0x100000000 * v9 >> 32) * v50 & 0xffffffff);
                v43 = v58;
                v44 = v60;
                while (v59 < (int64_t)v49) {
                    // 0x14000a7e6
                    v38 = v59;
                    v36 = v60 & 0xffffffff;
                    v37 = v36;
                    v39 = v38;
                    if (v48 >= 1) {
                        // 0x14000a7ef
                        v61 = v29 * (int32_t)v38 + v45;
                        v62 = v13 + (int64_t)(v61 * v17 * v61);
                        v40 = v57;
                        v42 = v36;
                        v64 = v55;
                        v63 = *v18;
                        memcpy((int64_t *)(v62 + (0x100000000 * v40 >> 32)), (int64_t *)(v63 + (0x100000000 * v42 >> 32)), v17);
                        v64--;
                        v40 = v40 + v56 & 0xffffffff;
                        v42 = v42 + v9 & 0xffffffff;
                        while (v64 != 0) {
                            // 0x14000a830
                            v63 = *v18;
                            memcpy((int64_t *)(v62 + (0x100000000 * v40 >> 32)), (int64_t *)(v63 + (0x100000000 * v42 >> 32)), v17);
                            v64--;
                            v40 = v40 + v56 & 0xffffffff;
                            v42 = v42 + v9 & 0xffffffff;
                        }
                        // 0x14000a866
                        v37 = v44 & 0xffffffff;
                        v39 = v43 & 0xffffffff;
                    }
                    // 0x14000a87f
                    v58 = v39 + 1;
                    v59 = v58 & 0xffffffff;
                    v60 = v37 + ((0x100000000 * v9 >> 32) * v50 & 0xffffffff);
                    v43 = v58;
                    v44 = v60;
                }
            }
            // 0x14000a8a7
            v41 = (int64_t)(((v48 * v8 * *(int32_t *)(v11 + 8) + 7 >> 3) + 1) * v49);
            v52 = *v18;
            free((int64_t *)v52);
            v53 = v7 - v41;
            v54 = a2 + v41;
            v30 = v52;
            v31 = 0x100000000 * v53 >> 32;
            v32 = v54;
            v33 = 0;
            v34 = v53 & 0xffffffff;
            v35 = v54;
        }
    }
    int64_t v65 = v33 + 1; // 0x14000a8d0
    while ((int32_t)v65 < 7) {
        int64_t v66 = v30; // 0x14000a580
        int64_t v67 = v65; // 0x14000a580
        v19 += 4;
        int64_t v68 = v35;
        v20 = v34;
        v21 = v65 & 0xffffffff;
        int64_t v69 = v32;
        int64_t v70 = v31;
        __asm_movdqu(__asm_movdqa(g38));
        __asm_movdqu(__asm_movdqa(g37));
        __asm_movdqu(__asm_movdqa(g42));
        v23 = v19 + (int64_t)&v22;
        v24 = *(int32_t *)(v23 - 120);
        v25 = __asm_movdqa(g43);
        v26 = *(int32_t *)(v23 - 88);
        v27 = v24 - v26;
        v28 = 2 * v27 - 1;
        __asm_movdqu(v25);
        v29 = *(int32_t *)(v23 - 56);
        v22 = 1;
        v30 = v27;
        v31 = v70;
        v32 = v69;
        v33 = v21;
        v34 = v20;
        v35 = v68;
        if (v24 <= v28) {
            int64_t v71 = v66; // 0x14000a69a
            v45 = *(int32_t *)(v23 - 24);
            v46 = *(int32_t *)(v71 + 4) - v45;
            v47 = v29 - 1 + v46;
            v30 = v46;
            v31 = v70;
            v32 = v69;
            v33 = v21;
            v34 = v20;
            v35 = v68;
            if (v29 <= v47) {
                // 0x14000a771
                v48 = v28 / v24;
                v49 = v47 / v29;
                v50 = v48;
                v51 = function_1400093e0(a1, v68, v20 & 0xffffffff, v14, v50, (int64_t)v49, v15, v16, (int64_t)&g103);
                if ((int32_t)v51 == 0) {
                    // 0x14000a920
                    free((int64_t *)v13);
                    result2 = (int32_t)&g103 ^ (int32_t)&g103;
                    return result2;
                }
                // 0x14000a7c2
                if (v49 >= 1) {
                    // 0x14000a7d4
                    v55 = v48;
                    v56 = v24 * v17;
                    v57 = v26 * v17;
                    v38 = 0;
                    v36 = 0;
                    v37 = v36;
                    v39 = v38;
                    if (v48 >= 1) {
                        // 0x14000a7ef
                        v61 = v29 * (int32_t)v38 + v45;
                        v62 = v13 + (int64_t)(v61 * v17 * v61);
                        v40 = v57;
                        v42 = v36;
                        v64 = v55;
                        v63 = *v18;
                        memcpy((int64_t *)(v62 + (0x100000000 * v40 >> 32)), (int64_t *)(v63 + (0x100000000 * v42 >> 32)), v17);
                        v64--;
                        v40 = v40 + v56 & 0xffffffff;
                        v42 = v42 + v9 & 0xffffffff;
                        while (v64 != 0) {
                            // 0x14000a830
                            v63 = *v18;
                            memcpy((int64_t *)(v62 + (0x100000000 * v40 >> 32)), (int64_t *)(v63 + (0x100000000 * v42 >> 32)), v17);
                            v64--;
                            v40 = v40 + v56 & 0xffffffff;
                            v42 = v42 + v9 & 0xffffffff;
                        }
                        // 0x14000a866
                        v37 = 0;
                        v39 = 0;
                    }
                    // 0x14000a87f
                    v58 = v39 + 1;
                    v59 = v58 & 0xffffffff;
                    v60 = v37 + ((0x100000000 * v9 >> 32) * v50 & 0xffffffff);
                    v43 = v58;
                    v44 = v60;
                    while (v59 < (int64_t)v49) {
                        // 0x14000a7e6
                        v38 = v59;
                        v36 = v60 & 0xffffffff;
                        v37 = v36;
                        v39 = v38;
                        if (v48 >= 1) {
                            // 0x14000a7ef
                            v61 = v29 * (int32_t)v38 + v45;
                            v62 = v13 + (int64_t)(v61 * v17 * v61);
                            v40 = v57;
                            v42 = v36;
                            v64 = v55;
                            v63 = *v18;
                            memcpy((int64_t *)(v62 + (0x100000000 * v40 >> 32)), (int64_t *)(v63 + (0x100000000 * v42 >> 32)), v17);
                            v64--;
                            v40 = v40 + v56 & 0xffffffff;
                            v42 = v42 + v9 & 0xffffffff;
                            while (v64 != 0) {
                                // 0x14000a830
                                v63 = *v18;
                                memcpy((int64_t *)(v62 + (0x100000000 * v40 >> 32)), (int64_t *)(v63 + (0x100000000 * v42 >> 32)), v17);
                                v64--;
                                v40 = v40 + v56 & 0xffffffff;
                                v42 = v42 + v9 & 0xffffffff;
                            }
                            // 0x14000a866
                            v37 = v44 & 0xffffffff;
                            v39 = v43 & 0xffffffff;
                        }
                        // 0x14000a87f
                        v58 = v39 + 1;
                        v59 = v58 & 0xffffffff;
                        v60 = v37 + ((0x100000000 * v9 >> 32) * v50 & 0xffffffff);
                        v43 = v58;
                        v44 = v60;
                    }
                }
                // 0x14000a8a7
                v41 = (int64_t)(((v48 * v8 * *(int32_t *)(v71 + 8) + 7 >> 3) + 1) * v49);
                v52 = *v18;
                free((int64_t *)v52);
                v53 = v70 - v41;
                v54 = v69 + v41;
                v30 = v52;
                v31 = 0x100000000 * v53 >> 32;
                v32 = v54;
                v33 = v67 & 0xffffffff;
                v34 = v53 & 0xffffffff;
                v35 = v54;
            }
        }
        // 0x14000a8d0
        v65 = v33 + 1;
    }
    // 0x14000a8eb
    *v18 = v13;
    result2 = 1;
  lab_0x14000a8f9:
    // 0x14000a8f9
    return result2;
  lab_0x14000a643:;
    int64_t v72 = (v2 >> 32) * (int64_t)v10; // 0x14000a643
    int64_t v73 = v72 & 0xffffffff; // 0x14000a643
    v11 = v73;
    v12 = a3;
    v13 = 0;
    if ((int32_t)v72 < 0) {
        goto lab_0x14000a679;
    } else {
        int32_t v74 = v9;
        v11 = v73;
        v12 = a3;
        v13 = 0;
        if (v74 < 0) {
            goto lab_0x14000a679;
        } else {
            if (v74 == 0) {
                goto lab_0x14000a65d;
            } else {
                // 0x14000a651
                v11 = v73;
                v12 = a3;
                v13 = 0;
                if (v73 > (int64_t)(0x7fffffff / v74)) {
                    goto lab_0x14000a679;
                } else {
                    goto lab_0x14000a65d;
                }
            }
        }
    }
  lab_0x14000a65d:;
    int64_t size = 0x100000000 * v9 * (0x100000000 * v72 >> 32) / 0x100000000; // 0x14000a660
    int64_t * mem = malloc((int32_t)size); // 0x14000a663
    v11 = size;
    v12 = v7;
    v13 = (int64_t)mem;
    goto lab_0x14000a679;
}

// Address range: 0x14000a930 - 0x14000b754
int64_t function_14000a930(int64_t * a1) {
    int64_t v1 = (int64_t)a1;
    int64_t v2; // bp-40, 0x14000a930
    int64_t v3 = (int64_t)&v2 - __chkstk(); // 0x14000a95a
    int32_t * v4 = (int32_t *)(v3 + 88); // 0x14000a971
    int64_t v5; // 0x14000a930
    *v4 = (int32_t)v5;
    char * v6 = (char *)(v3 + 64); // 0x14000a978
    *v6 = 0;
    int32_t * v7 = (int32_t *)(v3 + 72); // 0x14000a97f
    *v7 = 0;
    int32_t * v8 = (int32_t *)(v3 + 76); // 0x14000a986
    *v8 = 0;
    int32_t * v9 = (int32_t *)(v3 + 84); // 0x14000a994
    *v9 = 0;
    int32_t * v10 = (int32_t *)(v3 + 80); // 0x14000a998
    *v10 = 0;
    int64_t * v11 = (int64_t *)(v1 + 16); // 0x14000a99c
    *v11 = 0;
    int64_t * v12 = (int64_t *)(v1 + 8); // 0x14000a9a1
    *v12 = 0;
    int64_t * v13 = (int64_t *)(v1 + 24); // 0x14000a9a6
    *v13 = 0;
    char * v14 = (char *)(v3 + 65); // 0x14000a9ab
    *v14 = 0;
    int16_t v15 = 0; // bp-1096, 0x14000a9b6
    int32_t * v16 = (int32_t *)(v3 + 68); // 0x14000a9c3
    *v16 = 1;
    if ((int32_t)function_140009320(0) == 0) {
        // 0x14000b724
        __security_check_cookie(g66);
        return &g103;
    }
    // 0x14000a9d8
    int64_t v17; // bp-5032, 0x14000a930
    int64_t v18 = &v17; // 0x14000a948
    int64_t v19 = v18 + 3952;
    int32_t * v20 = (int32_t *)(v1 + 32);
    int64_t v21 = 0; // 0x14000a930
    int64_t v22 = 0; // 0x14000a930
    int64_t v23 = 0; // 0x14000a930
    int64_t v24; // 0x14000a930
    int32_t v25; // 0x14000a930
    int64_t v26; // 0x14000a930
    int64_t v27; // 0x14000a930
    int64_t v28; // 0x14000a930
    int64_t v29; // 0x14000a930
    int64_t v30; // 0x14000a930
    int64_t v31; // 0x14000a930
    int64_t v32; // 0x14000a930
    char v33; // 0x14000a930
    int64_t v34; // 0x14000a930
    int64_t v35; // 0x14000a930
    int64_t v36; // 0x14000a930
    int32_t v37; // 0x14000a930
    int64_t v38; // 0x14000a930
    int64_t v39; // 0x14000a930
    int64_t v40; // 0x14000a930
    int64_t v41; // 0x14000a930
    int64_t v42; // 0x14000a930
    int16_t v43; // bp-1092, 0x14000a930
    int64_t v44; // 0x14000a930
    int64_t v45; // 0x14000a9f0
    uint64_t v46; // 0x14000a9f0
    int64_t v47; // 0x14000aa04
    uint32_t v48; // 0x14000a930
    uint32_t v49; // 0x14000aa89
    int64_t v50; // 0x14000a930
    uint32_t v51; // 0x14000a930
    int64_t v52; // 0x14000b0e1
    int32_t v53; // 0x14000b119
    int32_t v54; // 0x14000b148
    uint32_t v55; // 0x14000b171
    unsigned char v56; // 0x14000b174
    int64_t v57; // 0x14000b17a
    while (true) {
      lab_0x14000a9d8:
        // 0x14000a9d8
        v32 = v23;
        v28 = v22;
        v27 = v21;
        int64_t v58 = function_140001ec0(0); // 0x14000a9db
        v45 = 0x10000 * v58 + function_140001ec0(0);
        v46 = v45 & 0xffffffff;
        int64_t v59 = function_140001ec0(0); // 0x14000a9f2
        v47 = 0x10000 * v59 + function_140001ec0(0);
        v48 = (int32_t)v47;
        if (v48 < 0x49484453) {
            switch (v48) {
                case 0x49484452: {
                    goto lab_0x14000ab08;
                }
                case 0x43674249: {
                    // 0x14000aafb
                    *v10 = 1;
                    goto lab_0x14000adb2;
                }
                case 0x49444154: {
                    // 0x14000aa6a
                    if (*v16 != 0) {
                        goto lab_0x14000b706_4;
                    }
                    // 0x14000aa75
                    if ((int32_t)v32 == 0 == (*v6 != 0)) {
                        // 0x14000b571
                        v24 = __readgsqword(88);
                        v38 = (int64_t)"no PLTE";
                        goto lab_0x14000b719;
                    }
                    uint32_t v60 = *v7; // 0x14000aa85
                    uint32_t v61 = (int32_t)v45;
                    v49 = v60 + v61;
                    if (v49 < v60) {
                      lab_0x14000b724:
                        // 0x14000b724
                        __security_check_cookie(g66);
                        return &g103;
                    }
                    uint32_t v62 = (int32_t)v28; // 0x14000aa94
                    if (v49 > v62) {
                        // 0x14000aa99
                        v29 = v28;
                        if (v62 != 0) {
                            goto lab_0x14000aab0;
                        } else {
                            int64_t v63 = v61 < 0x1001 ? 0x1000 : v46; // 0x14000aaa7
                            int32_t v64 = v63;
                            v25 = v64;
                            v30 = v63;
                            if (v49 > v64) {
                                goto lab_0x14000aab0;
                            } else {
                                goto lab_0x14000aab8;
                            }
                        }
                    } else {
                        // 0x14000aa94
                        v26 = *v12;
                        v37 = v60;
                        v31 = v28;
                        goto lab_0x14000aad8;
                    }
                }
                default: {
                    if (v48 == 0x49454e44) {
                        // 0x14000aa39
                        if (*v16 != 0) {
                            goto lab_0x14000b706_4;
                        } else {
                            int64_t v65 = *v12; // 0x14000aa44
                            if (v65 != 0) {
                                int64_t * mem = malloc(((*v20 * v48 + 7) / 8 * *(int32_t *)8 + 1) * *(int32_t *)4); // 0x14000b0e1
                                v52 = (int64_t)mem;
                                if (mem != NULL) {
                                    // 0x14000b0f9
                                    *(int64_t *)(v3 + 104) = v65 + (int64_t)*v7;
                                    int64_t v66 = v3 + 120; // 0x14000b114
                                    *(int64_t *)v66 = v52;
                                    v53 = *v10;
                                    int64_t v67 = v3 + 96; // 0x14000b11d
                                    *(int64_t *)v67 = v65;
                                    if ((int32_t)function_140009090(v67, (int64_t)(v53 == 0)) == 0) {
                                        // 0x14000b55d
                                        free(mem);
                                        *v11 = 0;
                                        goto lab_0x14000b724;
                                    } else {
                                        // 0x14000b15d
                                        v54 = *(int32_t *)v66;
                                        *v11 = v52;
                                        free((int64_t *)*v12);
                                        int32_t v68 = *v4; // 0x14000b168
                                        *v12 = 0;
                                        v55 = *(int32_t *)8;
                                        v56 = *v6;
                                        uint32_t v69 = v55 + 1; // 0x14000b17a
                                        v57 = v69;
                                        if (v68 != v69) {
                                            goto lab_0x14000b191;
                                        } else {
                                            if (v68 != 3 == v56 == 0) {
                                                // 0x14000b231
                                                v36 = v57;
                                                v33 = *v14;
                                                goto lab_0x14000b19f;
                                            } else {
                                                goto lab_0x14000b191;
                                            }
                                        }
                                    }
                                } else {
                                    // 0x14000b0ef
                                    *v11 = v52;
                                    goto lab_0x14000b724;
                                }
                            } else {
                                // 0x14000aa52
                                v24 = __readgsqword(88);
                                v38 = (int64_t)"no IDAT";
                                goto lab_0x14000b719;
                            }
                        }
                    }
                    goto lab_0x14000ad9d;
                }
            }
        } else {
            switch (v48) {
                case 0x504c5445: {
                    // 0x14000af54
                    if (*v16 != 0) {
                        goto lab_0x14000b706_4;
                    }
                    uint32_t v70 = (int32_t)v45; // 0x14000af5f
                    if (v70 >= 769) {
                        goto lab_0x14000b6f1_2;
                    }
                    uint64_t v71 = 0xaaaaaaab * v46; // 0x14000af70
                    v50 = v71 / 0x200000000;
                    v51 = (int32_t)v50;
                    if (3 * v51 != v70) {
                        goto lab_0x14000b6f1_2;
                    }
                    // 0x14000af84
                    v21 = v27;
                    v22 = v28;
                    v23 = 0;
                    if (v71 >= 0x200000000) {
                        // 0x14000af8f
                        v41 = 0;
                        v34 = *(int64_t *)192;
                        while (true) {
                          lab_0x14000afa0:;
                            int64_t v72 = v34;
                            v42 = v41;
                            uint64_t v73 = *(int64_t *)200; // 0x14000afa0
                            v40 = v73;
                            v44 = v72;
                            if (v72 >= v73) {
                                // 0x14000afb5
                                if (*(int32_t *)48 == 0) {
                                    int64_t v74 = 4 * v42 & 0xfffffffc; // 0x14000affe
                                    *(char *)(v74 + v19) = 0;
                                    v39 = v74;
                                    v35 = v72;
                                    goto lab_0x14000b010;
                                } else {
                                    // 0x14000afbb
                                    function_140001d70(0);
                                    v40 = *(int64_t *)200;
                                    v44 = *(int64_t *)192;
                                    goto lab_0x14000afd8;
                                }
                            } else {
                                goto lab_0x14000afd8;
                            }
                        }
                    }
                    goto lab_0x14000b0ae_2;
                }
                case 0x74524e53: {
                    // 0x14000ae13
                    if (*v16 != 0) {
                        goto lab_0x14000b706_4;
                    }
                    // 0x14000ae1e
                    if (*v12 != 0) {
                        // 0x14000b6dc
                        v24 = __readgsqword(88);
                        v38 = (int64_t)"tRNS after IDAT";
                        goto lab_0x14000b719;
                    }
                    // 0x14000ae2a
                    if (*v6 == 0) {
                        uint32_t v75 = *(int32_t *)8; // 0x14000aebe
                        if ((v75 & 1) == 0) {
                            // 0x14000b6c7
                            v24 = __readgsqword(88);
                            v38 = (int64_t)"tRNS with alpha";
                            goto lab_0x14000b719;
                        }
                        if (2 * v75 != (int32_t)v45) {
                            goto lab_0x14000b69d_2;
                        }
                        // 0x14000aed5
                        *v14 = 1;
                        if (*v20 != 16) {
                            int64_t v76 = &v15; // 0x14000af10
                            v21 = v27;
                            v22 = v28;
                            v23 = v32;
                            if (v75 >= 1) {
                                int64_t v77 = function_140001ec0(0); // 0x14000af27
                                int64_t v78 = 1; // 0x14000af38
                                char v79 = *(char *)((int64_t)*v20 + (int64_t)&g17); // 0x14000af3a
                                *(char *)v76 = v79 * (char)v77;
                                int64_t v80 = v78 & 0xffffffff; // 0x14000af48
                                v76++;
                                while (*(int32_t *)8 > (int32_t)v78) {
                                    // 0x14000af24
                                    v77 = function_140001ec0(0);
                                    v78 = v80 + 1;
                                    v79 = *(char *)((int64_t)*v20 + (int64_t)&g17);
                                    *(char *)v76 = v79 * (char)v77;
                                    v80 = v78 & 0xffffffff;
                                    v76++;
                                }
                                // 0x14000af4a
                                v21 = (int64_t)*v8;
                                v22 = v28;
                                v23 = v32;
                            }
                        } else {
                            int64_t v81 = &v43; // 0x14000aee6
                            v21 = v27;
                            v22 = v28;
                            v23 = v32;
                            if (v75 >= 1) {
                                int64_t v82 = function_140001ec0(0); // 0x14000aef6
                                int64_t v83 = 1; // 0x14000aefb
                                *(int16_t *)v81 = (int16_t)v82;
                                int64_t v84 = v83 & 0xffffffff; // 0x14000af07
                                v81 += 2;
                                v21 = v27;
                                v22 = v28;
                                v23 = v32;
                                while (*(int32_t *)8 > (int32_t)v83) {
                                    // 0x14000aef3
                                    v82 = function_140001ec0(0);
                                    v83 = v84 + 1;
                                    *(int16_t *)v81 = (int16_t)v82;
                                    v84 = v83 & 0xffffffff;
                                    v81 += 2;
                                    v21 = v27;
                                    v22 = v28;
                                    v23 = v32;
                                }
                            }
                        }
                    } else {
                        uint32_t v85 = (int32_t)v32; // 0x14000ae35
                        if (v85 == 0) {
                            // 0x14000b6b2
                            v24 = __readgsqword(88);
                            v38 = (int64_t)"tRNS before PLTE";
                            goto lab_0x14000b719;
                        }
                        uint32_t v86 = (int32_t)v45; // 0x14000ae3e
                        if (v86 > v85) {
                            goto lab_0x14000b69d_2;
                        }
                        // 0x14000ae47
                        *v6 = 4;
                        int64_t v87 = 0; // 0x14000ae50
                        v21 = v27;
                        v22 = v28;
                        v23 = v32;
                        if (v86 != 0) {
                            uint64_t v88 = *(int64_t *)192; // 0x14000ae60
                            char v89; // 0x14000a930
                            int64_t v90; // 0x14000ae8d
                            if (v88 >= *(int64_t *)200) {
                                // 0x14000ae7f
                                v89 = 0;
                                if (*(int32_t *)48 != 0) {
                                    // 0x14000ae85
                                    function_140001d70(0);
                                    v90 = *(int64_t *)192;
                                    *(int64_t *)192 = v90 + 1;
                                    v89 = *(char *)v90;
                                }
                            } else {
                                // 0x14000ae70
                                *(int64_t *)192 = v88 + 1;
                                v89 = *(char *)v88;
                            }
                            int64_t v91 = v87 + 1; // 0x14000aeac
                            *(char *)((4 * v87 & 0xfffffffc | 3) + v19) = v89;
                            v87 = v91 & 0xffffffff;
                            v21 = v27;
                            v22 = v28;
                            v23 = v32;
                            while ((int32_t)v91 < v86) {
                                // 0x14000ae60
                                v88 = *(int64_t *)192;
                                if (v88 >= *(int64_t *)200) {
                                    // 0x14000ae7f
                                    v89 = 0;
                                    if (*(int32_t *)48 != 0) {
                                        // 0x14000ae85
                                        function_140001d70(0);
                                        v90 = *(int64_t *)192;
                                        *(int64_t *)192 = v90 + 1;
                                        v89 = *(char *)v90;
                                    }
                                } else {
                                    // 0x14000ae70
                                    *(int64_t *)192 = v88 + 1;
                                    v89 = *(char *)v88;
                                }
                                // 0x14000aea5
                                v91 = v87 + 1;
                                *(char *)((4 * v87 & 0xfffffffc | 3) + v19) = v89;
                                v87 = v91 & 0xffffffff;
                                v21 = v27;
                                v22 = v28;
                                v23 = v32;
                            }
                        }
                    }
                    goto lab_0x14000b0ae_2;
                }
                default: {
                    goto lab_0x14000ad9d;
                }
            }
        }
    }
  lab_0x14000ab08:
    // 0x14000ab08
    if (*v16 == 0) {
        // 0x14000b649
        v24 = __readgsqword(88);
        v38 = (int64_t)"multiple IHDR";
    } else {
        // 0x14000ab13
        *v16 = 0;
        if ((int32_t)v45 == 13) {
            // 0x14000ab24
            function_140001ec0(0);
            function_140001ec0(0);
            abort();
            // UNREACHABLE
        }
        // 0x14000b631
        v24 = __readgsqword(88);
        v38 = (int64_t)"bad IHDR len";
    }
    goto lab_0x14000b719;
  lab_0x14000b706_4:
    // 0x14000b706
    v24 = __readgsqword(88);
    v38 = (int64_t)"first not IHDR";
    goto lab_0x14000b719;
  lab_0x14000b6f1_2:
    // 0x14000b6f1
    v24 = __readgsqword(88);
    v38 = (int64_t)"invalid PLTE";
    goto lab_0x14000b719;
  lab_0x14000b69d_2:
    // 0x14000b69d
    v24 = __readgsqword(88);
    v38 = (int64_t)"bad tRNS len";
    goto lab_0x14000b719;
  lab_0x14000afd8:;
    int64_t v178 = v44 + 1;
    *(int64_t *)192 = v178;
    int64_t v179 = 4 * v42 & 0xfffffffc; // 0x14000afdf
    *(char *)(v179 + v19) = *(char *)v44;
    v39 = v179;
    v35 = v178;
    int64_t v180 = v40; // 0x14000aff3
    int64_t v181 = v179; // 0x14000aff3
    int64_t v182 = v178; // 0x14000aff3
    if (v178 >= v40) {
        goto lab_0x14000b010;
    } else {
        goto lab_0x14000b034;
    }
  lab_0x14000b010:;
    int64_t v183 = v39;
    int64_t v184; // 0x14000a930
    int64_t v185; // 0x14000a930
    if (*(int32_t *)48 == 0) {
        // 0x14000b05b
        *(char *)((v183 | 1) + v19) = 0;
        v185 = v183;
        v184 = v35;
        goto lab_0x14000b067;
    } else {
        // 0x14000b016
        function_140001d70(0);
        v180 = *(int64_t *)200;
        v181 = v183;
        v182 = *(int64_t *)192;
        goto lab_0x14000b034;
    }
  lab_0x14000b034:;
    int64_t v186 = v182;
    int64_t v187 = v181;
    char v188 = *(char *)v186;
    int64_t v189 = v186 + 1;
    *(int64_t *)192 = v189;
    *(char *)((v187 + 1 & 0xffffffff) + v19) = v188;
    v185 = v187;
    v184 = v189;
    int64_t v190; // 0x14000a930
    int64_t v191; // 0x14000a930
    char v192; // 0x14000a930
    if (v189 >= v180) {
        goto lab_0x14000b067;
    } else {
        int64_t v193 = v186 + 2; // 0x14000b04f
        *(int64_t *)192 = v193;
        v192 = *(char *)v189;
        v191 = v187;
        v190 = v193;
        goto lab_0x14000b08e;
    }
  lab_0x14000b067:;
    int64_t v194 = v185;
    v192 = 0;
    v191 = v194;
    v190 = v184;
    if (*(int32_t *)48 != 0) {
        // 0x14000b06d
        function_140001d70(0);
        int64_t v195 = *(int64_t *)192; // 0x14000b075
        int64_t v196 = v195 + 1; // 0x14000b07f
        *(int64_t *)192 = v196;
        v192 = *(char *)v195;
        v191 = v194;
        v190 = v196;
    }
    goto lab_0x14000b08e;
  lab_0x14000b08e:;
    int64_t v197 = v42 + 1; // 0x14000b091
    *(char *)((v191 + 2 & 0xffffffff) + v19) = v192;
    *(char *)((v191 + 3 & 0xffffffff) + v19) = -1;
    v41 = v197 & 0xffffffff;
    v34 = v190;
    v21 = v27;
    v22 = v28;
    v23 = v50;
    if ((int32_t)v197 >= v51) {
        // break -> 0x14000b0ae
        goto lab_0x14000b0ae_2;
    }
    goto lab_0x14000afa0;
  lab_0x14000b513:
    // 0x14000b513
    v24 = __readgsqword(88);
    v38 = (int64_t)"outofmem";
    goto lab_0x14000b719;
  lab_0x14000ad9d:
    // 0x14000ad9d
    if (*v16 != 0) {
        goto lab_0x14000b706_4;
    }
    if ((v47 & 0x20000000) == 0) {
        // 0x14000b661
        g79[0] = v47;
        g76[0] = v48 / 0x1000000;
        g77[0] = v48 / 0x10000;
        g78[0] = v48 / 256;
        v24 = __readgsqword(88);
        v38 = (int64_t)&g76;
        goto lab_0x14000b719;
    }
    goto lab_0x14000adb2;
  lab_0x14000adb2:;
    int32_t v198 = v45; // 0x14000adb2
    v21 = v27;
    v22 = v28;
    v23 = v32;
    if (v198 == 0) {
        goto lab_0x14000b0ae_2;
    } else {
        if (v198 >= 0) {
            // 0x14000adcf
            if (*(int64_t *)16 == 0) {
                goto lab_0x14000ae04;
            } else {
                // 0x14000add6
                if (v46 > (int64_t)(*(int32_t *)200 - *(int32_t *)192)) {
                    int64_t v199 = *(int64_t *)200; // 0x14000ade6
                    *(int64_t *)192 = v199;
                    v21 = v27;
                    v22 = v28;
                    v23 = v32;
                    goto lab_0x14000b0ae_2;
                } else {
                    goto lab_0x14000ae04;
                }
            }
        } else {
            // 0x14000adbc
            *(int64_t *)192 = *(int64_t *)200;
            v21 = v27;
            v22 = v28;
            v23 = v32;
            goto lab_0x14000b0ae_2;
        }
    }
  lab_0x14000b0ae_2:
    // 0x14000b0ae
    function_140001ec0(0);
    function_140001ec0(0);
    goto lab_0x14000a9d8;
  lab_0x14000aab0:;
    int64_t v200 = 2 * v29; // 0x14000aab0
    int64_t v201 = v200 & 0xfffffffe; // 0x14000aab0
    int32_t v202 = v200;
    v25 = v202;
    v30 = v201;
    while (v49 > v202) {
        // 0x14000aab0
        v200 = 2 * v201;
        v201 = v200 & 0xfffffffe;
        v202 = v200;
        v25 = v202;
        v30 = v201;
    }
    goto lab_0x14000aab8;
  lab_0x14000aad8:
    // 0x14000aad8
    if ((int32_t)function_140001df0(0, v26 + (int64_t)v37, v46) == 0) {
        // 0x14000b589
        v24 = __readgsqword(88);
        v38 = (int64_t)"outofdata";
        goto lab_0x14000b719;
    }
    // 0x14000aaf2
    *v7 = v49;
    v21 = v27;
    v22 = v31;
    v23 = v32;
    goto lab_0x14000b0ae_2;
  lab_0x14000aab8:;
    int64_t * mem3 = realloc((int64_t *)*v12, v25); // 0x14000aac0
    if (mem3 == NULL) {
        goto lab_0x14000b513;
    }
    int64_t v203 = (int64_t)mem3; // 0x14000aac0
    *v12 = v203;
    v26 = v203;
    v37 = *v7;
    v31 = v30;
    goto lab_0x14000aad8;
  lab_0x14000ae04:
    // 0x14000ae04
    *(int64_t *)192 = *(int64_t *)192 + (0x100000000 * v45 >> 32);
    v21 = v27;
    v22 = v28;
    v23 = v32;
    goto lab_0x14000b0ae_2;
  lab_0x14000b719:
    // 0x14000b719
    *(int64_t *)(*(int64_t *)v24 + 16) = v38;
    // 0x14000b724
    __security_check_cookie(g66);
    return &g103;
  lab_0x14000b191:;
    char v92 = *v14; // 0x14000b191
    v36 = v92 != 0 ? v57 : (int64_t)v55;
    v33 = v92;
    goto lab_0x14000b19f;
  lab_0x14000b19f:
    // 0x14000b19f
    *(int32_t *)12 = (int32_t)v36;
    int64_t v93 = *v11; // 0x14000b1ad
    *(int32_t *)(v3 + 48) = (int32_t)v27;
    *(int32_t *)(v3 + 40) = *v9;
    *(int32_t *)(v3 + 32) = *v20;
    int64_t v94 = function_14000a580(v1, v93, (int64_t)(v54 - (int32_t)v52), v36, (int64_t)&g103, (int64_t)&g103, (int64_t)&g103); // 0x14000b1c4
    int64_t v95; // 0x14000a930
    int64_t v96; // 0x14000a930
    char v97; // 0x14000a930
    int64_t v98; // 0x14000a930
    int64_t v99; // 0x14000a930
    int64_t v100; // 0x14000a930
    int64_t v101; // 0x14000a930
    int64_t v102; // 0x14000a930
    int64_t v103; // 0x14000a930
    int64_t v104; // 0x14000a930
    char v105; // 0x14000a930
    if ((int32_t)v94 == 0) {
        goto lab_0x14000b724;
    } else {
        // 0x14000b1d1
        v97 = v33;
        v102 = v1;
        if (v97 == 0) {
            goto lab_0x14000b2f3;
        } else {
            uint32_t v106 = *(int32_t *)(v1 + 4) * (int32_t)v1; // 0x14000b1e1
            int64_t v107 = v106; // 0x14000b1e1
            int64_t v108 = *v13; // 0x14000b1ea
            if (*v20 != 16) {
                // 0x14000b27a
                v102 = v108;
                if (v106 == 0) {
                    goto lab_0x14000b2f3;
                } else {
                    // 0x14000b27e
                    v105 = v15;
                    v96 = v108;
                    v103 = v107;
                    v101 = v108;
                    v99 = v107;
                    if (*(int32_t *)12 != 2) {
                        goto lab_0x14000b2d2;
                    } else {
                        goto lab_0x14000b2a0;
                    }
                }
            } else {
                // 0x14000b1f5
                v102 = v108;
                if (v106 == 0) {
                    goto lab_0x14000b2f3;
                } else {
                    // 0x14000b1fd
                    v95 = v108;
                    v104 = v107;
                    if (*(int32_t *)12 != 2) {
                        // 0x14000b253
                        v100 = v108;
                        v98 = v107;
                        goto lab_0x14000b253_2;
                    } else {
                        goto lab_0x14000b210;
                    }
                }
            }
        }
    }
  lab_0x14000b2f3:;
    int64_t v109 = v102;
    int64_t v110 = v109; // 0x14000b2f5
    int64_t v111; // 0x14000a930
    int64_t v112; // 0x14000a930
    int64_t v113; // 0x14000a930
    int64_t v114; // 0x14000a930
    int64_t v115; // 0x14000a930
    int64_t v116; // 0x14000a930
    if (v53 == 0 || g96 == 0) {
        goto lab_0x14000b3fa;
    } else {
        // 0x14000b308
        v110 = v109;
        if (*(int32_t *)12 < 3) {
            goto lab_0x14000b3fa;
        } else {
            int64_t v117 = *v13; // 0x14000b316
            uint32_t v118 = *(int32_t *)(v109 + 4) * (int32_t)v109; // 0x14000b31e
            v110 = 0;
            if (v118 == 0) {
                goto lab_0x14000b3fa;
            } else {
                int64_t v119 = v118; // 0x14000b31e
                v114 = v119;
                v111 = v117;
                if (*(int32_t *)(v109 + 12) != 3) {
                    // 0x14000b35f
                    v116 = v119;
                    v112 = v117;
                    v115 = v119;
                    v113 = v117;
                    if (g99 == 0) {
                        goto lab_0x14000b3e0;
                    } else {
                        goto lab_0x14000b370;
                    }
                } else {
                    goto lab_0x14000b340;
                }
            }
        }
    }
  lab_0x14000b3fa:;
    uint64_t v120; // 0x14000a930
    int32_t v121; // 0x14000b428
    int32_t v122; // 0x14000b435
    int64_t v123; // 0x14000b41f
    int64_t v124; // 0x14000b428
    if (v56 == 0) {
        if (v97 == 0) {
            goto lab_0x14000b533;
        } else {
            // 0x14000b530
            *(int32_t *)8 = *(int32_t *)8 + 1;
            goto lab_0x14000b533;
        }
    } else {
        int64_t v125 = v110;
        int32_t v126 = *v4; // 0x14000b403
        int32_t v127 = v56; // 0x14000b40b
        *(int32_t *)8 = v127;
        *(int32_t *)12 = v126 < 3 ? v127 : v126;
        v121 = *(int32_t *)(v125 + 4) * (int32_t)v125;
        if (v121 < 0) {
            goto lab_0x14000b513;
        } else {
            // 0x14000b435
            v120 = v126 < 3 ? (int64_t)v56 : (int64_t)v126;
            v122 = v120;
            if (v122 < 0) {
                goto lab_0x14000b513;
            } else {
                // 0x14000b43d
                v123 = *v13;
                v124 = v121;
                if (v122 == 0) {
                    goto lab_0x14000b450;
                } else {
                    if (0x7fffffff / v120 < v124) {
                        goto lab_0x14000b513;
                    } else {
                        goto lab_0x14000b450;
                    }
                }
            }
        }
    }
  lab_0x14000b533:
    // 0x14000b533
    free((int64_t *)*v11);
    *v11 = 0;
    function_140001ec0(0);
    function_140001ec0(0);
    goto lab_0x14000b724;
  lab_0x14000b2d2:;
    int64_t v128 = v101;
    if (*(char *)v128 != v105) {
        goto lab_0x14000b2e6;
    } else {
        // 0x14000b2d7
        char v129; // 0x14000a930
        if (*(char *)(v128 + 1) != v129) {
            goto lab_0x14000b2e6;
        } else {
            // 0x14000b2dd
            if (*(char *)(v128 + 2) != 0) {
                goto lab_0x14000b2e6;
            } else {
                // 0x14000b2e2
                *(char *)(v128 + 3) = 0;
                goto lab_0x14000b2e6;
            }
        }
    }
  lab_0x14000b2a0:;
    int64_t v130 = v96;
    int64_t v131 = v130 + 2; // 0x14000b2a3
    *(char *)(v130 + 1) = (char)(*(char *)v130 != v105);
    int64_t v132 = v103 - 1; // 0x14000b2b3
    v96 = v131;
    v103 = v132;
    v102 = v131;
    if (v132 != 0) {
        goto lab_0x14000b2a0;
    } else {
        goto lab_0x14000b2f3;
    }
  lab_0x14000b210:;
    int64_t v133 = v95;
    int64_t v134 = v133 + 4; // 0x14000b214
    *(int16_t *)(v133 + 2) = (int16_t)(*(int16_t *)v133 != v43);
    int64_t v135 = v104 - 1; // 0x14000b226
    v95 = v134;
    v104 = v135;
    v102 = v134;
    if (v135 != 0) {
        goto lab_0x14000b210;
    } else {
        goto lab_0x14000b2f3;
    }
  lab_0x14000b340:;
    char * v136 = (char *)v111; // 0x14000b340
    unsigned char v137 = *v136; // 0x14000b340
    char * v138 = (char *)(v111 + 2); // 0x14000b344
    *v136 = *v138;
    *v138 = v137;
    int64_t v139 = v114 - 1; // 0x14000b354
    v114 = v139;
    v111 += 3;
    if (v139 != 0) {
        goto lab_0x14000b340;
    } else {
        // 0x14000b3fa
        v110 = v137;
        goto lab_0x14000b3fa;
    }
  lab_0x14000b2e6:;
    int64_t v140 = v128 + 4; // 0x14000b2e6
    int64_t v141 = v99 - 1; // 0x14000b2ea
    v101 = v140;
    v99 = v141;
    v102 = v140;
    if (v141 != 0) {
        goto lab_0x14000b2d2;
    } else {
        goto lab_0x14000b2f3;
    }
  lab_0x14000b253_2:;
    int64_t v142 = v100;
    if (*(int16_t *)v142 != v43) {
        goto lab_0x14000b26e;
    } else {
        // 0x14000b25c
        int16_t v143; // 0x14000a930
        if (*(int16_t *)(v142 + 2) != v143) {
            goto lab_0x14000b26e;
        } else {
            // 0x14000b263
            int32_t v144; // 0x14000a930
            if (*(int16_t *)(v142 + 4) != (int16_t)v144) {
                goto lab_0x14000b26e;
            } else {
                // 0x14000b269
                *(int16_t *)(v142 + 6) = 0;
                goto lab_0x14000b26e;
            }
        }
    }
  lab_0x14000b450:;
    int64_t * mem2 = malloc(v121 * v122); // 0x14000b459
    int64_t v145; // 0x14000a930
    int64_t v146; // 0x14000a930
    int64_t v147; // 0x14000a930
    int64_t v148; // 0x14000a930
    int64_t v149; // 0x14000a930
    int64_t v150; // 0x14000a930
    int64_t v151; // 0x14000b459
    if (mem2 == NULL) {
        goto lab_0x14000b513;
    } else {
        // 0x14000b46b
        v151 = (int64_t)mem2;
        if (v121 == 0) {
            goto lab_0x14000b501;
        } else {
            int64_t v152 = v151 + 2; // 0x14000b477
            v149 = v123;
            v145 = v152;
            v147 = v124;
            v150 = v123;
            v146 = v152;
            v148 = v124;
            if (v120 != 3) {
                goto lab_0x14000b4c0;
            } else {
                goto lab_0x14000b480;
            }
        }
    }
  lab_0x14000b3e0:;
    char * v153 = (char *)v113; // 0x14000b3e0
    unsigned char v154 = *v153; // 0x14000b3e0
    char * v155 = (char *)(v113 + 2); // 0x14000b3e4
    *v153 = *v155;
    *v155 = v154;
    int64_t v156 = v115 - 1; // 0x14000b3f4
    v115 = v156;
    v113 += 4;
    if (v156 != 0) {
        goto lab_0x14000b3e0;
    } else {
        // 0x14000b3fa
        v110 = v154;
        goto lab_0x14000b3fa;
    }
  lab_0x14000b370:;
    int64_t v157 = v112;
    unsigned char v158 = *(char *)(v157 + 3); // 0x14000b370
    char * v159 = (char *)v157; // 0x14000b375
    unsigned char v160 = *v159; // 0x14000b375
    int64_t v161 = v160; // 0x14000b375
    char * v162 = (char *)(v157 + 2); // 0x14000b379
    unsigned char v163 = *v162; // 0x14000b379
    char v164 = v163; // 0x14000b380
    char v165 = v160; // 0x14000b380
    if (v158 == 0) {
        goto lab_0x14000b3cb;
    } else {
        char * v166 = (char *)(v157 + 1); // 0x14000b388
        int64_t v167 = v158 / 2; // 0x14000b395
        uint16_t v168 = (int16_t)v158;
        *v166 = (char)((int16_t)(255 * (int64_t)*v166 + v167) / v168);
        v164 = (int16_t)(255 * (int64_t)v163 + v167) / v168;
        v165 = (int16_t)(255 * v161 + v167) / v168;
        goto lab_0x14000b3cb;
    }
  lab_0x14000b26e:;
    int64_t v169 = v142 + 8; // 0x14000b26e
    int64_t v170 = v98 - 1; // 0x14000b272
    v100 = v169;
    v98 = v170;
    v102 = v169;
    if (v170 != 0) {
        goto lab_0x14000b253_2;
    } else {
        goto lab_0x14000b2f3;
    }
  lab_0x14000b3cb:
    // 0x14000b3cb
    *v159 = v164;
    *v162 = v165;
    int64_t v171 = v116 - 1; // 0x14000b3d6
    v116 = v171;
    v112 = v157 + 4;
    v110 = v161;
    if (v171 != 0) {
        goto lab_0x14000b370;
    } else {
        goto lab_0x14000b3fa;
    }
  lab_0x14000b501:
    // 0x14000b501
    free((int64_t *)*v13);
    *v13 = v151;
    goto lab_0x14000b533;
  lab_0x14000b4c0:;
    int64_t v172 = 4 * (int64_t)*(char *)v150; // 0x14000b4cb
    *(char *)(v146 - 2) = *(char *)(v172 + v19);
    int64_t v173 = v172 + v18;
    *(char *)(v146 - 1) = *(char *)(v173 + 3953);
    *(char *)v146 = *(char *)(v173 + 3954);
    *(char *)(v146 + 1) = *(char *)(v173 + 3955);
    int64_t v174 = v148 - 1; // 0x14000b4fb
    v150++;
    v146 += 4;
    v148 = v174;
    if (v174 != 0) {
        goto lab_0x14000b4c0;
    } else {
        goto lab_0x14000b501;
    }
  lab_0x14000b480:;
    int64_t v175 = 4 * (int64_t)*(char *)v149; // 0x14000b48b
    *(char *)(v145 - 2) = *(char *)(v175 + v19);
    int64_t v176 = v175 + v18;
    *(char *)(v145 - 1) = *(char *)(v176 + 3953);
    *(char *)v145 = *(char *)(v176 + 3954);
    int64_t v177 = v147 - 1; // 0x14000b4af
    v149++;
    v145 += 3;
    v147 = v177;
    if (v177 != 0) {
        goto lab_0x14000b480;
    } else {
        goto lab_0x14000b501;
    }
}

// Address range: 0x14000b760 - 0x14000b7cc
int64_t function_14000b760(int64_t a1) {
    uint32_t v1 = (int32_t)a1; // 0x14000b762
    if (v1 == 0) {
        // 0x14000b766
        return 0xffffffff;
    }
    uint32_t v2 = v1 < 0x10000 ? v1 : v1 / 0x10000; // 0x14000b779
    int64_t v3 = v1 < 0x10000 ? 0 : 16; // 0x14000b784
    uint32_t v4 = v2 < 256 ? v2 : v2 / 256;
    int64_t v5 = v2 < 256 ? v3 : v3 | 8;
    int64_t v6 = v4 < 16 ? v5 : v5 | 4; // 0x14000b7a3
    uint32_t v7 = v4 < 16 ? v4 : v4 / 16; // 0x14000b7a6
    uint32_t v8 = v7 < 4 ? v7 : v7 / 4; // 0x14000b7be
    return (v7 < 4 ? v6 : v6 | 2) + (int64_t)(v8 > 1) & 0xffffffff;
}

// Address range: 0x14000b7d0 - 0x14000bca1
int64_t function_14000b7d0(int64_t a1, int64_t * a2) {
    int64_t * v1 = (int64_t *)(a1 + 192); // 0x14000b7d7
    uint64_t v2 = *v1; // 0x14000b7d7
    int64_t * v3 = (int64_t *)(a1 + 200); // 0x14000b7e4
    int64_t v4 = v2; // 0x14000b7eb
    if (v2 >= *v3) {
        // 0x14000b7ed
        if (*(int32_t *)(a1 + 48) == 0) {
            // 0x14000bc7c
            *(int64_t *)(*(int64_t *)__readgsqword(88) + 16) = (int64_t)"not BMP";
            return (int32_t)"not BMP" ^ (int32_t)"not BMP";
        }
        // 0x14000b7f7
        function_140001d70(a1);
        v4 = *v1;
    }
    int64_t v5 = v4 + 1; // 0x14000b806
    *v1 = v5;
    if (*(char *)v4 != 66) {
        // 0x14000bc7c
        *(int64_t *)(*(int64_t *)__readgsqword(88) + 16) = (int64_t)"not BMP";
        return (int32_t)"not BMP" ^ (int32_t)"not BMP";
    }
    int64_t v6 = v5; // 0x14000b820
    if (v5 >= *v3) {
        // 0x14000b822
        if (*(int32_t *)(a1 + 48) == 0) {
            // 0x14000bc7c
            *(int64_t *)(*(int64_t *)__readgsqword(88) + 16) = (int64_t)"not BMP";
            return (int32_t)"not BMP" ^ (int32_t)"not BMP";
        }
        // 0x14000b82c
        function_140001d70(a1);
        v6 = *v1;
    }
    // 0x14000b83b
    *v1 = v6 + 1;
    if (*(char *)v6 != 77) {
        // 0x14000bc7c
        *(int64_t *)(*(int64_t *)__readgsqword(88) + 16) = (int64_t)"not BMP";
        return (int32_t)"not BMP" ^ (int32_t)"not BMP";
    }
    int64_t v7 = (int64_t)a2;
    function_140001f80(a1);
    function_140001f80(a1);
    function_140001f80(a1);
    function_140001f80(a1);
    int64_t v8 = function_140001f80(a1); // 0x14000b883
    int64_t v9 = function_140001f80(a1); // 0x14000b88d
    int32_t * v10 = (int32_t *)(v7 + 4); // 0x14000b89a
    *v10 = 0x10000 * (int32_t)v9 + (int32_t)v8;
    int64_t v11 = function_140001f80(a1); // 0x14000b89d
    int64_t v12 = function_140001f80(a1); // 0x14000b8a7
    int32_t * v13 = (int32_t *)(v7 + 32); // 0x14000b8af
    *v13 = 14;
    int64_t v14 = v7 + 20; // 0x14000b8b8
    *(int64_t *)v14 = 0;
    int64_t v15 = 0x10000 * v12 + v11; // 0x14000b8bf
    int64_t v16 = v7 + 12; // 0x14000b8c1
    *(int64_t *)v16 = 0;
    uint32_t v17 = (int32_t)v15; // 0x14000b8c5
    *(int32_t *)(v7 + 8) = v17;
    if (*v10 < 0) {
        goto lab_0x14000b962;
    } else {
        if (v17 < 57) {
            if ((1 << (v15 & 63) & 0x100010000001000) == 0) {
                goto lab_0x14000b8e7;
            } else {
                goto lab_0x14000b914;
            }
        } else {
            goto lab_0x14000b8e7;
        }
    }
  lab_0x14000b962:
    // 0x14000b962
    *(int64_t *)(*(int64_t *)__readgsqword(88) + 16) = (int64_t)"bad BMP";
    // 0x14000bc4c
    return (int32_t)"bad BMP" ^ (int32_t)"bad BMP";
  lab_0x14000b8e7:
    switch (v17) {
        case 108: {
            goto lab_0x14000b914;
        }
        case 124: {
            goto lab_0x14000b914;
        }
        default: {
            // 0x14000b8f1
            *(int64_t *)(*(int64_t *)__readgsqword(88) + 16) = (int64_t)"unknown BMP";
            // 0x14000bc4c
            return (int32_t)"unknown BMP" ^ (int32_t)"unknown BMP";
        }
    }
  lab_0x14000b914:;
    int32_t v18 = function_140001f80(a1);
    int64_t v19; // 0x14000b7d0
    if (v17 != 12) {
        // 0x14000b92d
        *(int32_t *)a1 = 0x10000 * (int32_t)function_140001f80(a1) + v18;
        int64_t v20 = function_140001f80(a1); // 0x14000b93e
        v19 = 0x10000 * function_140001f80(a1) + v20 & 0xffffffff;
    } else {
        // 0x14000b924
        *(int32_t *)a1 = v18;
        v19 = function_140001f80(a1);
    }
    // 0x14000b952
    *(int32_t *)(a1 + 4) = (int32_t)v19;
    if ((int32_t)function_140001f80(a1) == 1) {
        // 0x14000b985
        *(int32_t *)a2 = (int32_t)function_140001f80(a1);
        if (v17 == 12) {
            // 0x14000bc4c
            return 1;
        }
        int64_t v21 = function_140001f80(a1); // 0x14000b9a0
        int64_t v22 = 0x10000 * function_140001f80(a1) + v21; // 0x14000b9b6
        int32_t v23 = v22;
        int64_t v24; // 0x14000b7d0
        int64_t v25; // 0x14000b7d0
        int64_t v26; // 0x14000b7d0
        if (v23 < 3) {
            // 0x14000bc62
            v25 = __readgsqword(88);
            v26 = (int64_t)"BMP RLE";
        } else {
            // 0x14000b9c6
            function_140001f80(a1);
            function_140001f80(a1);
            function_140001f80(a1);
            function_140001f80(a1);
            function_140001f80(a1);
            function_140001f80(a1);
            function_140001f80(a1);
            function_140001f80(a1);
            function_140001f80(a1);
            function_140001f80(a1);
            switch (v17) {
                case 56: {
                    // 0x14000bb18
                    function_140001f80(a1);
                    function_140001f80(a1);
                    function_140001f80(a1);
                    function_140001f80(a1);
                    function_140001f80(a1);
                    function_140001f80(a1);
                    function_140001f80(a1);
                    function_140001f80(a1);
                }
                case 40: {
                    int32_t v27 = *(int32_t *)&v24; // 0x14000bb58
                    if ((v27 - 16 & -17) != 0) {
                        // 0x14000bc4c
                        return 1;
                    }
                    if (v23 == 0) {
                        int64_t result; // 0x14000b7d0
                        if (v27 != 32) {
                            // 0x14000bb9a
                            *(int32_t *)v16 = 0x7c00;
                            *(int32_t *)(v7 + 16) = 992;
                            *(int32_t *)v14 = 31;
                            result = 1;
                        } else {
                            // 0x14000bb6e
                            *(int32_t *)(v7 + 24) = -0x1000000;
                            *(int32_t *)(v7 + 28) = 0;
                            *(int32_t *)v16 = 0xff0000;
                            *(int32_t *)(v7 + 16) = 0xff00;
                            *(int32_t *)v14 = 255;
                            result = v22 + 1 & 0xffffffff;
                        }
                        // 0x14000bc4c
                        return result;
                    }
                    if (v23 == 3) {
                        int64_t v28 = function_140001f80(a1); // 0x14000bbc5
                        int64_t v29 = function_140001f80(a1); // 0x14000bbcf
                        int32_t * v30 = (int32_t *)v16; // 0x14000bbdc
                        *v30 = 0x10000 * (int32_t)v29 + (int32_t)v28;
                        int64_t v31 = function_140001f80(a1); // 0x14000bbdf
                        int64_t v32 = function_140001f80(a1); // 0x14000bbe9
                        int32_t * v33 = (int32_t *)(v7 + 16); // 0x14000bbf6
                        *v33 = 0x10000 * (int32_t)v32 + (int32_t)v31;
                        int64_t v34 = function_140001f80(a1); // 0x14000bbf9
                        int64_t v35 = function_140001f80(a1); // 0x14000bc03
                        *v13 = *v13 + 12;
                        int32_t v36 = *v33; // 0x14000bc12
                        int32_t v37 = 0x10000 * v35 + v34; // 0x14000bc15
                        *(int32_t *)v14 = v37;
                        if (v36 == v37 != (*v30 == v36)) {
                            // 0x14000bc4c
                            return 1;
                        }
                    }
                    // break -> 0x14000bc29
                    break;
                }
                default: {
                    if ((v17 - 108 & -17) == 0) {
                        int64_t v38 = function_140001f80(a1); // 0x14000ba39
                        int64_t v39 = function_140001f80(a1); // 0x14000ba43
                        *(int32_t *)v16 = 0x10000 * (int32_t)v39 + (int32_t)v38;
                        int64_t v40 = function_140001f80(a1); // 0x14000ba53
                        int64_t v41 = function_140001f80(a1); // 0x14000ba5d
                        *(int32_t *)(v7 + 16) = 0x10000 * (int32_t)v41 + (int32_t)v40;
                        int64_t v42 = function_140001f80(a1); // 0x14000ba6d
                        int64_t v43 = function_140001f80(a1); // 0x14000ba77
                        *(int32_t *)v14 = 0x10000 * (int32_t)v43 + (int32_t)v42;
                        int64_t v44 = function_140001f80(a1); // 0x14000ba87
                        int64_t v45 = function_140001f80(a1); // 0x14000ba91
                        *(int32_t *)(v7 + 24) = 0x10000 * (int32_t)v45 + (int32_t)v44;
                        function_140001f80(a1);
                        function_140001f80(a1);
                        for (int64_t i = 12; i > 0; i--) {
                            // 0x14000bab3
                            function_140001f80(a1);
                            function_140001f80(a1);
                        }
                        // 0x14000bac9
                        if (v17 == 124) {
                            // 0x14000bace
                            function_140001f80(a1);
                            function_140001f80(a1);
                            function_140001f80(a1);
                            function_140001f80(a1);
                            function_140001f80(a1);
                            function_140001f80(a1);
                            function_140001f80(a1);
                            function_140001f80(a1);
                        }
                        // 0x14000bc4c
                        return 1;
                    }
                    // break -> 0x14000bc29
                    break;
                }
            }
            // 0x14000bc29
            v25 = __readgsqword(88);
            v26 = (int64_t)"bad BMP";
        }
        // 0x14000bc41
        v24 = 16;
        *(int64_t *)(*(int64_t *)v25 + 16) = v26;
        // 0x14000bc4c
        return 0;
    }
    goto lab_0x14000b962;
}

// Address range: 0x14000bcb0 - 0x14000cc76
int64_t function_14000bcb0(int64_t a1, int64_t a2, int64_t a3, int64_t a4, int64_t a5) {
    // 0x14000bcb0
    int32_t v1; // 0x14000bcb0
    uint32_t v2 = v1;
    int32_t v3; // bp-1160, 0x14000bcb0
    if (function_14000b7d0(a1, (int64_t *)&v3) == 0) {
        // 0x14000cc5b
        return 0;
    }
    int32_t * v4 = (int32_t *)(a1 + 4); // 0x14000bd02
    uint32_t v5 = *v4; // 0x14000bd02
    uint32_t v6 = v5 < 0 ? -v5 : v5; // 0x14000bd0b
    *v4 = v6;
    int64_t v7; // 0x14000bcb0
    int64_t v8; // 0x14000bcb0
    int64_t v9; // 0x14000bcb0
    int64_t v10; // 0x14000bd2e
    if (v6 < 0x1000001) {
        // 0x14000bd1b
        if (*(int32_t *)&v8 < 0x1000001) {
            // 0x14000bd27
            v10 = v1;
            if (v1 != 12) {
                // 0x14000bd99
                v9 = 0;
                if (v3 > 15) {
                    goto lab_0x14000bdb6;
                } else {
                    // 0x14000bd9f
                    v7 = (int64_t)((v1 - v2 - v1) / 4);
                    goto lab_0x14000bdac;
                }
            } else {
                // 0x14000bd74
                v9 = 0;
                if (v3 > 23) {
                    goto lab_0x14000bdb6;
                } else {
                    uint64_t v11 = 0x55555556 * (0x100000000 * (v10 - (int64_t)v2) - 0x1800000000 >> 32); // 0x14000bd87
                    v7 = v11 / 0x8000000000000000 + v11 / 0x100000000 & 0xffffffff;
                    goto lab_0x14000bdac;
                }
            }
        } else {
            goto lab_0x14000cc3d;
        }
    } else {
        goto lab_0x14000cc3d;
    }
  lab_0x14000c249:;
    // 0x14000c249
    int64_t v12; // 0x14000bcb0
    int64_t v13 = v12 + 1;
    v8 = v13;
    v12 = v13;
    int64_t v14; // 0x14000bcb0
    int64_t v15 = v14; // 0x14000c258
    int64_t v16; // 0x14000bcb0
    int64_t v17 = v16; // 0x14000c258
    if (v13 >= (int64_t)*v4) {
        // break -> 0x14000cb3a
        goto lab_0x14000cb3a_3;
    }
    goto lab_0x14000c100;
  lab_0x14000c40e:;
    // 0x14000c40e
    int64_t v54; // 0x14000bcb0
    int64_t v55 = v54; // 0x14000c411
    uint32_t v56 = *v4; // 0x14000c40e
    int64_t v57 = v55 + 1; // 0x14000c411
    int64_t v58 = v57 & 0xffffffff; // 0x14000c411
    v8 = v58;
    int64_t v59 = v58; // 0x14000c419
    int32_t v60 = v57; // 0x14000c419
    int64_t v61; // 0x14000bcb0
    int64_t v62 = v61; // 0x14000c419
    v17 = v16;
    if (v58 >= (int64_t)v56) {
        // break -> 0x14000cb3a
        goto lab_0x14000cb3a_3;
    }
    goto lab_0x14000c271;
  lab_0x14000c40a:;
    // 0x14000c40a
    int64_t v138; // 0x14000bcb0
    int64_t v146 = v138;
    int64_t * v73; // 0x14000bcb0
    *v73 = v146;
    uint32_t v64; // 0x14000c274
    int64_t v147 = v64; // 0x14000c40a
    v8 = v147;
    v54 = v147;
    goto lab_0x14000c40e;
  lab_0x14000bf37:;
    // 0x14000bf37
    int64_t v148; // 0x14000bcb0
    int64_t v149 = 4 * v148; // 0x14000bf3a
    int64_t v150; // 0x14000bcb0
    int64_t v151 = v150 + 1; // 0x14000bf42
    int64_t v152; // 0x14000bcb0
    *(char *)(v149 + v152) = *(char *)v150;
    int64_t * v153; // 0x14000befa
    *v153 = v151;
    int64_t v154 = v151; // 0x14000bf57
    int64_t v155 = v149; // 0x14000bf57
    int64_t v156 = v151; // 0x14000bf57
    int64_t v157 = v149; // 0x14000bf57
    if (v151 >= v8) {
        goto lab_0x14000bf6b;
    } else {
        goto lab_0x14000bf86;
    }
  lab_0x14000bf6b:;
    int64_t v158 = v155;
    int64_t v159; // 0x14000bcb0
    int64_t v160; // 0x14000bcb0
    int64_t * v161; // 0x14000bf10
    int32_t * v162; // 0x14000bcb0
    int64_t v163; // 0x14000bcb0
    if (*v162 == 0) {
        // 0x14000bfac
        *(char *)(v158 + v163) = 0;
        v160 = v154;
        v159 = v158;
        goto lab_0x14000bfb1;
    } else {
        // 0x14000bf70
        function_140001d70(a1);
        v8 = *v161;
        v156 = *v153;
        v157 = v158;
        goto lab_0x14000bf86;
    }
  lab_0x14000bf86:;
    int64_t v164 = v157;
    int64_t v165 = v156;
    int64_t v166 = v165 + 1; // 0x14000bf89
    *v153 = v166;
    *(char *)(v164 + v163) = *(char *)v165;
    v160 = v166;
    v159 = v164;
    int64_t v167; // 0x14000bcb0
    int64_t v168; // 0x14000bcb0
    if (v166 >= v8) {
        goto lab_0x14000bfb1;
    } else {
        // 0x14000bf9d
        v8 = (int64_t)*(char *)v166;
        int64_t v169 = v165 + 2; // 0x14000bfa0
        *v153 = v169;
        v168 = v169;
        v167 = v164;
        goto lab_0x14000bfd6;
    }
  lab_0x14000bfb1:;
    int64_t v170 = v159;
    if (*v162 == 0) {
        // 0x14000bfd4
        v8 &= -256;
        v168 = v160;
        v167 = v170;
    } else {
        // 0x14000bfb6
        function_140001d70(a1);
        int64_t v171 = *v153; // 0x14000bfbe
        v8 = (int64_t)*(char *)v171;
        int64_t v172 = v171 + 1; // 0x14000bfc8
        *v153 = v172;
        v168 = v172;
        v167 = v170;
    }
    goto lab_0x14000bfd6;
  lab_0x14000bfd6:;
    int64_t v173 = v168;
    int64_t v34; // 0x14000bccf
    *(char *)(v34 - 32 + v167) = (char)v8;
    int64_t v174 = v173; // 0x14000bfde
    if (v1 != 12) {
        // 0x14000bfe0
        if (v173 >= *v161) {
            // 0x14000bff5
            v174 = v173;
            if (*v162 != 0) {
                // 0x14000bffa
                v8 = a1;
                function_140001d70(a1);
                int64_t v175 = *v153 + 1; // 0x14000c002
                *v153 = v175;
                v174 = v175;
            }
        } else {
            int64_t v176 = v173 + 1; // 0x14000bfe9
            *v153 = v176;
            v174 = v176;
        }
    }
    int64_t v177 = v148 + 1; // 0x14000c010
    *(char *)(v167 + v34 - 29) = -1;
    int64_t v178 = v174; // 0x14000c01c
    int64_t v179 = v177; // 0x14000c01c
    int64_t v180; // 0x14000bcb0
    if (v177 == 0x100000000 * v180 >> 32) {
        // break -> 0x14000c022
        goto lab_0x14000c022;
    }
    goto lab_0x14000bf10;
  lab_0x14000c81f:;
    // 0x14000c81f
    int64_t v184; // 0x14000bcb0
    int64_t v185 = v184 + 1; // 0x14000c822
    int64_t * v186; // 0x14000bcb0
    *v186 = v185;
    int64_t v187; // 0x14000bcb0
    *(char *)(v187 + 2) = *(char *)v184;
    int64_t v188 = v185; // 0x14000c832
    int64_t v189 = v185; // 0x14000c832
    if (v185 >= v8) {
        goto lab_0x14000c83a;
    } else {
        goto lab_0x14000c856;
    }
  lab_0x14000c83a:;
    // 0x14000c83a
    int64_t v190; // 0x14000bcb0
    int64_t * v191; // 0x14000bcb0
    int32_t * v192; // 0x14000bcb0
    if (*v192 == 0) {
        // 0x14000c87a
        *(char *)(v187 + 1) = 0;
        v190 = v188;
        goto lab_0x14000c87e;
    } else {
        // 0x14000c840
        function_140001d70(a1);
        v8 = *v191;
        v189 = *v186;
        goto lab_0x14000c856;
    }
  lab_0x14000c856:;
    int64_t v193 = v189;
    int64_t v194 = v193 + 1; // 0x14000c859
    *v186 = v194;
    *(char *)(v187 + 1) = *(char *)v193;
    v190 = v194;
    int64_t v195; // 0x14000bcb0
    if (v194 >= v8) {
        goto lab_0x14000c87e;
    } else {
        // 0x14000c86b
        v8 = (int64_t)*(char *)v194;
        int64_t v196 = v193 + 2; // 0x14000c86e
        *v186 = v196;
        v195 = v196;
        goto lab_0x14000c8a4;
    }
  lab_0x14000c87e:
    // 0x14000c87e
    if (*v192 == 0) {
        // 0x14000c8a2
        v8 &= -256;
        v195 = v190;
    } else {
        // 0x14000c884
        function_140001d70(a1);
        int64_t v197 = *v186; // 0x14000c88c
        v8 = (int64_t)*(char *)v197;
        int64_t v198 = v197 + 1; // 0x14000c896
        *v186 = v198;
        v195 = v198;
    }
    goto lab_0x14000c8a4;
  lab_0x14000c8a4:;
    uint64_t v199 = v195;
    *(char *)v187 = (char)v8;
    int64_t v200; // 0x14000bcb0
    if (v200 != 2) {
        int64_t v201 = v8; // 0x14000c8f4
        v8 = v201 | 255;
    } else {
        // 0x14000c8b4
        if (v199 >= *v191) {
            // 0x14000c8cc
            if (*v192 == 0) {
                // 0x14000c8f0
                v8 &= -256;
            } else {
                // 0x14000c8d2
                function_140001d70(a1);
                int64_t v202 = *v186; // 0x14000c8da
                v8 = (int64_t)*(char *)v202;
                *v186 = v202 + 1;
            }
        } else {
            // 0x14000c8bd
            v8 = (int64_t)*(char *)v199;
            *v186 = v199 + 1;
        }
    }
    int64_t v203 = v187 + 3; // 0x14000c8aa
    int64_t v204 = v8; // 0x14000c8f6
    int32_t v205 = v204;
    int32_t v206 = v205; // 0x14000c903
    int64_t v207 = v203; // 0x14000c903
    int64_t v208; // 0x14000bcb0
    int64_t v209 = v208 + 3; // 0x14000c903
    int32_t v210; // 0x14000bcb0
    if (v210 == 4) {
        // 0x14000c905
        *(char *)v203 = (char)v204;
        v206 = *(int32_t *)&v8;
        v207 = v187 + 4;
        v209 = v208 + 4;
    }
    // 0x14000c90d
    int32_t v211; // 0x14000bcb0
    int32_t v212 = v205 & 255 | v211; // 0x14000c8f9
    int64_t v213 = v209 & 0xffffffff;
    int64_t v214; // 0x14000bcb0
    int64_t v215 = v214 + 1; // 0x14000c90d
    v211 = v212;
    int64_t v216 = v207; // 0x14000c913
    v214 = v215 & 0xffffffff;
    int64_t v217 = v213; // 0x14000c913
    int32_t v218 = v212; // 0x14000c913
    int64_t v219 = v200; // 0x14000c913
    int64_t v220 = v213; // 0x14000c913
    if (v206 <= (int32_t)v215) {
        // break -> 0x14000caaf
        goto lab_0x14000caaf;
    }
    goto lab_0x14000c7f0;
  lab_0x14000caf7:;
    uint32_t v223 = *v4; // 0x14000cafb
    int32_t v224; // 0x14000bcb0
    int32_t v225 = v224 + 1; // 0x14000cafe
    int32_t v226; // 0x14000bcb0
    int32_t v227 = v226; // 0x14000cb06
    v224 = v225;
    int64_t v228; // 0x14000bcb0
    int64_t v229 = v228; // 0x14000cb06
    int64_t v230; // 0x14000bcb0
    int64_t v231 = v230; // 0x14000cb06
    if (v225 >= v223) {
        // break -> 0x14000cb0c
        goto lab_0x14000cb0c;
    }
    goto lab_0x14000c7d2;
  lab_0x14000cc3d:;
    int64_t v300 = *(int64_t *)__readgsqword(88); // 0x14000cc46
    v8 = v300;
    int64_t v301 = v300; // 0x14000cc49
    int64_t v302 = (int64_t)"too large"; // 0x14000cc49
    goto lab_0x14000cc50;
  lab_0x14000cc50:
    // 0x14000cc50
    *(int64_t *)(v301 + 16) = v302;
    // 0x14000cc5b
    return 0;
  lab_0x14000bdb6:;
    int64_t v303 = *(int64_t *)(a1 + 192); // 0x14000bdbd
    bool v304; // 0x14000bcb0
    bool v305; // 0x14000bcb0
    int64_t v306; // 0x14000bcb0
    int64_t v307; // 0x14000bcb0
    if (-56 - a1 + (int64_t)*(int32_t *)(a1 + 184) + v303 == v10) {
        // 0x14000bde8
        v304 = true;
        v306 = v9;
        if (v3 != 24) {
            goto lab_0x14000bdfd;
        } else {
            // 0x14000bdee
            v304 = false;
            v306 = v9;
            if (v1 != -0x1000000) {
                goto lab_0x14000bdfd;
            } else {
                // 0x14000bdf6
                v305 = false;
                v180 = v9;
                v307 = v3 - 21;
                goto lab_0x14000be08;
            }
        }
    } else {
        int64_t v308 = *(int64_t *)__readgsqword(88); // 0x14000bdd9
        v8 = v308;
        v301 = v308;
        v302 = (int64_t)"bad offset";
        goto lab_0x14000cc50;
    }
  lab_0x14000bdac:
    // 0x14000bdac
    v9 = v7;
    v304 = true;
    v306 = v7;
    if (v7 != 0) {
        goto lab_0x14000bdfd;
    } else {
        goto lab_0x14000bdb6;
    }
  lab_0x14000bdfd:
    // 0x14000bdfd
    v305 = v304;
    v180 = v306;
    v307 = v1 != 0 ? 4 : 3;
    goto lab_0x14000be08;
  lab_0x14000be08:;
    int32_t * v309 = (int32_t *)(a1 + 8); // 0x14000be0e
    *v309 = (int32_t)v307;
    uint32_t v310 = *(int32_t *)&v8; // 0x14000be11
    uint32_t v311 = *v4; // 0x14000be17
    v8 = v310;
    int64_t v312; // 0x14000bcb0
    int64_t v313; // 0x14000bcb0
    int32_t v314; // 0x14000be28
    int64_t v315; // 0x14000bcb0
    if (v310 < 0) {
        goto lab_0x14000cc3d;
    } else {
        // 0x14000be38
        v312 = 0x100000000 * a5;
        int64_t v316 = v312 >> 32;
        v314 = v316;
        v315 = v316 & 0xffffffff;
        v313 = v314 < 3 ? v307 : v315;
        if (v310 == 0) {
            goto lab_0x14000be4a;
        } else {
            if (v313 > (int64_t)(0x7fffffff / v310)) {
                goto lab_0x14000cc3d;
            } else {
                goto lab_0x14000be4a;
            }
        }
    }
  lab_0x14000be4a:;
    int64_t v317 = (0x100000000 * v313 >> 32) * (int64_t)v310; // 0x14000be4a
    uint64_t v318 = v317 & 0xffffffff; // 0x14000be4a
    v8 = v318;
    if (v311 < 0 || (int32_t)v317 < 0) {
        goto lab_0x14000cc3d;
    } else {
        if (v311 == 0) {
            goto lab_0x14000be71;
        } else {
            if (v318 > (int64_t)(0x7fffffff / v311)) {
                goto lab_0x14000cc3d;
            } else {
                goto lab_0x14000be71;
            }
        }
    }
  lab_0x14000be71:
    if (v310 == 0) {
        goto lab_0x14000be87;
    } else {
        if (v313 > (int64_t)(0x7fffffff / v310)) {
            goto lab_0x14000cc28;
        } else {
            goto lab_0x14000be87;
        }
    }
  lab_0x14000be87:
    if (v311 == 0) {
        goto lab_0x14000be9d;
    } else {
        if (v318 > (int64_t)(0x7fffffff / v311)) {
            goto lab_0x14000cc28;
        } else {
            goto lab_0x14000be9d;
        }
    }
  lab_0x14000be9d:
    // 0x14000be9d
    v210 = v313;
    int64_t * mem = malloc(v310 * v210 * v311); // 0x14000beaa
    int64_t v319; // 0x14000bcb0
    int64_t v320; // 0x14000bcb0
    uint64_t v37; // 0x14000bcb0
    int64_t v33; // 0x14000beaa
    int32_t v321; // 0x14000c49d
    int32_t v322; // 0x14000c04d
    if (mem == NULL) {
        goto lab_0x14000cc28;
    } else {
        // 0x14000bec0
        v33 = (int64_t)mem;
        if (v3 > 15) {
            // 0x14000c466
            v321 = v1 - v2 - v1;
            if (v321 == 0) {
                goto lab_0x14000c503;
            } else {
                if (v321 >= 0) {
                    // 0x14000c4b9
                    if (*(int64_t *)(a1 + 16) == 0) {
                        // 0x14000c4b9
                        v320 = a1 + 192;
                        goto lab_0x14000c4f9;
                    } else {
                        int64_t v323 = a1 + 200; // 0x14000c4bf
                        int64_t v324 = a1 + 192;
                        uint32_t v325 = *(int32_t *)v323 - *(int32_t *)v324; // 0x14000c4c5
                        v8 = v325;
                        v320 = v324;
                        if (v321 > v325) {
                            // 0x14000c4d0
                            *(int64_t *)v324 = *(int64_t *)v323;
                            goto lab_0x14000c503;
                        } else {
                            goto lab_0x14000c4f9;
                        }
                    }
                } else {
                    // 0x14000c4a9
                    *(int64_t *)(a1 + 192) = *(int64_t *)(a1 + 200);
                    goto lab_0x14000c503;
                }
            }
        } else {
            int32_t v326 = v180; // 0x14000becc
            if (v326 == 0 || v326 > 256) {
                // 0x14000c445
                free(mem);
                int64_t v327 = *(int64_t *)__readgsqword(88); // 0x14000c457
                v8 = v327;
                v301 = v327;
                v302 = (int64_t)"invalid";
                goto lab_0x14000cc50;
            } else {
                // 0x14000bee2
                int64_t v328; // bp-1048, 0x14000bcb0
                v34 = &v328;
                v37 = v314 < 3 ? 0x100000000 * v307 : v312;
                v16 = v37 / 0x100000000;
                v8 = v16;
                int64_t v329 = v180; // 0x14000bef4
                if (v326 >= 1) {
                    // 0x14000befa
                    v153 = (int64_t *)(a1 + 192);
                    v161 = (int64_t *)(a1 + 200);
                    v162 = (int32_t *)(a1 + 48);
                    v152 = v34 - 30;
                    v163 = v34 - 31;
                    v178 = *v153;
                    v179 = 0;
                    while (true) {
                      lab_0x14000bf10:
                        // 0x14000bf10
                        v148 = v179;
                        int64_t v181 = v178;
                        uint64_t v182 = *v161; // 0x14000bf10
                        v8 = v182;
                        v150 = v181;
                        if (v181 < v182) {
                            goto lab_0x14000bf37;
                        } else {
                            // 0x14000bf1c
                            if (*v162 == 0) {
                                int64_t v183 = 4 * v148; // 0x14000bf5b
                                *(char *)(v183 + v152) = 0;
                                v154 = v181;
                                v155 = v183;
                                goto lab_0x14000bf6b;
                            } else {
                                // 0x14000bf21
                                function_140001d70(a1);
                                v8 = *v161;
                                v150 = *v153;
                                goto lab_0x14000bf37;
                            }
                        }
                    }
                  lab_0x14000c022:
                    // 0x14000c022
                    v329 = v180 & 0xffffffff;
                }
                int64_t v330 = v1 != 12 ? 4 : 3; // 0x14000c041
                v322 = v1 - v2 - v1 - (int32_t)((0x100000000 * v329 >> 32) * v330);
                if (v322 == 0) {
                    goto lab_0x14000c0a5;
                } else {
                    if (v322 >= 0) {
                        // 0x14000c067
                        if (*(int64_t *)(a1 + 16) == 0) {
                            // 0x14000c067
                            v319 = a1 + 192;
                            goto lab_0x14000c09b;
                        } else {
                            int64_t v331 = a1 + 200; // 0x14000c06d
                            int64_t v332 = a1 + 192;
                            uint32_t v333 = *(int32_t *)v331 - *(int32_t *)v332; // 0x14000c073
                            v8 = v333;
                            v319 = v332;
                            if (v322 > v333) {
                                // 0x14000c07e
                                v8 = *(int64_t *)(a1 + 40);
                                *(int64_t *)v332 = *(int64_t *)v331;
                                goto lab_0x14000c0a5;
                            } else {
                                goto lab_0x14000c09b;
                            }
                        }
                    } else {
                        // 0x14000c057
                        *(int64_t *)(a1 + 192) = *(int64_t *)(a1 + 200);
                        goto lab_0x14000c0a5;
                    }
                }
            }
        }
    }
  lab_0x14000cc28:;
    int64_t v334 = *(int64_t *)__readgsqword(88); // 0x14000cc31
    v8 = v334;
    v301 = v334;
    v302 = (int64_t)"outofmem";
    goto lab_0x14000cc50;
  lab_0x14000c503:;
    uint64_t v280 = (int64_t)v1; // 0x14000bd32
    int64_t v299; // 0x14000bcb0
    int32_t v293; // 0x14000bcb0
    int64_t v335; // 0x14000bcb0
    int32_t v336; // 0x14000bcb0
    int64_t v337; // 0x14000bcb0
    int32_t v338; // 0x14000bcb0
    int64_t v339; // 0x14000bcb0
    int64_t v236; // 0x14000bcb0
    int32_t v264; // 0x14000bcb0
    int32_t v255; // 0x14000bcb0
    int32_t v246; // 0x14000bcb0
    int32_t v283; // 0x14000bcb0
    int32_t v340; // 0x14000bcb0
    int64_t v341; // 0x14000c525
    if (v305) {
        // 0x14000c511
        v340 = v3 != 16 ? 0 : -((2 * *(int32_t *)&v8)) & 2;
        v341 = v340;
        if (v1 == 0xff00 == v1 == 0xff0000 == v1 == 255 == v3 == 32) {
            // 0x14000c56c
            v299 = v341;
            v293 = v340;
            v246 = 0;
            v283 = 0;
            v236 = 2;
            v255 = 0;
            v264 = 0;
            v339 = 0;
            v338 = 0;
            v335 = 0;
            v336 = 0;
            v337 = 0;
            if (v1 != -0x1000000) {
                goto lab_0x14000c5c0;
            } else {
                goto lab_0x14000c751;
            }
        } else {
            if (v1 == 0 || v1 == 0 || v1 == 0) {
                goto lab_0x14000cc0a;
            } else {
                goto lab_0x14000c5c0;
            }
        }
    } else {
        int32_t v342 = -3 * *(int32_t *)&v8 & 3;
        v299 = v342;
        v293 = v342;
        v246 = 0;
        v283 = 0;
        v236 = 1;
        v255 = 0;
        v264 = 0;
        v339 = 0;
        v338 = 0;
        v335 = 0;
        v336 = 0;
        v337 = 0;
        goto lab_0x14000c751;
    }
  lab_0x14000c0a5:
    if (v3 != 1) {
        if (v3 != 4) {
            if (v3 != 8) {
                // 0x14000c424
                free(mem);
                int64_t v343 = *(int64_t *)__readgsqword(88); // 0x14000c436
                v8 = v343;
                v301 = v343;
                v302 = (int64_t)"bad bpp";
                goto lab_0x14000cc50;
            } else {
                // 0x14000c0d8
                goto lab_0x14000c263;
            }
        } else {
            // 0x14000c0c3
            goto lab_0x14000c263;
        }
    } else {
        // 0x14000c0ef
        v17 = v16;
        if (*v4 >= 1) {
            uint32_t v49 = -(((*(int32_t *)&v8 + 7) / 8)) & 3;
            int64_t v50 = v49; // 0x14000c0e1
            int64_t v53 = a1 + 192; // 0x14000c100
            int64_t * v20 = (int64_t *)v53; // 0x14000c100
            int64_t v52 = a1 + 200; // 0x14000c10d
            int64_t * v21 = (int64_t *)v52; // 0x14000c10d
            int32_t * v22 = (int32_t *)(a1 + 48);
            v12 = 0;
            v15 = 0;
            while (true) {
              lab_0x14000c100:;
                int64_t v18 = v15;
                uint64_t v19 = *v20; // 0x14000c100
                if (v19 >= *v21) {
                    // 0x14000c125
                    if (*v22 == 0) {
                        // 0x14000c149
                        v8 &= -256;
                    } else {
                        // 0x14000c12b
                        function_140001d70(a1);
                        int64_t v23 = *v20; // 0x14000c133
                        v8 = (int64_t)*(char *)v23;
                        *v20 = v23 + 1;
                    }
                } else {
                    // 0x14000c116
                    v8 = (int64_t)*(char *)v19;
                    *v20 = v19 + 1;
                }
                uint32_t v24 = *(int32_t *)&v8; // 0x14000c14b
                v14 = v18;
                if (v24 >= 1) {
                    int32_t v25 = v24; // 0x14000c1fb
                    int32_t v26 = 7;
                    int64_t v27 = v8 & 255;
                    int64_t v28 = v18;
                    uint32_t v29 = v26 & 31; // 0x14000c166
                    int64_t v30 = v29 == 0 ? v27 & 1 : (int64_t)((int32_t)v27 >> v29);
                    int64_t v31 = 4 * v30 & 4; // 0x14000c16b
                    v8 = v31;
                    int64_t v32 = v28 + v33;
                    *(char *)v32 = *(char *)(v31 | v34 - 32);
                    *(char *)(v32 + 1) = *(char *)(v31 | v34 - 31);
                    *(char *)(v32 + 2) = *(char *)(v31 | v34 - 30);
                    int64_t v35 = v28 + 3; // 0x14000c18d
                    int64_t v36 = v35; // 0x14000c195
                    if (v37 == 0x400000000) {
                        // 0x14000c197
                        *(char *)(v35 + v33) = -1;
                        v36 = v28 + 4;
                    }
                    int64_t v38 = v36;
                    int64_t v39 = 1; // 0x14000c19e
                    v14 = v38;
                    while (v25 != (int32_t)v39) {
                        int32_t v40 = v26 - 1; // 0x14000c1a6
                        int32_t v41; // 0x14000bcb0
                        int32_t v42; // 0x14000bcb0
                        int64_t v43; // 0x14000bcb0
                        if (v40 >= 0) {
                            // 0x14000c1a6
                            v41 = *(int32_t *)&v8;
                            v43 = v27;
                            v42 = v40;
                        } else {
                            uint64_t v44 = *v20; // 0x14000c1ac
                            if (v44 >= *v21) {
                                // 0x14000c1d1
                                if (*v22 == 0) {
                                    // 0x14000c1f5
                                    v8 &= -256;
                                } else {
                                    // 0x14000c1d7
                                    function_140001d70(a1);
                                    int64_t v45 = *v20; // 0x14000c1df
                                    v8 = (int64_t)*(char *)v45;
                                    *v20 = v45 + 1;
                                }
                            } else {
                                // 0x14000c1c2
                                v8 = (int64_t)*(char *)v44;
                                *v20 = v44 + 1;
                            }
                            // 0x14000c1f7
                            v41 = v8;
                            v43 = v8 & 255;
                            v42 = 7;
                        }
                        int64_t v46 = v39 & 0xffffffff; // 0x14000c19e
                        int32_t v47 = v42;
                        int64_t v48 = v43;
                        v25 = v41;
                        v14 = v38;
                        if (v46 >= (int64_t)v25) {
                            // break -> 0x14000c206
                            break;
                        }
                        v26 = v47;
                        v27 = v48;
                        v28 = v38;
                        v29 = v26 & 31;
                        v30 = v29 == 0 ? v27 & 1 : (int64_t)((int32_t)v27 >> v29);
                        v31 = 4 * v30 & 4;
                        v8 = v31;
                        v32 = v28 + v33;
                        *(char *)v32 = *(char *)(v31 | v34 - 32);
                        *(char *)(v32 + 1) = *(char *)(v31 | v34 - 31);
                        *(char *)(v32 + 2) = *(char *)(v31 | v34 - 30);
                        v35 = v28 + 3;
                        v36 = v35;
                        if (v37 == 0x400000000) {
                            // 0x14000c197
                            *(char *)(v35 + v33) = -1;
                            v36 = v28 + 4;
                        }
                        // 0x14000c19e
                        v38 = v36;
                        v39 = v46 + 1;
                        v14 = v38;
                    }
                }
                // 0x14000c206
                if (v49 == 0) {
                    goto lab_0x14000c249;
                } else {
                    // 0x14000c20b
                    if (*(int64_t *)(a1 + 16) == 0) {
                        // 0x14000c23f
                        *v20 = *v20 + v50;
                        goto lab_0x14000c249;
                    } else {
                        uint32_t v51 = *(int32_t *)v52 - *(int32_t *)v53; // 0x14000c218
                        v8 = v51;
                        if (v49 > v51) {
                            // 0x14000c223
                            *v20 = *v21;
                            goto lab_0x14000c249;
                        } else {
                            // 0x14000c23f
                            *v20 = *v20 + v50;
                            goto lab_0x14000c249;
                        }
                    }
                }
            }
        }
        goto lab_0x14000cb3a_3;
    }
  lab_0x14000c751:
    // 0x14000c751
    v17 = v313;
    if (*v4 >= 1) {
        uint32_t v282 = v336;
        int64_t v297 = a1 + 200;
        v191 = (int64_t *)v297;
        int64_t v298 = a1 + 192;
        v186 = (int64_t *)v298;
        v192 = (int32_t *)(a1 + 48);
        uint32_t v247 = v246 & 31;
        uint32_t v248 = -v246 & 31;
        uint32_t v252 = 8 - (int32_t)v335 & 31;
        int64_t v250 = 4 * v335;
        uint32_t v256 = v255 & 31;
        uint32_t v257 = -v255 & 31;
        uint32_t v261 = 8 - v338 & 31;
        int64_t v259 = 4 * v338;
        uint32_t v265 = v264 & 31;
        uint32_t v266 = -v264 & 31;
        uint32_t v270 = 8 - (int32_t)v337 & 31;
        int64_t v268 = 4 * v337;
        uint32_t v281 = v283 & 31;
        uint32_t v284 = 8 - (int32_t)v339 & 31;
        int64_t v285 = 4 * v339;
        v227 = 255;
        v224 = 0;
        v229 = v236;
        v231 = 0;
        while (true) {
          lab_0x14000c7d2:;
            int64_t v232 = v231;
            v200 = v229;
            int32_t v233 = v227;
            uint32_t v234 = *(int32_t *)&v8; // 0x14000c7d2
            int64_t v235 = 0x100000000 * v232 >> 32; // 0x14000c7d4
            v8 = v235;
            if (v200 == 0) {
                // 0x14000c92a
                v218 = v233;
                v219 = v236;
                v220 = v232;
                if (v234 >= 1) {
                    int32_t v237 = v233; // 0x14000c93a
                    int64_t v238 = v232;
                    int64_t v239 = v235 + v33;
                    int64_t v240 = function_140001f80(a1); // 0x14000c943
                    int64_t v241 = v240; // 0x14000c94b
                    if (v3 != 16) {
                        // 0x14000c952
                        v241 = 0x10000 * function_140001f80(a1) + v240;
                    }
                    int64_t v242 = v241;
                    int32_t v243 = v242; // 0x14000c972
                    uint32_t v244 = v1 & v243; // 0x14000c975
                    uint32_t v245 = v246 >= 0 ? v244 >> v247 : v244 << v248;
                    int32_t v249 = *(int32_t *)(v250 + 0x1400223f0); // 0x14000c99b
                    int32_t v251 = *(int32_t *)(v250 + 0x140022c28); // 0x14000c9a4
                    *(char *)v239 = (char)((v245 >> v252) * v249 >> (v251 & 31));
                    uint32_t v253 = v1 & v243; // 0x14000c9bb
                    uint32_t v254 = v255 >= 0 ? v253 >> v256 : v253 << v257;
                    int32_t v258 = *(int32_t *)(v259 + 0x1400223f0); // 0x14000c9da
                    int32_t v260 = *(int32_t *)(v259 + 0x140022c28); // 0x14000c9e3
                    *(char *)(v239 + 1) = (char)((v254 >> v261) * v258 >> (v260 & 31));
                    uint32_t v262 = v1 & v243; // 0x14000c9f7
                    uint32_t v263 = v264 >= 0 ? v262 >> v265 : v262 << v266;
                    int32_t v267 = *(int32_t *)(v268 + 0x1400223f0); // 0x14000ca1d
                    int32_t v269 = *(int32_t *)(v268 + 0x140022c28); // 0x14000ca26
                    *(char *)(v239 + 2) = (char)(v267 * (v263 >> v270) >> (v269 & 31));
                    int32_t v271 = 255; // 0x14000ca3a
                    int64_t v272; // 0x14000bcb0
                    int64_t v273; // 0x14000bcb0
                    int64_t v274; // 0x14000bcb0
                    int64_t v275; // 0x14000bcb0
                    int64_t v276; // 0x14000bcb0
                    uint32_t v277; // 0x14000bcb0
                    int32_t v278; // 0x14000ca64
                    int32_t v279; // 0x14000ca6d
                    if (v1 != 0) {
                        // 0x14000ca3c
                        v276 = v242 & v280;
                        v277 = (int32_t)v276;
                        v275 = v281 == 0 ? v276 : (int64_t)(v277 >> v281);
                        v273 = v282 == 0 ? v276 : (int64_t)(v277 << v282);
                        v272 = v283 >= 0 ? v275 : v273;
                        v274 = v284 == 0 ? v272 : (int64_t)((int32_t)v272 >> v284);
                        v278 = *(int32_t *)(v285 + 0x1400223f0);
                        v279 = *(int32_t *)(v285 + 0x140022c28);
                        v271 = v278 * (int32_t)v274 >> (v279 & 31);
                    }
                    int64_t v286 = v239 + 3; // 0x14000ca34
                    int32_t v287 = v271;
                    int64_t v288 = v286; // 0x14000ca8a
                    int64_t v289 = v238 + 3; // 0x14000ca8a
                    if (v210 == 4) {
                        // 0x14000ca8c
                        *(char *)v286 = (char)v287;
                        v288 = v239 + 4;
                        v289 = v238 + 4;
                    }
                    // 0x14000ca95
                    v237 |= v287;
                    int64_t v290 = v289 & 0xffffffff;
                    int64_t v291 = 1; // 0x14000ca95
                    int64_t v292 = v291 & 0xffffffff; // 0x14000ca9b
                    v218 = v237;
                    v219 = v236;
                    v220 = v290;
                    while (*(int32_t *)&v8 > (int32_t)v291) {
                        // 0x14000c940
                        v238 = v290;
                        v239 = v288;
                        v240 = function_140001f80(a1);
                        v241 = v240;
                        if (v3 != 16) {
                            // 0x14000c952
                            v241 = 0x10000 * function_140001f80(a1) + v240;
                        }
                        // 0x14000c96d
                        v242 = v241;
                        v243 = v242;
                        v244 = v1 & v243;
                        v245 = v246 >= 0 ? v244 >> v247 : v244 << v248;
                        v249 = *(int32_t *)(v250 + 0x1400223f0);
                        v251 = *(int32_t *)(v250 + 0x140022c28);
                        *(char *)v239 = (char)((v245 >> v252) * v249 >> (v251 & 31));
                        v253 = v1 & v243;
                        v254 = v255 >= 0 ? v253 >> v256 : v253 << v257;
                        v258 = *(int32_t *)(v259 + 0x1400223f0);
                        v260 = *(int32_t *)(v259 + 0x140022c28);
                        *(char *)(v239 + 1) = (char)((v254 >> v261) * v258 >> (v260 & 31));
                        v262 = v1 & v243;
                        v263 = v264 >= 0 ? v262 >> v265 : v262 << v266;
                        v267 = *(int32_t *)(v268 + 0x1400223f0);
                        v269 = *(int32_t *)(v268 + 0x140022c28);
                        *(char *)(v239 + 2) = (char)(v267 * (v263 >> v270) >> (v269 & 31));
                        v271 = 255;
                        if (v1 != 0) {
                            // 0x14000ca3c
                            v276 = v242 & v280;
                            v277 = (int32_t)v276;
                            v275 = v281 == 0 ? v276 : (int64_t)(v277 >> v281);
                            v273 = v282 == 0 ? v276 : (int64_t)(v277 << v282);
                            v272 = v283 >= 0 ? v275 : v273;
                            v274 = v284 == 0 ? v272 : (int64_t)((int32_t)v272 >> v284);
                            v278 = *(int32_t *)(v285 + 0x1400223f0);
                            v279 = *(int32_t *)(v285 + 0x140022c28);
                            v271 = v278 * (int32_t)v274 >> (v279 & 31);
                        }
                        // 0x14000ca7f
                        v286 = v239 + 3;
                        v287 = v271;
                        v288 = v286;
                        v289 = v238 + 3;
                        if (v210 == 4) {
                            // 0x14000ca8c
                            *(char *)v286 = (char)v287;
                            v288 = v239 + 4;
                            v289 = v238 + 4;
                        }
                        // 0x14000ca95
                        v237 |= v287;
                        v290 = v289 & 0xffffffff;
                        v291 = v292 + 1;
                        v292 = v291 & 0xffffffff;
                        v218 = v237;
                        v219 = v236;
                        v220 = v290;
                    }
                }
            } else {
                // 0x14000c7e0
                v218 = v233;
                v219 = v200;
                v220 = v232;
                if (v234 >= 1) {
                    // 0x14000c7eb
                    v211 = v233;
                    v216 = v235 + v33;
                    v214 = 0;
                    v217 = v232;
                    while (true) {
                      lab_0x14000c7f0:
                        // 0x14000c7f0
                        v208 = v217;
                        v187 = v216;
                        uint64_t v221 = *v191; // 0x14000c7f0
                        v8 = v221;
                        int64_t v222 = *v186; // 0x14000c7f7
                        v184 = v222;
                        if (v222 < v221) {
                            goto lab_0x14000c81f;
                        } else {
                            // 0x14000c803
                            if (*v192 == 0) {
                                // 0x14000c836
                                *(char *)(v187 + 2) = 0;
                                v188 = v222;
                                goto lab_0x14000c83a;
                            } else {
                                // 0x14000c809
                                function_140001d70(a1);
                                v8 = *v191;
                                v184 = *v186;
                                goto lab_0x14000c81f;
                            }
                        }
                    }
                }
            }
          lab_0x14000caaf:
            // 0x14000caaf
            v230 = v220;
            v228 = v219;
            v226 = v218;
            if (v293 == 0) {
                goto lab_0x14000caf7;
            } else {
                // 0x14000cab4
                if (*(int64_t *)(a1 + 16) == 0) {
                    int64_t v294 = *v186; // 0x14000caf0
                    int64_t v295; // 0x14000bcb0
                    *v186 = v294 + v295;
                    goto lab_0x14000caf7;
                } else {
                    uint32_t v296 = *(int32_t *)v297 - *(int32_t *)v298; // 0x14000cac1
                    v8 = v296;
                    if (v293 > v296) {
                        // 0x14000cacc
                        *v186 = *v191;
                        goto lab_0x14000caf7;
                    } else {
                        // 0x14000caed
                        *v186 = *v186 + v299;
                        goto lab_0x14000caf7;
                    }
                }
            }
        }
      lab_0x14000cb0c:
        // 0x14000cb0c
        v17 = v313;
        if (v313 == 4 == v226 == 0) {
            int32_t v344 = 4 * v223 * *(int32_t *)&v8 - 1; // 0x14000cb1e
            int64_t v345 = v344; // 0x14000cb25
            v8 = v345;
            v17 = 4;
            if (v344 >= 0) {
                *(char *)(v345 + v33) = -1;
                int64_t v346 = v8 - 4; // 0x14000cb34
                v8 = v346;
                v17 = 4;
                while (v346 >= 0) {
                    // 0x14000cb30
                    *(char *)(v346 + v33) = -1;
                    v346 = v8 - 4;
                    v8 = v346;
                    v17 = 4;
                }
            }
        }
    }
    goto lab_0x14000cb3a_3;
  lab_0x14000c5c0:;
    uint64_t v372 = (int64_t)v1; // 0x14000c544
    uint64_t v373 = (int64_t)v1;
    uint64_t v374 = (int64_t)v1;
    int64_t v375 = function_14000b760(v374); // 0x14000c5c3
    uint64_t v376 = (v374 / 2 & 0x55555555) + (v374 & 0x55555555); // 0x14000c5e3
    uint32_t v377 = (int32_t)((v376 / 4 & 0x33333333) + (v376 & 0x33333333)); // 0x14000c5f8
    uint32_t v378 = v377 / 16 + v377 & 0xf0f0f0f; // 0x14000c602
    uint32_t v379 = v378 / 256 + v378; // 0x14000c60d
    uint32_t v380 = v379 / 0x10000 + v379 & 63;
    int64_t v381 = function_14000b760(v372); // 0x14000c61a
    uint64_t v382 = (v372 / 2 & 0x55555555) + (v372 & 0x55555555); // 0x14000c63a
    uint32_t v383 = (int32_t)((v382 / 4 & 0x33333333) + (v382 & 0x33333333)); // 0x14000c64f
    uint32_t v384 = v383 / 16 + v383 & 0xf0f0f0f; // 0x14000c659
    uint32_t v385 = v384 / 256 + v384; // 0x14000c664
    int32_t v386 = v385 / 0x10000 + v385 & 63;
    int64_t v387 = function_14000b760(v373); // 0x14000c671
    uint64_t v388 = (v373 / 2 & 0x55555555) + (v373 & 0x55555555); // 0x14000c691
    uint32_t v389 = (int32_t)((v388 / 4 & 0x33333333) + (v388 & 0x33333333)); // 0x14000c6a6
    uint32_t v390 = v389 / 16 + v389 & 0xf0f0f0f; // 0x14000c6b0
    uint32_t v391 = v390 / 256 + v390; // 0x14000c6bb
    uint32_t v392 = v391 / 0x10000 + v391 & 63;
    int64_t v393 = function_14000b760(v280); // 0x14000c6c8
    uint64_t v394 = (v280 / 2 & 0x55555555) + (v280 & 0x55555555); // 0x14000c6ea
    uint32_t v395 = (int32_t)((v394 / 4 & 0x33333333) + (v394 & 0x33333333)); // 0x14000c6ff
    uint32_t v396 = v395 / 16 + v395 & 0xf0f0f0f; // 0x14000c706
    uint32_t v397 = v396 / 256 + v396; // 0x14000c711
    uint32_t v398 = v397 / 0x10000 + v397 & 63;
    if (v398 < 9 == v392 < 9 == v386 < 9 == v380 < 9) {
        int32_t v399 = v393;
        v299 = v341;
        v293 = v340;
        v246 = (int32_t)v375 - 7;
        v283 = v399 - 7;
        v236 = 0;
        v255 = (int32_t)v381 - 7;
        v264 = (int32_t)v387 - 7;
        v339 = v398;
        v338 = v386;
        v335 = v380;
        v336 = 7 - v399 & 31;
        v337 = v392;
        goto lab_0x14000c751;
    } else {
        goto lab_0x14000cc0a;
    }
  lab_0x14000cc0a:
    // 0x14000cc0a
    free(mem);
    int64_t v400 = *(int64_t *)__readgsqword(88); // 0x14000cc1c
    v8 = v400;
    v301 = v400;
    v302 = (int64_t)"bad masks";
    goto lab_0x14000cc50;
  lab_0x14000cb3a_3:
    // 0x14000cb3a
    if (v5 >= 1) {
        int32_t v347 = *v4; // 0x14000cb40
        if ((v347 & -2) >= 1) {
            int32_t v348 = v17;
            int32_t v349 = *(int32_t *)&v8;
            int64_t v350 = 0;
            uint32_t v351 = v349 * v348;
            int32_t v352 = v347; // 0x14000cb77
            int32_t v353 = v349; // 0x14000cb77
            int64_t v354; // 0x14000bcb0
            int32_t v355; // 0x14000bcb0
            int64_t v356; // 0x14000cb68
            char * v357; // 0x14000cb80
            int64_t v358; // 0x14000cb83
            char * v359; // 0x14000cb86
            int32_t v360; // 0x14000cb95
            if (v351 >= 1) {
                // 0x14000cb79
                v355 = v350;
                v356 = (v347 + -1 - v355) * v351;
                v354 = v356 + v33;
                v358 = 0;
                v357 = (char *)v354;
                v358 = v358 + 1 & 0xffffffff;
                v359 = (char *)((int64_t)(v351 * v355) - v356 + v354);
                *v359 = *v357;
                *v357 = *v359;
                v360 = *(int32_t *)&v8;
                v354++;
                while (v358 < (int64_t)(v360 * v348)) {
                    // 0x14000cb80
                    v357 = (char *)v354;
                    v358 = v358 + 1 & 0xffffffff;
                    v359 = (char *)((int64_t)(v351 * v355) - v356 + v354);
                    *v359 = *v357;
                    *v357 = *v359;
                    v360 = *(int32_t *)&v8;
                    v354++;
                }
                // 0x14000cba0
                v352 = *v4;
                v353 = v360;
            }
            // 0x14000cba0
            v349 = v353;
            int32_t v361 = v352; // 0x14000cba0
            int64_t v362 = v350 + 1 & 0xffffffff; // 0x14000cba3
            while (v362 < (int64_t)(v361 >> 1)) {
                // 0x14000cb50
                v350 = v362;
                int32_t v363 = v361;
                v351 = v349 * v348;
                v352 = v363;
                v353 = v349;
                if (v351 >= 1) {
                    // 0x14000cb79
                    v355 = v350;
                    v356 = (v363 + -1 - v355) * v351;
                    v354 = v356 + v33;
                    v358 = 0;
                    v357 = (char *)v354;
                    v358 = v358 + 1 & 0xffffffff;
                    v359 = (char *)((int64_t)(v351 * v355) - v356 + v354);
                    *v359 = *v357;
                    *v357 = *v359;
                    v360 = *(int32_t *)&v8;
                    v354++;
                    while (v358 < (int64_t)(v360 * v348)) {
                        // 0x14000cb80
                        v357 = (char *)v354;
                        v358 = v358 + 1 & 0xffffffff;
                        v359 = (char *)((int64_t)(v351 * v355) - v356 + v354);
                        *v359 = *v357;
                        *v357 = *v359;
                        v360 = *(int32_t *)&v8;
                        v354++;
                    }
                    // 0x14000cba0
                    v352 = *v4;
                    v353 = v360;
                }
                // 0x14000cba0
                v349 = v353;
                v361 = v352;
                v362 = v350 + 1 & 0xffffffff;
            }
        }
    }
    int64_t result = v33; // 0x14000cbb9
    if (v314 != 0) {
        int32_t v364 = v17; // 0x14000cbbb
        result = v33;
        if (v314 != v364) {
            int64_t v365 = function_140002040(v33, v364, v315, *(int32_t *)&v8, (int64_t)*v4); // 0x14000cbd0
            result = v365;
            if (v365 == 0) {
                // 0x14000cc5b
                return 0;
            }
        }
    }
    // 0x14000cbdd
    *(int32_t *)a2 = *(int32_t *)&v8;
    *(int32_t *)a3 = *v4;
    v8 = a4;
    if (a4 != 0) {
        // 0x14000cc00
        *(int32_t *)a4 = *v309;
    }
    // 0x14000cc5b
    return result;
  lab_0x14000c4f9:;
    int64_t * v366 = (int64_t *)v320; // 0x14000c4fc
    *v366 = *v366 + (int64_t)v321;
    goto lab_0x14000c503;
  lab_0x14000c263:
    // 0x14000c263
    v8 = 0;
    v17 = v16;
    if (*v4 >= 1) {
        // 0x14000c271
        int32_t v367; // 0x14000bcb0
        int32_t v368 = v367;
        uint32_t v134 = -v368 & 3;
        int64_t v139 = v134; // 0x14000c0e1
        int64_t v369 = a1 + 192;
        v73 = (int64_t *)v369;
        int64_t v370 = a1 + 200;
        int64_t * v75 = (int64_t *)v370;
        int32_t * v84 = (int32_t *)(a1 + 48);
        int64_t v93 = v34 - 32;
        int64_t v95 = v34 - 31;
        int64_t v97 = v34 - 30;
        int64_t * v136 = (int64_t *)(a1 + 16);
        int32_t * v141 = (int32_t *)v370;
        int32_t * v143 = (int32_t *)v369;
        v59 = 0;
        v60 = 0;
        v62 = 0;
        while (true) {
          lab_0x14000c271:;
            int64_t v63 = v62;
            v64 = v60;
            int64_t v65 = v59;
            int64_t v66 = v63; // 0x14000c277
            int64_t v67 = 0; // 0x14000c277
            int64_t v68 = v65; // 0x14000c277
            int64_t v69 = v63; // 0x14000c277
            if (v64 >= 1) {
                int64_t v70 = v67;
                int64_t v71 = v66;
                uint64_t v72 = *v73; // 0x14000c280
                uint64_t v74 = *v75; // 0x14000c287
                int64_t v76; // 0x14000bcb0
                int32_t v77; // 0x14000c2a0
                unsigned char v78; // 0x14000c290
                int64_t v79; // 0x14000c294
                int64_t v80; // 0x14000c2c5
                int64_t v81; // 0x14000c2ae
                unsigned char v82; // 0x14000c2b5
                int64_t v83; // 0x14000c2b8
                if (v72 >= v74) {
                    // 0x14000c2a0
                    v77 = *v84;
                    if (v77 == 0) {
                        // 0x14000c2c5
                        v80 = v8;
                        v8 = v80 & -256;
                        v76 = v72;
                    } else {
                        // 0x14000c2a6
                        function_140001d70(a1);
                        v81 = *v73;
                        v82 = *(char *)v81;
                        v8 = v82;
                        v83 = v81 + 1;
                        *v73 = v83;
                        v76 = v83;
                    }
                } else {
                    // 0x14000c290
                    v78 = *(char *)v72;
                    v8 = v78;
                    v79 = v72 + 1;
                    *v73 = v79;
                    v76 = v79;
                }
                uint64_t v85 = v76;
                int64_t v86 = v8; // 0x14000c2ca
                uint64_t v87 = v86 & 255; // 0x14000c2ca
                int32_t v88; // 0x14000bd35
                int64_t v89 = v88 != 4 ? v87 : v87 / 16;
                int64_t v90 = 0x100000000 * v71;
                int64_t v91 = 4 * v89; // 0x14000c2e0
                char v92 = *(char *)(v91 + v93); // 0x14000c2e8
                *(char *)((v90 >> 32) + v33) = v92;
                char v94 = *(char *)(v91 + v95); // 0x14000c2f2
                *(char *)((v90 + 0x100000000 >> 32) + v33) = v94;
                char v96 = *(char *)(v91 + v97); // 0x14000c2ff
                int64_t v98 = v90 + 0x200000000 >> 32; // 0x14000c304
                v8 = v98;
                int64_t v99 = v71 + 3; // 0x14000c307
                *(char *)(v98 + v33) = v96;
                int64_t v100 = v99; // 0x14000c310
                if (v37 == 0x400000000) {
                    // 0x14000c312
                    *(char *)((0x100000000 * v99 >> 32) + v33) = -1;
                    v100 = v71 + 4;
                }
                int64_t v101 = v100;
                uint32_t v102 = *(int32_t *)&v8; // 0x14000c31b
                int64_t v103; // 0x14000bcb0
                while ((int32_t)v70 + 1 != v102) {
                    int64_t v104 = v88 != 4 ? 0 : v86 & 15;
                    int64_t v105 = v102; // 0x14000c31b
                    int64_t v106 = v105; // 0x14000c32f
                    int64_t v107 = v104; // 0x14000c32f
                    if (v88 == 8) {
                        uint64_t v108 = *v75; // 0x14000c331
                        int64_t v109; // 0x14000bcb0
                        if (v85 >= v108) {
                            int32_t v110 = *v84; // 0x14000c34b
                            if (v110 == 0) {
                                int64_t v111 = v8; // 0x14000c372
                                v8 = v111 & -256;
                                v109 = v105;
                            } else {
                                // 0x14000c351
                                function_140001d70(a1);
                                int64_t v112 = *v73; // 0x14000c359
                                unsigned char v113 = *(char *)v112; // 0x14000c360
                                v8 = v113;
                                *v73 = v112 + 1;
                                uint32_t v114 = *(int32_t *)&v8; // 0x14000c36d
                                v109 = v114;
                            }
                        } else {
                            unsigned char v115 = *(char *)v85; // 0x14000c33a
                            v8 = v115;
                            *v73 = v85 + 1;
                            v109 = v105;
                        }
                        int64_t v116 = v109;
                        int64_t v117 = v8; // 0x14000c374
                        v106 = v116;
                        v107 = v117 & 255;
                    }
                    int64_t v118 = v107;
                    uint64_t v119 = v106;
                    int64_t v120 = 0x100000000 * v101;
                    int64_t v121 = 4 * v118; // 0x14000c37b
                    char v122 = *(char *)(v121 + v93); // 0x14000c383
                    *(char *)((v120 >> 32) + v33) = v122;
                    char v123 = *(char *)(v121 + v95); // 0x14000c38d
                    *(char *)((v120 + 0x100000000 >> 32) + v33) = v123;
                    char v124 = *(char *)(v121 + v97); // 0x14000c39a
                    int64_t v125 = v120 + 0x200000000 >> 32; // 0x14000c39f
                    v8 = v125;
                    int64_t v126 = v101 + 3; // 0x14000c3a2
                    *(char *)(v125 + v33) = v124;
                    int64_t v127 = v126; // 0x14000c3ab
                    if (v37 == 0x400000000) {
                        // 0x14000c3ad
                        *(char *)((0x100000000 * v126 >> 32) + v33) = -1;
                        v127 = v101 + 4;
                    }
                    int64_t v128 = v127;
                    int64_t v129 = v128 & 0xffffffff;
                    int64_t v130 = v70 + 2 & 0xffffffff; // 0x14000c3b6
                    v66 = v129;
                    v67 = v130;
                    v103 = v129;
                    if (v130 >= v119) {
                        goto lab_0x14000c3c3;
                    }
                    v70 = v67;
                    v71 = v66;
                    v72 = *v73;
                    v74 = *v75;
                    if (v72 >= v74) {
                        // 0x14000c2a0
                        v77 = *v84;
                        if (v77 == 0) {
                            // 0x14000c2c5
                            v80 = v8;
                            v8 = v80 & -256;
                            v76 = v72;
                        } else {
                            // 0x14000c2a6
                            function_140001d70(a1);
                            v81 = *v73;
                            v82 = *(char *)v81;
                            v8 = v82;
                            v83 = v81 + 1;
                            *v73 = v83;
                            v76 = v83;
                        }
                    } else {
                        // 0x14000c290
                        v78 = *(char *)v72;
                        v8 = v78;
                        v79 = v72 + 1;
                        *v73 = v79;
                        v76 = v79;
                    }
                    // 0x14000c2c7
                    v85 = v76;
                    v86 = v8;
                    v87 = v86 & 255;
                    v89 = v88 != 4 ? v87 : v87 / 16;
                    v90 = 0x100000000 * v71;
                    v91 = 4 * v89;
                    v92 = *(char *)(v91 + v93);
                    *(char *)((v90 >> 32) + v33) = v92;
                    v94 = *(char *)(v91 + v95);
                    *(char *)((v90 + 0x100000000 >> 32) + v33) = v94;
                    v96 = *(char *)(v91 + v97);
                    v98 = v90 + 0x200000000 >> 32;
                    v8 = v98;
                    v99 = v71 + 3;
                    *(char *)(v98 + v33) = v96;
                    v100 = v99;
                    if (v37 == 0x400000000) {
                        // 0x14000c312
                        *(char *)((0x100000000 * v99 >> 32) + v33) = -1;
                        v100 = v71 + 4;
                    }
                    // 0x14000c31b
                    v101 = v100;
                    v102 = *(int32_t *)&v8;
                }
                // 0x14000c3c3
                v103 = v101 & 0xffffffff;
              lab_0x14000c3c3:;
                int64_t v131 = v103;
                int64_t v132 = v64; // 0x14000c3c3
                v8 = v132;
                v68 = v132;
                v69 = v131;
            }
            // 0x14000c3c7
            v61 = v69;
            int64_t v133 = v68;
            v54 = v133;
            if (v134 == 0) {
                goto lab_0x14000c40e;
            } else {
                int64_t v135 = *v136; // 0x14000c3cc
                int64_t v137; // 0x14000c403
                if (v135 == 0) {
                    // 0x14000c400
                    v137 = *v73;
                    v138 = v137 + v139;
                    goto lab_0x14000c40a;
                } else {
                    int32_t v140 = *v141; // 0x14000c3d3
                    int32_t v142 = *v143; // 0x14000c3d9
                    uint32_t v144 = v140 - v142; // 0x14000c3d9
                    v8 = v144;
                    if (v134 > v144) {
                        int64_t v145 = *v75; // 0x14000c3e4
                        v138 = v145;
                        goto lab_0x14000c40a;
                    } else {
                        // 0x14000c400
                        v137 = *v73;
                        v138 = v137 + v139;
                        goto lab_0x14000c40a;
                    }
                }
            }
        }
    }
    goto lab_0x14000cb3a_3;
  lab_0x14000c09b:;
    int64_t * v371 = (int64_t *)v319; // 0x14000c09e
    *v371 = *v371 + (int64_t)v322;
    goto lab_0x14000c0a5;
}

// Address range: 0x14000cc80 - 0x14000cf38
int64_t function_14000cc80(int64_t a1, int64_t a2) {
    int64_t * v1 = (int64_t *)(a1 + 192); // 0x14000cc99
    uint64_t v2 = *v1; // 0x14000cc99
    int64_t v3 = a1 + 200; // 0x14000cca0
    int64_t * v4 = (int64_t *)v3; // 0x14000cca0
    uint64_t v5 = *v4; // 0x14000cca0
    int64_t v6; // 0x14000cc80
    char v7; // 0x14000cc80
    int64_t v8; // 0x14000ccc5
    int64_t v9; // 0x14000ccd3
    if (v2 >= v5) {
        // 0x14000ccb8
        v6 = v2;
        v7 = 0;
        if (*(int32_t *)(a1 + 48) == 0) {
            goto lab_0x14000cd20;
        } else {
            // 0x14000ccbd
            function_140001d70(a1);
            v8 = *v1 + 1;
            *v1 = v8;
            v9 = *v4;
            goto lab_0x14000ccda;
        }
    } else {
        int64_t v10 = v2 + 1; // 0x14000ccac
        *v1 = v10;
        v9 = v5;
        v8 = v10;
        goto lab_0x14000ccda;
    }
  lab_0x14000cd20:;
    // 0x14000cd20
    int64_t v11; // 0x14000cc80
    char v12; // 0x14000cc80
    if (v6 >= *v4) {
        // 0x14000cd36
        v11 = v6;
        v12 = 0;
        if (*(int32_t *)(a1 + 48) != 0) {
            // 0x14000cd3b
            function_140001d70(a1);
            int64_t v13 = *v1; // 0x14000cd43
            v11 = v13 + 1;
            v12 = *(char *)v13;
        }
    } else {
        // 0x14000cd2e
        v11 = v6 + 1;
        v12 = *(char *)v6;
    }
    char v14 = v12;
    int64_t result; // 0x14000cc80
    int64_t v15; // 0x14000cc80
    int64_t * v16; // 0x14000cd75
    if (v7 != 1) {
        // 0x14000ce39
        result = 0;
        if (v14 == 11 || (v14 - 2 & -10) == 0) {
            // 0x14000ce4e
            if (*(int64_t *)(a1 + 16) == 0) {
                // 0x14000ce87
                *v1 = v11 + 9;
                goto lab_0x14000ce8e;
            } else {
                // 0x14000ce54
                if (*(int32_t *)v3 - (int32_t)v11 > 8) {
                    // 0x14000ce87
                    *v1 = v11 + 9;
                    goto lab_0x14000ce8e;
                } else {
                    // 0x14000ce64
                    *v1 = *v4;
                    goto lab_0x14000ce8e;
                }
            }
        } else {
            goto lab_0x14000cf05;
        }
    } else {
        // 0x14000cd65
        result = 0;
        if ((v14 - 1 & -9) != 0) {
            goto lab_0x14000cf05;
        } else {
            // 0x14000cd70
            v16 = (int64_t *)(a1 + 16);
            if (*v16 == 0) {
                // 0x14000cdad
                v15 = v11 + 4;
                goto lab_0x14000cdb7;
            } else {
                // 0x14000cd7b
                if (*(int32_t *)v3 - (int32_t)v11 < 4) {
                    // 0x14000cd8a
                    v15 = *v4;
                    goto lab_0x14000cdb7;
                } else {
                    // 0x14000cdad
                    v15 = v11 + 4;
                    goto lab_0x14000cdb7;
                }
            }
        }
    }
  lab_0x14000ccda:;
    int64_t v17 = v8; // 0x14000ccdd
    if (v8 >= v9) {
        // 0x14000cce7
        v6 = v8;
        v7 = 0;
        if (*(int32_t *)(a1 + 48) == 0) {
            goto lab_0x14000cd20;
        } else {
            // 0x14000ccec
            function_140001d70(a1);
            v17 = *v1;
            goto lab_0x14000cd02;
        }
    } else {
        goto lab_0x14000cd02;
    }
  lab_0x14000cd02:;
    unsigned char v18 = *(char *)v17;
    int64_t v19 = v17 + 1;
    *v1 = v19;
    v6 = v19;
    v7 = v18;
    result = 0;
    if (v18 < 2) {
        goto lab_0x14000cd20;
    } else {
        goto lab_0x14000cf05;
    }
  lab_0x14000cf05:
    // 0x14000cf05
    *v1 = *(int64_t *)(a1 + 208);
    *v4 = *(int64_t *)(a1 + 216);
    return result;
  lab_0x14000cdb7:
    // 0x14000cdb7
    *v1 = v15;
    int64_t v20; // 0x14000cc80
    int64_t v21; // 0x14000cddd
    int64_t v22; // 0x14000cde7
    if (v15 >= *v4) {
        // 0x14000cdcc
        result = 0;
        if (*(int32_t *)(a1 + 48) == 0) {
            goto lab_0x14000cf05;
        } else {
            // 0x14000cdd5
            function_140001d70(a1);
            v21 = *v1;
            v22 = v21 + 1;
            v20 = v22 & 0xffffffff;
            goto lab_0x14000cdee;
        }
    } else {
        int64_t v23 = v15 + 1; // 0x14000cdc3
        v21 = v15;
        v22 = v23;
        v20 = v23;
        goto lab_0x14000cdee;
    }
  lab_0x14000ce8e:
    // 0x14000ce8e
    result = 0;
    char v24; // 0x14000cc80
    if ((int32_t)function_140001f80(a1) < 1) {
        goto lab_0x14000cf05;
    } else {
        // 0x14000ce9b
        result = 0;
        if ((int32_t)function_140001f80(a1) < 1) {
            goto lab_0x14000cf05;
        } else {
            uint64_t v25 = *v1; // 0x14000cea8
            if (v25 >= *v4) {
                // 0x14000cebd
                v24 = 0;
                if (*(int32_t *)(a1 + 48) != 0) {
                    // 0x14000cec2
                    function_140001d70(a1);
                    v24 = *(char *)*v1;
                }
            } else {
                // 0x14000ceb8
                v24 = *(char *)v25;
            }
            // 0x14000ced8
            if (v7 != 1) {
                goto lab_0x14000cee8;
            } else {
                if (v24 == 8) {
                    // 0x14000cefb
                    result = 1;
                    goto lab_0x14000cf05;
                } else {
                    // 0x14000cee3
                    result = 0;
                    if (v24 != 16) {
                        goto lab_0x14000cf05;
                    } else {
                        goto lab_0x14000cee8;
                    }
                }
            }
        }
    }
  lab_0x14000cdee:;
    unsigned char v26 = *(char *)v21;
    if (v26 < 25) {
        // 0x14000cdf3
        result = 0;
        if ((1 << (int32_t)(v26 & 31) & 0x1018100) == 0) {
            goto lab_0x14000cf05;
        } else {
            goto lab_0x14000ce05;
        }
    } else {
        // 0x14000cdfc
        result = 0;
        if (v26 != 32) {
            goto lab_0x14000cf05;
        } else {
            goto lab_0x14000ce05;
        }
    }
  lab_0x14000cee8:
    if (v24 < 25) {
        // 0x14000ceed
        result = 0;
        if ((1 << (int32_t)(v24 & 31) & 0x1018100) == 0) {
            goto lab_0x14000cf05;
        } else {
            // 0x14000cefb
            result = 1;
            goto lab_0x14000cf05;
        }
    } else {
        // 0x14000cef6
        result = 0;
        if (v24 != 32) {
            goto lab_0x14000cf05;
        } else {
            // 0x14000cefb
            result = 1;
            goto lab_0x14000cf05;
        }
    }
  lab_0x14000ce05:
    // 0x14000ce05
    if (*v16 == 0) {
        goto lab_0x14000ce33;
    } else {
        // 0x14000ce0b
        if (*(int32_t *)v3 - (int32_t)v20 < 4) {
            // 0x14000ce18
            *v1 = *v4;
            goto lab_0x14000ce8e;
        } else {
            goto lab_0x14000ce33;
        }
    }
  lab_0x14000ce33:
    // 0x14000ce87
    *v1 = v22 + 4;
    goto lab_0x14000ce8e;
}

// Address range: 0x14000cf40 - 0x14000d992
int64_t function_14000cf40(int64_t a1, int64_t a2, int64_t a3, int64_t a4, int64_t a5) {
    int64_t v1 = a1 + 192; // 0x14000cf73
    int64_t * v2 = (int64_t *)v1; // 0x14000cf73
    uint64_t v3 = *v2; // 0x14000cf73
    int64_t v4 = a1 + 200; // 0x14000cf7a
    int64_t * v5 = (int64_t *)v4; // 0x14000cf7a
    uint64_t v6 = *v5; // 0x14000cf7a
    int64_t v7 = v3; // 0x14000cf96
    int64_t v8 = v6; // 0x14000cf96
    char v9; // 0x14000cf40
    char v10; // 0x14000cf40
    int64_t v11; // 0x14000cf40
    int32_t v12; // 0x14000cf40
    int32_t v13; // 0x14000cf40
    if (v3 < v6) {
        goto lab_0x14000cfb3;
    } else {
        // 0x14000cf98
        v11 = 0;
        v13 = 0;
        v12 = 0;
        v9 = 0;
        v10 = 0;
        if (*(int32_t *)(a1 + 48) == 0) {
            goto lab_0x14000d04d;
        } else {
            // 0x14000cf9d
            function_140001d70(a1);
            v7 = *v2;
            v8 = *v5;
            goto lab_0x14000cfb3;
        }
    }
  lab_0x14000d63f:;
    // 0x14000d63f
    uint32_t v14; // 0x14000cf40
    int64_t v15; // 0x14000cf40
    int64_t v16; // 0x14000cf40
    int64_t v17; // 0x14000cf40
    int64_t v18; // 0x14000cf40
    int32_t v19; // 0x14000cf40
    int32_t v20; // bp-88, 0x14000cf40
    int64_t v21; // 0x14000d062
    int32_t v22; // 0x14000d06e
    int32_t * v23; // 0x14000cf40
    if (v10 == 0) {
        if (v19 == 0) {
            int64_t v24 = 0; // 0x14000d76f
            if (v14 != 0) {
                uint64_t v25 = *v2; // 0x14000d780
                char v26; // 0x14000cf40
                int64_t v27; // 0x14000d7ac
                if (v25 >= *v5) {
                    // 0x14000d79f
                    v26 = 0;
                    if (*v23 != 0) {
                        // 0x14000d7a4
                        function_140001d70(a1);
                        v27 = *v2;
                        *v2 = v27 + 1;
                        v26 = *(char *)v27;
                    }
                } else {
                    // 0x14000d790
                    *v2 = v25 + 1;
                    v26 = *(char *)v25;
                }
                // 0x14000d7c4
                int64_t v28; // bp-232, 0x14000cf40
                *(char *)((int64_t)&v28 + 144 + v24) = v26;
                int64_t v29 = v24 + 1; // 0x14000d7cb
                v24 = v29;
                while (v29 != v15) {
                    // 0x14000d780
                    v25 = *v2;
                    if (v25 >= *v5) {
                        // 0x14000d79f
                        v26 = 0;
                        if (*v23 != 0) {
                            // 0x14000d7a4
                            function_140001d70(a1);
                            v27 = *v2;
                            *v2 = v27 + 1;
                            v26 = *(char *)v27;
                        }
                    } else {
                        // 0x14000d790
                        *v2 = v25 + 1;
                        v26 = *(char *)v25;
                    }
                    // 0x14000d7c4
                    *(char *)((int64_t)&v28 + 144 + v24) = v26;
                    v29 = v24 + 1;
                    v24 = v29;
                }
            }
        } else {
            int64_t v30 = function_140001f80(a1) / 1024 & 31;
            uint32_t v31 = 255 * (int32_t)v30 + (int32_t)(-0x7b6318c543 * v30 / 0x100000000) >> 4; // 0x14000d708
            v20 = 0x1000000 * (v31 / 0x80000000 + v31) >> 24;
        }
    } else {
        int64_t v32; // 0x14000cf40
        if (v16 != 8) {
            // 0x14000d69e
            v32 = function_140001f80(a1);
        } else {
            uint64_t v33 = *v2; // 0x14000d64f
            if (v33 >= *v5) {
                // 0x14000d671
                v32 = 0;
                if (*v23 != 0) {
                    // 0x14000d676
                    function_140001d70(a1);
                    int64_t v34 = *v2; // 0x14000d67e
                    *v2 = v34 + 1;
                    v32 = (int64_t)*(char *)v34;
                }
            } else {
                // 0x14000d65f
                *v2 = v33 + 1;
                v32 = (int64_t)*(char *)v33;
            }
        }
        if (v14 != 0) {
            int64_t v35 = v32;
            int32_t v36 = v35; // 0x14000d6a6
            int32_t v37 = v36 - v22; // 0x14000d6a6
            int64_t v38 = v37 < 0 == ((v37 ^ v36) & (int32_t)(v35 ^ v21)) < 0 ? 0 : 0x100000000 * v35 >> 32; // 0x14000d6b6
            memcpy((int64_t *)&v20, (int64_t *)((v38 * v17 >> 32) + v18), v14);
        }
    }
    int64_t v39 = 0; // 0x14000d7db
    int64_t v40; // 0x14000cf40
    int64_t v41 = v40 >> 32; // 0x14000d7db
    int64_t v42; // 0x14000cf40
    int64_t v43 = v42; // 0x14000d7db
    int64_t v44; // 0x14000cf40
    int64_t v45 = v44; // 0x14000d7db
    goto lab_0x14000d7de;
  lab_0x14000d7de:;
    int64_t v46 = 0; // 0x14000d7e4
    int64_t v47; // 0x14000cf40
    int64_t v48; // 0x14000d582
    if (v14 != 0) {
        int64_t v49 = v46 + v48; // 0x14000d7f8
        int64_t v50 = v46 + 1; // 0x14000d7fb
        *(char *)(v49 + v47) = *(char *)v49;
        v46 = v50;
        while (v50 != v15) {
            // 0x14000d7f0
            v49 = v46 + v48;
            v50 = v46 + 1;
            *(char *)(v49 + v47) = *(char *)v49;
            v46 = v50;
        }
    }
    int64_t v51 = v41 - 1; // 0x14000d818
    int64_t v52 = 0x100000000 * v51; // 0x14000d821
    int64_t v53 = v39; // 0x14000d821
    int64_t v54 = v51; // 0x14000d821
    int64_t v55 = v43 + 0xffffffff & 0xffffffff; // 0x14000d821
    int64_t v56 = v45; // 0x14000d821
    int64_t v57; // 0x14000d2b2
    int64_t v58 = v47 + v57; // 0x14000d821
    if (v51 == 0) {
        // break -> 0x14000d827
        goto lab_0x14000d827;
    }
    goto lab_0x14000d5a1;
  lab_0x14000cfb3:;
    unsigned char v65 = *(char *)v7; // 0x14000cfb3
    int64_t v66 = v65; // 0x14000cfb3
    int64_t v67 = v7 + 1; // 0x14000cfb6
    int32_t v68 = v65; // 0x14000cfc2
    *v2 = v67;
    int64_t v69 = v67; // 0x14000cfd1
    int64_t v70 = v8; // 0x14000cfd1
    if (v67 >= v8) {
        // 0x14000cfdd
        v11 = v66;
        v13 = v68;
        v12 = 0;
        v9 = 0;
        v10 = 0;
        if (*(int32_t *)(a1 + 48) == 0) {
            goto lab_0x14000d04d;
        } else {
            // 0x14000cfe2
            function_140001d70(a1);
            v69 = *v2;
            v70 = *v5;
            goto lab_0x14000cff8;
        }
    } else {
        goto lab_0x14000cff8;
    }
  lab_0x14000cff8:;
    char v71 = *(char *)v69; // 0x14000cff8
    uint64_t v72 = v69 + 1; // 0x14000cffb
    int32_t v73 = v71; // 0x14000d002
    *v2 = v72;
    if (v72 >= v70) {
        // 0x14000d028
        v11 = v66;
        v13 = v68;
        v12 = v73;
        v9 = 0;
        v10 = v71;
        if (*(int32_t *)(a1 + 48) != 0) {
            // 0x14000d02d
            function_140001d70(a1);
            int64_t v74 = *v2; // 0x14000d035
            *v2 = v74 + 1;
            v11 = v66;
            v13 = v68;
            v12 = v73;
            v9 = *(char *)v74;
            v10 = v71;
        }
    } else {
        // 0x14000d012
        *v2 = v69 + 2;
        v11 = v66;
        v13 = v68;
        v12 = v73;
        v9 = *(char *)v72;
        v10 = v71;
    }
    goto lab_0x14000d04d;
  lab_0x14000d04d:;
    int64_t v75 = function_140001f80(a1); // 0x14000d057
    v21 = function_140001f80(a1);
    uint64_t v76 = *v2; // 0x14000d067
    char v77; // 0x14000cf40
    if (v76 >= *v5) {
        // 0x14000d08a
        v77 = 0;
        if (*(int32_t *)(a1 + 48) != 0) {
            // 0x14000d08f
            function_140001d70(a1);
            int64_t v78 = *v2; // 0x14000d097
            *v2 = v78 + 1;
            v77 = *(char *)v78;
        }
    } else {
        // 0x14000d07b
        *v2 = v76 + 1;
        v77 = *(char *)v76;
    }
    // 0x14000d0af
    function_140001f80(a1);
    function_140001f80(a1);
    int64_t v79 = function_140001f80(a1); // 0x14000d0d6
    int64_t v80 = function_140001f80(a1); // 0x14000d0e2
    uint64_t v81 = *v5; // 0x14000d0e7
    uint64_t v82 = *v2; // 0x14000d0f2
    int64_t v83 = v82; // 0x14000d0fc
    int64_t v84 = v81; // 0x14000d0fc
    char v85; // 0x14000cf40
    if (v82 < v81) {
        goto lab_0x14000d119;
    } else {
        // 0x14000d0fe
        v85 = 0;
        v16 = 0;
        if (*(int32_t *)(a1 + 48) == 0) {
            goto lab_0x14000d16b;
        } else {
            // 0x14000d103
            function_140001d70(a1);
            v83 = *v2;
            v84 = *v5;
            goto lab_0x14000d119;
        }
    }
  lab_0x14000d119:;
    uint64_t v86 = v83 + 1; // 0x14000d11c
    int64_t v87 = (int64_t)*(char *)v83; // 0x14000d11f
    *v2 = v86;
    if (v86 >= v84) {
        // 0x14000d146
        v85 = 0;
        v16 = v87;
        if (*(int32_t *)(a1 + 48) != 0) {
            // 0x14000d14b
            function_140001d70(a1);
            int64_t v88 = *v2; // 0x14000d153
            *v2 = v88 + 1;
            v85 = *(char *)v88;
            v16 = v87;
        }
    } else {
        // 0x14000d132
        *v2 = v83 + 2;
        v85 = *(char *)v86;
        v16 = v87;
    }
    goto lab_0x14000d16b;
  lab_0x14000d16b:;
    int32_t v89 = v80;
    v20 = 0;
    int64_t v90; // 0x14000cf40
    int32_t v91; // 0x14000cf40
    if (v89 > 0x1000000) {
        goto lab_0x14000d943;
    } else {
        // 0x14000d197
        v91 = v79;
        if (v91 > 0x1000000) {
            goto lab_0x14000d943;
        } else {
            // 0x14000d1a9
            if (v12 == 0) {
                // 0x14000d1f1
                v19 = 1;
                v15 = 3;
                int64_t v92; // 0x14000cf40
                switch ((char)v92) {
                    case 8: {
                        // 0x14000d248
                        v19 = 0;
                        v15 = 1;
                        goto lab_0x14000d24b;
                    }
                    case 15: {
                        goto lab_0x14000d24b;
                    }
                    case 16: {
                        int32_t v93 = v9; // 0x14000d04d
                        int32_t v94 = v9 < 8 ? v93 : v93 - 8; // 0x14000d1ba
                        v19 = 1;
                        v15 = 3;
                        if (v94 == 3) {
                            // 0x14000d236
                            v19 = 0;
                            v15 = v94 - 1;
                        }
                        goto lab_0x14000d24b;
                    }
                    default: {
                        int32_t v95 = (int32_t)v16 - 24; // 0x14000d1ff
                        v90 = v16;
                        if (v95 != 0 == (v95 != 8)) {
                            goto lab_0x14000d219;
                        } else {
                            goto lab_0x14000d20c;
                        }
                    }
                }
            } else {
                // 0x14000d1d4
                v19 = 1;
                v15 = 3;
                switch (v77) {
                    case 8: {
                        // 0x14000d248
                        v19 = 0;
                        v15 = 1;
                        goto lab_0x14000d24b;
                    }
                    case 15: {
                        goto lab_0x14000d24b;
                    }
                    case 16: {
                        goto lab_0x14000d24b;
                    }
                    default: {
                        int32_t v96 = (int32_t)v77 - 24; // 0x14000d1e5
                        v90 = v77;
                        if (v96 != 0 == (v96 != 8)) {
                            goto lab_0x14000d219;
                        } else {
                            goto lab_0x14000d20c;
                        }
                    }
                }
            }
        }
    }
  lab_0x14000d943:;
    int64_t v97 = (int64_t)"too large"; // 0x14000d94f
    int64_t v98 = __readgsqword(88); // 0x14000d94f
    goto lab_0x14000d956;
  lab_0x14000d956:
    // 0x14000d956
    *(int64_t *)(*(int64_t *)v98 + 16) = v97;
    // 0x14000d961
    __security_check_cookie(g66);
    return &g103;
  lab_0x14000d24b:
    // 0x14000d24b
    *(int32_t *)a2 = v91;
    *(int32_t *)a3 = v89;
    if (a4 != 0) {
        // 0x14000d268
        *(int32_t *)a4 = (int32_t)v15;
    }
    if (v91 < 0 || v89 < 0) {
        goto lab_0x14000d943;
    } else {
        if (v89 == 0) {
            goto lab_0x14000d298;
        } else {
            int32_t v99 = v91 - 0x7fffffff / v89; // 0x14000d28a
            if (v99 != 0 && v99 < 0 == ((v99 ^ -0x80000000) & v91) < 0) {
                goto lab_0x14000d943;
            } else {
                goto lab_0x14000d298;
            }
        }
    }
  lab_0x14000d219:
    // 0x14000d219
    v97 = (int64_t)"bad format";
    v98 = __readgsqword(88);
    goto lab_0x14000d956;
  lab_0x14000d20c:
    // 0x14000d20c
    v19 = 0;
    v15 = v90 / 8;
    if (v90 >= 8) {
        goto lab_0x14000d24b;
    } else {
        goto lab_0x14000d219;
    }
  lab_0x14000d298:;
    int64_t v100 = 0x100000000 * v80;
    int64_t v101 = v100 >> 32;
    int64_t v102 = 0x100000000 * v79;
    int64_t v103 = v102 >> 32; // 0x14000d29b
    int64_t v104 = v101 * v103; // 0x14000d29b
    uint32_t v105; // 0x14000cf40
    if ((int32_t)v104 < 0) {
        goto lab_0x14000d943;
    } else {
        // 0x14000d2ab
        v14 = (int32_t)v15;
        v105 = 0x7fffffff / v14;
        if ((v104 & 0xffffffff) > (int64_t)v105) {
            goto lab_0x14000d943;
        } else {
            if (v89 == 0) {
                goto lab_0x14000d2d6;
            } else {
                if ((v79 & 0xffffffff) > (int64_t)(0x7fffffff / v89)) {
                    goto lab_0x14000d92e;
                } else {
                    goto lab_0x14000d2d6;
                }
            }
        }
    }
  lab_0x14000d2d6:
    // 0x14000d2d6
    v17 = 0x100000000 * v15;
    int64_t v106 = v17 >> 32; // 0x14000d2d9
    int64_t * mem = malloc((int32_t)((v106 * v100 >> 32) * v103)); // 0x14000d2e4
    if (mem == NULL) {
        goto lab_0x14000d92e;
    } else {
        if (v11 == 0) {
            goto lab_0x14000d343;
        } else {
            // 0x14000d301
            if (*(int64_t *)(a1 + 16) == 0) {
                // 0x14000d334
                *v2 = *v2 + (int64_t)v13;
                goto lab_0x14000d343;
            } else {
                // 0x14000d30b
                if (v13 > *(int32_t *)v4 - *(int32_t *)v1) {
                    // 0x14000d31b
                    *v2 = *v5;
                    goto lab_0x14000d343;
                } else {
                    // 0x14000d334
                    *v2 = *v2 + (int64_t)v13;
                    goto lab_0x14000d343;
                }
            }
        }
    }
  lab_0x14000d92e:
    // 0x14000d92e
    v97 = (int64_t)"outofmem";
    v98 = __readgsqword(88);
    goto lab_0x14000d956;
  lab_0x14000d343:
    // 0x14000d343
    v22 = v21;
    int64_t v107 = v80 & 0xffffffff; // 0x14000d16b
    char v108 = v85 / 32 & 1 ^ 1;
    int64_t v109 = 0x100000000 * v104;
    int64_t v110 = v109 >> 32; // 0x14000d29f
    v57 = v15 & 0xffffffff;
    int64_t v111 = (int64_t)mem; // 0x14000d2e4
    int64_t v112; // 0x14000cf40
    if (v12 != 0) {
        // 0x14000d3fe
        v112 = v111;
        if (v22 != 0) {
            int64_t v113 = 0x100000000 * v75 >> 32; // 0x14000d05f
            int32_t v114 = v113; // 0x14000d425
            if (v114 == 0) {
                goto lab_0x14000d477;
            } else {
                if (v114 >= 0) {
                    // 0x14000d43c
                    if (*(int64_t *)(a1 + 16) == 0) {
                        // 0x14000d470
                        *v2 = *v2 + v113;
                        goto lab_0x14000d477;
                    } else {
                        // 0x14000d442
                        if (v113 > (int64_t)(*(int32_t *)v4 - *(int32_t *)v1)) {
                            // 0x14000d453
                            *v2 = *v5;
                            goto lab_0x14000d477;
                        } else {
                            // 0x14000d470
                            *v2 = *v2 + v113;
                            goto lab_0x14000d477;
                        }
                    }
                } else {
                    // 0x14000d42c
                    *v2 = *v5;
                    goto lab_0x14000d477;
                }
            }
        } else {
            goto lab_0x14000d407;
        }
    } else {
        // 0x14000d34d
        v18 = 0;
        if (v9 < 8 == v19 == 0) {
            if (v89 >= 1) {
                int64_t v115 = v106 * v103; // 0x14000d396
                int64_t v116 = v115 & 0xffffffff; // 0x14000d396
                int64_t v117 = 0x100000000 * v115;
                if (v108 == 0) {
                    int64_t v118 = v111; // 0x14000d3df
                    int64_t v119 = v107; // 0x14000d3df
                    function_140001df0(a1, v118, v116);
                    v119--;
                    v118 += (v117 >> 32);
                    while (v119 != 0) {
                        // 0x14000d3e2
                        function_140001df0(a1, v118, v116);
                        v119--;
                        v118 += (v117 >> 32);
                    }
                } else {
                    int64_t v120 = (v106 * (v100 - 0x100000000) >> 32) * v102 / 0x100000000 + v111; // 0x14000d3ba
                    int64_t v121 = v107; // 0x14000d3ba
                    function_140001df0(a1, v120, v116);
                    v121--;
                    v120 += (-v117 >> 32);
                    while (v121 != 0) {
                        // 0x14000d3c0
                        function_140001df0(a1, v120, v116);
                        v121--;
                        v120 += (-v117 >> 32);
                    }
                }
            }
            goto lab_0x14000d8b2;
        } else {
            goto lab_0x14000d56e;
        }
    }
  lab_0x14000d407:
    // 0x14000d407
    free((int64_t *)v112);
    v97 = (int64_t)"bad palette";
    v98 = __readgsqword(88);
    goto lab_0x14000d956;
  lab_0x14000d56e:
    // 0x14000d56e
    if ((int32_t)v110 >= 1) {
        // 0x14000d57d
        v48 = &v20;
        v23 = (int32_t *)(a1 + 48);
        v52 = v109;
        v53 = 1;
        v54 = v110 & 0xffffffff;
        v55 = 0;
        v56 = 0;
        v58 = v111 - v48;
        while (true) {
          lab_0x14000d5a1:
            // 0x14000d5a1
            v47 = v58;
            int64_t v59 = v56;
            int64_t v60 = v55;
            v40 = v52;
            v42 = v60;
            v44 = v59;
            if (v9 < 8) {
                goto lab_0x14000d63f;
            } else {
                if (v60 != 0) {
                    // 0x14000d631
                    v42 = v60;
                    v44 = v59;
                    v39 = v53;
                    v41 = v54;
                    v43 = v60;
                    v45 = v59;
                    if ((int32_t)v53 == 0 == ((int32_t)v59 != 0)) {
                        goto lab_0x14000d7de;
                    } else {
                        goto lab_0x14000d63f;
                    }
                } else {
                    uint64_t v61 = *v2; // 0x14000d5b3
                    char v62; // 0x14000cf40
                    if (v61 >= *v5) {
                        // 0x14000d5f7
                        v62 = 0;
                        if (*v23 != 0) {
                            // 0x14000d5fc
                            function_140001d70(a1);
                            int64_t v63 = *v2; // 0x14000d604
                            *v2 = v63 + 1;
                            v62 = *(char *)v63;
                        }
                    } else {
                        // 0x14000d5c3
                        *v2 = v61 + 1;
                        v62 = *(char *)v61;
                    }
                    uint64_t v64 = (int64_t)v62;
                    v42 = (v64 & 127) + 1;
                    v44 = v64 / 128;
                    goto lab_0x14000d63f;
                }
            }
        }
    }
  lab_0x14000d827:
    if (v89 >= 1 && v108 != 0) {
        int64_t v122 = v106 * v103; // 0x14000d84d
        int64_t v123 = v122 & 0xffffffff; // 0x14000d84d
        int64_t v124 = 0; // 0x14000d853
        int64_t v125 = (v106 * (v100 - 0x100000000) >> 32) * v103;
        int64_t v126 = 0;
        int64_t v127; // 0x14000cf40
        int64_t v128; // 0x14000cf40
        int64_t v129; // 0x14000d85f
        char * v130; // 0x14000d870
        int64_t v131; // 0x14000d875
        char * v132; // 0x14000d878
        int32_t v133; // 0x14000d885
        if ((int32_t)v122 >= 1) {
            // 0x14000d85f
            v129 = 0x100000000 * v126 >> 32;
            v128 = v129 + v111;
            v130 = (char *)((0x100000000 * v125 >> 32) - v129 + v128);
            v131 = v123 + 0xffffffff;
            v132 = (char *)v128;
            *v132 = *v130;
            *v130 = *v132;
            v133 = v131;
            v128++;
            v127 = v131 & 0xffffffff;
            while (v133 >= 0 == (v133 != 0)) {
                // 0x14000d870
                v130 = (char *)((0x100000000 * v125 >> 32) - v129 + v128);
                v131 = v127 + 0xffffffff;
                v132 = (char *)v128;
                *v132 = *v130;
                *v130 = *v132;
                v133 = v131;
                v128++;
                v127 = v131 & 0xffffffff;
            }
        }
        // 0x14000d88a
        v124 = v124 + 2 & 0xffffffff;
        int64_t v134 = v126 + v122 & 0xffffffff; // 0x14000d896
        int64_t v135 = (v125 & 0xffffffff) - v123; // 0x14000d896
        while (v124 < v107) {
            // 0x14000d857
            v125 = v135;
            v126 = v134;
            if ((int32_t)v122 >= 1) {
                // 0x14000d85f
                v129 = 0x100000000 * v126 >> 32;
                v128 = v129 + v111;
                v130 = (char *)((0x100000000 * v125 >> 32) - v129 + v128);
                v131 = v123 + 0xffffffff;
                v132 = (char *)v128;
                *v132 = *v130;
                *v130 = *v132;
                v133 = v131;
                v128++;
                v127 = v131 & 0xffffffff;
                while (v133 >= 0 == (v133 != 0)) {
                    // 0x14000d870
                    v130 = (char *)((0x100000000 * v125 >> 32) - v129 + v128);
                    v131 = v127 + 0xffffffff;
                    v132 = (char *)v128;
                    *v132 = *v130;
                    *v130 = *v132;
                    v133 = v131;
                    v128++;
                    v127 = v131 & 0xffffffff;
                }
            }
            // 0x14000d88a
            v124 = v124 + 2 & 0xffffffff;
            v134 = v126 + v122 & 0xffffffff;
            v135 = (v125 & 0xffffffff) - v123;
        }
    }
    if (v18 != 0) {
        // 0x14000d8a5
        free((int64_t *)v18);
    }
    goto lab_0x14000d8b2;
  lab_0x14000d477:
    if (v22 < 0) {
        // 0x14000d923
        free(mem);
        goto lab_0x14000d92e;
    } else {
        int32_t v142 = v22 - v105; // 0x14000d483
        if (v142 != 0 && v142 < 0 == ((v142 ^ -0x80000000) & v22) < 0) {
            // 0x14000d923
            free(mem);
            goto lab_0x14000d92e;
        } else {
            int64_t size = v106 * (0x100000000 * v21 >> 32); // 0x14000d495
            int64_t * mem2 = malloc((int32_t)size); // 0x14000d49b
            if (mem2 == NULL) {
                // 0x14000d923
                free(mem);
                goto lab_0x14000d92e;
            } else {
                int64_t v143 = (int64_t)mem2; // 0x14000d49b
                if (v19 == 0) {
                    int64_t v144 = function_140001df0(a1, v143, size & 0xffffffff); // 0x14000d5db
                    v18 = v143;
                    if ((int32_t)v144 != 0) {
                        goto lab_0x14000d56e;
                    } else {
                        // 0x14000d5e4
                        free(mem);
                        v112 = v143;
                        goto lab_0x14000d407;
                    }
                } else {
                    // 0x14000d4c9
                    v18 = v143;
                    if (v22 >= 1) {
                        int64_t v145 = v143; // 0x14000d4e3
                        int64_t v146 = v21 & 0xffffffff; // 0x14000d4e3
                        uint64_t v147 = function_140001f80(a1); // 0x14000d4eb
                        int64_t v148 = v147 / 1024 & 31;
                        uint32_t v149 = 255 * (int32_t)v148 + (int32_t)(-0x7b6318c543 * v148 / 0x100000000) >> 4; // 0x14000d50c
                        *(char *)v145 = (char)(v149 / 0x80000000 + v149);
                        int64_t v150 = v147 / 32 & 31;
                        int64_t v151 = v147 & 31;
                        uint32_t v152 = 255 * (int32_t)v150 + (int32_t)(-0x7b6318c543 * v150 / 0x100000000) >> 4; // 0x14000d53b
                        *(char *)(v145 + 1) = (char)(v152 / 0x80000000 + v152);
                        uint32_t v153 = 255 * (int32_t)v151 + (int32_t)(-0x7b6318c543 * v151 / 0x100000000) >> 4; // 0x14000d551
                        *(char *)(v145 + 2) = (char)(v153 / 0x80000000 + v153);
                        v146--;
                        v145 += v57;
                        v18 = v143;
                        while (v146 != 0) {
                            // 0x14000d4e8
                            v147 = function_140001f80(a1);
                            v148 = v147 / 1024 & 31;
                            v149 = 255 * (int32_t)v148 + (int32_t)(-0x7b6318c543 * v148 / 0x100000000) >> 4;
                            *(char *)v145 = (char)(v149 / 0x80000000 + v149);
                            v150 = v147 / 32 & 31;
                            v151 = v147 & 31;
                            v152 = 255 * (int32_t)v150 + (int32_t)(-0x7b6318c543 * v150 / 0x100000000) >> 4;
                            *(char *)(v145 + 1) = (char)(v152 / 0x80000000 + v152);
                            v153 = 255 * (int32_t)v151 + (int32_t)(-0x7b6318c543 * v151 / 0x100000000) >> 4;
                            *(char *)(v145 + 2) = (char)(v153 / 0x80000000 + v153);
                            v146--;
                            v145 += v57;
                            v18 = v143;
                        }
                    }
                    goto lab_0x14000d56e;
                }
            }
        }
    }
  lab_0x14000d8b2:
    if (v14 >= 3) {
        if ((int32_t)v110 >= 1 && v19 == 0) {
            int64_t v136 = v111; // 0x14000d8d6
            int64_t v137 = v110 & 0xffffffff; // 0x14000d8d6
            char * v138 = (char *)v136; // 0x14000d8e0
            char * v139 = (char *)(v136 + 2); // 0x14000d8e4
            *v138 = *v139;
            *v139 = *v138;
            v137--;
            v136 += v57;
            while (v137 != 0) {
                // 0x14000d8e0
                v138 = (char *)v136;
                v139 = (char *)(v136 + 2);
                *v138 = *v139;
                *v139 = *v138;
                v137--;
                v136 += v57;
            }
        }
    }
    int64_t v140 = 0x100000000 * a5 >> 32; // 0x14000cf6d
    int32_t v141 = v140; // 0x14000d902
    if (v141 != 0 && v141 != v14) {
        // 0x14000d90b
        function_140002040(v111, v14, v140 & 0xffffffff, v91, v101);
    }
    // 0x14000d961
    __security_check_cookie(g66);
    return &g103;
}

// Address range: 0x14000d9a0 - 0x14000db42
int64_t function_14000d9a0(int64_t a1, int64_t a2, int64_t a3) {
    // 0x14000d9a0
    if ((int32_t)a3 < 1) {
        // 0x14000db1f
        return 1;
    }
    int64_t v1 = a3 & 0xffffffff; // 0x14000d9c1
    int64_t * v2 = (int64_t *)(a1 + 192); // 0x14000d9e0
    int64_t * v3 = (int64_t *)(a1 + 200); // 0x14000d9e7
    int32_t * v4 = (int32_t *)(a1 + 48);
    int64_t v5 = a2; // 0x14000d9a0
    int64_t v6 = v1; // 0x14000d9a0
    int64_t v7 = 0;
    uint64_t v8; // 0x14000d9a0
    int64_t v9; // 0x14000d9a0
    int64_t v10; // 0x14000d9a0
    int64_t v11; // 0x14000d9a0
    int64_t v12; // 0x14000d9a0
    int64_t v13; // 0x14000d9a0
    while (true) {
      lab_0x14000d9e0:
        // 0x14000d9e0
        v9 = v7;
        v8 = v6;
        v12 = v5;
        int64_t v14 = *v2; // 0x14000d9e0
        v13 = v14;
        if (v14 >= *v3) {
            // 0x14000d9ff
            v10 = v14;
            v11 = 0;
            if (*v4 == 0) {
                goto lab_0x14000da36;
            } else {
                // 0x14000da05
                function_140001d70(a1);
                v13 = *v2;
                goto lab_0x14000da25;
            }
        } else {
            goto lab_0x14000da25;
        }
    }
  lab_0x14000db1f_3:;
    // 0x14000db1f
    int64_t result; // 0x14000d9a0
    return result;
  lab_0x14000da25:;
    int64_t v15 = v13;
    int64_t v16 = v15 + 1;
    unsigned char v17 = *(char *)v15;
    *v2 = v16;
    v5 = v12;
    int64_t v18 = v9; // 0x14000da2e
    if (v17 == -128) {
        goto lab_0x14000db0b;
    } else {
        int64_t v19 = v17;
        v10 = v16;
        v11 = v19;
        if (v17 <= -1) {
            // 0x14000daa2
            v5 = v12;
            v18 = v9;
            if (v17 >= 129) {
                int64_t v20 = 257 - v19; // 0x14000daa9
                result = 0;
                if (v20 > v8) {
                    // break -> 0x14000db1f
                    goto lab_0x14000db1f_3;
                }
                // 0x14000dab4
                char v21; // 0x14000d9a0
                if (v16 >= *v3) {
                    // 0x14000dacc
                    v21 = 0;
                    if (*v4 != 0) {
                        // 0x14000dad2
                        function_140001d70(a1);
                        int64_t v22 = *v2; // 0x14000dada
                        *v2 = v22 + 1;
                        v21 = *(char *)v22;
                    }
                } else {
                    // 0x14000dabd
                    *v2 = v15 + 2;
                    v21 = *(char *)v16;
                }
                // 0x14000daf2
                *(char *)v12 = v21;
                int64_t v23 = v12 + 4; // 0x14000db02
                uint32_t v24 = (int32_t)v20 - 1; // 0x14000db06
                int64_t v25 = v24; // 0x14000db09
                int64_t v26 = v23; // 0x14000db09
                while (v24 != 0) {
                    // 0x14000db00
                    *(char *)v26 = v21;
                    v23 = v26 + 4;
                    v24 = (int32_t)v25 - 1;
                    v25 = v24;
                    v26 = v23;
                }
                // 0x14000db0b
                v5 = v23;
                v18 = v20 + v9 & 0xffffffff;
            }
            goto lab_0x14000db0b;
        } else {
            goto lab_0x14000da36;
        }
    }
  lab_0x14000da36:;
    int64_t v27 = v11 + 1; // 0x14000da36
    result = 0;
    if ((int32_t)v27 > (int32_t)v8) {
        // break -> 0x14000db1f
        goto lab_0x14000db1f_3;
    }
    uint64_t v28 = v10; // 0x14000da50
    char v29; // 0x14000d9a0
    int64_t v30; // 0x14000da7d
    if (v28 >= *v3) {
        // 0x14000da6f
        v29 = 0;
        if (*v4 != 0) {
            // 0x14000da75
            function_140001d70(a1);
            v30 = *v2;
            *v2 = v30 + 1;
            v29 = *(char *)v30;
        }
    } else {
        // 0x14000da60
        *v2 = v28 + 1;
        v29 = *(char *)v28;
    }
    // 0x14000da95
    *(char *)v12 = v29;
    int64_t v31 = v12 + 4; // 0x14000da97
    uint32_t v32 = (int32_t)v27 - 1; // 0x14000da9b
    while (v32 != 0) {
        // 0x14000da95
        v28 = *v2;
        if (v28 >= *v3) {
            // 0x14000da6f
            v29 = 0;
            if (*v4 != 0) {
                // 0x14000da75
                function_140001d70(a1);
                v30 = *v2;
                *v2 = v30 + 1;
                v29 = *(char *)v30;
            }
        } else {
            // 0x14000da60
            *v2 = v28 + 1;
            v29 = *(char *)v28;
        }
        // 0x14000da95
        *(char *)v31 = v29;
        v31 += 4;
        v32 = (int32_t)(int64_t)v32 - 1;
    }
    // 0x14000db0b
    v5 = v31;
    v18 = v27 + v9 & 0xffffffff;
    goto lab_0x14000db0b;
  lab_0x14000db0b:
    // 0x14000db0b
    v7 = v18;
    int64_t v33 = v1 - v7; // 0x14000db0e
    int32_t v34 = v33; // 0x14000db11
    v6 = v33 & 0xffffffff;
    result = 1;
    if (v34 >= 0 != v34 != 0) {
        // break -> 0x14000db1f
        goto lab_0x14000db1f_3;
    }
    goto lab_0x14000d9e0;
}

// Address range: 0x14000db50 - 0x14000e7d4
int64_t function_14000db50(int64_t a1, int64_t a2, int64_t a3, int64_t a4, int64_t a5, int64_t a6) {
    int64_t v1 = function_140001ec0(a1); // 0x14000db68
    if (0x10000 * (int32_t)v1 + (int32_t)function_140001ec0(a1) != 0x38425053) {
        // 0x14000db83
        *(int64_t *)(*(int64_t *)__readgsqword(88) + 16) = (int64_t)"not PSD";
        return (int32_t)"not PSD" ^ (int32_t)"not PSD";
    }
    // 0x14000dba8
    if ((int32_t)function_140001ec0(a1) != 1) {
        // 0x14000dbb5
        *(int64_t *)(*(int64_t *)__readgsqword(88) + 16) = (int64_t)"wrong version";
        return (int32_t)"wrong version" ^ (int32_t)"wrong version";
    }
    int64_t * v2 = (int64_t *)(a1 + 16); // 0x14000dbda
    int64_t v3 = a1 + 192; // 0x14000dbe4
    if (*v2 == 0) {
        goto lab_0x14000dc19;
    } else {
        int64_t v4 = a1 + 200; // 0x14000dbf2
        if (*(int32_t *)v4 - *(int32_t *)v3 > 5) {
            goto lab_0x14000dc19;
        } else {
            // 0x14000dbff
            *(int64_t *)v3 = *(int64_t *)v4;
            goto lab_0x14000dc1d;
        }
    }
  lab_0x14000dc19:;
    int64_t * v5 = (int64_t *)v3; // 0x14000dc19
    *v5 = *v5 + 6;
    goto lab_0x14000dc1d;
  lab_0x14000dc1d:;
    int64_t v6 = function_140001ec0(a1); // 0x14000dc20
    uint32_t v7 = (int32_t)v6;
    if (v7 >= 17) {
        int64_t v8 = *(int64_t *)__readgsqword(88); // 0x14000e7bd
        *(int64_t *)(v8 + 16) = (int64_t)"wrong channel count";
        return (int32_t)"wrong channel count" ^ (int32_t)"wrong channel count";
    }
    int64_t v9 = function_140001ec0(a1); // 0x14000dc45
    int64_t v10 = 0x10000 * v9 + function_140001ec0(a1); // 0x14000dc5c
    int32_t v11 = v10;
    int64_t v12 = function_140001ec0(a1); // 0x14000dc64
    int64_t v13 = 0x10000 * v12 + function_140001ec0(a1); // 0x14000dc78
    int32_t v14 = v13;
    if (v11 < 0x1000001 != v14 < 0x1000001) {
        // 0x14000dc92
        *(int64_t *)(*(int64_t *)__readgsqword(88) + 16) = (int64_t)"too large";
        // 0x14000df11
        return (int32_t)"too large" ^ (int32_t)"too large";
    }
    int64_t v15 = function_140001ec0(a1); // 0x14000dcc0
    int64_t result; // 0x14000db50
    if (((int32_t)v15 - 8 & -9) != 0) {
        int64_t v16 = *(int64_t *)__readgsqword(88); // 0x14000dce1
        *(int64_t *)(v16 + 16) = (int64_t)"unsupported bit depth";
        result = (int32_t)"unsupported bit depth" ^ (int32_t)"unsupported bit depth";
        // 0x14000df11
        return result;
    }
    // 0x14000dcf6
    if ((int32_t)function_140001ec0(a1) != 3) {
        int64_t v17 = *(int64_t *)__readgsqword(88); // 0x14000dd11
        *(int64_t *)(v17 + 16) = (int64_t)"wrong color format";
        result = (int32_t)"wrong color format" ^ (int32_t)"wrong color format";
        // 0x14000df11
        return result;
    }
    int64_t v18 = function_140001ec0(a1); // 0x14000dd29
    int32_t v19 = 0x10000 * (int32_t)v18 + (int32_t)function_140001ec0(a1); // 0x14000dd3d
    if (v19 == 0) {
        goto lab_0x14000dd81;
    } else {
        if (v19 >= 0) {
            // 0x14000dd51
            if (*v2 == 0) {
                goto lab_0x14000dd7b;
            } else {
                int64_t v20 = a1 + 200; // 0x14000dd58
                if (v19 > *(int32_t *)v20 - *(int32_t *)v3) {
                    // 0x14000dd64
                    *(int64_t *)v3 = *(int64_t *)v20;
                    goto lab_0x14000dd81;
                } else {
                    goto lab_0x14000dd7b;
                }
            }
        } else {
            // 0x14000dd45
            *(int64_t *)v3 = *(int64_t *)(a1 + 200);
            goto lab_0x14000dd81;
        }
    }
  lab_0x14000dd81:;
    int64_t v21 = function_140001ec0(a1); // 0x14000dd84
    int32_t v22 = 0x10000 * (int32_t)v21 + (int32_t)function_140001ec0(a1); // 0x14000dd98
    if (v22 == 0) {
        goto lab_0x14000dddc;
    } else {
        if (v22 >= 0) {
            // 0x14000ddac
            if (*v2 == 0) {
                goto lab_0x14000ddd6;
            } else {
                int64_t v23 = a1 + 200; // 0x14000ddb3
                if (v22 > *(int32_t *)v23 - *(int32_t *)v3) {
                    // 0x14000ddbf
                    *(int64_t *)v3 = *(int64_t *)v23;
                    goto lab_0x14000dddc;
                } else {
                    goto lab_0x14000ddd6;
                }
            }
        } else {
            // 0x14000dda0
            *(int64_t *)v3 = *(int64_t *)(a1 + 200);
            goto lab_0x14000dddc;
        }
    }
  lab_0x14000dddc:;
    int64_t v24 = function_140001ec0(a1); // 0x14000dddf
    int32_t v25 = 0x10000 * (int32_t)v24 + (int32_t)function_140001ec0(a1); // 0x14000ddf3
    if (v25 == 0) {
        goto lab_0x14000de37;
    } else {
        if (v25 >= 0) {
            // 0x14000de07
            if (*v2 == 0) {
                goto lab_0x14000de31;
            } else {
                int64_t v26 = a1 + 200; // 0x14000de0e
                if (v25 > *(int32_t *)v26 - *(int32_t *)v3) {
                    // 0x14000de1a
                    *(int64_t *)v3 = *(int64_t *)v26;
                    goto lab_0x14000de37;
                } else {
                    goto lab_0x14000de31;
                }
            }
        } else {
            // 0x14000ddfb
            *(int64_t *)v3 = *(int64_t *)(a1 + 200);
            goto lab_0x14000de37;
        }
    }
  lab_0x14000de37:;
    uint32_t v27 = (int32_t)function_140001ec0(a1); // 0x14000de44
    if (v27 >= 2) {
        int64_t v28 = *(int64_t *)__readgsqword(88); // 0x14000de54
        *(int64_t *)(v28 + 16) = (int64_t)"bad compression";
        // 0x14000df11
        return (int32_t)"bad compression" ^ (int32_t)"bad compression";
    }
    int64_t v29; // 0x14000dc78
    if (v14 < 0) {
        goto lab_0x14000e782;
    } else {
        // 0x14000de72
        v29 = v13 & 0xffffffff;
        if (v14 != 0) {
            if (0x7fffffff / v14 < 4) {
                goto lab_0x14000e782;
            } else {
                // 0x14000de90
                if ((int32_t)(4 * v29) < 0) {
                    goto lab_0x14000e782;
                } else {
                    goto lab_0x14000dea0;
                }
            }
        } else {
            // 0x14000de74
            goto lab_0x14000dea0;
        }
    }
  lab_0x14000dd7b:;
    int64_t * v30 = (int64_t *)v3; // 0x14000dd7e
    *v30 = *v30 + (int64_t)v19;
    goto lab_0x14000dd81;
  lab_0x14000e782:
    // 0x14000e782
    *(int64_t *)(*(int64_t *)__readgsqword(88) + 16) = (int64_t)"too large";
    // 0x14000df11
    return (int32_t)"too large" ^ (int32_t)"too large";
  lab_0x14000ddd6:;
    int64_t * v31 = (int64_t *)v3; // 0x14000ddd9
    *v31 = *v31 + (int64_t)v22;
    goto lab_0x14000dddc;
  lab_0x14000de31:;
    int64_t * v32 = (int64_t *)v3; // 0x14000de34
    *v32 = *v32 + (int64_t)v25;
    goto lab_0x14000de37;
  lab_0x14000dea0:
    if (v11 < 0) {
        goto lab_0x14000e782;
    } else {
        if (v11 == 0) {
            goto lab_0x14000debc;
        } else {
            // 0x14000deab
            if ((4 * v29 & 0xfffffffc) > (int64_t)(0x7fffffff / v11)) {
                goto lab_0x14000e782;
            } else {
                goto lab_0x14000debc;
            }
        }
    }
  lab_0x14000debc:;
    int64_t v33 = 0x100000000 * v10 >> 32; // 0x14000dec4
    int64_t v34 = (0x100000000 * v13 >> 32) * v33; // 0x14000dec4
    uint32_t v35 = (int32_t)v34;
    int64_t * mem = malloc(4 * v35); // 0x14000ded3
    int64_t v36; // 0x14000db50
    int64_t v37; // 0x14000db50
    uint64_t v38; // 0x14000dc2c
    int64_t v39; // 0x14000dec4
    int64_t v40; // 0x14000ded3
    int32_t v41; // 0x14000df3c
    if (mem != NULL) {
        // 0x14000df2c
        v38 = v6 & 0xffffffff;
        v39 = v34 & 0xffffffff;
        v40 = (int64_t)mem;
        if (v27 == 0) {
            int64_t * v42 = (int64_t *)v3;
            uint64_t v43 = 0;
            char v44; // 0x14000db50
            int64_t v45; // 0x14000db50
            int64_t v46; // 0x14000db50
            int64_t v47; // 0x14000db50
            int64_t v48; // 0x14000db50
            int64_t v49; // 0x14000db50
            int64_t v50; // 0x14000db50
            int64_t v51; // 0x14000db50
            int64_t v52; // 0x14000db50
            char v53; // 0x14000db50
            int64_t v54; // 0x14000e07f
            uint64_t v55; // 0x14000e0c1
            int64_t v56; // 0x14000e0b1
            int64_t v57; // 0x14000e0fc
            int64_t v58; // 0x14000e0e6
            int64_t v59; // 0x14000e046
            if (v43 < v38) {
                // 0x14000e051
                if (*(int32_t *)a6 != 16) {
                    if ((v15 & 0xffffffff) != 16) {
                        // 0x14000e0b9
                        v51 = v40;
                        if (v35 >= 1) {
                            v55 = *v42;
                            if (v55 >= *(int64_t *)(a1 + 200)) {
                                // 0x14000e0d8
                                v53 = 0;
                                if (*(int32_t *)(a1 + 48) != 0) {
                                    // 0x14000e0de
                                    function_140001d70(a1);
                                    v58 = *v42;
                                    *v42 = v58 + 1;
                                    v53 = *(char *)v58;
                                }
                            } else {
                                // 0x14000e0cd
                                *v42 = v55 + 1;
                                v53 = *(char *)v55;
                            }
                            // 0x14000e0f6
                            *(char *)v51 = v53;
                            v57 = v39 - 1;
                            v51 += 4;
                            v48 = v57;
                            while (v57 != 0) {
                                // 0x14000e0c1
                                v55 = *v42;
                                if (v55 >= *(int64_t *)(a1 + 200)) {
                                    // 0x14000e0d8
                                    v53 = 0;
                                    if (*(int32_t *)(a1 + 48) != 0) {
                                        // 0x14000e0de
                                        function_140001d70(a1);
                                        v58 = *v42;
                                        *v42 = v58 + 1;
                                        v53 = *(char *)v58;
                                    }
                                } else {
                                    // 0x14000e0cd
                                    *v42 = v55 + 1;
                                    v53 = *(char *)v55;
                                }
                                // 0x14000e0f6
                                *(char *)v51 = v53;
                                v57 = v48 - 1;
                                v51 += 4;
                                v48 = v57;
                            }
                        }
                    } else {
                        // 0x14000e090
                        v50 = v40;
                        if (v35 >= 1) {
                            *(char *)v50 = (char)((int32_t)function_140001ec0(a1) / 256);
                            v56 = v39 - 1;
                            v50 += 4;
                            v47 = v56;
                            while (v56 != 0) {
                                // 0x14000e0a0
                                *(char *)v50 = (char)((int32_t)function_140001ec0(a1) / 256);
                                v56 = v47 - 1;
                                v50 += 4;
                                v47 = v56;
                            }
                        }
                    }
                } else {
                    // 0x14000e05f
                    v49 = v40;
                    if (v35 >= 1) {
                        *(int16_t *)v49 = (int16_t)function_140001ec0(a1);
                        v54 = v39 - 1;
                        v49 += 8;
                        v46 = v54;
                        while (v54 != 0) {
                            // 0x14000e070
                            *(int16_t *)v49 = (int16_t)function_140001ec0(a1);
                            v54 = v46 - 1;
                            v49 += 8;
                            v46 = v54;
                        }
                    }
                }
            } else {
                // 0x14000e025
                v44 = v43 == 3;
                v45 = v40;
                if (v35 >= 1) {
                    *(char *)v45 = v44;
                    v59 = v39 - 1;
                    v45 += 4;
                    v52 = v59;
                    while (v59 != 0) {
                        // 0x14000e040
                        *(char *)v45 = v44;
                        v59 = v52 - 1;
                        v45 += 4;
                        v52 = v59;
                    }
                }
            }
            int64_t v60 = v43 + 1; // 0x14000e116
            int64_t v61 = v40 + 1; // 0x14000e124
            int64_t v62 = v40 + 2; // 0x14000e124
            while ((int32_t)v60 < 4) {
                // 0x14000e020
                v43 = v60 & 0xffffffff;
                int64_t v63 = v62;
                int64_t v64 = v61;
                if (v43 < v38) {
                    // 0x14000e051
                    if (*(int32_t *)a6 != 16) {
                        if ((v15 & 0xffffffff) != 16) {
                            // 0x14000e0b9
                            v51 = v64;
                            if (v35 >= 1) {
                                v55 = *v42;
                                if (v55 >= *(int64_t *)(a1 + 200)) {
                                    // 0x14000e0d8
                                    v53 = 0;
                                    if (*(int32_t *)(a1 + 48) != 0) {
                                        // 0x14000e0de
                                        function_140001d70(a1);
                                        v58 = *v42;
                                        *v42 = v58 + 1;
                                        v53 = *(char *)v58;
                                    }
                                } else {
                                    // 0x14000e0cd
                                    *v42 = v55 + 1;
                                    v53 = *(char *)v55;
                                }
                                // 0x14000e0f6
                                *(char *)v51 = v53;
                                v57 = v39 - 1;
                                v51 += 4;
                                v48 = v57;
                                while (v57 != 0) {
                                    // 0x14000e0c1
                                    v55 = *v42;
                                    if (v55 >= *(int64_t *)(a1 + 200)) {
                                        // 0x14000e0d8
                                        v53 = 0;
                                        if (*(int32_t *)(a1 + 48) != 0) {
                                            // 0x14000e0de
                                            function_140001d70(a1);
                                            v58 = *v42;
                                            *v42 = v58 + 1;
                                            v53 = *(char *)v58;
                                        }
                                    } else {
                                        // 0x14000e0cd
                                        *v42 = v55 + 1;
                                        v53 = *(char *)v55;
                                    }
                                    // 0x14000e0f6
                                    *(char *)v51 = v53;
                                    v57 = v48 - 1;
                                    v51 += 4;
                                    v48 = v57;
                                }
                            }
                        } else {
                            // 0x14000e090
                            v50 = v64;
                            if (v35 >= 1) {
                                *(char *)v50 = (char)((int32_t)function_140001ec0(a1) / 256);
                                v56 = v39 - 1;
                                v50 += 4;
                                v47 = v56;
                                while (v56 != 0) {
                                    // 0x14000e0a0
                                    *(char *)v50 = (char)((int32_t)function_140001ec0(a1) / 256);
                                    v56 = v47 - 1;
                                    v50 += 4;
                                    v47 = v56;
                                }
                            }
                        }
                    } else {
                        // 0x14000e05f
                        v49 = v63;
                        if (v35 >= 1) {
                            *(int16_t *)v49 = (int16_t)function_140001ec0(a1);
                            v54 = v39 - 1;
                            v49 += 8;
                            v46 = v54;
                            while (v54 != 0) {
                                // 0x14000e070
                                *(int16_t *)v49 = (int16_t)function_140001ec0(a1);
                                v54 = v46 - 1;
                                v49 += 8;
                                v46 = v54;
                            }
                        }
                    }
                } else {
                    // 0x14000e025
                    v44 = v43 == 3;
                    v45 = v64;
                    if (v35 >= 1) {
                        *(char *)v45 = v44;
                        v59 = v39 - 1;
                        v45 += 4;
                        v52 = v59;
                        while (v59 != 0) {
                            // 0x14000e040
                            *(char *)v45 = v44;
                            v59 = v52 - 1;
                            v45 += 4;
                            v52 = v59;
                        }
                    }
                }
                // 0x14000e116
                v60 = v43 + 1;
                v61 = v64 + 1;
                v62 = v63 + 2;
            }
          lab_0x14000e13e:
            if (v7 >= 4) {
                uint64_t v65 = 0x100000000 * v34;
                int64_t v66 = v65 / 0x100000000; // 0x14000e154
                if (*(int32_t *)a6 != 16) {
                    int128_t v67 = __asm_movss(0x3f800000); // 0x14000e44a
                    int128_t v68 = __asm_movss(0x437f0000); // 0x14000e452
                    int64_t v69 = 0; // 0x14000e45e
                    int128_t v70; // 0x14000db50
                    if (v65 >= 0x400000000) {
                        int64_t v71 = (v66 - 4) / 4 + 1; // 0x14000e470
                        int64_t v72 = v71; // 0x14000e47b
                        int64_t v73 = v40 + 5;
                        int128_t v74; // 0x14000db50
                        int128_t v75 = v74;
                        unsigned char v76 = *(char *)(v73 - 2); // 0x14000e480
                        int128_t v77 = v75; // 0x14000e48b
                        char * v78; // 0x14000e48d
                        int128_t v79; // 0x14000e494
                        int128_t v80; // 0x14000e499
                        int128_t v81; // 0x14000e49c
                        int128_t v82; // 0x14000e49f
                        int128_t v83; // 0x14000e4a3
                        int128_t v84; // 0x14000e4aa
                        int128_t v85; // 0x14000e4ae
                        int128_t v86; // 0x14000e4b2
                        int128_t v87; // 0x14000e4b6
                        int128_t v88; // 0x14000e4ba
                        int32_t v89; // 0x14000e4be
                        char * v90; // 0x14000e4c8
                        int128_t v91; // 0x14000e4d4
                        int32_t v92; // 0x14000e4d8
                        char * v93; // 0x14000e4e2
                        if (v76 < 255) {
                            // 0x14000e48d
                            v78 = (char *)(v73 - 5);
                            __asm_xorps(v75, v75);
                            v79 = __asm_cvtsi2ss((int32_t)v76);
                            v80 = __asm_movaps_2(v67);
                            v81 = __asm_movaps_2(v67);
                            v82 = __asm_divss(v79, v68);
                            v83 = __asm_divss(v80, v82);
                            __asm_xorps(v82, v82);
                            v84 = __asm_cvtsi2ss((int32_t)*v78);
                            v85 = __asm_subss(v81, v83);
                            v86 = __asm_mulss(v84, v83);
                            v87 = __asm_mulss(v85, v68);
                            v88 = __asm_addss(v86, v87);
                            v89 = __asm_cvttss2si_6(v88);
                            __asm_xorps(v88, v88);
                            *v78 = (char)v89;
                            v90 = (char *)(v73 - 4);
                            v91 = __asm_addss(__asm_mulss(__asm_cvtsi2ss((int32_t)*v90), v83), v87);
                            v92 = __asm_cvttss2si_6(v91);
                            __asm_xorps(v91, v91);
                            *v90 = (char)v92;
                            v93 = (char *)(v73 - 3);
                            v77 = __asm_addss(__asm_mulss(__asm_cvtsi2ss((int32_t)*v93), v83), v87);
                            *v93 = (char)__asm_cvttss2si_6(v77);
                        }
                        int128_t v94 = v77;
                        unsigned char v95 = *(char *)(v73 + 2); // 0x14000e4f9
                        int128_t v96 = v94; // 0x14000e504
                        char * v97; // 0x14000e506
                        int128_t v98; // 0x14000e50d
                        int128_t v99; // 0x14000e512
                        int128_t v100; // 0x14000e515
                        int128_t v101; // 0x14000e518
                        int128_t v102; // 0x14000e51c
                        int128_t v103; // 0x14000e523
                        int128_t v104; // 0x14000e527
                        int128_t v105; // 0x14000e52b
                        int128_t v106; // 0x14000e52f
                        int128_t v107; // 0x14000e533
                        int32_t v108; // 0x14000e537
                        char * v109; // 0x14000e541
                        int128_t v110; // 0x14000e54c
                        int32_t v111; // 0x14000e550
                        char * v112; // 0x14000e559
                        if (v95 < 255) {
                            // 0x14000e506
                            v97 = (char *)(v73 - 1);
                            __asm_xorps(v94, v94);
                            v98 = __asm_cvtsi2ss((int32_t)v95);
                            v99 = __asm_movaps_2(v67);
                            v100 = __asm_movaps_2(v67);
                            v101 = __asm_divss(v98, v68);
                            v102 = __asm_divss(v99, v101);
                            __asm_xorps(v101, v101);
                            v103 = __asm_cvtsi2ss((int32_t)*v97);
                            v104 = __asm_subss(v100, v102);
                            v105 = __asm_mulss(v103, v102);
                            v106 = __asm_mulss(v104, v68);
                            v107 = __asm_addss(v105, v106);
                            v108 = __asm_cvttss2si_6(v107);
                            __asm_xorps(v107, v107);
                            *v97 = (char)v108;
                            v109 = (char *)v73;
                            v110 = __asm_addss(__asm_mulss(__asm_cvtsi2ss((int32_t)*v109), v102), v106);
                            v111 = __asm_cvttss2si_6(v110);
                            __asm_xorps(v110, v110);
                            *v109 = (char)v111;
                            v112 = (char *)(v73 + 1);
                            v96 = __asm_addss(__asm_mulss(__asm_cvtsi2ss((int32_t)*v112), v102), v106);
                            *v112 = (char)__asm_cvttss2si_6(v96);
                        }
                        int128_t v113 = v96;
                        unsigned char v114 = *(char *)(v73 + 6); // 0x14000e570
                        int128_t v115 = v113; // 0x14000e57b
                        char * v116; // 0x14000e57d
                        int128_t v117; // 0x14000e584
                        int128_t v118; // 0x14000e589
                        int128_t v119; // 0x14000e58c
                        int128_t v120; // 0x14000e58f
                        int128_t v121; // 0x14000e593
                        int128_t v122; // 0x14000e59a
                        int128_t v123; // 0x14000e59e
                        int128_t v124; // 0x14000e5a2
                        int128_t v125; // 0x14000e5a6
                        int128_t v126; // 0x14000e5aa
                        int32_t v127; // 0x14000e5ae
                        char * v128; // 0x14000e5b8
                        int128_t v129; // 0x14000e5c4
                        int32_t v130; // 0x14000e5c8
                        char * v131; // 0x14000e5d2
                        if (v114 < 255) {
                            // 0x14000e57d
                            v116 = (char *)(v73 + 3);
                            __asm_xorps(v113, v113);
                            v117 = __asm_cvtsi2ss((int32_t)v114);
                            v118 = __asm_movaps_2(v67);
                            v119 = __asm_movaps_2(v67);
                            v120 = __asm_divss(v117, v68);
                            v121 = __asm_divss(v118, v120);
                            __asm_xorps(v120, v120);
                            v122 = __asm_cvtsi2ss((int32_t)*v116);
                            v123 = __asm_subss(v119, v121);
                            v124 = __asm_mulss(v122, v121);
                            v125 = __asm_mulss(v123, v68);
                            v126 = __asm_addss(v124, v125);
                            v127 = __asm_cvttss2si_6(v126);
                            __asm_xorps(v126, v126);
                            *v116 = (char)v127;
                            v128 = (char *)(v73 + 4);
                            v129 = __asm_addss(__asm_mulss(__asm_cvtsi2ss((int32_t)*v128), v121), v125);
                            v130 = __asm_cvttss2si_6(v129);
                            __asm_xorps(v129, v129);
                            *v128 = (char)v130;
                            v131 = (char *)(v73 + 5);
                            v115 = __asm_addss(__asm_mulss(__asm_cvtsi2ss((int32_t)*v131), v121), v125);
                            *v131 = (char)__asm_cvttss2si_6(v115);
                        }
                        int128_t v132 = v115;
                        unsigned char v133 = *(char *)(v73 + 10); // 0x14000e5e9
                        int128_t v134 = v132; // 0x14000e5f4
                        char * v135; // 0x14000e5f6
                        int128_t v136; // 0x14000e5fd
                        int128_t v137; // 0x14000e602
                        int128_t v138; // 0x14000e605
                        int128_t v139; // 0x14000e608
                        int128_t v140; // 0x14000e60c
                        int128_t v141; // 0x14000e613
                        int128_t v142; // 0x14000e617
                        int128_t v143; // 0x14000e61b
                        int128_t v144; // 0x14000e61f
                        int128_t v145; // 0x14000e623
                        int32_t v146; // 0x14000e627
                        char * v147; // 0x14000e631
                        int128_t v148; // 0x14000e63d
                        int32_t v149; // 0x14000e641
                        char * v150; // 0x14000e64b
                        if (v133 < 255) {
                            // 0x14000e5f6
                            v135 = (char *)(v73 + 7);
                            __asm_xorps(v132, v132);
                            v136 = __asm_cvtsi2ss((int32_t)v133);
                            v137 = __asm_movaps_2(v67);
                            v138 = __asm_movaps_2(v67);
                            v139 = __asm_divss(v136, v68);
                            v140 = __asm_divss(v137, v139);
                            __asm_xorps(v139, v139);
                            v141 = __asm_cvtsi2ss((int32_t)*v135);
                            v142 = __asm_subss(v138, v140);
                            v143 = __asm_mulss(v141, v140);
                            v144 = __asm_mulss(v142, v68);
                            v145 = __asm_addss(v143, v144);
                            v146 = __asm_cvttss2si_6(v145);
                            __asm_xorps(v145, v145);
                            *v135 = (char)v146;
                            v147 = (char *)(v73 + 8);
                            v148 = __asm_addss(__asm_mulss(__asm_cvtsi2ss((int32_t)*v147), v140), v144);
                            v149 = __asm_cvttss2si_6(v148);
                            __asm_xorps(v148, v148);
                            *v147 = (char)v149;
                            v150 = (char *)(v73 + 9);
                            v134 = __asm_addss(__asm_mulss(__asm_cvtsi2ss((int32_t)*v150), v140), v144);
                            *v150 = (char)__asm_cvttss2si_6(v134);
                        }
                        int128_t v151 = v134;
                        v72--;
                        int64_t v152 = v73 + 16; // 0x14000e66a
                        while (v72 != 0) {
                            // 0x14000e480
                            v73 = v152;
                            v75 = v151;
                            v76 = *(char *)(v73 - 2);
                            v77 = v75;
                            if (v76 < 255) {
                                // 0x14000e48d
                                v78 = (char *)(v73 - 5);
                                __asm_xorps(v75, v75);
                                v79 = __asm_cvtsi2ss((int32_t)v76);
                                v80 = __asm_movaps_2(v67);
                                v81 = __asm_movaps_2(v67);
                                v82 = __asm_divss(v79, v68);
                                v83 = __asm_divss(v80, v82);
                                __asm_xorps(v82, v82);
                                v84 = __asm_cvtsi2ss((int32_t)*v78);
                                v85 = __asm_subss(v81, v83);
                                v86 = __asm_mulss(v84, v83);
                                v87 = __asm_mulss(v85, v68);
                                v88 = __asm_addss(v86, v87);
                                v89 = __asm_cvttss2si_6(v88);
                                __asm_xorps(v88, v88);
                                *v78 = (char)v89;
                                v90 = (char *)(v73 - 4);
                                v91 = __asm_addss(__asm_mulss(__asm_cvtsi2ss((int32_t)*v90), v83), v87);
                                v92 = __asm_cvttss2si_6(v91);
                                __asm_xorps(v91, v91);
                                *v90 = (char)v92;
                                v93 = (char *)(v73 - 3);
                                v77 = __asm_addss(__asm_mulss(__asm_cvtsi2ss((int32_t)*v93), v83), v87);
                                *v93 = (char)__asm_cvttss2si_6(v77);
                            }
                            // 0x14000e4f9
                            v94 = v77;
                            v95 = *(char *)(v73 + 2);
                            v96 = v94;
                            if (v95 < 255) {
                                // 0x14000e506
                                v97 = (char *)(v73 - 1);
                                __asm_xorps(v94, v94);
                                v98 = __asm_cvtsi2ss((int32_t)v95);
                                v99 = __asm_movaps_2(v67);
                                v100 = __asm_movaps_2(v67);
                                v101 = __asm_divss(v98, v68);
                                v102 = __asm_divss(v99, v101);
                                __asm_xorps(v101, v101);
                                v103 = __asm_cvtsi2ss((int32_t)*v97);
                                v104 = __asm_subss(v100, v102);
                                v105 = __asm_mulss(v103, v102);
                                v106 = __asm_mulss(v104, v68);
                                v107 = __asm_addss(v105, v106);
                                v108 = __asm_cvttss2si_6(v107);
                                __asm_xorps(v107, v107);
                                *v97 = (char)v108;
                                v109 = (char *)v73;
                                v110 = __asm_addss(__asm_mulss(__asm_cvtsi2ss((int32_t)*v109), v102), v106);
                                v111 = __asm_cvttss2si_6(v110);
                                __asm_xorps(v110, v110);
                                *v109 = (char)v111;
                                v112 = (char *)(v73 + 1);
                                v96 = __asm_addss(__asm_mulss(__asm_cvtsi2ss((int32_t)*v112), v102), v106);
                                *v112 = (char)__asm_cvttss2si_6(v96);
                            }
                            // 0x14000e570
                            v113 = v96;
                            v114 = *(char *)(v73 + 6);
                            v115 = v113;
                            if (v114 < 255) {
                                // 0x14000e57d
                                v116 = (char *)(v73 + 3);
                                __asm_xorps(v113, v113);
                                v117 = __asm_cvtsi2ss((int32_t)v114);
                                v118 = __asm_movaps_2(v67);
                                v119 = __asm_movaps_2(v67);
                                v120 = __asm_divss(v117, v68);
                                v121 = __asm_divss(v118, v120);
                                __asm_xorps(v120, v120);
                                v122 = __asm_cvtsi2ss((int32_t)*v116);
                                v123 = __asm_subss(v119, v121);
                                v124 = __asm_mulss(v122, v121);
                                v125 = __asm_mulss(v123, v68);
                                v126 = __asm_addss(v124, v125);
                                v127 = __asm_cvttss2si_6(v126);
                                __asm_xorps(v126, v126);
                                *v116 = (char)v127;
                                v128 = (char *)(v73 + 4);
                                v129 = __asm_addss(__asm_mulss(__asm_cvtsi2ss((int32_t)*v128), v121), v125);
                                v130 = __asm_cvttss2si_6(v129);
                                __asm_xorps(v129, v129);
                                *v128 = (char)v130;
                                v131 = (char *)(v73 + 5);
                                v115 = __asm_addss(__asm_mulss(__asm_cvtsi2ss((int32_t)*v131), v121), v125);
                                *v131 = (char)__asm_cvttss2si_6(v115);
                            }
                            // 0x14000e5e9
                            v132 = v115;
                            v133 = *(char *)(v73 + 10);
                            v134 = v132;
                            if (v133 < 255) {
                                // 0x14000e5f6
                                v135 = (char *)(v73 + 7);
                                __asm_xorps(v132, v132);
                                v136 = __asm_cvtsi2ss((int32_t)v133);
                                v137 = __asm_movaps_2(v67);
                                v138 = __asm_movaps_2(v67);
                                v139 = __asm_divss(v136, v68);
                                v140 = __asm_divss(v137, v139);
                                __asm_xorps(v139, v139);
                                v141 = __asm_cvtsi2ss((int32_t)*v135);
                                v142 = __asm_subss(v138, v140);
                                v143 = __asm_mulss(v141, v140);
                                v144 = __asm_mulss(v142, v68);
                                v145 = __asm_addss(v143, v144);
                                v146 = __asm_cvttss2si_6(v145);
                                __asm_xorps(v145, v145);
                                *v135 = (char)v146;
                                v147 = (char *)(v73 + 8);
                                v148 = __asm_addss(__asm_mulss(__asm_cvtsi2ss((int32_t)*v147), v140), v144);
                                v149 = __asm_cvttss2si_6(v148);
                                __asm_xorps(v148, v148);
                                *v147 = (char)v149;
                                v150 = (char *)(v73 + 9);
                                v134 = __asm_addss(__asm_mulss(__asm_cvtsi2ss((int32_t)*v150), v140), v144);
                                *v150 = (char)__asm_cvttss2si_6(v134);
                            }
                            // 0x14000e662
                            v151 = v134;
                            v72--;
                            v152 = v73 + 16;
                        }
                        // 0x14000e670
                        v70 = v151;
                        v69 = 4 * v71;
                    }
                    // 0x14000e670
                    if (v66 > v69) {
                        int64_t v153 = v66 - v69; // 0x14000e684
                        int64_t v154 = (4 * v69 | 1) + v40;
                        int128_t v155 = v70;
                        unsigned char v156 = *(char *)(v154 + 2); // 0x14000e687
                        int128_t v157 = v155; // 0x14000e692
                        char * v158; // 0x14000e694
                        int128_t v159; // 0x14000e69b
                        int128_t v160; // 0x14000e6a0
                        int128_t v161; // 0x14000e6a3
                        int128_t v162; // 0x14000e6a6
                        int128_t v163; // 0x14000e6aa
                        int128_t v164; // 0x14000e6b1
                        int128_t v165; // 0x14000e6b5
                        int128_t v166; // 0x14000e6b9
                        int128_t v167; // 0x14000e6bd
                        int128_t v168; // 0x14000e6c1
                        int32_t v169; // 0x14000e6c5
                        char * v170; // 0x14000e6cf
                        int128_t v171; // 0x14000e6da
                        int32_t v172; // 0x14000e6de
                        char * v173; // 0x14000e6e7
                        if (v156 < 255) {
                            // 0x14000e694
                            v158 = (char *)(v154 - 1);
                            __asm_xorps(v155, v155);
                            v159 = __asm_cvtsi2ss((int32_t)v156);
                            v160 = __asm_movaps_2(v67);
                            v161 = __asm_movaps_2(v67);
                            v162 = __asm_divss(v159, v68);
                            v163 = __asm_divss(v160, v162);
                            __asm_xorps(v162, v162);
                            v164 = __asm_cvtsi2ss((int32_t)*v158);
                            v165 = __asm_subss(v161, v163);
                            v166 = __asm_mulss(v164, v163);
                            v167 = __asm_mulss(v165, v68);
                            v168 = __asm_addss(v166, v167);
                            v169 = __asm_cvttss2si_6(v168);
                            __asm_xorps(v168, v168);
                            *v158 = (char)v169;
                            v170 = (char *)v154;
                            v171 = __asm_addss(__asm_mulss(__asm_cvtsi2ss((int32_t)*v170), v163), v167);
                            v172 = __asm_cvttss2si_6(v171);
                            __asm_xorps(v171, v171);
                            *v170 = (char)v172;
                            v173 = (char *)(v154 + 1);
                            v157 = __asm_addss(__asm_mulss(__asm_cvtsi2ss((int32_t)*v173), v163), v167);
                            *v173 = (char)__asm_cvttss2si_6(v157);
                        }
                        // 0x14000e6fe
                        v153--;
                        int64_t v174 = v154 + 4; // 0x14000e706
                        while (v153 != 0) {
                            // 0x14000e687
                            v154 = v174;
                            v155 = v157;
                            v156 = *(char *)(v154 + 2);
                            v157 = v155;
                            if (v156 < 255) {
                                // 0x14000e694
                                v158 = (char *)(v154 - 1);
                                __asm_xorps(v155, v155);
                                v159 = __asm_cvtsi2ss((int32_t)v156);
                                v160 = __asm_movaps_2(v67);
                                v161 = __asm_movaps_2(v67);
                                v162 = __asm_divss(v159, v68);
                                v163 = __asm_divss(v160, v162);
                                __asm_xorps(v162, v162);
                                v164 = __asm_cvtsi2ss((int32_t)*v158);
                                v165 = __asm_subss(v161, v163);
                                v166 = __asm_mulss(v164, v163);
                                v167 = __asm_mulss(v165, v68);
                                v168 = __asm_addss(v166, v167);
                                v169 = __asm_cvttss2si_6(v168);
                                __asm_xorps(v168, v168);
                                *v158 = (char)v169;
                                v170 = (char *)v154;
                                v171 = __asm_addss(__asm_mulss(__asm_cvtsi2ss((int32_t)*v170), v163), v167);
                                v172 = __asm_cvttss2si_6(v171);
                                __asm_xorps(v171, v171);
                                *v170 = (char)v172;
                                v173 = (char *)(v154 + 1);
                                v157 = __asm_addss(__asm_mulss(__asm_cvtsi2ss((int32_t)*v173), v163), v167);
                                *v173 = (char)__asm_cvttss2si_6(v157);
                            }
                            // 0x14000e6fe
                            v153--;
                            v174 = v154 + 4;
                        }
                    }
                } else {
                    int128_t v175 = __asm_movss(0x477fff00); // 0x14000e15d
                    int128_t v176 = __asm_movss(0x3f800000); // 0x14000e16b
                    int64_t v177 = 0; // 0x14000e177
                    int128_t v178; // 0x14000db50
                    if (v65 >= 0x400000000) {
                        int64_t v179 = (v66 - 4) / 4 + 1; // 0x14000e189
                        int64_t v180 = v179; // 0x14000e198
                        int64_t v181 = v40 + 10;
                        int128_t v182; // 0x14000db50
                        int128_t v183 = v182;
                        uint16_t v184 = *(int16_t *)(v181 - 4); // 0x14000e1a0
                        int128_t v185 = v183; // 0x14000e1ad
                        int16_t * v186; // 0x14000e1af
                        int128_t v187; // 0x14000e1b6
                        int128_t v188; // 0x14000e1bb
                        int128_t v189; // 0x14000e1be
                        int128_t v190; // 0x14000e1c1
                        int128_t v191; // 0x14000e1c5
                        int128_t v192; // 0x14000e1cc
                        int128_t v193; // 0x14000e1d0
                        int128_t v194; // 0x14000e1d4
                        int128_t v195; // 0x14000e1d8
                        int128_t v196; // 0x14000e1dc
                        int32_t v197; // 0x14000e1e0
                        int16_t * v198; // 0x14000e1eb
                        int128_t v199; // 0x14000e1f7
                        int32_t v200; // 0x14000e1fb
                        int16_t * v201; // 0x14000e206
                        if (v184 <= 0xfffe) {
                            // 0x14000e1af
                            v186 = (int16_t *)(v181 - 10);
                            __asm_xorps(v183, v183);
                            v187 = __asm_cvtsi2ss((int32_t)v184);
                            v188 = __asm_movaps_2(v176);
                            v189 = __asm_movaps_2(v176);
                            v190 = __asm_divss(v187, v175);
                            v191 = __asm_divss(v188, v190);
                            __asm_xorps(v190, v190);
                            v192 = __asm_cvtsi2ss((int32_t)*v186);
                            v193 = __asm_subss(v189, v191);
                            v194 = __asm_mulss(v192, v191);
                            v195 = __asm_mulss(v193, v175);
                            v196 = __asm_addss(v194, v195);
                            v197 = __asm_cvttss2si_6(v196);
                            __asm_xorps(v196, v196);
                            *v186 = (int16_t)v197;
                            v198 = (int16_t *)(v181 - 8);
                            v199 = __asm_addss(__asm_mulss(__asm_cvtsi2ss((int32_t)*v198), v191), v195);
                            v200 = __asm_cvttss2si_6(v199);
                            __asm_xorps(v199, v199);
                            *v198 = (int16_t)v200;
                            v201 = (int16_t *)(v181 - 6);
                            v185 = __asm_addss(__asm_mulss(__asm_cvtsi2ss((int32_t)*v201), v191), v195);
                            *v201 = (int16_t)__asm_cvttss2si_6(v185);
                        }
                        int128_t v202 = v185;
                        uint16_t v203 = *(int16_t *)(v181 + 4); // 0x14000e21e
                        int128_t v204 = v202; // 0x14000e22b
                        int16_t * v205; // 0x14000e22d
                        int128_t v206; // 0x14000e234
                        int128_t v207; // 0x14000e239
                        int128_t v208; // 0x14000e23c
                        int128_t v209; // 0x14000e23f
                        int128_t v210; // 0x14000e243
                        int128_t v211; // 0x14000e24a
                        int128_t v212; // 0x14000e24e
                        int128_t v213; // 0x14000e252
                        int128_t v214; // 0x14000e256
                        int128_t v215; // 0x14000e25a
                        int32_t v216; // 0x14000e25e
                        int16_t * v217; // 0x14000e269
                        int128_t v218; // 0x14000e274
                        int32_t v219; // 0x14000e278
                        int16_t * v220; // 0x14000e282
                        if (v203 <= 0xfffe) {
                            // 0x14000e22d
                            v205 = (int16_t *)(v181 - 2);
                            __asm_xorps(v202, v202);
                            v206 = __asm_cvtsi2ss((int32_t)v203);
                            v207 = __asm_movaps_2(v176);
                            v208 = __asm_movaps_2(v176);
                            v209 = __asm_divss(v206, v175);
                            v210 = __asm_divss(v207, v209);
                            __asm_xorps(v209, v209);
                            v211 = __asm_cvtsi2ss((int32_t)*v205);
                            v212 = __asm_subss(v208, v210);
                            v213 = __asm_mulss(v211, v210);
                            v214 = __asm_mulss(v212, v175);
                            v215 = __asm_addss(v213, v214);
                            v216 = __asm_cvttss2si_6(v215);
                            __asm_xorps(v215, v215);
                            *v205 = (int16_t)v216;
                            v217 = (int16_t *)v181;
                            v218 = __asm_addss(__asm_mulss(__asm_cvtsi2ss((int32_t)*v217), v210), v214);
                            v219 = __asm_cvttss2si_6(v218);
                            __asm_xorps(v218, v218);
                            *v217 = (int16_t)v219;
                            v220 = (int16_t *)(v181 + 2);
                            v204 = __asm_addss(__asm_mulss(__asm_cvtsi2ss((int32_t)*v220), v210), v214);
                            *v220 = (int16_t)__asm_cvttss2si_6(v204);
                        }
                        int128_t v221 = v204;
                        uint16_t v222 = *(int16_t *)(v181 + 12); // 0x14000e29a
                        int128_t v223 = v221; // 0x14000e2a7
                        int16_t * v224; // 0x14000e2a9
                        int128_t v225; // 0x14000e2b0
                        int128_t v226; // 0x14000e2b5
                        int128_t v227; // 0x14000e2b8
                        int128_t v228; // 0x14000e2bb
                        int128_t v229; // 0x14000e2bf
                        int128_t v230; // 0x14000e2c6
                        int128_t v231; // 0x14000e2ca
                        int128_t v232; // 0x14000e2ce
                        int128_t v233; // 0x14000e2d2
                        int128_t v234; // 0x14000e2d6
                        int32_t v235; // 0x14000e2da
                        int16_t * v236; // 0x14000e2e5
                        int128_t v237; // 0x14000e2f1
                        int32_t v238; // 0x14000e2f5
                        int16_t * v239; // 0x14000e300
                        if (v222 <= 0xfffe) {
                            // 0x14000e2a9
                            v224 = (int16_t *)(v181 + 6);
                            __asm_xorps(v221, v221);
                            v225 = __asm_cvtsi2ss((int32_t)v222);
                            v226 = __asm_movaps_2(v176);
                            v227 = __asm_movaps_2(v176);
                            v228 = __asm_divss(v225, v175);
                            v229 = __asm_divss(v226, v228);
                            __asm_xorps(v228, v228);
                            v230 = __asm_cvtsi2ss((int32_t)*v224);
                            v231 = __asm_subss(v227, v229);
                            v232 = __asm_mulss(v230, v229);
                            v233 = __asm_mulss(v231, v175);
                            v234 = __asm_addss(v232, v233);
                            v235 = __asm_cvttss2si_6(v234);
                            __asm_xorps(v234, v234);
                            *v224 = (int16_t)v235;
                            v236 = (int16_t *)(v181 + 8);
                            v237 = __asm_addss(__asm_mulss(__asm_cvtsi2ss((int32_t)*v236), v229), v233);
                            v238 = __asm_cvttss2si_6(v237);
                            __asm_xorps(v237, v237);
                            *v236 = (int16_t)v238;
                            v239 = (int16_t *)(v181 + 10);
                            v223 = __asm_addss(__asm_mulss(__asm_cvtsi2ss((int32_t)*v239), v229), v233);
                            *v239 = (int16_t)__asm_cvttss2si_6(v223);
                        }
                        int128_t v240 = v223;
                        uint16_t v241 = *(int16_t *)(v181 + 20); // 0x14000e318
                        int128_t v242 = v240; // 0x14000e325
                        int16_t * v243; // 0x14000e327
                        int128_t v244; // 0x14000e32e
                        int128_t v245; // 0x14000e333
                        int128_t v246; // 0x14000e336
                        int128_t v247; // 0x14000e339
                        int128_t v248; // 0x14000e33d
                        int128_t v249; // 0x14000e344
                        int128_t v250; // 0x14000e348
                        int128_t v251; // 0x14000e34c
                        int128_t v252; // 0x14000e350
                        int128_t v253; // 0x14000e354
                        int32_t v254; // 0x14000e358
                        int16_t * v255; // 0x14000e363
                        int128_t v256; // 0x14000e36f
                        int32_t v257; // 0x14000e373
                        int16_t * v258; // 0x14000e37e
                        if (v241 <= 0xfffe) {
                            // 0x14000e327
                            v243 = (int16_t *)(v181 + 14);
                            __asm_xorps(v240, v240);
                            v244 = __asm_cvtsi2ss((int32_t)v241);
                            v245 = __asm_movaps_2(v176);
                            v246 = __asm_movaps_2(v176);
                            v247 = __asm_divss(v244, v175);
                            v248 = __asm_divss(v245, v247);
                            __asm_xorps(v247, v247);
                            v249 = __asm_cvtsi2ss((int32_t)*v243);
                            v250 = __asm_subss(v246, v248);
                            v251 = __asm_mulss(v249, v248);
                            v252 = __asm_mulss(v250, v175);
                            v253 = __asm_addss(v251, v252);
                            v254 = __asm_cvttss2si_6(v253);
                            __asm_xorps(v253, v253);
                            *v243 = (int16_t)v254;
                            v255 = (int16_t *)(v181 + 16);
                            v256 = __asm_addss(__asm_mulss(__asm_cvtsi2ss((int32_t)*v255), v248), v252);
                            v257 = __asm_cvttss2si_6(v256);
                            __asm_xorps(v256, v256);
                            *v255 = (int16_t)v257;
                            v258 = (int16_t *)(v181 + 18);
                            v242 = __asm_addss(__asm_mulss(__asm_cvtsi2ss((int32_t)*v258), v248), v252);
                            *v258 = (int16_t)__asm_cvttss2si_6(v242);
                        }
                        int128_t v259 = v242;
                        v180--;
                        int64_t v260 = v181 + 32; // 0x14000e39e
                        while (v180 != 0) {
                            // 0x14000e1a0
                            v181 = v260;
                            v183 = v259;
                            v184 = *(int16_t *)(v181 - 4);
                            v185 = v183;
                            if (v184 <= 0xfffe) {
                                // 0x14000e1af
                                v186 = (int16_t *)(v181 - 10);
                                __asm_xorps(v183, v183);
                                v187 = __asm_cvtsi2ss((int32_t)v184);
                                v188 = __asm_movaps_2(v176);
                                v189 = __asm_movaps_2(v176);
                                v190 = __asm_divss(v187, v175);
                                v191 = __asm_divss(v188, v190);
                                __asm_xorps(v190, v190);
                                v192 = __asm_cvtsi2ss((int32_t)*v186);
                                v193 = __asm_subss(v189, v191);
                                v194 = __asm_mulss(v192, v191);
                                v195 = __asm_mulss(v193, v175);
                                v196 = __asm_addss(v194, v195);
                                v197 = __asm_cvttss2si_6(v196);
                                __asm_xorps(v196, v196);
                                *v186 = (int16_t)v197;
                                v198 = (int16_t *)(v181 - 8);
                                v199 = __asm_addss(__asm_mulss(__asm_cvtsi2ss((int32_t)*v198), v191), v195);
                                v200 = __asm_cvttss2si_6(v199);
                                __asm_xorps(v199, v199);
                                *v198 = (int16_t)v200;
                                v201 = (int16_t *)(v181 - 6);
                                v185 = __asm_addss(__asm_mulss(__asm_cvtsi2ss((int32_t)*v201), v191), v195);
                                *v201 = (int16_t)__asm_cvttss2si_6(v185);
                            }
                            // 0x14000e21e
                            v202 = v185;
                            v203 = *(int16_t *)(v181 + 4);
                            v204 = v202;
                            if (v203 <= 0xfffe) {
                                // 0x14000e22d
                                v205 = (int16_t *)(v181 - 2);
                                __asm_xorps(v202, v202);
                                v206 = __asm_cvtsi2ss((int32_t)v203);
                                v207 = __asm_movaps_2(v176);
                                v208 = __asm_movaps_2(v176);
                                v209 = __asm_divss(v206, v175);
                                v210 = __asm_divss(v207, v209);
                                __asm_xorps(v209, v209);
                                v211 = __asm_cvtsi2ss((int32_t)*v205);
                                v212 = __asm_subss(v208, v210);
                                v213 = __asm_mulss(v211, v210);
                                v214 = __asm_mulss(v212, v175);
                                v215 = __asm_addss(v213, v214);
                                v216 = __asm_cvttss2si_6(v215);
                                __asm_xorps(v215, v215);
                                *v205 = (int16_t)v216;
                                v217 = (int16_t *)v181;
                                v218 = __asm_addss(__asm_mulss(__asm_cvtsi2ss((int32_t)*v217), v210), v214);
                                v219 = __asm_cvttss2si_6(v218);
                                __asm_xorps(v218, v218);
                                *v217 = (int16_t)v219;
                                v220 = (int16_t *)(v181 + 2);
                                v204 = __asm_addss(__asm_mulss(__asm_cvtsi2ss((int32_t)*v220), v210), v214);
                                *v220 = (int16_t)__asm_cvttss2si_6(v204);
                            }
                            // 0x14000e29a
                            v221 = v204;
                            v222 = *(int16_t *)(v181 + 12);
                            v223 = v221;
                            if (v222 <= 0xfffe) {
                                // 0x14000e2a9
                                v224 = (int16_t *)(v181 + 6);
                                __asm_xorps(v221, v221);
                                v225 = __asm_cvtsi2ss((int32_t)v222);
                                v226 = __asm_movaps_2(v176);
                                v227 = __asm_movaps_2(v176);
                                v228 = __asm_divss(v225, v175);
                                v229 = __asm_divss(v226, v228);
                                __asm_xorps(v228, v228);
                                v230 = __asm_cvtsi2ss((int32_t)*v224);
                                v231 = __asm_subss(v227, v229);
                                v232 = __asm_mulss(v230, v229);
                                v233 = __asm_mulss(v231, v175);
                                v234 = __asm_addss(v232, v233);
                                v235 = __asm_cvttss2si_6(v234);
                                __asm_xorps(v234, v234);
                                *v224 = (int16_t)v235;
                                v236 = (int16_t *)(v181 + 8);
                                v237 = __asm_addss(__asm_mulss(__asm_cvtsi2ss((int32_t)*v236), v229), v233);
                                v238 = __asm_cvttss2si_6(v237);
                                __asm_xorps(v237, v237);
                                *v236 = (int16_t)v238;
                                v239 = (int16_t *)(v181 + 10);
                                v223 = __asm_addss(__asm_mulss(__asm_cvtsi2ss((int32_t)*v239), v229), v233);
                                *v239 = (int16_t)__asm_cvttss2si_6(v223);
                            }
                            // 0x14000e318
                            v240 = v223;
                            v241 = *(int16_t *)(v181 + 20);
                            v242 = v240;
                            if (v241 <= 0xfffe) {
                                // 0x14000e327
                                v243 = (int16_t *)(v181 + 14);
                                __asm_xorps(v240, v240);
                                v244 = __asm_cvtsi2ss((int32_t)v241);
                                v245 = __asm_movaps_2(v176);
                                v246 = __asm_movaps_2(v176);
                                v247 = __asm_divss(v244, v175);
                                v248 = __asm_divss(v245, v247);
                                __asm_xorps(v247, v247);
                                v249 = __asm_cvtsi2ss((int32_t)*v243);
                                v250 = __asm_subss(v246, v248);
                                v251 = __asm_mulss(v249, v248);
                                v252 = __asm_mulss(v250, v175);
                                v253 = __asm_addss(v251, v252);
                                v254 = __asm_cvttss2si_6(v253);
                                __asm_xorps(v253, v253);
                                *v243 = (int16_t)v254;
                                v255 = (int16_t *)(v181 + 16);
                                v256 = __asm_addss(__asm_mulss(__asm_cvtsi2ss((int32_t)*v255), v248), v252);
                                v257 = __asm_cvttss2si_6(v256);
                                __asm_xorps(v256, v256);
                                *v255 = (int16_t)v257;
                                v258 = (int16_t *)(v181 + 18);
                                v242 = __asm_addss(__asm_mulss(__asm_cvtsi2ss((int32_t)*v258), v248), v252);
                                *v258 = (int16_t)__asm_cvttss2si_6(v242);
                            }
                            // 0x14000e396
                            v259 = v242;
                            v180--;
                            v260 = v181 + 32;
                        }
                        // 0x14000e3a4
                        v178 = v259;
                        v177 = 4 * v179;
                    }
                    // 0x14000e3a4
                    if (v66 > v177) {
                        int64_t v261 = v66 - v177; // 0x14000e3b8
                        int64_t v262 = (8 * v177 | 2) + v40;
                        int128_t v263 = v178;
                        uint16_t v264 = *(int16_t *)(v262 + 4); // 0x14000e3bb
                        int128_t v265 = v263; // 0x14000e3c8
                        int16_t * v266; // 0x14000e3ca
                        int128_t v267; // 0x14000e3d1
                        int128_t v268; // 0x14000e3d6
                        int128_t v269; // 0x14000e3d9
                        int128_t v270; // 0x14000e3dc
                        int128_t v271; // 0x14000e3e0
                        int128_t v272; // 0x14000e3e7
                        int128_t v273; // 0x14000e3eb
                        int128_t v274; // 0x14000e3ef
                        int128_t v275; // 0x14000e3f3
                        int128_t v276; // 0x14000e3f7
                        int32_t v277; // 0x14000e3fb
                        int16_t * v278; // 0x14000e406
                        int128_t v279; // 0x14000e411
                        int32_t v280; // 0x14000e415
                        int16_t * v281; // 0x14000e41f
                        if (v264 <= 0xfffe) {
                            // 0x14000e3ca
                            v266 = (int16_t *)(v262 - 2);
                            __asm_xorps(v263, v263);
                            v267 = __asm_cvtsi2ss((int32_t)v264);
                            v268 = __asm_movaps_2(v176);
                            v269 = __asm_movaps_2(v176);
                            v270 = __asm_divss(v267, v175);
                            v271 = __asm_divss(v268, v270);
                            __asm_xorps(v270, v270);
                            v272 = __asm_cvtsi2ss((int32_t)*v266);
                            v273 = __asm_subss(v269, v271);
                            v274 = __asm_mulss(v272, v271);
                            v275 = __asm_mulss(v273, v175);
                            v276 = __asm_addss(v274, v275);
                            v277 = __asm_cvttss2si_6(v276);
                            __asm_xorps(v276, v276);
                            *v266 = (int16_t)v277;
                            v278 = (int16_t *)v262;
                            v279 = __asm_addss(__asm_mulss(__asm_cvtsi2ss((int32_t)*v278), v271), v275);
                            v280 = __asm_cvttss2si_6(v279);
                            __asm_xorps(v279, v279);
                            *v278 = (int16_t)v280;
                            v281 = (int16_t *)(v262 + 2);
                            v265 = __asm_addss(__asm_mulss(__asm_cvtsi2ss((int32_t)*v281), v271), v275);
                            *v281 = (int16_t)__asm_cvttss2si_6(v265);
                        }
                        // 0x14000e437
                        v261--;
                        int64_t v282 = v262 + 8; // 0x14000e43f
                        while (v261 != 0) {
                            // 0x14000e3bb
                            v262 = v282;
                            v263 = v265;
                            v264 = *(int16_t *)(v262 + 4);
                            v265 = v263;
                            if (v264 <= 0xfffe) {
                                // 0x14000e3ca
                                v266 = (int16_t *)(v262 - 2);
                                __asm_xorps(v263, v263);
                                v267 = __asm_cvtsi2ss((int32_t)v264);
                                v268 = __asm_movaps_2(v176);
                                v269 = __asm_movaps_2(v176);
                                v270 = __asm_divss(v267, v175);
                                v271 = __asm_divss(v268, v270);
                                __asm_xorps(v270, v270);
                                v272 = __asm_cvtsi2ss((int32_t)*v266);
                                v273 = __asm_subss(v269, v271);
                                v274 = __asm_mulss(v272, v271);
                                v275 = __asm_mulss(v273, v175);
                                v276 = __asm_addss(v274, v275);
                                v277 = __asm_cvttss2si_6(v276);
                                __asm_xorps(v276, v276);
                                *v266 = (int16_t)v277;
                                v278 = (int16_t *)v262;
                                v279 = __asm_addss(__asm_mulss(__asm_cvtsi2ss((int32_t)*v278), v271), v275);
                                v280 = __asm_cvttss2si_6(v279);
                                __asm_xorps(v279, v279);
                                *v278 = (int16_t)v280;
                                v281 = (int16_t *)(v262 + 2);
                                v265 = __asm_addss(__asm_mulss(__asm_cvtsi2ss((int32_t)*v281), v271), v275);
                                *v281 = (int16_t)__asm_cvttss2si_6(v265);
                            }
                            // 0x14000e437
                            v261--;
                            v282 = v262 + 8;
                        }
                    }
                }
            }
            int64_t result2 = v40; // 0x14000e71b
            if ((a5 & 0xfffffffb) != 0) {
                int64_t v283 = a5 & 0xffffffff;
                int64_t v284; // 0x14000db50
                if (*(int32_t *)a6 != 16) {
                    // 0x14000e73d
                    v284 = function_140002040(v40, 4, v283, v14, v33);
                } else {
                    // 0x14000e736
                    v284 = function_140002510(v40, 4, v283, v14, v33);
                }
                // 0x14000e742
                result2 = v284;
                if (result2 == 0) {
                    // 0x14000df11
                    return 0;
                }
            }
            // 0x14000e74e
            if (a4 != 0) {
                // 0x14000e75b
                *(int32_t *)a4 = 4;
            }
            // 0x14000e761
            *(int32_t *)a3 = v11;
            *(int32_t *)a2 = v14;
            // 0x14000df11
            return result2;
        }
        // 0x14000df34
        v41 = 2 * v7 * v11;
        if (v41 == 0) {
            goto lab_0x14000df80;
        } else {
            // 0x14000df50
            if (*v2 == 0) {
                goto lab_0x14000df7a;
            } else {
                int64_t v285 = a1 + 200; // 0x14000df57
                if (v41 > *(int32_t *)v285 - *(int32_t *)v3) {
                    // 0x14000df63
                    *(int64_t *)v3 = *(int64_t *)v285;
                    goto lab_0x14000df80;
                } else {
                    goto lab_0x14000df7a;
                }
            }
        }
    } else {
        // 0x14000dee6
        v36 = __readgsqword(88);
        v37 = (int64_t)"outofmem";
        goto lab_0x14000defe;
    }
  lab_0x14000df80:;
    int64_t v286 = 0; // 0x14000df89
    while (true) {
        uint64_t v287 = v286;
        int64_t v288 = v287 + v40; // 0x14000df92
        if (v287 < v38) {
            // 0x14000dfbe
            if ((int32_t)function_14000d9a0(a1, v288, v39) == 0) {
                // break -> 0x14000dfd9
                break;
            }
        } else {
            if (v35 >= 1) {
                int64_t v289 = v39; // 0x14000dfab
                int64_t v290 = v288; // 0x14000dfab
                *(char *)v290 = (char)(v287 == 3);
                v289--;
                v290 += 4;
                while (v289 != 0) {
                    // 0x14000dfb0
                    *(char *)v290 = (char)(v287 == 3);
                    v289--;
                    v290 += 4;
                }
            }
        }
        int64_t v291 = v287 + 1; // 0x14000dfcd
        v286 = v291 & 0xffffffff;
        if ((int32_t)v291 >= 4) {
            goto lab_0x14000e13e;
        }
    }
    // 0x14000dfd9
    free(mem);
    v36 = __readgsqword(88);
    v37 = (int64_t)"corrupt";
    goto lab_0x14000defe;
  lab_0x14000defe:
    // 0x14000defe
    *(int64_t *)(*(int64_t *)v36 + 16) = v37;
    // 0x14000df11
    return 0;
  lab_0x14000df7a:;
    int64_t * v292 = (int64_t *)v3; // 0x14000df7d
    *v292 = *v292 + (int64_t)v41;
    goto lab_0x14000df80;
}

// Address range: 0x14000e7e0 - 0x14000e87a
int64_t function_14000e7e0(int64_t a1, int64_t * a2) {
    int64_t * v1 = (int64_t *)(a1 + 192); // 0x14000e800
    int64_t v2 = 0; // 0x14000e7f7
    int64_t v3 = *v1; // 0x14000e800
    int64_t v4; // 0x14000e7e0
    char v5; // 0x14000e7e0
    int64_t v6; // 0x14000e82d
    int64_t v7; // 0x14000e837
    int64_t v8; // 0x14000e813
    if (v3 >= *(int64_t *)(a1 + 200)) {
        // 0x14000e81f
        v4 = v3;
        v5 = 0;
        if (*(int32_t *)(a1 + 48) != 0) {
            // 0x14000e825
            function_140001d70(a1);
            v6 = *v1;
            v7 = v6 + 1;
            *v1 = v7;
            v4 = v7;
            v5 = *(char *)v6;
        }
    } else {
        // 0x14000e810
        v8 = v3 + 1;
        *v1 = v8;
        v4 = v8;
        v5 = *(char *)v3;
    }
    int64_t result = 0; // 0x14000e848
    while (*(char *)(v2 + (int64_t)a2) == v5) {
        // 0x14000e84a
        v2++;
        result = 1;
        if (v2 >= 4) {
            // break -> 0x14000e853
            break;
        }
        v3 = v4;
        if (v3 >= *(int64_t *)(a1 + 200)) {
            // 0x14000e81f
            v4 = v3;
            v5 = 0;
            if (*(int32_t *)(a1 + 48) != 0) {
                // 0x14000e825
                function_140001d70(a1);
                v6 = *v1;
                v7 = v6 + 1;
                *v1 = v7;
                v4 = v7;
                v5 = *(char *)v6;
            }
        } else {
            // 0x14000e810
            v8 = v3 + 1;
            *v1 = v8;
            v4 = v8;
            v5 = *(char *)v3;
        }
        // 0x14000e845
        result = 0;
    }
    // 0x14000e853
    return result;
}

// Address range: 0x14000e880 - 0x14000e97a
int64_t function_14000e880(int64_t a1, int64_t a2, int64_t * a3) {
    int64_t v1 = (int64_t)a3;
    int64_t * v2 = (int64_t *)(a1 + 192);
    int64_t * v3 = (int64_t *)(a1 + 200);
    int64_t v4 = 128; // 0x14000e8aa
    int64_t v5 = 0; // 0x14000e8aa
    int64_t v6; // 0x14000e880
    int64_t v7; // 0x14000e880
    int64_t v8; // 0x14000e880
    int64_t v9; // 0x14000e880
    int64_t v10; // 0x14000e880
    while (true) {
      lab_0x14000e8b0:
        // 0x14000e8b0
        v10 = v5;
        int64_t v11 = v6;
        v8 = v11;
        if ((v4 & a2) == 0) {
            goto lab_0x14000e92d;
        } else {
            // 0x14000e8b5
            if (*(int64_t *)(a1 + 16) == 0) {
                goto lab_0x14000e8dd;
            } else {
                if ((int32_t)v11 != 0) {
                    // 0x14000e8d7
                    if (*(int32_t *)(a1 + 48) == 0) {
                        goto lab_0x14000e95a_2;
                    }
                    goto lab_0x14000e8dd;
                } else {
                    // 0x14000e8c7
                    v7 = *v2;
                    v9 = *v3;
                    goto lab_0x14000e8f0;
                }
            }
        }
    }
    // 0x14000e93f
    return (int32_t)"bad file" ^ (int32_t)"bad file";
  lab_0x14000e95a_2:
    // 0x14000e95a
    *(int64_t *)(*(int64_t *)__readgsqword(88) + 16) = (int64_t)"bad file";
    return (int32_t)"bad file" ^ (int32_t)"bad file";
  lab_0x14000e92d:
    // 0x14000e92d
    v5 = v10 + 1;
    v6 = v8;
    v4 = (int32_t)v4 >> 1;
    if (v5 >= 4) {
        // break -> 0x14000e93f
        goto lab_0x14000e93f_2;
    }
    goto lab_0x14000e8b0;
  lab_0x14000e8dd:;
    uint64_t v12 = *v2; // 0x14000e8dd
    uint64_t v13 = *v3; // 0x14000e8e4
    v7 = v12;
    v9 = v13;
    if (v12 >= v13) {
        goto lab_0x14000e95a_2;
    }
    goto lab_0x14000e8f0;
  lab_0x14000e8f0:;
    // 0x14000e8f0
    int64_t v14; // 0x14000e8f8
    if (v7 >= v9) {
        // 0x14000e904
        int32_t * v15; // 0x14000e880
        int32_t v16 = *v15; // 0x14000e904
        if (v16 != 0) {
            // 0x14000e90a
            function_140001d70(a1);
            int64_t v17 = *v2; // 0x14000e912
            int64_t v18 = v17 + 1; // 0x14000e91c
            *v2 = v18;
        }
    } else {
        // 0x14000e8f5
        v14 = v7 + 1;
        *v2 = v14;
    }
    // 0x14000e92a
    *(char *)(v10 + v1) = *(char *)v7;
    v8 = v14;
    goto lab_0x14000e92d;
}

// Address range: 0x14000e980 - 0x14000ef42
int64_t function_14000e980(int64_t a1, int64_t a2, int64_t a3, int64_t a4, int64_t a5) {
    int64_t v1 = 0x100000000 * a3 >> 32; // 0x14000e9c3
    int64_t v2 = a2 & 0xffffffff; // 0x14000e9c8
    int64_t * v3 = (int64_t *)(a1 + 192);
    int64_t * v4 = (int64_t *)(a1 + 200);
    int32_t * v5 = (int32_t *)(a1 + 48);
    int64_t * v6 = (int64_t *)(a1 + 16);
    int64_t v7 = 0; // 0x14000e9ce
    int64_t v8; // bp-96, 0x14000e980
    int64_t v9 = &v8; // 0x14000e9ce
    int64_t v10 = 0; // 0x14000e9ce
    uint64_t v11; // 0x14000e980
    int64_t v12; // 0x14000e980
    int64_t v13; // 0x14000e980
    int64_t v14; // 0x14000e980
    int64_t v15; // 0x14000e980
    while (true) {
      lab_0x14000e9d2:
        // 0x14000e9d2
        v11 = v7;
        if (v11 == 10) {
            // break -> 0x14000eeee
            break;
        }
        // 0x14000e9dc
        v13 = v9;
        uint64_t v16 = *v3; // 0x14000e9dc
        uint64_t v17 = *v4; // 0x14000e9ee
        v12 = v17;
        v14 = v16;
        if (v16 >= v17) {
            // 0x14000ea06
            v15 = 0;
            if (*v5 == 0) {
                goto lab_0x14000ea7c;
            } else {
                // 0x14000ea0d
                function_140001d70(a1);
                v12 = *v4;
                v14 = *v3;
                goto lab_0x14000ea2a;
            }
        } else {
            goto lab_0x14000ea2a;
        }
    }
    goto lab_0x14000eeee_2;
  lab_0x14000eed9_2:;
    int64_t v18 = __readgsqword(88); // 0x14000eeec
    int64_t v19 = (int64_t)"bad file"; // 0x14000eeec
    goto lab_0x14000ef01;
  lab_0x14000ea2a:;
    int64_t v99 = v14;
    int64_t v100 = v12;
    int64_t v101 = (int64_t)*(char *)v99;
    int64_t v102 = v99 + 1;
    *v3 = v102;
    int64_t v103; // 0x14000e980
    int64_t v104; // 0x14000ea50
    int64_t v105; // 0x14000ea5e
    if (v102 >= v100) {
        // 0x14000ea41
        v15 = v101;
        if (*v5 == 0) {
            goto lab_0x14000ea7c;
        } else {
            // 0x14000ea48
            function_140001d70(a1);
            v104 = *v3;
            v105 = *v4;
            v103 = v104 + 1;
            goto lab_0x14000ea65;
        }
    } else {
        // 0x14000ea36
        v105 = v100;
        v103 = v99 + 2;
        v104 = v102;
        goto lab_0x14000ea65;
    }
  lab_0x14000ea7c:
    // 0x14000ea7c
    *(char *)v13 = 0;
    int64_t v106 = v15; // 0x14000ea7f
    int64_t v107 = 0; // 0x14000ea7f
    goto lab_0x14000ea82;
  lab_0x14000ea82:;
    int64_t v108 = v107;
    int64_t v109 = v106;
    int64_t v110; // 0x14000e980
    int64_t v111; // 0x14000e980
    int64_t v112; // 0x14000e980
    int64_t v113; // 0x14000e980
    int64_t v114; // 0x14000e980
    int64_t v115; // 0x14000e980
    if (*v5 == 0) {
        // 0x14000eac5
        *(char *)(v13 + 1) = 0;
        v115 = v109;
        v113 = v108;
        goto lab_0x14000eac9;
    } else {
        // 0x14000ea89
        function_140001d70(a1);
        v110 = *v4;
        v111 = *v3;
        v114 = v109;
        v112 = v108;
        goto lab_0x14000eaa6;
    }
  lab_0x14000ea65:;
    unsigned char v116 = *(char *)v104;
    int64_t v117 = v116;
    *v3 = v103;
    *(char *)v13 = v116;
    v106 = v101;
    v107 = v117;
    v110 = v105;
    v111 = v103;
    v114 = v101;
    v112 = v117;
    if (v103 >= v105) {
        goto lab_0x14000ea82;
    } else {
        goto lab_0x14000eaa6;
    }
  lab_0x14000eaa6:;
    int64_t v118 = v112;
    int64_t v119 = v114;
    int64_t v120 = v111;
    uint64_t v121 = v120 + 1;
    *v3 = v121;
    *(char *)(v13 + 1) = *(char *)v120;
    v115 = v119;
    v113 = v118;
    int64_t v122; // 0x14000e980
    char v123; // 0x14000e980
    int64_t v124; // 0x14000e980
    if (v121 >= v110) {
        goto lab_0x14000eac9;
    } else {
        // 0x14000eab5
        *v3 = v120 + 2;
        v123 = *(char *)v121;
        v124 = v119;
        v122 = v118;
        goto lab_0x14000eaf0;
    }
  lab_0x14000eac9:;
    int64_t v125 = v113;
    int64_t v126 = v115;
    v123 = 0;
    v124 = v126;
    v122 = v125;
    if (*v5 != 0) {
        // 0x14000ead0
        function_140001d70(a1);
        int64_t v127 = *v3; // 0x14000ead8
        *v3 = v127 + 1;
        v123 = *(char *)v127;
        v124 = v126;
        v122 = v125;
    }
    goto lab_0x14000eaf0;
  lab_0x14000eaf0:;
    int64_t v128 = v122;
    int64_t v129 = v124;
    unsigned char v130 = v123;
    *(char *)(v13 + 2) = v130;
    if (*v6 == 0) {
        goto lab_0x14000eb17;
    } else {
        if (v130 == 0) {
            goto lab_0x14000eb2b;
        } else {
            // 0x14000eb0c
            if (*v5 == 0) {
                goto lab_0x14000eed9_2;
            }
            goto lab_0x14000eb17;
        }
    }
  lab_0x14000eb17:
    // 0x14000eb17
    if (*v3 >= *v4) {
        goto lab_0x14000eed9_2;
    }
    goto lab_0x14000eb2b;
  lab_0x14000eb2b:
    if ((char)v128 != 8) {
        // break -> 0x14000eeee
        goto lab_0x14000eeee_2;
    }
    // 0x14000eb35
    v10 |= (int64_t)v130;
    v7 = v11 + 1;
    v9 = v13 + 3;
    int64_t v25; // 0x14000e980
    int64_t v23; // 0x14000e980
    int64_t v21; // 0x14000e980
    if ((char)v129 == 0) {
        // 0x14000eb43
        *(int32_t *)a4 = (v10 & 16) != 0 ? 4 : 3;
        if ((int32_t)v1 < 1) {
            goto lab_0x14000ef0c;
        } else {
            // 0x14000eb66
            v23 = 0;
            v21 = 0;
            v25 = 0;
            goto lab_0x14000eb92;
        }
    }
    goto lab_0x14000e9d2;
  lab_0x14000eeee_2:
    // 0x14000eeee
    v18 = __readgsqword(88);
    v19 = (int64_t)"bad format";
    goto lab_0x14000ef01;
  lab_0x14000ef01:
    // 0x14000ef01
    *(int64_t *)(*(int64_t *)v18 + 16) = v19;
  lab_0x14000ef0c:
    // 0x14000ef0c
    __security_check_cookie(g66);
    return &g103;
  lab_0x14000eb92:;
    int64_t v20 = v21;
    int64_t v22 = v23;
    int64_t v24 = (0x100000000 * v25 >> 32) + a5; // 0x14000eb9a
    int64_t v26 = 0; // 0x14000eb9f
    int64_t v27; // bp-94, 0x14000e980
    int64_t v28 = &v27; // 0x14000eb9f
    goto lab_0x14000eba4;
  lab_0x14000eba4:;
    int64_t v29 = v28;
    uint64_t v30 = v26;
    unsigned char v31 = *(char *)(v29 - 1); // 0x14000eba4
    int64_t v32; // 0x14000e980
    int64_t v33; // 0x14000e980
    int64_t v34; // 0x14000e980
    int64_t v35; // 0x14000e980
    int64_t v36; // 0x14000e980
    int64_t v37; // 0x14000e980
    int64_t v38; // 0x14000ee5b
    char * v39; // 0x14000e980
    char * v40; // 0x14000e980
    if (v31 == 0) {
        if ((int32_t)a2 < 1) {
            goto lab_0x14000ee81;
        } else {
            // 0x14000ee5b
            v38 = (int64_t)*(char *)v29;
            v36 = v24;
            v37 = 0;
            goto lab_0x14000ee60;
        }
    } else {
        int32_t v41 = (int32_t)v31 - 1; // 0x14000ebb5
        if (v41 == 0) {
            if ((int32_t)a2 < 1) {
                goto lab_0x14000ee81;
            } else {
                // 0x14000ed50
                v39 = (char *)v29;
                v35 = v24;
                v33 = v2;
                goto lab_0x14000ed50_2;
            }
        } else {
            if (v41 != 1) {
                goto lab_0x14000eeee_2;
            } else {
                if ((int32_t)a2 < 1) {
                    goto lab_0x14000ee81;
                } else {
                    // 0x14000ebe0
                    v40 = (char *)v29;
                    v34 = v24;
                    v32 = v2;
                    goto lab_0x14000ebe0_2;
                }
            }
        }
    }
  lab_0x14000ee81:
    // 0x14000ee81
    v26 = v30 + 1;
    v28 = v29 + 3;
    if (v30 < v11) {
        goto lab_0x14000eba4;
    } else {
        int64_t v42 = (v20 & 0xffffffff) + 1; // 0x14000eebc
        int64_t v43 = (v22 & 0xffffffff) + (4 * v2 & 0xfffffffc); // 0x14000eebe
        v23 = v43;
        v21 = v42;
        v25 = v43 & 0xffffffff;
        if ((v42 & 0xffffffff) < (v1 & 0xffffffff)) {
            goto lab_0x14000eb92;
        } else {
            goto lab_0x14000ef0c;
        }
    }
  lab_0x14000ee60:
    // 0x14000ee60
    if (function_14000e880(a1, v38, (int64_t *)v36) == 0) {
        goto lab_0x14000ef0c;
    } else {
        int64_t v44 = v37 + 1 & 0xffffffff; // 0x14000ee76
        v36 += 4;
        v37 = v44;
        if (v44 < v2) {
            goto lab_0x14000ee60;
        } else {
            goto lab_0x14000ee81;
        }
    }
  lab_0x14000ed50_2:;
    int64_t v45 = v33;
    int64_t v46 = v35;
    uint64_t v47 = *v3; // 0x14000ed50
    int64_t v48; // 0x14000e980
    char v49; // 0x14000e980
    if (v47 >= *v4) {
        // 0x14000ed6f
        v48 = v47;
        v49 = 0;
        if (*v5 == 0) {
            goto lab_0x14000ed97;
        } else {
            // 0x14000ed76
            function_140001d70(a1);
            int64_t v50 = *v3; // 0x14000ed7e
            int64_t v51 = v50 + 1; // 0x14000ed88
            *v3 = v51;
            v48 = v51;
            v49 = *(char *)v50;
            goto lab_0x14000ed97;
        }
    } else {
        int64_t v52 = v47 + 1; // 0x14000ed63
        *v3 = v52;
        v48 = v52;
        v49 = *(char *)v47;
        goto lab_0x14000ed97;
    }
  lab_0x14000ebe0_2:;
    uint64_t v53 = v32;
    int64_t v54 = v34;
    uint64_t v55 = *v3; // 0x14000ebe0
    int64_t v56; // 0x14000e980
    char v57; // 0x14000e980
    if (v55 >= *v4) {
        // 0x14000ebff
        v56 = v55;
        v57 = 0;
        if (*v5 == 0) {
            goto lab_0x14000ec26;
        } else {
            // 0x14000ec06
            function_140001d70(a1);
            int64_t v58 = *v3; // 0x14000ec0e
            int64_t v59 = v58 + 1; // 0x14000ec18
            *v3 = v59;
            v56 = v59;
            v57 = *(char *)v58;
            goto lab_0x14000ec26;
        }
    } else {
        int64_t v60 = v55 + 1; // 0x14000ebf3
        *v3 = v60;
        v56 = v60;
        v57 = *(char *)v55;
        goto lab_0x14000ec26;
    }
  lab_0x14000ed97:;
    unsigned char v61 = v49;
    uint64_t v62 = v48; // 0x14000edbc
    if (*v6 == 0) {
        goto lab_0x14000edb5;
    } else {
        if ((int32_t)v62 == 0) {
            goto lab_0x14000edc9;
        } else {
            // 0x14000edaa
            if (*v5 == 0) {
                goto lab_0x14000eed9_2;
            } else {
                goto lab_0x14000edb5;
            }
        }
    }
  lab_0x14000edb5:
    // 0x14000edb5
    if (v62 >= *v4) {
        goto lab_0x14000eed9_2;
    } else {
        goto lab_0x14000edc9;
    }
  lab_0x14000ec26:;
    char v63 = v57;
    uint64_t v64 = v56; // 0x14000ec4e
    if (*v6 == 0) {
        goto lab_0x14000ec47;
    } else {
        if ((int32_t)v64 == 0) {
            goto lab_0x14000ec5b;
        } else {
            // 0x14000ec3c
            if (*v5 == 0) {
                goto lab_0x14000eed9_2;
            } else {
                goto lab_0x14000ec47;
            }
        }
    }
  lab_0x14000edc9:;
    unsigned char v65 = *v39; // 0x14000edc9
    int64_t v66 = v65; // 0x14000edc9
    int64_t v67; // 0x14000e980
    int64_t v68; // 0x14000e980
    int64_t v69; // 0x14000e980
    int32_t v70; // bp-100, 0x14000e980
    int64_t v71; // 0x14000edf8
    if (function_14000e880(a1, v66, (int64_t *)&v70) == 0) {
        goto lab_0x14000ef0c;
    } else {
        int64_t v72 = (int32_t)v61 > (int32_t)v45 ? v45 : (int64_t)v61;
        v71 = v72 & 255;
        v68 = v46;
        if ((char)v72 == 0) {
            goto lab_0x14000ee46;
        } else {
            // 0x14000ee00
            v69 = v71;
            v67 = v46;
            goto lab_0x14000ee18;
        }
    }
  lab_0x14000ec47:
    // 0x14000ec47
    if (v64 >= *v4) {
        goto lab_0x14000eed9_2;
    } else {
        goto lab_0x14000ec5b;
    }
  lab_0x14000ec5b:;
    uint64_t v73 = (int64_t)v63;
    int64_t v74; // 0x14000e980
    int64_t v75; // 0x14000e980
    int64_t v76; // 0x14000e980
    int64_t v77; // 0x14000ecf0
    if (v63 > -1) {
        // 0x14000ecf0
        v77 = v73 + 1;
        if ((int32_t)v77 > (int32_t)v53) {
            goto lab_0x14000eed9_2;
        } else {
            // 0x14000ed01
            v74 = v54;
            v75 = 0;
            goto lab_0x14000ed10;
        }
    } else {
        if (v63 != -128) {
            // 0x14000ec75
            v76 = v73 + 0xffffff81;
            goto lab_0x14000ec78;
        } else {
            // 0x14000ec69
            v76 = function_140001ec0(a1);
            goto lab_0x14000ec78;
        }
    }
  lab_0x14000ee46:;
    int64_t v78 = v45 - v71; // 0x14000ee46
    int32_t v79 = v78; // 0x14000ee49
    v35 = v68;
    v33 = v78 & 0xffffffff;
    if (v79 >= 0 == (v79 != 0)) {
        goto lab_0x14000ed50_2;
    } else {
        goto lab_0x14000ee81;
    }
  lab_0x14000ee18:;
    int64_t v80 = v67;
    if (v65 >= 0) {
        goto lab_0x14000ee1f;
    } else {
        // 0x14000ee1d
        *(char *)v80 = (char)v70;
        goto lab_0x14000ee1f;
    }
  lab_0x14000ee1f:
    if ((v66 & 64) == 0) {
        goto lab_0x14000ee29;
    } else {
        // 0x14000ee25
        goto lab_0x14000ee29;
    }
  lab_0x14000ed10:;
    // 0x14000ed10
    int64_t v81; // 0x14000e980
    int64_t v82; // 0x14000e980
    if (function_14000e880(a1, (int64_t)*v40, (int64_t *)v74) == 0) {
        goto lab_0x14000ef0c;
    } else {
        int64_t v83 = v75 + 1 & 0xffffffff; // 0x14000ed26
        int64_t v84 = v74 + 4; // 0x14000ed28
        v74 = v84;
        v75 = v83;
        v81 = v84;
        v82 = v77;
        if (v83 > v73) {
            goto lab_0x14000ed30;
        } else {
            goto lab_0x14000ed10;
        }
    }
  lab_0x14000ec78:;
    int64_t v85 = v76;
    int64_t v86 = v85 & 0xffffffff;
    int64_t v87; // 0x14000e980
    int64_t v88; // 0x14000e980
    int32_t v89; // bp-104, 0x14000e980
    unsigned char v90; // 0x14000ec81
    int64_t v91; // 0x14000ec81
    if (v86 > v53) {
        goto lab_0x14000eed9_2;
    } else {
        // 0x14000ec81
        v90 = *v40;
        v91 = v90;
        if (function_14000e880(a1, v91, (int64_t *)&v89) == 0) {
            goto lab_0x14000ef0c;
        } else {
            // 0x14000ec9e
            v81 = v54;
            v82 = v86;
            if ((int32_t)v85 < 1) {
                goto lab_0x14000ed30;
            } else {
                // 0x14000eca6
                v88 = v86;
                v87 = v54;
                goto lab_0x14000ecc0;
            }
        }
    }
  lab_0x14000ee29:
    if ((v66 & 32) == 0) {
        goto lab_0x14000ee33;
    } else {
        // 0x14000ee2f
        goto lab_0x14000ee33;
    }
  lab_0x14000ee33:
    if ((v66 & 16) == 0) {
        goto lab_0x14000ee3c;
    } else {
        // 0x14000ee39
        goto lab_0x14000ee3c;
    }
  lab_0x14000ed30:;
    int64_t v92 = v53 - v82; // 0x14000ed30
    int32_t v93 = v92; // 0x14000ed33
    v34 = v81;
    v32 = v92 & 0xffffffff;
    if (v93 >= 0 == (v93 != 0)) {
        goto lab_0x14000ebe0_2;
    } else {
        goto lab_0x14000ee81;
    }
  lab_0x14000ee3c:;
    int64_t v94 = v80 + 4; // 0x14000ee3c
    int64_t v95 = v69 - 1; // 0x14000ee40
    v69 = v95;
    v67 = v94;
    v68 = v94;
    if (v95 != 0) {
        goto lab_0x14000ee18;
    } else {
        goto lab_0x14000ee46;
    }
  lab_0x14000ecc0:;
    int64_t v96 = v87;
    if (v90 >= 0) {
        goto lab_0x14000ecc7;
    } else {
        // 0x14000ecc5
        *(char *)v96 = (char)v89;
        goto lab_0x14000ecc7;
    }
  lab_0x14000ecc7:
    if ((v91 & 64) == 0) {
        goto lab_0x14000ecd1;
    } else {
        // 0x14000eccd
        goto lab_0x14000ecd1;
    }
  lab_0x14000ecd1:
    if ((v91 & 32) == 0) {
        goto lab_0x14000ecdb;
    } else {
        // 0x14000ecd7
        goto lab_0x14000ecdb;
    }
  lab_0x14000ecdb:
    if ((v91 & 16) == 0) {
        goto lab_0x14000ece4;
    } else {
        // 0x14000ece1
        goto lab_0x14000ece4;
    }
  lab_0x14000ece4:;
    int64_t v97 = v96 + 4; // 0x14000ece4
    int64_t v98 = v88 - 1; // 0x14000ece8
    v88 = v98;
    v87 = v97;
    v81 = v97;
    v82 = v86;
    if (v98 != 0) {
        goto lab_0x14000ecc0;
    } else {
        goto lab_0x14000ed30;
    }
}

// Address range: 0x14000ef50 - 0x14000f1ad
int64_t function_14000ef50(int64_t a1, int64_t a2, int64_t a3, int64_t a4, int64_t a5) {
    int64_t * v1 = (int64_t *)(a1 + 192);
    int64_t * v2 = (int64_t *)(a1 + 200);
    int32_t * v3 = (int32_t *)(a1 + 48);
    int64_t v4 = *v1; // 0x14000ef95
    for (int64_t i = 92; i > 0; i--) {
        int64_t v5 = v4; // 0x14000efa0
        if (v5 >= *v2) {
            // 0x14000efbc
            v4 = v5;
            if (*v3 != 0) {
                // 0x14000efc2
                function_140001d70(a1);
                int64_t v6 = *v1 + 1; // 0x14000efca
                *v1 = v6;
                v4 = v6;
            }
        } else {
            int64_t v7 = v5 + 1; // 0x14000efb0
            *v1 = v7;
            v4 = v7;
        }
    }
    int64_t v8 = function_140001ec0(a1); // 0x14000efda
    int64_t v9 = function_140001ec0(a1); // 0x14000efe4
    int32_t v10 = v9;
    int32_t v11 = v8; // 0x14000f01b
    if (v11 > 0x1000000 || v10 > 0x1000000) {
        // 0x14000eff2
        *(int64_t *)(*(int64_t *)__readgsqword(88) + 16) = (int64_t)"too large";
        // 0x14000f192
        __security_check_cookie(g66);
        return &g103;
    }
    // 0x14000f01d
    if (*(int64_t *)(a1 + 16) == 0) {
        goto lab_0x14000f035;
    } else {
        if (v10 == 0) {
            goto lab_0x14000f068;
        } else {
            // 0x14000f02f
            if (*v3 == 0) {
                // 0x14000f045
                *(int64_t *)(*(int64_t *)__readgsqword(88) + 16) = (int64_t)"bad file";
                // 0x14000f192
                __security_check_cookie(g66);
                return &g103;
            }
            goto lab_0x14000f035;
        }
    }
  lab_0x14000f035:
    // 0x14000f035
    if (*v1 >= *v2) {
        // 0x14000f045
        *(int64_t *)(*(int64_t *)__readgsqword(88) + 16) = (int64_t)"bad file";
        // 0x14000f192
        __security_check_cookie(g66);
        return &g103;
    }
    goto lab_0x14000f068;
  lab_0x14000f068:
    if (v11 < 0 || v10 < 0) {
        // 0x14000f16f
        *(int64_t *)(*(int64_t *)__readgsqword(88) + 16) = (int64_t)"too large";
        // 0x14000f192
        __security_check_cookie(g66);
        return &g103;
    }
    if (v10 != 0) {
        int32_t v12 = v11 - 0x7fffffff / v10; // 0x14000f089
        if (v12 != 0 && v12 < 0 == ((v12 ^ -0x80000000) & v11) < 0) {
            // 0x14000f16f
            *(int64_t *)(*(int64_t *)__readgsqword(88) + 16) = (int64_t)"too large";
            // 0x14000f192
            __security_check_cookie(g66);
            return &g103;
        }
    }
    int64_t v13 = 0x100000000 * v9 >> 32; // 0x14000f099
    uint32_t v14 = (int32_t)(v13 * (0x100000000 * v8 >> 32)); // 0x14000f09d
    if (v14 > 0x1fffffff) {
        // 0x14000f16f
        *(int64_t *)(*(int64_t *)__readgsqword(88) + 16) = (int64_t)"too large";
        // 0x14000f192
        __security_check_cookie(g66);
        return &g103;
    }
    uint64_t v15 = v8 & 0xffffffff; // 0x14000efe2
    function_140001ec0(a1);
    function_140001ec0(a1);
    function_140001ec0(a1);
    function_140001ec0(a1);
    int32_t v16; // 0x14000ef50
    int64_t v17; // 0x14000ef50
    if (v10 == 0) {
        goto lab_0x14000f0f4;
    } else {
        if (v15 > (int64_t)(0x7fffffff / v10)) {
            // 0x14000f0e8
            v16 = 4 * v14;
            v17 = 0;
            goto lab_0x14000f108;
        } else {
            goto lab_0x14000f0f4;
        }
    }
  lab_0x14000f0f4:;
    int32_t size = 4 * v14;
    int64_t * mem = malloc(size); // 0x14000f0ff
    v16 = size;
    v17 = (int64_t)mem;
    goto lab_0x14000f108;
  lab_0x14000f108:;
    // 0x14000f108
    int64_t v18; // bp-96, 0x14000ef50
    int64_t v19 = a4 != 0 ? a4 : (int64_t)&v18; // 0x14000ef88
    int64_t * v20 = (int64_t *)v17; // 0x14000f113
    memset(v20, 255, v16);
    int64_t v21 = function_14000e980(a1, v15, v9 & 0xffffffff, v19, v17); // 0x14000f128
    int64_t v22 = v17; // 0x14000f130
    if (v21 == 0) {
        // 0x14000f132
        free(v20);
        v22 = 0;
    }
    // 0x14000f13d
    *(int32_t *)a2 = v11;
    *(int32_t *)a3 = v10;
    int64_t v23 = a5 & 0xffffffff; // 0x14000f14b
    if ((int32_t)a5 == 0) {
        // 0x14000f14d
        v23 = (int64_t)*(int32_t *)v19;
    }
    // 0x14000f151
    function_140002040(v22, 4, v23, v11, v13);
    // 0x14000f192
    __security_check_cookie(g66);
    return &g103;
}

// Address range: 0x14000f1b0 - 0x14000f311
int64_t function_14000f1b0(int64_t a1) {
    int64_t * v1 = (int64_t *)(a1 + 192); // 0x14000f1b6
    uint64_t v2 = *v1; // 0x14000f1b6
    int64_t * v3 = (int64_t *)(a1 + 200); // 0x14000f1c0
    int64_t v4 = v2; // 0x14000f1c7
    if (v2 >= *v3) {
        // 0x14000f1c9
        if (*(int32_t *)(a1 + 48) == 0) {
            // 0x14000f2fe
            return 0;
        }
        // 0x14000f1d3
        function_140001d70(a1);
        v4 = *v1;
    }
    int64_t v5 = v4 + 1; // 0x14000f1e2
    *v1 = v5;
    if (*(char *)v4 != 71) {
        // 0x14000f2fe
        return 0;
    }
    int64_t v6 = v5; // 0x14000f1fc
    if (v5 >= *v3) {
        // 0x14000f1fe
        if (*(int32_t *)(a1 + 48) == 0) {
            // 0x14000f2fe
            return 0;
        }
        // 0x14000f208
        function_140001d70(a1);
        v6 = *v1;
    }
    int64_t v7 = v6 + 1; // 0x14000f21a
    *v1 = v7;
    if (*(char *)v6 != 73) {
        // 0x14000f2fe
        return 0;
    }
    int64_t v8 = v7; // 0x14000f234
    if (v7 >= *v3) {
        // 0x14000f236
        if (*(int32_t *)(a1 + 48) == 0) {
            // 0x14000f2fe
            return 0;
        }
        // 0x14000f240
        function_140001d70(a1);
        v8 = *v1;
    }
    int64_t v9 = v8 + 1; // 0x14000f252
    *v1 = v9;
    if (*(char *)v8 != 70) {
        // 0x14000f2fe
        return 0;
    }
    int64_t v10 = v9; // 0x14000f26c
    if (v9 >= *v3) {
        // 0x14000f26e
        if (*(int32_t *)(a1 + 48) == 0) {
            // 0x14000f2fe
            return 0;
        }
        // 0x14000f278
        function_140001d70(a1);
        v10 = *v1;
    }
    int64_t v11 = v10 + 1; // 0x14000f28a
    *v1 = v11;
    if (*(char *)v10 != 56) {
        // 0x14000f2fe
        return 0;
    }
    int64_t v12 = v11; // 0x14000f2a0
    if (v11 >= *v3) {
        // 0x14000f2a2
        if (*(int32_t *)(a1 + 48) == 0) {
            // 0x14000f2fe
            return 0;
        }
        // 0x14000f2a8
        function_140001d70(a1);
        v12 = *v1;
    }
    char v13 = *(char *)v12; // 0x14000f2b7
    int64_t v14 = v12 + 1; // 0x14000f2ba
    *v1 = v14;
    if (v13 != 57 == (v13 != 55)) {
        // 0x14000f2fe
        return 0;
    }
    int64_t v15 = v14; // 0x14000f2d5
    if (v14 >= *v3) {
        // 0x14000f2d7
        if (*(int32_t *)(a1 + 48) == 0) {
            // 0x14000f2fe
            return 0;
        }
        // 0x14000f2dd
        function_140001d70(a1);
        v15 = *v1;
    }
    // 0x14000f2ec
    *v1 = v15 + 1;
    if (*(char *)v15 == 97) {
        // 0x14000f2fe
        return 1;
    }
    // 0x14000f2fe
    return 0;
}

// Address range: 0x14000f320 - 0x14000f46f
int64_t function_14000f320(int64_t a1, int64_t a2, int64_t a3, int64_t a4) {
    if ((int32_t)a3 < 1) {
        // 0x14000f46e
        int64_t result; // 0x14000f320
        return result;
    }
    int64_t * v1 = (int64_t *)(a1 + 192); // 0x14000f360
    int64_t * v2 = (int64_t *)(a1 + 200); // 0x14000f367
    int32_t * v3 = (int32_t *)(a1 + 48);
    int64_t v4 = 0x100000000 * a3 >> 32; // 0x14000f358
    int64_t v5 = 0; // 0x14000f358
    int64_t v6 = a2 + 1; // 0x14000f358
    uint64_t v7 = *v1; // 0x14000f360
    char v8; // 0x14000f320
    int64_t v9; // 0x14000f38d
    if (v7 >= *v2) {
        // 0x14000f37f
        v8 = 0;
        if (*v3 != 0) {
            // 0x14000f385
            function_140001d70(a1);
            v9 = *v1;
            *v1 = v9 + 1;
            v8 = *(char *)v9;
        }
    } else {
        // 0x14000f370
        *v1 = v7 + 1;
        v8 = *(char *)v7;
    }
    // 0x14000f3a5
    *(char *)(v6 + 1) = v8;
    uint64_t v10 = *v1; // 0x14000f3a8
    char v11; // 0x14000f320
    int64_t v12; // 0x14000f3d5
    if (v10 >= *v2) {
        // 0x14000f3c7
        v11 = 0;
        if (*v3 != 0) {
            // 0x14000f3cd
            function_140001d70(a1);
            v12 = *v1;
            *v1 = v12 + 1;
            v11 = *(char *)v12;
        }
    } else {
        // 0x14000f3b8
        *v1 = v10 + 1;
        v11 = *(char *)v10;
    }
    // 0x14000f3ed
    *(char *)v6 = v11;
    uint64_t v13 = *v1; // 0x14000f3ef
    char v14; // 0x14000f320
    int64_t v15; // 0x14000f41c
    if (v13 >= *v2) {
        // 0x14000f40e
        v14 = 0;
        if (*v3 != 0) {
            // 0x14000f414
            function_140001d70(a1);
            v15 = *v1;
            *v1 = v15 + 1;
            v14 = *(char *)v15;
        }
    } else {
        // 0x14000f3ff
        *v1 = v13 + 1;
        v14 = *(char *)v13;
    }
    // 0x14000f434
    *(char *)(v6 - 1) = v14;
    int64_t result2 = (int32_t)a4 == (int32_t)v5 ? 0 : 255; // 0x14000f43f
    *(char *)(v6 + 2) = (char)result2;
    v4--;
    v5 = v5 + 1 & 0xffffffff;
    v6 += 4;
    while (v4 != 0) {
        // 0x14000f360
        v7 = *v1;
        if (v7 >= *v2) {
            // 0x14000f37f
            v8 = 0;
            if (*v3 != 0) {
                // 0x14000f385
                function_140001d70(a1);
                v9 = *v1;
                *v1 = v9 + 1;
                v8 = *(char *)v9;
            }
        } else {
            // 0x14000f370
            *v1 = v7 + 1;
            v8 = *(char *)v7;
        }
        // 0x14000f3a5
        *(char *)(v6 + 1) = v8;
        v10 = *v1;
        if (v10 >= *v2) {
            // 0x14000f3c7
            v11 = 0;
            if (*v3 != 0) {
                // 0x14000f3cd
                function_140001d70(a1);
                v12 = *v1;
                *v1 = v12 + 1;
                v11 = *(char *)v12;
            }
        } else {
            // 0x14000f3b8
            *v1 = v10 + 1;
            v11 = *(char *)v10;
        }
        // 0x14000f3ed
        *(char *)v6 = v11;
        v13 = *v1;
        if (v13 >= *v2) {
            // 0x14000f40e
            v14 = 0;
            if (*v3 != 0) {
                // 0x14000f414
                function_140001d70(a1);
                v15 = *v1;
                *v1 = v15 + 1;
                v14 = *(char *)v15;
            }
        } else {
            // 0x14000f3ff
            *v1 = v13 + 1;
            v14 = *(char *)v13;
        }
        // 0x14000f434
        *(char *)(v6 - 1) = v14;
        result2 = (int32_t)a4 == (int32_t)v5 ? 0 : 255;
        *(char *)(v6 + 2) = (char)result2;
        v4--;
        v5 = v5 + 1 & 0xffffffff;
        v6 += 4;
    }
    // 0x14000f46e
    return result2;
}

// Address range: 0x14000f470 - 0x14000f79d
int64_t function_14000f470(int64_t a1, int64_t a2, int64_t a3) {
    int64_t * v1 = (int64_t *)(a1 + 192); // 0x14000f480
    uint64_t v2 = *v1; // 0x14000f480
    int64_t * v3 = (int64_t *)(a1 + 200); // 0x14000f490
    int64_t v4 = v2; // 0x14000f497
    int64_t v5; // 0x14000f470
    if (v2 >= *v3) {
        // 0x14000f499
        if (*(int32_t *)(a1 + 48) == 0) {
            // 0x14000f76e
            v5 = 16;
            // 0x14000f773
            *(int64_t *)(*(int64_t *)__readgsqword(88) + 16) = (int64_t)"not GIF";
            return (int32_t)"not GIF" ^ (int32_t)"not GIF";
        }
        // 0x14000f4a3
        function_140001d70(a1);
        v4 = *v1;
    }
    int64_t v6 = v4 + 1; // 0x14000f4b2
    *v1 = v6;
    if (*(char *)v4 != 71) {
        // 0x14000f76e
        v5 = 16;
        // 0x14000f773
        *(int64_t *)(*(int64_t *)__readgsqword(88) + 16) = (int64_t)"not GIF";
        return (int32_t)"not GIF" ^ (int32_t)"not GIF";
    }
    int64_t v7 = v6; // 0x14000f4cc
    if (v6 >= *v3) {
        // 0x14000f4ce
        if (*(int32_t *)(a1 + 48) == 0) {
            // 0x14000f76e
            v5 = 16;
            // 0x14000f773
            *(int64_t *)(*(int64_t *)__readgsqword(88) + 16) = (int64_t)"not GIF";
            return (int32_t)"not GIF" ^ (int32_t)"not GIF";
        }
        // 0x14000f4d8
        function_140001d70(a1);
        v7 = *v1;
    }
    int64_t v8 = v7 + 1; // 0x14000f4ea
    *v1 = v8;
    if (*(char *)v7 != 73) {
        // 0x14000f76e
        v5 = 16;
        // 0x14000f773
        *(int64_t *)(*(int64_t *)__readgsqword(88) + 16) = (int64_t)"not GIF";
        return (int32_t)"not GIF" ^ (int32_t)"not GIF";
    }
    int64_t v9 = v8; // 0x14000f504
    if (v8 >= *v3) {
        // 0x14000f506
        if (*(int32_t *)(a1 + 48) == 0) {
            // 0x14000f76e
            v5 = 16;
            // 0x14000f773
            *(int64_t *)(*(int64_t *)__readgsqword(88) + 16) = (int64_t)"not GIF";
            return (int32_t)"not GIF" ^ (int32_t)"not GIF";
        }
        // 0x14000f510
        function_140001d70(a1);
        v9 = *v1;
    }
    int64_t v10 = v9 + 1; // 0x14000f522
    *v1 = v10;
    if (*(char *)v9 != 70) {
        // 0x14000f76e
        v5 = 16;
        // 0x14000f773
        *(int64_t *)(*(int64_t *)__readgsqword(88) + 16) = (int64_t)"not GIF";
        return (int32_t)"not GIF" ^ (int32_t)"not GIF";
    }
    int64_t v11 = v10; // 0x14000f53c
    if (v10 >= *v3) {
        // 0x14000f53e
        if (*(int32_t *)(a1 + 48) == 0) {
            // 0x14000f76e
            v5 = 16;
            // 0x14000f773
            *(int64_t *)(*(int64_t *)__readgsqword(88) + 16) = (int64_t)"not GIF";
            return (int32_t)"not GIF" ^ (int32_t)"not GIF";
        }
        // 0x14000f548
        function_140001d70(a1);
        v11 = *v1;
    }
    int64_t v12 = v11 + 1; // 0x14000f55a
    *v1 = v12;
    if (*(char *)v11 != 56) {
        // 0x14000f76e
        v5 = 16;
        // 0x14000f773
        *(int64_t *)(*(int64_t *)__readgsqword(88) + 16) = (int64_t)"not GIF";
        return (int32_t)"not GIF" ^ (int32_t)"not GIF";
    }
    int64_t v13 = v12; // 0x14000f574
    if (v12 >= *v3) {
        // 0x14000f576
        if (*(int32_t *)(a1 + 48) == 0) {
            // 0x14000f76e
            v5 = 16;
            // 0x14000f773
            *(int64_t *)(*(int64_t *)__readgsqword(88) + 16) = (int64_t)"not GIF";
            return (int32_t)"not GIF" ^ (int32_t)"not GIF";
        }
        // 0x14000f580
        function_140001d70(a1);
        v13 = *v1;
    }
    int64_t v14 = v13 + 1; // 0x14000f592
    *v1 = v14;
    if ((*(char *)v13 - 55 & -3) != 0) {
        // 0x14000f76e
        v5 = 16;
        // 0x14000f773
        *(int64_t *)(*(int64_t *)__readgsqword(88) + 16) = (int64_t)"not GIF";
        return (int32_t)"not GIF" ^ (int32_t)"not GIF";
    }
    int64_t v15 = v14; // 0x14000f5af
    if (v14 >= *v3) {
        // 0x14000f5b1
        if (*(int32_t *)(a1 + 48) == 0) {
            // 0x14000f76e
            v5 = 16;
            // 0x14000f773
            *(int64_t *)(*(int64_t *)__readgsqword(88) + 16) = (int64_t)"not GIF";
            return (int32_t)"not GIF" ^ (int32_t)"not GIF";
        }
        // 0x14000f5bb
        function_140001d70(a1);
        v15 = *v1;
    }
    // 0x14000f5ca
    *v1 = v15 + 1;
    v5 = 16;
    if (*(char *)v15 != 97) {
        // 0x14000f773
        *(int64_t *)(*(int64_t *)__readgsqword(88) + 16) = (int64_t)"not GIF";
        return (int32_t)"not GIF" ^ (int32_t)"not GIF";
    }
    int64_t * v16 = (int64_t *)(*(int64_t *)__readgsqword(88) + 16); // 0x14000f603
    *v16 = (int64_t)&g10;
    *(int32_t *)a2 = (int32_t)function_140001f80(a1);
    int64_t v17 = function_140001f80(a1); // 0x14000f610
    int32_t * v18 = (int32_t *)(a2 + 4); // 0x14000f615
    *v18 = (int32_t)v17;
    uint64_t v19 = *v1; // 0x14000f618
    char v20; // 0x14000f470
    if (v19 >= *v3) {
        // 0x14000f637
        v20 = 0;
        if (*(int32_t *)(a1 + 48) != 0) {
            // 0x14000f63d
            function_140001d70(a1);
            int64_t v21 = *v1; // 0x14000f645
            *v1 = v21 + 1;
            v20 = *(char *)v21;
        }
    } else {
        // 0x14000f628
        *v1 = v19 + 1;
        v20 = *(char *)v19;
    }
    int32_t * v22 = (int32_t *)(a2 + 32); // 0x14000f660
    *v22 = (int32_t)v20;
    uint64_t v23 = *v1; // 0x14000f663
    char v24; // 0x14000f470
    if (v23 >= *v3) {
        // 0x14000f682
        v24 = 0;
        if (*(int32_t *)(a1 + 48) != 0) {
            // 0x14000f688
            function_140001d70(a1);
            int64_t v25 = *v1; // 0x14000f690
            *v1 = v25 + 1;
            v24 = *(char *)v25;
        }
    } else {
        // 0x14000f673
        *v1 = v23 + 1;
        v24 = *(char *)v23;
    }
    // 0x14000f6a8
    *(int32_t *)(a2 + 36) = (int32_t)v24;
    uint64_t v26 = *v1; // 0x14000f6ae
    char v27; // 0x14000f470
    if (v26 >= *v3) {
        // 0x14000f6cd
        v27 = 0;
        if (*(int32_t *)(a1 + 48) != 0) {
            // 0x14000f6d3
            function_140001d70(a1);
            int64_t v28 = *v1; // 0x14000f6db
            *v1 = v28 + 1;
            v27 = *(char *)v28;
        }
    } else {
        // 0x14000f6be
        *v1 = v26 + 1;
        v27 = *(char *)v26;
    }
    // 0x14000f6f3
    *(int32_t *)(a2 + 40) = (int32_t)v27;
    *(int32_t *)(a2 + 44) = -1;
    if (*(int32_t *)&v5 > 0x1000000 || *v18 > 0x1000000) {
        // 0x14000f760
        *v16 = (int64_t)"too large";
        // 0x14000f74a
        return (int32_t)"too large" ^ (int32_t)"too large";
    }
    if (a3 != 0) {
        // 0x14000f716
        *(int32_t *)a3 = 4;
    }
    int32_t v29 = *v22; // 0x14000f71d
    if ((char)v29 < 0) {
        int64_t v30 = a2 + 52; // 0x14000f727
        v5 = v30;
        function_14000f320(a1, v30, (int64_t)(2 << (v29 & 7)), 0xffffffff);
    }
    // 0x14000f74a
    return 1;
}

// Address range: 0x14000f7a0 - 0x14000f8b3
int64_t function_14000f7a0(int64_t a1, uint16_t a2) {
    int64_t v1 = 4 * (int64_t)a2 + a1;
    uint16_t v2 = *(int16_t *)(v1 + 2100); // 0x14000f7b0
    int64_t result; // 0x14000f7a0
    if (v2 >= 0) {
        // 0x14000f7bd
        result = function_14000f7a0(a1, v2);
    }
    int32_t * v3 = (int32_t *)(a1 + 0x8860); // 0x14000f7c2
    uint32_t v4 = *v3; // 0x14000f7c2
    int32_t * v5 = (int32_t *)(a1 + 0x8858); // 0x14000f7c8
    if (v4 >= *v5) {
        // 0x14000f8a8
        return result;
    }
    int32_t * v6 = (int32_t *)(a1 + 0x885c); // 0x14000f7d4
    int32_t v7 = *v6 + v4; // 0x14000f7da
    int64_t v8 = *(int64_t *)(a1 + 24); // 0x14000f7ef
    *(char *)(v8 + (int64_t)(((v7 >> 31 & 3) + v7) / 4)) = 1;
    int64_t v9 = 4 * (int64_t)*(char *)(v1 + 2103) + *(int64_t *)(a1 + 0x8838);
    char * v10 = (char *)(v9 + 3);
    char v11 = *v10; // 0x14000f806
    if (v11 <= -1 && v11 != -128) {
        int64_t v12 = *(int64_t *)(a1 + 8) + (int64_t)v7; // 0x14000f7e0
        *(char *)v12 = *(char *)(v9 + 2);
        *(char *)(v12 + 1) = *(char *)(v9 + 1);
        *(char *)(v12 + 2) = *(char *)v9;
        *(char *)(v12 + 3) = *v10;
    }
    int32_t result2 = *v6 + 4; // 0x14000f82f
    *v6 = result2;
    if (result2 < *(int32_t *)(a1 + 0x8854)) {
        // 0x14000f8a8
        return result2;
    }
    uint32_t v13 = *v5; // 0x14000f84a
    *v6 = *(int32_t *)(a1 + 0x884c);
    int32_t * v14 = (int32_t *)(a1 + 0x8844); // 0x14000f857
    uint32_t v15 = *v14; // 0x14000f857
    int64_t result3 = v15; // 0x14000f857
    int32_t v16 = *v3 + v15; // 0x14000f85d
    *v3 = v16;
    if ((int64_t)v16 < (int64_t)v13) {
        // 0x14000f8a8
        return result3;
    }
    int32_t * v17 = (int32_t *)(a1 + 0x8840); // 0x14000f86c
    int64_t v18 = (int64_t)*v17; // 0x14000f86c
    int32_t v19 = v18; // 0x14000f873
    while (v19 >= 1) {
        int32_t v20 = *(int32_t *)(a1 + 0x8864) << (v19 & 31);
        *v14 = v20;
        uint32_t v21 = (v20 >> 1) + *(int32_t *)(a1 + 0x8850); // 0x14000f891
        int64_t v22 = v18 + 0xffffffff; // 0x14000f893
        *v3 = v21;
        *v17 = (int32_t)v22;
        v18 = v22 & 0xffffffff;
        if (v13 > v21) {
            // break -> 0x14000f8a8
            break;
        }
        v19 = v18;
    }
    // 0x14000f8a8
    return result3;
}

// Address range: 0x14000f8c0 - 0x14000fd43
int64_t function_14000f8c0(int64_t a1, int64_t a2) {
    int64_t * v1 = (int64_t *)(a1 + 192); // 0x14000f8c8
    uint64_t v2 = *v1; // 0x14000f8c8
    int64_t v3 = v2; // 0x14000f8dc
    int64_t v4; // 0x14000f8c0
    if (v2 < *(int64_t *)(a1 + 200)) {
        goto lab_0x14000f8f0;
    } else {
        // 0x14000f8de
        v4 = 0;
        if (*(int32_t *)(a1 + 48) == 0) {
            goto lab_0x14000f90e;
        } else {
            // 0x14000f8e4
            function_140001d70(a1);
            v3 = *v1;
            goto lab_0x14000f8f0;
        }
    }
  lab_0x14000fc03_2:;
    int64_t v5 = __readgsqword(88); // 0x14000fc03
    int64_t v6 = *(int64_t *)v5; // 0x14000fc11
    *(int64_t *)(v6 + 16) = (int64_t)"illegal code in raster";
    int64_t v7 = (int32_t)"illegal code in raster" ^ (int32_t)"illegal code in raster"; // 0x14000fc21
    goto lab_0x14000f902;
  lab_0x14000fc80:;
    // 0x14000fc80
    int64_t v12; // 0x14000f8c0
    int64_t v13 = v12;
    *v1 = v13;
    int64_t v14 = v13; // 0x14000f8c0
    goto lab_0x14000fc80_2;
  lab_0x14000f8f0:;
    unsigned char v41 = *(char *)v3; // 0x14000f8f0
    *v1 = v3 + 1;
    v4 = v41;
    if (v41 >= 13) {
        // 0x14000f902
        return 0;
    }
    goto lab_0x14000f90e;
  lab_0x14000f90e:
    // 0x14000f90e
    if (((int32_t)(v4 + 1) & 31) != 0) {
        // branch ->
    }
    uint32_t v42 = 1 << ((int32_t)v4 & 31);
    int64_t v43 = a2 + 2102; // 0x14000f97e
    int64_t v44 = 0; // 0x14000f97e
    if (v42 >= 1) {
        char v45 = v44; // 0x14000f990
        *(char *)v43 = v45;
        *(char *)(v43 + 1) = v45;
        int64_t v46 = v44 + 1 & 0xffffffff; // 0x14000f995
        *(int16_t *)(v43 - 2) = -1;
        v43 += 4;
        v44 = v46;
        while (v46 < (int64_t)v42) {
            // 0x14000f990
            v45 = v44;
            *(char *)v43 = v45;
            *(char *)(v43 + 1) = v45;
            v46 = v44 + 1 & 0xffffffff;
            *(int16_t *)(v43 - 2) = -1;
            v43 += 4;
            v44 = v46;
        }
    }
    // 0x14000f9a4
    while (true) {
        // continue -> 0x14000f9c0
    }
  lab_0x14000fc26:;
    // 0x14000fc26
    uint64_t v10; // 0x14000f8c0
    int32_t v47 = v10; // 0x14000fc26
    int64_t v11; // 0x14000f8c0
    int64_t v48; // 0x14000f8d5
    int64_t * v17; // 0x14000f8d5
    if (v47 == 0) {
        int64_t v49 = *v1;
        v11 = v49;
        goto lab_0x14000fc80_3;
    } else {
        if (v47 >= 0) {
            int64_t v50 = *(int64_t *)(a1 + 16); // 0x14000fc3c
            if (v50 == 0) {
                goto lab_0x14000fc6e;
            } else {
                int32_t v51 = *(int32_t *)v48; // 0x14000fc43
                int64_t v52; // 0x14000f8c8
                int32_t v53 = *(int32_t *)v52; // 0x14000fc49
                if (v10 > (int64_t)(v51 - v53)) {
                    int64_t v54 = *v17; // 0x14000fc53
                    *v1 = v54;
                    v11 = v54;
                    goto lab_0x14000fc80_3;
                } else {
                    goto lab_0x14000fc6e;
                }
            }
        } else {
            int64_t v55 = *v17; // 0x14000fc2c
            *v1 = v55;
            v11 = v55;
            goto lab_0x14000fc80_3;
        }
    }
  lab_0x14000fc80_3:;
    int64_t v56 = v11;
    int64_t * v36 = (int64_t *)(a1 + 16);
    int32_t * v39 = (int32_t *)v48;
    v14 = v56;
    while (true) {
      lab_0x14000fc80_2:;
        int64_t v15 = v14; // 0x14000fc80
        uint64_t v16 = *v17; // 0x14000fc87
        int64_t v18; // 0x14000f8c0
        int64_t v19; // 0x14000f8c0
        int64_t v20; // 0x14000f8c0
        if (v15 >= v16) {
            // 0x14000fca3
            int32_t * v21; // 0x14000f8c0
            int32_t v22 = *v21; // 0x14000fca3
            int64_t v23 = v15; // 0x14000fca7
            int64_t v24 = 0; // 0x14000fca7
            if (v22 != 0) {
                // 0x14000fca9
                function_140001d70(a1);
                int64_t v25 = *v1; // 0x14000fcb1
                unsigned char v26 = *(char *)v25; // 0x14000fcb8
                int64_t v27 = v25 + 1; // 0x14000fcbb
                *v1 = v27;
                v23 = v27;
                v24 = v26;
            }
            int64_t v28 = v24;
            int64_t v29 = v23;
            v18 = v29 & 0xffffffff;
            v19 = v29;
            v20 = v28;
        } else {
            unsigned char v30 = *(char *)v15; // 0x14000fc90
            int64_t v31 = v15 + 1; // 0x14000fc93
            *v1 = v31;
            v18 = v31;
            v19 = v31;
            v20 = v30;
        }
        int64_t v32 = v20;
        uint64_t v33 = v32 & 255; // 0x14000fccc
        if (v33 == 0) {
            // break -> 0x14000fd16
            break;
        }
        int64_t v34 = v19;
        int64_t v35 = *v36; // 0x14000fcd3
        if (v35 == 0) {
            // 0x14000fd06
            v12 = v33 + v34;
            goto lab_0x14000fc80;
        } else {
            int64_t v37 = v18;
            int32_t v38 = *v39; // 0x14000fcda
            if (v33 > (int64_t)(v38 - (int32_t)v37)) {
                int64_t v40 = *v17; // 0x14000fce9
                v12 = v40;
                goto lab_0x14000fc80;
            } else {
                // 0x14000fd06
                v12 = v33 + v34;
                goto lab_0x14000fc80;
            }
        }
    }
  lab_0x14000fd16_2:;
    int64_t v57 = *(int64_t *)(a2 + 8); // 0x14000fd16
    v7 = v57;
  lab_0x14000f902:;
    int64_t result = v7;
    return result;
  lab_0x14000fc6e:;
    int64_t v8 = *v1; // 0x14000fc71
    int64_t v9 = v8 + 0x100000000 * v10 / 0x100000000; // 0x14000fc71
    *v1 = v9;
    v11 = v9;
    goto lab_0x14000fc80_3;
}

// Address range: 0x14000fd50 - 0x140010406
int64_t function_14000fd50(int64_t result, int64_t a2) {
    int64_t v1 = a2;
    int64_t * v2 = (int64_t *)(a2 + 8); // 0x14000fd78
    int64_t v3 = *v2; // 0x14000fd78
    int32_t * v4; // 0x14000fd50
    int64_t * v5; // 0x14000fd50
    int32_t * v6; // 0x14000fd50
    int32_t v7; // 0x14000fd50
    uint32_t v8; // 0x14000fd8f
    int64_t v9; // 0x14000fd8f
    int32_t * v10; // 0x14000fd50
    uint32_t v11; // 0x14000fd91
    if (v3 != 0) {
        int64_t v12 = v1;
        int32_t v13 = *(int32_t *)(v12 + 4) * *(int32_t *)&v1; // 0x14000fe93
        int32_t v14 = *(int32_t *)(v12 + 48) / 4 & 7; // 0x14000fe9d
        int64_t v15; // 0x14000fd50
        int64_t * v16; // 0x14000fd50
        int64_t * v17; // 0x14000fd50
        int64_t v18; // 0x14000fd50
        if (v13 < 1 || v14 != 3 == (v14 != 2)) {
            // 0x14000fe91
            v16 = (int64_t *)(a2 + 24);
            v17 = (int64_t *)(a2 + 16);
            v18 = v3;
            v15 = v12;
        } else {
            // 0x14000feb1
            v1 = 0;
            int64_t * v19 = (int64_t *)(a2 + 24);
            int64_t * v20 = (int64_t *)(a2 + 16);
            int64_t v21 = 0; // 0x14000feb8
            int64_t v22 = v21; // 0x14000febc
            int64_t v23; // 0x14000fec6
            if (*(char *)(*v19 + v21) != 0) {
                // 0x14000febe
                v23 = 4 * v21;
                *(int32_t *)(*v2 + v23) = *(int32_t *)(*v20 + v23);
                v22 = v1;
            }
            int64_t v24 = v22 + 1; // 0x14000fecc
            v1 = v24;
            while (v24 < (int64_t)v13) {
                // 0x14000feb4
                v21 = v24;
                v22 = v21;
                if (*(char *)(*v19 + v21) != 0) {
                    // 0x14000febe
                    v23 = 4 * v21;
                    *(int32_t *)(*v2 + v23) = *(int32_t *)(*v20 + v23);
                    v22 = v1;
                }
                // 0x14000fecc
                v24 = v22 + 1;
                v1 = v24;
            }
            // 0x14000fed4
            v16 = v19;
            v17 = v20;
            v18 = *v2;
            v15 = v24;
        }
        int32_t * v25 = (int32_t *)(a2 + 4);
        int32_t v26 = *v25; // 0x14000fed6
        v1 = v18;
        int64_t v27 = *v17; // 0x14000fede
        memcpy((int64_t *)v27, (int64_t *)v18, 4 * (int32_t)v15 * v26);
        v5 = v16;
        v4 = v25;
        v6 = (int32_t *)&v1;
        v7 = 0;
        goto lab_0x14000feed;
    } else {
        // 0x14000fd82
        int64_t v28; // 0x14000fd50
        if ((int32_t)function_14000f470(result, v1, v28) == 0) {
            // 0x1400103e9
            return 0;
        }
        // 0x14000fd8f
        v8 = *(int32_t *)&v1;
        if (v8 < 0) {
            goto lab_0x14000fe79;
        } else {
            // 0x14000fd9c
            v9 = v8;
            v10 = (int32_t *)(a2 + 4);
            v11 = *v10;
            if (v8 != 0) {
                // 0x14000fda8
                v1 = 0x7fffffff % v8;
                if (0x7fffffff / v8 < 4) {
                    goto lab_0x14000fe79;
                } else {
                    // 0x14000fdb9
                    if ((int32_t)(4 * v9) < 0) {
                        goto lab_0x14000fe79;
                    } else {
                        goto lab_0x14000fdca;
                    }
                }
            } else {
                // 0x14000fd9e
                goto lab_0x14000fdca;
            }
        }
    }
  lab_0x14000ff71:;
    // 0x14000ff71
    int64_t v29; // 0x14000fd50
    int64_t v30 = v29;
    int64_t v31 = v30 + 1; // 0x14000ff74
    int64_t * v32; // 0x14000fd50
    *v32 = v31;
    int64_t v33; // 0x14000fd50
    int64_t * v34; // 0x14000fd50
    int32_t * v35; // 0x14000fd50
    int64_t v36; // 0x14000ffb5
    if (*(char *)v30 != -7) {
        goto lab_0x1400100a0_3;
    } else {
        uint64_t v37 = *v34; // 0x14000ff8a
        v1 = v37;
        if (v31 >= v37) {
            // 0x14000ffa7
            if (*v35 == 0) {
                goto lab_0x14000ff10_2;
            } else {
                // 0x14000ffad
                function_140001d70(result);
                v36 = *v32;
                v1 = *v34;
                v33 = v36 + 1;
                goto lab_0x14000ffd7;
            }
        } else {
            // 0x14000ff96
            v33 = v30 + 2;
            v36 = v31;
            goto lab_0x14000ffd7;
        }
    }
  lab_0x1400100a0_3:;
    int64_t * v38; // 0x14000fd50
    while (true) {
      lab_0x1400100a0_2:;
        uint64_t v39 = *v34; // 0x1400100a0
        v1 = v39;
        uint64_t v40 = *v32; // 0x1400100a7
        int64_t v41 = v40; // 0x1400100b1
        if (v40 >= v39) {
            // 0x140010151
            if (*v35 == 0) {
                // break -> 0x14000ff10
                break;
            }
            // 0x140010157
            function_140001d70(result);
            v41 = *v32;
            v1 = *v34;
        }
        int64_t v42 = v41 + 1;
        unsigned char v43 = *(char *)v41;
        *v32 = v42;
        if (v43 == 0) {
            // break -> 0x14000ff10
            break;
        }
        uint64_t v44 = (int64_t)v43;
        if (*v38 == 0) {
            // 0x1400100a0
            *v32 = v42 + v44;
            goto lab_0x1400100a0_2;
        } else {
            int64_t v45 = v1; // 0x14001019d
            if ((v1 - v42 & 0xffffffff) < v44) {
                // 0x1400100a0
                *v32 = v45;
                goto lab_0x1400100a0_2;
            } else {
                // 0x1400100a0
                *v32 = v42 + v44;
                goto lab_0x1400100a0_2;
            }
        }
    }
    goto lab_0x14000ff10_2;
  lab_0x14000ffd7:;
    uint64_t v50 = v33;
    unsigned char v51 = *(char *)v36;
    *v32 = v50;
    int64_t v52; // 0x14000fd50
    int32_t * v53; // 0x14000fd50
    int64_t v54; // 0x14000fd50
    char * v55; // 0x14000fd50
    int32_t * v56; // 0x14000fd50
    int32_t * v57; // 0x14000fd50
    if (v51 != 4) {
        if (v51 == 0) {
            goto lab_0x14000ff10_2;
        } else {
            uint64_t v58 = (int64_t)v51;
            if (*v38 == 0) {
                // 0x140010142
                *v32 = v50 + v58;
                goto lab_0x14000ff10_2;
            } else {
                int64_t v59 = v1; // 0x14001011f
                if ((v59 - v50 & 0xffffffff) < v58) {
                    // 0x14001012a
                    *v32 = v59;
                    goto lab_0x14000ff10_2;
                } else {
                    // 0x140010142
                    *v32 = v50 + v58;
                    goto lab_0x14000ff10_2;
                }
            }
        }
    } else {
        uint64_t v60 = v1; // 0x14000ffe4
        if (v50 >= v60) {
            // 0x14000fff9
            if (*v35 == 0) {
                // 0x14001001d
                v1 = v60 & -256;
            } else {
                // 0x14000ffff
                function_140001d70(result);
                int64_t v61 = *v32; // 0x140010007
                v1 = (int64_t)*(char *)v61;
                *v32 = v61 + 1;
            }
        } else {
            // 0x14000ffe9
            v1 = (int64_t)*(char *)v50;
            *v32 = v50 + 1;
        }
        // 0x14001001f
        *(int32_t *)v52 = (int32_t)v1 & 255;
        int64_t v62 = function_140001f80(result); // 0x140010028
        uint32_t v63 = *v53; // 0x140010030
        *(int32_t *)(a2 + 0x8868) = 10 * (int32_t)v62;
        if (v63 >= 0) {
            // 0x140010040
            *(char *)(4 * (int64_t)v63 + v54) = -1;
        }
        // 0x140010045
        if ((*v55 & 1) == 0) {
            // 0x1400100ca
            if (*v38 == 0) {
                goto lab_0x140010103;
            } else {
                // 0x1400100d0
                if (*v56 - *v57 > 0) {
                    goto lab_0x140010103;
                } else {
                    // 0x1400100e1
                    *v32 = *v34;
                    *v53 = -1;
                    goto lab_0x1400100a0_3;
                }
            }
        } else {
            uint64_t v64 = *v32; // 0x14001004b
            char v65; // 0x14000fd50
            if (v64 >= *v34) {
                // 0x14001006a
                v65 = 0;
                if (*v35 != 0) {
                    // 0x140010070
                    function_140001d70(result);
                    int64_t v66 = *v32; // 0x140010078
                    *v32 = v66 + 1;
                    v65 = *(char *)v66;
                }
            } else {
                // 0x14001005b
                *v32 = v64 + 1;
                v65 = *(char *)v64;
            }
            // 0x140010090
            *v53 = (int32_t)v65;
            *(char *)(4 * (int64_t)v65 + v54) = 0;
            goto lab_0x1400100a0_3;
        }
    }
  lab_0x140010103:
    // 0x140010103
    *v32 = *v32 + 1;
    *v53 = -1;
    goto lab_0x1400100a0_3;
  lab_0x14000feed:
    // 0x14000feed
    memset((int64_t *)*v5, 0, *v4 * *v6);
    int64_t v67 = result + 192; // 0x14000ff10
    v32 = (int64_t *)v67;
    int64_t v68 = result + 200; // 0x14000ff17
    v34 = (int64_t *)v68;
    v35 = (int32_t *)(result + 48);
    v52 = a2 + 48;
    v53 = (int32_t *)(a2 + 44);
    v54 = a2 + 55;
    v55 = (char *)v52;
    v38 = (int64_t *)(result + 16);
    v56 = (int32_t *)v68;
    v57 = (int32_t *)v67;
    char v48; // 0x14000ff39
    while (true) {
      lab_0x14000ff10_2:;
        uint64_t v46 = *v32; // 0x14000ff10
        int64_t v47 = v46; // 0x14000ff1e
        if (v46 >= *v34) {
            // 0x14000ff20
            if (*v35 == 0) {
                goto lab_0x1400103cb;
            }
            // 0x14000ff2a
            function_140001d70(result);
            v47 = *v32;
        }
        // 0x14000ff39
        v48 = *(char *)v47;
        int64_t v49 = v47 + 1; // 0x14000ff3c
        *v32 = v49;
        if (v48 != 33) {
            // break -> 0x1400101c6
            break;
        }
        // 0x14000ff4f
        v29 = v49;
        if (v49 < *v34) {
            goto lab_0x14000ff71;
        } else {
            // 0x14000ff58
            if (*v35 == 0) {
                goto lab_0x1400100a0_3;
            } else {
                // 0x14000ff62
                function_140001d70(result);
                v29 = *v32;
                goto lab_0x14000ff71;
            }
        }
    }
    int64_t v69; // 0x14000fd50
    int64_t v70; // 0x14000fd50
    int64_t v71; // 0x14000fd50
    if (v48 == 44) {
        int64_t v72 = function_140001f80(result); // 0x1400101df
        int64_t v73 = function_140001f80(result); // 0x1400101e9
        int64_t v74 = function_140001f80(result); // 0x1400101f3
        int64_t v75 = function_140001f80(result); // 0x1400101fe
        uint32_t v76 = *v6; // 0x140010203
        int64_t v77 = v76; // 0x140010203
        v1 = v77;
        if ((v74 + v72 & 0xffffffff) > v77) {
            goto lab_0x1400103b6;
        } else {
            // 0x140010214
            if (*v4 < (int32_t)(v75 + v73)) {
                goto lab_0x1400103b6;
            } else {
                int32_t * v78 = (int32_t *)(a2 + 0x8864); // 0x140010227
                *v78 = 4 * v76;
                int64_t v79 = 4 * v72; // 0x1400101e7
                int32_t v80 = v79; // 0x140010238
                *(int32_t *)(a2 + 0x884c) = v80;
                *(int32_t *)(a2 + 0x8854) = (int32_t)(4 * v74 + v79);
                int64_t v81 = 0x400000000 * v77 >> 32; // 0x140010247
                int64_t v82 = v81 * (0x100000000 * v73 >> 32); // 0x140010247
                *(int32_t *)(a2 + 0x885c) = v80;
                *(int32_t *)(a2 + 0x8850) = (int32_t)v82;
                int64_t v83 = v81 * (0x100000000 * v75 >> 32) + v82; // 0x14001025f
                int64_t v84 = (int32_t)v74 == 0 ? v83 : v82;
                *(int32_t *)(a2 + 0x8858) = (int32_t)v83;
                *(int32_t *)(a2 + 0x8860) = (int32_t)v84;
                uint64_t v85 = *v32; // 0x140010274
                char v86; // 0x14000fd50
                if (v85 >= *v34) {
                    // 0x140010293
                    v86 = 0;
                    if (*v35 != 0) {
                        // 0x140010299
                        function_140001d70(result);
                        int64_t v87 = *v32; // 0x1400102a1
                        *v32 = v87 + 1;
                        v86 = *(char *)v87;
                    }
                } else {
                    // 0x140010284
                    *v32 = v85 + 1;
                    v86 = *(char *)v85;
                }
                int32_t v88 = *v78; // 0x1400102b9
                int32_t v89 = v86;
                *(int32_t *)(a2 + 0x8848) = v89;
                *(int32_t *)(a2 + 0x8844) = (v86 & 64) == 0 ? v88 : 8 * v88;
                *(int32_t *)(a2 + 0x8840) = (v86 & 64) == 0 ? 0 : 3;
                if (v86 >= 0) {
                    // 0x14001032b
                    if (*(char *)(a2 + 32) > -1) {
                        // 0x1400103a1
                        v69 = (int64_t)"missing color table";
                        v70 = __readgsqword(88);
                        goto lab_0x1400103de;
                    } else {
                        // 0x140010331
                        v71 = a2 + 52;
                        goto lab_0x140010335;
                    }
                } else {
                    int64_t v90 = 0xffffffff; // 0x1400102fd
                    if ((*v55 & 1) != 0) {
                        // 0x1400102ff
                        v90 = (int64_t)*v53;
                    }
                    int64_t v91 = a2 + 1076; // 0x140010307
                    function_14000f320(result, v91, (int64_t)(2 << (v89 & 7)), v90);
                    v71 = v91;
                    goto lab_0x140010335;
                }
            }
        }
    } else {
        // 0x1400101cb
        if (v48 == 59) {
            // 0x1400103e9
            return result;
        }
      lab_0x1400103cb:
        // 0x1400103cb
        v69 = (int64_t)"unknown code";
        v70 = __readgsqword(88);
        goto lab_0x1400103de;
    }
  lab_0x14000fe79:
    // 0x14000fe79
    v69 = (int64_t)"too large";
    v70 = __readgsqword(88);
    goto lab_0x1400103de;
  lab_0x1400103de:
    // 0x1400103de
    *(int64_t *)(*(int64_t *)v70 + 16) = v69;
    // 0x1400103e9
    return 0;
  lab_0x1400103b6:
    // 0x1400103b6
    v69 = (int64_t)"bad Image Descriptor";
    v70 = __readgsqword(88);
    goto lab_0x1400103de;
  lab_0x14000fdca:
    if (v11 < 0) {
        goto lab_0x14000fe79;
    } else {
        if (v11 == 0) {
            goto lab_0x14000fde5;
        } else {
            // 0x14000fdd4
            v1 = 0x7fffffff % v11;
            if ((4 * v9 & 0xfffffffc) > (int64_t)(0x7fffffff / v11)) {
                goto lab_0x14000fe79;
            } else {
                goto lab_0x14000fde5;
            }
        }
    }
  lab_0x14000fde5:;
    int32_t size2 = v11 * v8; // 0x14000fde5
    int32_t size = 4 * size2; // 0x14000fde8
    *v2 = (int64_t)malloc(size);
    int64_t * mem = malloc(size); // 0x14000fe02
    int64_t * v92 = (int64_t *)(a2 + 16); // 0x14000fe0e
    *v92 = (int64_t)mem;
    int64_t * mem2 = malloc(size2); // 0x14000fe12
    int64_t v93 = *v2; // 0x14000fe18
    int64_t * v94 = (int64_t *)(a2 + 24);
    *v94 = (int64_t)mem2;
    if (v93 == 0) {
        goto lab_0x14000fe61;
    } else {
        // 0x14000fe25
        if (mem2 == NULL | *v92 == 0) {
            goto lab_0x14000fe61;
        } else {
            // 0x14000fe30
            memset((int64_t *)v93, 0, size);
            memset((int64_t *)*v92, 0, size);
            v1 = 0;
            memset((int64_t *)*v94, 0, size2);
            v5 = v94;
            v4 = v10;
            v6 = (int32_t *)&v1;
            v7 = 1;
            goto lab_0x14000feed;
        }
    }
  lab_0x140010335:
    // 0x140010335
    *(int64_t *)(a2 + 0x8838) = v71;
    int64_t result2 = function_14000f8c0(result, a2); // 0x140010342
    if (result2 == 0) {
        // 0x1400103e9
        return 0;
    }
    // 0x140010353
    if (v7 == 0) {
        // 0x1400103e9
        return result2;
    }
    int32_t * v95 = (int32_t *)(a2 + 36); // 0x140010358
    if (*v95 <= 0) {
        // 0x1400103e9
        return result2;
    }
    int32_t v96 = *v4 * *v6; // 0x140010360
    int64_t v97 = v96; // 0x140010364
    v1 = v97;
    if (v96 < 1) {
        // 0x1400103e9
        return result2;
    }
    int64_t v98 = 0;
    int64_t v99 = v97; // 0x140010379
    int32_t v100; // 0x14001038c
    if (*(char *)(*v5 + v98) == 0) {
        // 0x14001037b
        *(char *)(4 * (int64_t)*v95 + v54) = -1;
        v100 = *(int32_t *)(a2 + 52 + 4 * (int64_t)*v95);
        *(int32_t *)(*v2 + 4 * v98) = v100;
        v99 = v1;
    }
    int64_t v101 = v98 + 1; // 0x140010394
    int64_t v102 = v99; // 0x14001039a
    while (v101 < v99) {
        // 0x140010370
        v98 = v101;
        v99 = v102;
        if (*(char *)(*v5 + v98) == 0) {
            // 0x14001037b
            *(char *)(4 * (int64_t)*v95 + v54) = -1;
            v100 = *(int32_t *)(a2 + 52 + 4 * (int64_t)*v95);
            *(int32_t *)(*v2 + 4 * v98) = v100;
            v99 = v1;
        }
        // 0x140010394
        v101 = v98 + 1;
        v102 = v99;
    }
    // 0x1400103e9
    return result2;
  lab_0x14000fe61:
    // 0x14000fe61
    v69 = (int64_t)"outofmem";
    v70 = __readgsqword(88);
    goto lab_0x1400103de;
}

// Address range: 0x140010410 - 0x1400104ff
int64_t function_140010410(int64_t a1, int64_t a2, int64_t a3, int64_t a4) {
    // 0x140010410
    int64_t v1; // bp-40, 0x140010410
    int64_t v2 = (int64_t)&v1 - __chkstk(); // 0x140010422
    int64_t * v3 = (int64_t *)(v2 + 0x88a0); // 0x14001042f
    *v3 = g66 ^ v2;
    int64_t v4 = v2 + 48; // 0x140010449
    memset((int64_t *)v4, 0, 0x8870);
    int64_t v5 = v2 + 32; // 0x14001045f
    *(int64_t *)v5 = 0;
    int64_t v6 = function_14000fd50(a1, v4); // 0x140010473
    if (v6 == a1 || v6 == 0) {
        int64_t v7 = *(int64_t *)(v2 + 56); // 0x140010482
        if (v7 != 0) {
            // 0x14001048c
            free((int64_t *)v7);
        }
    } else {
        int64_t v8 = (int64_t)*(int32_t *)(v2 + 0x8900); // 0x140010437
        int32_t v9 = *(int32_t *)v4; // 0x1400104cf
        int32_t v10 = *(int32_t *)(v2 + 52); // 0x1400104d4
        *(int32_t *)a2 = v9;
        *(int32_t *)a3 = v10;
        if ((v8 & 0xfffffffb) != 0) {
            // 0x1400104e6
            *(int32_t *)v5 = v10;
            function_140002040(v6, 4, v8, v9, (int64_t)&g103);
        }
    }
    // 0x140010492
    free((int64_t *)*(int64_t *)(v2 + 72));
    free((int64_t *)*(int64_t *)(v2 + 64));
    __security_check_cookie(*v3 ^ v2);
    return &g103;
}

// Address range: 0x140010500 - 0x1400105b0
int64_t function_140010500(int64_t a1, char * a2) {
    int64_t v1 = (int64_t)a2;
    int64_t * v2 = (int64_t *)(a1 + 192);
    int64_t * v3 = (int64_t *)(a1 + 200);
    if ((char)v1 == 0) {
        // 0x140010577
        *v2 = *(int64_t *)(a1 + 208);
        *v3 = *(int64_t *)(a1 + 216);
        return 1;
    }
    int64_t v4 = v1; // 0x14001056f
    int64_t v5 = *v2; // 0x140010520
    int64_t v6; // 0x140010500
    char v7; // 0x140010500
    int64_t v8; // 0x140010557
    int64_t v9; // 0x140010533
    int64_t v10; // 0x14001054d
    if (v5 >= *v3) {
        // 0x14001053f
        if (*(int32_t *)(a1 + 48) == 0) {
            // 0x140010563
            v6 = v5;
            v7 = 0;
        } else {
            // 0x140010545
            function_140001d70(a1);
            v10 = *v2;
            v8 = v10 + 1;
            *v2 = v8;
            v6 = v8;
            v7 = *(char *)v10;
        }
    } else {
        // 0x140010530
        v9 = v5 + 1;
        *v2 = v9;
        v6 = v9;
        v7 = *(char *)v5;
    }
    while ((int32_t)v7 == (int32_t)*(char *)v4) {
        // 0x14001056f
        v4++;
        if (*(char *)v4 == 0) {
            // 0x140010577
            *v2 = *(int64_t *)(a1 + 208);
            *v3 = *(int64_t *)(a1 + 216);
            return 1;
        }
        v5 = v6;
        if (v5 >= *v3) {
            // 0x14001053f
            if (*(int32_t *)(a1 + 48) == 0) {
                // 0x140010563
                v6 = v5;
                v7 = 0;
            } else {
                // 0x140010545
                function_140001d70(a1);
                v10 = *v2;
                v8 = v10 + 1;
                *v2 = v8;
                v6 = v8;
                v7 = *(char *)v10;
            }
        } else {
            // 0x140010530
            v9 = v5 + 1;
            *v2 = v9;
            v6 = v9;
            v7 = *(char *)v5;
        }
    }
    // 0x1400105a3
    return 0;
}

// Address range: 0x1400105b0 - 0x14001073e
int64_t function_1400105b0(int64_t a1, int64_t * a2) {
    int64_t * v1 = (int64_t *)(a1 + 192); // 0x1400105ca
    uint64_t v2 = *v1; // 0x1400105ca
    int64_t * v3 = (int64_t *)(a1 + 200); // 0x1400105d9
    int32_t * v4; // 0x1400105b0
    int64_t v5; // 0x1400105b0
    char v6; // 0x1400105b0
    if (v2 >= *v3) {
        int32_t * v7 = (int32_t *)(a1 + 48);
        v4 = v7;
        v5 = v2;
        v6 = 0;
        if (*v7 != 0) {
            // 0x1400105f6
            function_140001d70(a1);
            int64_t v8 = *v1; // 0x1400105fb
            int64_t v9 = v8 + 1; // 0x140010605
            *v1 = v9;
            v4 = v7;
            v5 = v9;
            v6 = *(char *)v8;
        }
    } else {
        int64_t v10 = v2 + 1; // 0x1400105e5
        *v1 = v10;
        v4 = (int32_t *)(a1 + 48);
        v5 = v10;
        v6 = *(char *)v2;
    }
    int64_t result = (int64_t)a2;
    int64_t * v11 = (int64_t *)(a1 + 16);
    int64_t v12 = v5; // 0x140010614
    int64_t v13 = 0; // 0x140010614
    int64_t v14 = 0; // 0x140010614
    char v15 = v6; // 0x140010614
    int64_t v16; // 0x14001063a
    int64_t v17; // 0x1400105b0
    int64_t v18; // 0x1400105b0
    int64_t v19; // 0x1400105b0
    while (true) {
      lab_0x140010617:
        // 0x140010617
        v18 = v13;
        v16 = v12;
        if (*v11 == 0) {
            goto lab_0x140010633;
        } else {
            // 0x14001061e
            v17 = v16;
            if ((int32_t)v16 == 0) {
                goto lab_0x140010647;
            } else {
                // 0x140010629
                v19 = v18;
                if (*v4 == 0) {
                    // break -> 0x140010718
                    break;
                }
                goto lab_0x140010633;
            }
        }
    }
  lab_0x140010718_3:
    // 0x140010718
    *(char *)((0x100000000 * v19 >> 32) + result) = 0;
    return result;
  lab_0x1400106b1:;
    // 0x1400106b1
    int64_t v20; // 0x1400105b0
    int64_t v21; // 0x1400105b0
    int64_t v22; // 0x1400105b0
    if (*v11 == 0) {
        goto lab_0x1400106d9;
    } else {
        // 0x1400106b8
        if ((int32_t)v20 != 0) {
            // 0x1400106d3
            v19 = v13;
            if (*v4 == 0) {
                goto lab_0x140010718_3;
            } else {
                goto lab_0x1400106d9;
            }
        } else {
            // 0x1400106c3
            v21 = *v1;
            v22 = *v3;
            goto lab_0x1400106ec;
        }
    }
  lab_0x140010633:;
    uint64_t v23 = *v3; // 0x140010633
    v17 = v23;
    if (v16 >= v23) {
        // break -> 0x140010718
        goto lab_0x140010718_3;
    }
    goto lab_0x140010647;
  lab_0x140010647:
    // 0x140010647
    if (v15 == 10) {
        // break -> 0x140010718
        goto lab_0x140010718_3;
    }
    // 0x140010651
    *(char *)(v14 + result) = v15;
    v13 = v18 + 1 & 0xffffffff;
    v20 = v17;
    if (v14 == 1022) {
        goto lab_0x1400106b1;
    }
    uint64_t v24 = *v1; // 0x140010663
    if (v24 >= *v3) {
        // 0x140010682
        v12 = v24;
        v15 = 0;
        if (*v4 != 0) {
            // 0x140010688
            function_140001d70(a1);
            int64_t v25 = *v1; // 0x140010690
            int64_t v26 = v25 + 1; // 0x14001069a
            *v1 = v26;
            v12 = v26;
            v15 = *(char *)v25;
        }
    } else {
        int64_t v27 = v24 + 1; // 0x140010676
        *v1 = v27;
        v12 = v27;
        v15 = *(char *)v24;
    }
    // 0x140010617
    v14++;
    goto lab_0x140010617;
  lab_0x1400106d9:;
    uint64_t v28 = *v1; // 0x1400106d9
    uint64_t v29 = *v3; // 0x1400106e0
    v21 = v28;
    v22 = v29;
    v19 = v13;
    if (v28 >= v29) {
        goto lab_0x140010718_3;
    } else {
        goto lab_0x1400106ec;
    }
  lab_0x1400106ec:;
    int64_t v30 = v21;
    int64_t v31 = v30; // 0x1400106ef
    if (v30 < v22) {
        goto lab_0x140010706;
    } else {
        int64_t v32 = v30; // 0x1400106f5
        if (*v4 == 0) {
            // 0x1400106b1
            v20 = v32;
            goto lab_0x1400106b1;
        } else {
            // 0x1400106f7
            function_140001d70(a1);
            v31 = *v1;
            goto lab_0x140010706;
        }
    }
  lab_0x140010706:;
    int64_t v33 = v31 + 1; // 0x140010709
    *v1 = v33;
    v19 = v13;
    if (*(char *)v31 != 10) {
        // 0x1400106b1
        v20 = v33;
        goto lab_0x1400106b1;
    } else {
        goto lab_0x140010718_3;
    }
}

// Address range: 0x140010740 - 0x14001086e
int64_t function_140010740(int64_t a1, int64_t a2, int64_t a3) {
    // 0x140010740
    int128_t v1; // 0x140010740
    int128_t v2 = v1;
    unsigned char v3 = *(char *)(a2 + 3); // 0x14001074f
    if (v3 == 0) {
        int32_t v4 = a3; // 0x140010820
        switch (v4) {
            case 1: {
                // 0x14001085a
                *(int32_t *)a1 = 0;
                // 0x14001085e
                return 0;
            }
            case 2: {
                // 0x140010853
                *(int32_t *)(a1 + 4) = 0x3f800000;
                // 0x14001085a
                *(int32_t *)a1 = 0;
                // 0x14001085e
                return 0;
            }
        }
        int32_t v5 = v4 - 3; // 0x14001082a
        if (v5 == 0) {
            // 0x14001083b
            *(int64_t *)(a1 + 4) = 0;
            *(int32_t *)a1 = 0;
            return 0;
        }
        // 0x14001082f
        if (v5 != 1) {
            // 0x14001085e
            return 0;
        }
        // 0x140010834
        *(int32_t *)(a1 + 12) = 0x3f800000;
        // 0x14001083b
        *(int64_t *)(a1 + 4) = 0;
        *(int32_t *)a1 = 0;
        return 0;
    }
    // 0x140010764
    int64_t v6; // 0x140010740
    int32_t v7 = v6;
    float64_t v8 = ldexp((float64_t)(int64_t)__asm_movsd(0x3ff0000000000000), (int32_t)v3 - 136); // 0x140010772
    __asm_xorps(v2, v2);
    int128_t v9 = __asm_cvtsd2ss((int128_t)(int32_t)(float32_t)v8); // 0x14001077b
    int32_t v10 = a3; // 0x140010782
    int64_t result3; // 0x140010740
    if (v10 > 2) {
        int64_t v11 = __asm_movss_4(__asm_mulss(__asm_cvtdq2ps(__asm_movd(v7 & 255)), v9)); // 0x1400107d8
        *(int32_t *)a1 = (int32_t)v11;
        int128_t v12 = __asm_cvtdq2ps(__asm_movd((int32_t)*(char *)(a2 + 1))); // 0x1400107e4
        *(int32_t *)(a1 + 4) = (int32_t)__asm_movss_4(__asm_mulss(v12, v9));
        unsigned char v13 = *(char *)(a2 + 2); // 0x1400107f0
        int64_t result = v13; // 0x1400107f0
        int64_t v14 = __asm_movss_4(__asm_mulss(__asm_cvtdq2ps(__asm_movd((int32_t)v13)), v9)); // 0x1400107ff
        *(int32_t *)(a1 + 8) = (int32_t)v14;
        result3 = result;
        if (v10 == 4) {
            // 0x140010809
            *(int32_t *)(a1 + 12) = 0x3f800000;
            return result;
        }
    } else {
        unsigned char v15 = *(char *)(a2 + 1); // 0x140010784
        unsigned char v16 = *(char *)(a2 + 2); // 0x140010788
        int64_t result2 = v6 & 255; // 0x14001078e
        int128_t v17 = __asm_movd((v7 & 255) + (int32_t)v15 + (int32_t)v16); // 0x140010793
        int64_t v18 = __asm_movss_4(__asm_divss_7(__asm_mulss(__asm_cvtdq2ps(v17), v9), 0x40400000)); // 0x1400107a6
        *(int32_t *)a1 = (int32_t)v18;
        result3 = result2;
        if (v10 == 2) {
            // 0x1400107b3
            *(int32_t *)(a1 + 4) = 0x3f800000;
            return result2;
        }
    }
    // 0x14001085e
    return result3;
}

// Address range: 0x140010870 - 0x140011053
int64_t function_140010870(int64_t a1, int64_t a2, int64_t a3, int64_t a4, int64_t a5) {
    // 0x140010870
    int64_t v1; // bp-1112, 0x140010870
    int64_t str = function_1400105b0(a1, &v1); // 0x1400108ae
    int64_t v2 = 0; // 0x1400108c7
    if (strcmp((char *)str, "#?RADIANCE") != 0) {
        char v3 = *(char *)(v2 + (int64_t)"#?RGBE"); // 0x1400108d9
        while (*(char *)(v2 + str) == v3) {
            // 0x1400108e3
            v2++;
            if (v2 == 7) {
                goto lab_0x1400108e9;
            }
            v3 = *(char *)(v2 + (int64_t)"#?RGBE");
        }
        // 0x140010994
        *(int64_t *)(*(int64_t *)__readgsqword(88) + 16) = (int64_t)"not HDR";
        // 0x140010ebd
        __security_check_cookie(g66);
        return &g103;
    }
  lab_0x1400108e9:;
    int64_t str2 = function_1400105b0(a1, &v1); // 0x1400108f1
    char * v4 = (char *)str2; // 0x1400108f6
    char * endptr = v4; // bp-1128, 0x1400108f6
    int64_t v5; // 0x14001103e
    if (*v4 == 0) {
        // 0x140011030
        v5 = *(int64_t *)__readgsqword(88);
        *(int64_t *)(v5 + 16) = (int64_t)"unsupported format";
        // 0x140010ebd
        __security_check_cookie(g66);
        return &g103;
    }
    int64_t v6 = strcmp((char *)str2, "FORMAT=32-bit_rle_rgbe") == 0 ? 1 : 0;
    int64_t v7 = function_1400105b0(a1, &v1); // 0x14001092c
    char * v8 = (char *)v7; // 0x140010931
    endptr = v8;
    int64_t str3 = v7; // 0x140010939
    int64_t v9 = v6; // 0x140010939
    while (*v8 != 0) {
        // 0x140010910
        v6 = strcmp((char *)str3, "FORMAT=32-bit_rle_rgbe") == 0 ? 1 : v9;
        v7 = function_1400105b0(a1, &v1);
        v8 = (char *)v7;
        endptr = v8;
        str3 = v7;
        v9 = v6;
    }
    if ((int32_t)v6 == 0) {
        // 0x140011030
        v5 = *(int64_t *)__readgsqword(88);
        *(int64_t *)(v5 + 16) = (int64_t)"unsupported format";
        // 0x140010ebd
        __security_check_cookie(g66);
        return &g103;
    }
    char * str4 = (char *)function_1400105b0(a1, &v1); // 0x140010955
    endptr = str4;
    int64_t v10; // 0x14001097f
    if (strncmp(str4, "-Y ", 3) != 0) {
        // 0x140010971
        v10 = *(int64_t *)__readgsqword(88);
        *(int64_t *)(v10 + 16) = (int64_t)"unsupported data layout";
        // 0x140010ebd
        __security_check_cookie(g66);
        return &g103;
    }
    char * str5 = (char *)((int64_t)endptr + 3); // 0x1400109ca
    endptr = str5;
    int32_t str_as_l = strtol(str5, &endptr, 10); // 0x1400109cf
    char * v11 = endptr; // 0x1400109d5
    char * str6 = v11; // 0x1400109e3
    if (*v11 == 32) {
        int64_t v12 = (int64_t)v11; // 0x1400109f0
        v12++;
        char * v13 = (char *)v12;
        endptr = v13;
        str6 = v13;
        while (*v13 == 32) {
            // 0x1400109f0
            v12++;
            v13 = (char *)v12;
            endptr = v13;
            str6 = v13;
        }
    }
    int32_t strncmp_rc = strncmp(str6, "+X ", 3); // 0x140010a07
    if (strncmp_rc != 0) {
        // 0x140010971
        v10 = *(int64_t *)__readgsqword(88);
        *(int64_t *)(v10 + 16) = (int64_t)"unsupported data layout";
        // 0x140010ebd
        __security_check_cookie(g66);
        return &g103;
    }
    char * str7 = (char *)((int64_t)endptr + 3); // 0x140010a2b
    endptr = str7;
    int32_t str_as_l2 = strtol(str7, NULL, strncmp_rc + 10); // 0x140010a30
    if (str_as_l > 0x1000000 || str_as_l2 > 0x1000000) {
        goto lab_0x140011013;
    } else {
        // 0x140010a52
        *(int32_t *)a2 = str_as_l2;
        *(int32_t *)a3 = str_as_l;
        if (a4 != 0) {
            // 0x140010a61
            *(int32_t *)a4 = 3;
        }
        if (str_as_l < 0 || str_as_l2 < 0) {
            goto lab_0x140011013;
        } else {
            if (str_as_l == 0) {
                goto lab_0x140010a9a;
            } else {
                int32_t v14 = str_as_l2 - 0x7fffffff / str_as_l; // 0x140010a8c
                if (v14 != 0 && v14 < 0 == ((v14 ^ -0x80000000) & str_as_l2) < 0) {
                    goto lab_0x140011013;
                } else {
                    goto lab_0x140010a9a;
                }
            }
        }
    }
  lab_0x140010edf_2:;
    // 0x140010edf
    int64_t * mem; // 0x140010b22
    free(mem);
    int64_t v15; // 0x140010870
    free((int64_t *)v15);
    int64_t v16 = (int64_t)"corrupt"; // 0x140010f0b
    int64_t v17 = __readgsqword(88); // 0x140010f0b
    goto lab_0x140010eaf;
  lab_0x140010cf9:;
    // 0x140010cf9
    int64_t v64; // 0x140010870
    int64_t v65 = v64;
    unsigned char v66 = *(char *)v65; // 0x140010cf9
    int64_t v67 = v66; // 0x140010cf9
    int64_t v68 = v65 + 1; // 0x140010cfc
    int64_t * v38; // 0x140010870
    *v38 = v68;
    int64_t v69 = v68; // 0x140010d0a
    int64_t v70 = v67; // 0x140010d0a
    int64_t v71; // 0x140010870
    int64_t v72; // 0x140010870
    int64_t v73; // 0x140010870
    int64_t v74; // 0x140010870
    int64_t v75; // 0x140010870
    int64_t * v39; // 0x140010870
    int32_t * v40; // 0x140010870
    int64_t v76; // 0x140010870
    if (v66 > -1 || v66 == -128) {
        goto lab_0x140010d85;
    } else {
        // 0x140010d0c
        char v77; // 0x140010870
        if (v68 >= *v39) {
            int32_t v78 = *v40; // 0x140010d24
            v77 = 0;
            if (v78 != 0) {
                // 0x140010d2a
                function_140001d70(a1);
                int64_t v79 = *v38; // 0x140010d32
                char v80 = *(char *)v79; // 0x140010d39
                *v38 = v79 + 1;
                v77 = v80;
            }
        } else {
            // 0x140010d15
            *v38 = v65 + 2;
            v77 = *(char *)v68;
        }
        int64_t v81 = v67 ^ 128; // 0x140010d4a
        if ((int32_t)v81 > (int32_t)v75) {
            goto lab_0x140010edf_2;
        }
        // 0x140010d5b
        v74 = v73;
        v72 = v71;
        if (v81 != 0) {
            int64_t v82 = 4 * v71 + v76; // 0x140010d71
            int64_t v83 = v81; // 0x140010d71
            *(char *)v82 = v77;
            v83--;
            v82 += 4;
            while (v83 != 0) {
                // 0x140010d74
                *(char *)v82 = v77;
                v83--;
                v82 += 4;
            }
            // 0x140010e01
            v74 = v81 + v73 & 0xffffffff;
            v72 = v81 + v71;
        }
        goto lab_0x140010e01;
    }
  lab_0x140010d85:;
    int64_t v84 = v70;
    if ((int32_t)v84 > (int32_t)v75) {
        goto lab_0x140010edf_2;
    }
    // 0x140010d91
    v74 = v73;
    v72 = v71;
    if (v84 != 0) {
        int64_t v85 = v84; // 0x140010da8
        int64_t v86 = 4 * v71 + v76;
        uint64_t v87 = v69; // 0x140010db0
        char v88; // 0x140010870
        int64_t v89; // 0x140010ddd
        if (v87 >= *v39) {
            // 0x140010dcf
            v88 = 0;
            if (*v40 != 0) {
                // 0x140010dd5
                function_140001d70(a1);
                v89 = *v38;
                *v38 = v89 + 1;
                v88 = *(char *)v89;
            }
        } else {
            // 0x140010dc0
            *v38 = v87 + 1;
            v88 = *(char *)v87;
        }
        // 0x140010df5
        *(char *)v86 = v88;
        v85--;
        while (v85 != 0) {
            // 0x140010df5
            v86 += 4;
            v87 = *v38;
            if (v87 >= *v39) {
                // 0x140010dcf
                v88 = 0;
                if (*v40 != 0) {
                    // 0x140010dd5
                    function_140001d70(a1);
                    v89 = *v38;
                    *v38 = v89 + 1;
                    v88 = *(char *)v89;
                }
            } else {
                // 0x140010dc0
                *v38 = v87 + 1;
                v88 = *(char *)v87;
            }
            // 0x140010df5
            *(char *)v86 = v88;
            v85--;
        }
        // 0x140010e01
        v74 = v84 + v73 & 0xffffffff;
        v72 = v84 + v71;
    }
    goto lab_0x140010e01;
  lab_0x140010e01:;
    // 0x140010e01
    int64_t v30; // 0x140010a36
    int64_t v90 = v30 - v74; // 0x140010e04
    int32_t v91 = v90; // 0x140010e06
    int64_t v92 = v74; // 0x140010e08
    int64_t v93 = v90 & 0xffffffff; // 0x140010e08
    int64_t v94 = v72; // 0x140010e08
    if (v91 >= 0 != v91 != 0) {
        // break -> 0x140010e0e
        goto lab_0x140010e0e;
    }
    goto lab_0x140010cd0;
  lab_0x140010bca:;
    // 0x140010bca
    int64_t v52; // 0x140010870
    int64_t v96 = v52 + 1; // 0x140010bcd
    *v38 = v96;
    int64_t v54; // 0x140010870
    int64_t v56; // 0x140010870
    int64_t v53; // 0x140010870
    char v55; // 0x140010870
    if (v96 >= v53) {
        int32_t v97 = *v40;
        v54 = v96;
        v55 = 0;
        int64_t v98; // 0x140010bca
        v56 = v98;
        if (v97 != 0) {
            // 0x140010bfa
            function_140001d70(a1);
            int64_t v99 = *v38; // 0x140010c02
            char v100 = *(char *)v99; // 0x140010c09
            int64_t v101 = v99 + 1; // 0x140010c0c
            *v38 = v101;
            v54 = v101;
            v55 = v100;
            v56 = v98;
        }
    } else {
        int64_t v102 = v52 + 2; // 0x140010be3
        *v38 = v102;
        v54 = v102;
        v55 = *(char *)v96;
        v56 = (int64_t)*(char *)v52;
    }
    goto lab_0x140010c1a;
  lab_0x140010c1a:;
    int64_t v103 = v54;
    unsigned char v50; // 0x140010b8f
    int32_t v104 = v50; // 0x140010c1d
    int32_t v48 = v104; // 0x140010c21
    int64_t v49 = v103; // 0x140010c21
    if (v50 != 2) {
        // break -> 0x140010f3e
        goto lab_0x140010f3e_2;
    }
    // 0x140010c27
    v48 = v104;
    v49 = v103;
    if (v55 < 0 || (int32_t)v56 != v104) {
        // break -> 0x140010f3e
        goto lab_0x140010f3e_2;
    }
    // 0x140010c39
    char v105; // 0x140010870
    if (v103 >= *v39) {
        // 0x140010c54
        v105 = 0;
        if (*v40 != 0) {
            // 0x140010c5a
            function_140001d70(a1);
            int64_t v106 = *v38; // 0x140010c62
            *v38 = v106 + 1;
            v105 = *(char *)v106;
        }
    } else {
        // 0x140010c45
        *v38 = v103 + 1;
        v105 = *(char *)v103;
    }
    // 0x140010c7a
    int64_t v43; // 0x140010870
    if ((256 * (int32_t)v55 || (int32_t)v105) != str_as_l2) {
        // 0x140010f0d
        free(mem);
        free((int64_t *)v43);
        v16 = (int64_t)"invalid decoded scanline length";
        v17 = __readgsqword(88);
        goto lab_0x140010eaf;
    }
    int64_t v107 = v43; // 0x140010c8b
    if (v43 == 0) {
        int64_t * mem2 = malloc(4 * str_as_l2); // 0x140010c98
        v107 = (int64_t)mem2;
        if (mem2 == NULL) {
            // 0x140010e8c
            free(mem);
            goto lab_0x140010e97;
        }
    }
    // 0x140010caa
    v15 = v107;
    int64_t v108 = 0; // 0x140010cad
    while (true) {
        int64_t v109 = v108;
        v76 = v109 + v15;
        v92 = 0;
        v93 = v30;
        v94 = 0;
        while (true) {
          lab_0x140010cd0:
            // 0x140010cd0
            v71 = v94;
            v75 = v93;
            v73 = v92;
            int64_t v95 = *v38; // 0x140010cd0
            v64 = v95;
            if (v95 < *v39) {
                goto lab_0x140010cf9;
            } else {
                // 0x140010ce0
                v69 = v95;
                v70 = 0;
                if (*v40 == 0) {
                    goto lab_0x140010d85;
                } else {
                    // 0x140010cea
                    function_140001d70(a1);
                    v64 = *v38;
                    goto lab_0x140010cf9;
                }
            }
        }
      lab_0x140010e0e:;
        int64_t v110 = v109 + 1; // 0x140010e0e
        v108 = v110;
        if (v110 >= 4) {
            // break -> 0x140010e20
            break;
        }
    }
    // 0x140010e20
    int32_t v37; // bp-1160, 0x140010870
    int64_t v36; // 0x140010b22
    int64_t v111 = 4 * (int64_t)v37 + v36; // 0x140010e3c
    int64_t v112 = v15; // 0x140010e3c
    uint64_t v22; // 0x140010870
    function_140010740(v111, v112, v22);
    int64_t v113 = v30 - 1; // 0x140010e55
    int64_t v114 = v113; // 0x140010e59
    int64_t v24; // 0x140010870
    v111 += (v24 >> 30);
    v112 += 4;
    while (v113 != 0) {
        // 0x140010e40
        function_140010740(v111, v112, v22);
        v113 = v114 - 1;
        v114 = v113;
        v111 += (v24 >> 30);
        v112 += 4;
    }
    // 0x140010e5b
    int64_t v41; // 0x140010870
    int64_t v115 = v41 + 1;
    int32_t v27; // bp-1120, 0x140010870
    v37 += v27;
    v41 = v115;
    int64_t v42 = v15; // 0x140010e71
    uint64_t v19; // 0x140010870
    if (v115 >= v19) {
        if (v15 == 0) {
            goto lab_0x140010ebd;
        } else {
            // 0x140010e7c
            free((int64_t *)v15);
            goto lab_0x140010ebd;
        }
    }
    goto lab_0x140010b60;
  lab_0x140011013:
    // 0x140011013
    v16 = (int64_t)"too large";
    v17 = __readgsqword(88);
    goto lab_0x140010eaf;
  lab_0x140010eaf:
    // 0x140010eaf
    *(int64_t *)(*(int64_t *)v17 + 16) = v16;
    // 0x140010ebd
    __security_check_cookie(g66);
    return &g103;
  lab_0x140010a9a:;
    int64_t v18 = str_as_l2; // 0x140010a9d
    v19 = (int64_t)str_as_l;
    int64_t v20 = v18 * v19; // 0x140010a9d
    int64_t v21; // 0x140010a9d
    if ((int32_t)v20 < 0) {
        goto lab_0x140011013;
    } else {
        // 0x140010aa8
        v22 = (int32_t)a5 != 0 ? a5 & 0xffffffff : 3;
        int32_t v23 = v22; // 0x140010aa8
        if (v23 < 0) {
            goto lab_0x140011013;
        } else {
            // 0x140010ab1
            v21 = v20 & 0xffffffff;
            if (v23 == 0) {
                goto lab_0x140010ac4;
            } else {
                if (v21 > 0x7fffffff / v22) {
                    goto lab_0x140011013;
                } else {
                    goto lab_0x140010ac4;
                }
            }
        }
    }
  lab_0x140010ac4:
    // 0x140010ac4
    v24 = 0x100000000 * v22;
    int64_t v25 = v24 >> 32; // 0x140010ac7
    int32_t v26 = str_as_l2 * (int32_t)v25;
    v27 = v26;
    uint32_t v28 = v26 * str_as_l; // 0x140010ad6
    uint64_t v29; // 0x1400109da
    if (v28 > 0x1fffffff) {
        goto lab_0x140011013;
    } else {
        // 0x140010aec
        v29 = (int64_t)str_as_l;
        v30 = str_as_l2;
        if (str_as_l == 0) {
            goto lab_0x140010b01;
        } else {
            if (0x7fffffff / v29 < v30) {
                goto lab_0x140010e97;
            } else {
                goto lab_0x140010b01;
            }
        }
    }
  lab_0x140010b01:
    if (v22 == 0) {
        goto lab_0x140010b17;
    } else {
        if (v21 > 0x7fffffff / v22) {
            goto lab_0x140010e97;
        } else {
            goto lab_0x140010b17;
        }
    }
  lab_0x140010b17:
    // 0x140010b17
    mem = malloc(4 * v28);
    int64_t v31; // 0x140010870
    int64_t v32; // 0x140010870
    int64_t v33; // 0x140010870
    int64_t v34; // 0x140010870
    int64_t v35; // 0x140010870
    if (mem == NULL) {
        goto lab_0x140010e97;
    } else {
        // 0x140010b36
        v36 = (int64_t)mem;
        v31 = v22;
        v35 = 0;
        if (str_as_l2 < 0x8000) {
            if (str_as_l < 1) {
                // 0x140010ebd
                __security_check_cookie(g66);
                return &g103;
            }
            // 0x140010b56
            v37 = 0;
            v38 = (int64_t *)(a1 + 192);
            v39 = (int64_t *)(a1 + 200);
            v40 = (int32_t *)(a1 + 48);
            v41 = 0;
            v42 = 0;
            while (true) {
              lab_0x140010b60:
                // 0x140010b60
                v43 = v42;
                int64_t v44 = *v38; // 0x140010b60
                uint64_t v45 = *v39; // 0x140010b67
                int64_t v46 = v44; // 0x140010b71
                int64_t v47 = v45; // 0x140010b71
                if (v44 >= v45) {
                    // 0x140010b73
                    v48 = 0;
                    v49 = v44;
                    if (*v40 == 0) {
                        // break -> 0x140010f3e
                        break;
                    }
                    // 0x140010b79
                    function_140001d70(a1);
                    v46 = *v38;
                    v47 = *v39;
                }
                // 0x140010b8f
                v50 = *(char *)v46;
                int64_t v51 = v46 + 1; // 0x140010b93
                *v38 = v51;
                v52 = v51;
                v53 = v47;
                if (v51 >= v47) {
                    // 0x140010bae
                    v54 = v51;
                    v55 = 0;
                    v56 = 0;
                    if (*v40 == 0) {
                        goto lab_0x140010c1a;
                    } else {
                        // 0x140010bb4
                        function_140001d70(a1);
                        v52 = *v38;
                        v53 = *v39;
                        goto lab_0x140010bca;
                    }
                } else {
                    goto lab_0x140010bca;
                }
            }
          lab_0x140010f3e_2:
            // 0x140010f3e
            v37 = 0x1000000 * v48 >> 24;
            if (v49 >= *v39) {
                // 0x140010f64
                if (*v40 != 0) {
                    // 0x140010f6a
                    function_140001d70(a1);
                    *v38 = *v38 + 1;
                }
            } else {
                // 0x140010f55
                *v38 = v49 + 1;
            }
            // 0x140010f8a
            function_140010740(v36, (int64_t)&v37, v22);
            free((int64_t *)v43);
            v34 = 1;
            v33 = 0;
            v32 = v25;
            goto lab_0x140010fc6;
        } else {
            goto lab_0x140010fb7;
        }
    }
  lab_0x140010e97:
    // 0x140010e97
    v16 = (int64_t)"outofmem";
    v17 = __readgsqword(88);
    goto lab_0x140010eaf;
  lab_0x140010fb7:;
    int64_t v57 = v35; // 0x140010fb9
    int64_t v58 = v31; // 0x140010fb9
    int64_t v59 = 0; // 0x140010fb9
    if (v35 >= v29) {
      lab_0x140010ebd:
        // 0x140010ebd
        __security_check_cookie(g66);
        return &g103;
    }
    goto lab_0x140010fc1;
  lab_0x140010fc6:;
    int64_t v62 = &v27; // 0x140010fcc
    function_140001df0(a1, v62, 4);
    int64_t v63 = 0x100000000 * v32 >> 32; // 0x140010fe1
    function_140010740(4 * (0x100000000 * v18 * (0x100000000 * v33 * v63 >> 32) / 0x100000000 + (0x100000000 * v34 * v63 >> 32)) + v36, v62, v32 & 0xffffffff);
    v57 = v33;
    v58 = v32;
    v59 = v34 + 1 & 0xffffffff;
    goto lab_0x140010fc1;
  lab_0x140010fc1:;
    int64_t v60 = v58;
    int64_t v61 = v57;
    v34 = v59;
    v33 = v61;
    v32 = v60;
    if (v59 < v30) {
        goto lab_0x140010fc6;
    } else {
        // 0x14001100b
        v31 = v60;
        v35 = v61 + 1 & 0xffffffff;
        goto lab_0x140010fb7;
    }
}

// Address range: 0x140011060 - 0x1400111f5
int64_t function_140011060(int64_t a1, int64_t a2, int64_t a3, int64_t a4, int64_t a5) {
    int64_t v1 = a1 + 8; // 0x140011081
    int64_t v2 = a1 + 4; // 0x140011085
    if ((int32_t)function_140011440(a1, a1, v2, v1) == 0) {
        // 0x1400111dc
        return 0;
    }
    // 0x14001109c
    int64_t v3; // 0x140011060
    uint32_t v4 = (int32_t)v3;
    int32_t * v5 = (int32_t *)v2; // 0x14001109c
    int32_t * v6; // 0x140011060
    uint32_t v7; // 0x1400110c9
    uint32_t v8; // 0x1400110cd
    if (v4 < 0x1000001 == *v5 < 0x1000001) {
        // 0x1400110b6
        *(int32_t *)a2 = v4;
        *(int32_t *)a3 = *v5;
        v6 = (int32_t *)v1;
        if (a4 != 0) {
            // 0x1400110c4
            *(int32_t *)a4 = *v6;
        }
        // 0x1400110c9
        v7 = *v6;
        v8 = *v5;
        if (v7 < 0 || v8 < 0) {
            goto lab_0x1400111be;
        } else {
            if (v8 == 0) {
                goto lab_0x1400110f9;
            } else {
                if (0x7fffffff / v8 < v7) {
                    goto lab_0x1400111be;
                } else {
                    goto lab_0x1400110f9;
                }
            }
        }
    } else {
        goto lab_0x1400111be;
    }
  lab_0x1400111be:;
    int64_t v9 = __readgsqword(88); // 0x1400111ca
    int64_t v10 = (int64_t)"too large"; // 0x1400111ca
    goto lab_0x1400111d1;
  lab_0x1400111d1:
    // 0x1400111d1
    *(int64_t *)(*(int64_t *)v9 + 16) = v10;
    // 0x1400111dc
    return 0;
  lab_0x1400110f9:;
    int64_t v11 = (int64_t)v8 * (int64_t)v7; // 0x1400110fc
    int32_t v12 = v11; // 0x140011100
    if (v12 < 0) {
        goto lab_0x1400111be;
    } else {
        if (v8 == 0) {
            goto lab_0x14001114b;
        } else {
            uint32_t v13 = 0x7fffffff / v8;
            if ((v11 & 0xffffffff) > (int64_t)v13) {
                goto lab_0x1400111be;
            } else {
                if (v13 < v7) {
                    goto lab_0x1400111a9;
                } else {
                    goto lab_0x14001114b;
                }
            }
        }
    }
  lab_0x14001114b:;
    int64_t * mem = malloc(v8 * v12); // 0x140011152
    if (mem != NULL) {
        int64_t v14 = 0x100000000 * a5 >> 32;
        int64_t result = (int64_t)mem; // 0x140011152
        function_140001df0(a1, result, (int64_t)(*v5 * v8 * *v6));
        int32_t v15 = v14; // 0x14001117d
        if (v15 == 0) {
            // 0x1400111dc
            return result;
        }
        int32_t v16 = *v6; // 0x140011182
        if (v16 == v15) {
            // 0x1400111dc
            return result;
        }
        int64_t result2 = function_140002040(result, v16, v14 & 0xffffffff, v8, (int64_t)*v5); // 0x140011197
        if (result2 == 0) {
            // 0x1400111dc
            return 0;
        }
        // 0x1400111dc
        return result2;
    }
    goto lab_0x1400111a9;
  lab_0x1400111a9:
    // 0x1400111a9
    v9 = __readgsqword(88);
    v10 = (int64_t)"outofmem";
    goto lab_0x1400111d1;
}

// Address range: 0x140011200 - 0x140011371
int64_t function_140011200(int64_t a1, char * a2) {
    int32_t * v1 = (int32_t *)(a1 + 48);
    int64_t * v2 = (int64_t *)(a1 + 16); // 0x140011210
    int64_t * v3 = (int64_t *)(a1 + 200);
    int64_t * v4 = (int64_t *)(a1 + 192);
    int64_t v5; // 0x140011200
    int64_t result; // 0x140011200
    int64_t v6; // 0x140011210
    while (true) {
      lab_0x140011210_3:
        // 0x140011210
        v6 = *v2;
        if (v6 == 0) {
            goto lab_0x140011228;
        } else {
            int64_t v7 = v5;
            if ((int32_t)v7 == 0) {
                goto lab_0x140011238;
            } else {
                // 0x140011222
                result = v7;
                if (*v1 == 0) {
                    // break -> 0x140011366
                    break;
                }
                goto lab_0x140011228;
            }
        }
    }
  lab_0x140011366_3:
    // 0x140011366
    return result;
  lab_0x1400112ec:;
    uint64_t v8 = *v3; // 0x1400112ec
    int64_t v9 = v8; // 0x1400112fa
    if (*v4 >= v8) {
        // break -> 0x140011210
        goto lab_0x140011210_4;
    }
    goto lab_0x140011300;
  lab_0x140011300:;
    // 0x140011300
    int64_t v10; // 0x140011200
    unsigned char v11 = *(char *)&v10; // 0x140011300
    int64_t v12; // 0x140011200
    int64_t v13; // 0x140011200
    switch (v11) {
        case 10: {
            // 0x140011210
            v5 = v11;
            goto lab_0x140011210_3;
        }
        case 13: {
            // 0x140011210
            v5 = v11;
            goto lab_0x140011210_3;
        }
        default: {
            uint64_t v14 = *v4; // 0x140011313
            int64_t v15; // 0x140011200
            if (v14 >= *v3) {
                // 0x140011334
                if (*v1 == 0) {
                    // 0x14001135d
                    *a2 = 0;
                    v15 = v14;
                } else {
                    // 0x14001133a
                    function_140001d70(a1);
                    int64_t v16 = *v4; // 0x140011342
                    int64_t v17 = v16 + 1; // 0x14001134c
                    *v4 = v17;
                    *a2 = *(char *)v16;
                    v15 = v17;
                }
            } else {
                int64_t v18 = v14 + 1; // 0x140011326
                *v4 = v18;
                *a2 = *(char *)v14;
                v15 = v18;
            }
            // 0x1400112d0
            v12 = *v2;
            v13 = v15;
            goto lab_0x1400112d0;
        }
    }
  lab_0x140011228:;
    uint64_t v19 = *v3; // 0x140011228
    int64_t v20 = v19; // 0x140011236
    if (*v4 >= v19) {
        goto lab_0x140011295;
    } else {
        goto lab_0x140011238;
    }
  lab_0x140011295:;
    int64_t v21; // 0x140011200
    if (v6 == 0) {
        goto lab_0x1400112b1;
    } else {
        int64_t v22 = v20;
        v21 = v22;
        if ((int32_t)v22 == 0) {
            goto lab_0x1400112c5;
        } else {
            // 0x1400112a7
            result = v22;
            if (*v1 == 0) {
                // break -> 0x140011366
                goto lab_0x140011366_3;
            }
            goto lab_0x1400112b1;
        }
    }
  lab_0x140011238:;
    char v23 = *(char *)&v10; // 0x140011238
    if (v23 == 32) {
        goto lab_0x140011245;
    } else {
        unsigned char v24 = v23 - 9; // 0x14001123f
        v20 = v24;
        if (v24 < 5) {
            goto lab_0x140011245;
        } else {
            goto lab_0x140011295;
        }
    }
  lab_0x1400112b1:;
    int64_t v25 = *v3; // 0x1400112b1
    v21 = v25;
    result = v25;
    if (*v4 >= v25) {
        // break -> 0x140011366
        goto lab_0x140011366_3;
    }
    goto lab_0x1400112c5;
  lab_0x140011245:;
    uint64_t v27 = *v4; // 0x140011245
    if (v27 >= *v3) {
        // 0x140011266
        if (*v1 == 0) {
            // 0x14001128c
            *a2 = 0;
            v9 = v27;
        } else {
            // 0x14001126c
            function_140001d70(a1);
            int64_t v28 = *v4; // 0x140011274
            int64_t v29 = v28 + 1; // 0x14001127e
            *v4 = v29;
            *a2 = *(char *)v28;
            v9 = v29;
        }
    } else {
        int64_t v30 = v27 + 1; // 0x140011258
        *v4 = v30;
        *a2 = *(char *)v27;
        v9 = v30;
    }
    // 0x140011210
    v5 = v9;
    goto lab_0x140011210_3;
  lab_0x1400112c5:
    // 0x1400112c5
    v12 = v6;
    v13 = v21;
    result = v21;
    if (*(char *)&v10 != 35) {
        // break -> 0x140011366
        goto lab_0x140011366_3;
    }
    while (true) {
      lab_0x1400112d0:
        // 0x1400112d0
        if (v12 == 0) {
            goto lab_0x1400112ec;
        } else {
            int64_t v26 = v13;
            if ((int32_t)v26 == 0) {
                goto lab_0x140011300;
            } else {
                // 0x1400112e2
                v9 = v26;
                if (*v1 == 0) {
                    // break -> 0x140011210
                    break;
                }
                goto lab_0x1400112ec;
            }
        }
    }
    // 0x140011210
    v5 = v9;
    goto lab_0x140011210_3;
}

// Address range: 0x140011380 - 0x140011437
int64_t function_140011380(int64_t a1, char * a2) {
    int32_t * v1 = (int32_t *)(a1 + 48);
    int64_t * v2 = (int64_t *)(a1 + 200);
    int64_t * v3 = (int64_t *)(a1 + 192);
    int64_t v4 = 0; // 0x140011395
    int64_t v5; // 0x140011380
    int64_t result; // 0x140011380
    while (true) {
      lab_0x140011397:
        // 0x140011397
        result = v4;
        if (*(int64_t *)(a1 + 16) == 0) {
            goto lab_0x1400113af;
        } else {
            // 0x14001139e
            if ((int32_t)v5 == 0) {
                goto lab_0x1400113bf;
            } else {
                // 0x1400113a9
                if (*v1 == 0) {
                    // break -> 0x140011425
                    break;
                }
                goto lab_0x1400113af;
            }
        }
    }
  lab_0x140011425_2:
    // 0x140011425
    return result;
  lab_0x1400113af:
    // 0x1400113af
    if (*v3 >= *v2) {
        return result;
    }
    goto lab_0x1400113bf;
  lab_0x1400113bf:;
    // 0x1400113bf
    int64_t v6; // 0x140011380
    char v7 = *(char *)&v6; // 0x1400113bf
    int64_t v8 = v7; // 0x1400113bf
    v6 = v8;
    if (v7 >= 58) {
        // break -> 0x140011425
        goto lab_0x140011425_2;
    }
    uint64_t v9 = *v3; // 0x1400113c9
    int64_t v10; // 0x140011380
    if (v9 >= *v2) {
        // 0x1400113f3
        if (*v1 == 0) {
            // 0x14001141c
            *a2 = 0;
            v10 = v9;
        } else {
            // 0x1400113f9
            function_140001d70(a1);
            int64_t v11 = *v3; // 0x140011401
            int64_t v12 = v11 + 1; // 0x14001140b
            *v3 = v12;
            *a2 = *(char *)v11;
            v10 = v12;
        }
    } else {
        int64_t v13 = v9 + 1; // 0x1400113e5
        *v3 = v13;
        *a2 = *(char *)v9;
        v10 = v13;
    }
    // 0x140011397
    v5 = v10;
    v4 = 10 * result + 0xffffffd0 + v8 & 0xffffffff;
    goto lab_0x140011397;
}

// Address range: 0x140011440 - 0x140011630
int64_t function_140011440(int64_t a1, int64_t a2, int64_t a3, int64_t a4) {
    int64_t * v1 = (int64_t *)(a1 + 208); // 0x14001145b
    uint64_t v2 = *v1; // 0x14001145b
    int64_t * v3 = (int64_t *)(a1 + 192); // 0x14001146a
    *v3 = v2;
    int64_t * v4 = (int64_t *)(a1 + 216); // 0x140011479
    uint64_t v5 = *v4; // 0x140011479
    int64_t * v6 = (int64_t *)(a1 + 200); // 0x140011490
    *v6 = v5;
    int64_t v7 = v2; // 0x1400114a1
    int64_t v8 = v5; // 0x1400114a1
    if (v2 < v5) {
        goto lab_0x1400114bf;
    } else {
        // 0x1400114a3
        if (*(int32_t *)(a1 + 48) == 0) {
            goto lab_0x1400115f9;
        } else {
            // 0x1400114a9
            function_140001d70(a1);
            v7 = *v3;
            v8 = *v6;
            goto lab_0x1400114bf;
        }
    }
  lab_0x1400114bf:;
    int64_t v9 = v7 + 1; // 0x1400114c2
    *v3 = v9;
    int64_t v10; // 0x140011440
    int64_t v11; // 0x1400114f1
    if (v9 >= v8) {
        // 0x1400114e3
        if (*(int32_t *)(a1 + 48) == 0) {
            goto lab_0x1400115f9;
        } else {
            // 0x1400114e9
            function_140001d70(a1);
            v11 = *v3;
            v10 = v11 + 1;
            goto lab_0x140011509;
        }
    } else {
        // 0x1400114d1
        v10 = v7 + 2;
        v11 = v9;
        goto lab_0x140011509;
    }
  lab_0x1400115f9:
    // 0x1400115f9
    *v3 = *v1;
    *v6 = *v4;
    // 0x140011617
    __security_check_cookie(g66);
    return &g103;
  lab_0x140011509:;
    char v12 = *(char *)v11;
    *v3 = v10;
    if (*(char *)v7 == 80 == v12 < 55) {
        // 0x14001151e
        int64_t v13; // bp-52, 0x140011440
        int64_t v14 = &v13; // 0x140011462
        *(int32_t *)(a4 != 0 ? a4 : v14) = v12 == 54 ? 3 : 1;
        uint64_t v15 = *v3; // 0x140011530
        char v16; // 0x140011440
        if (v15 >= *v6) {
            // 0x14001154f
            v16 = 0;
            if (*(int32_t *)(a1 + 48) != 0) {
                // 0x140011555
                function_140001d70(a1);
                int64_t v17 = *v3; // 0x14001155d
                *v3 = v17 + 1;
                v16 = *(char *)v17;
            }
        } else {
            // 0x140011540
            *v3 = v15 + 1;
            v16 = *(char *)v15;
        }
        char v18 = v16; // bp-56, 0x140011575
        function_140011200(a1, &v18);
        int64_t v19 = function_140011380(a1, &v18); // 0x14001158e
        *(int32_t *)(a2 != 0 ? a2 : v14) = (int32_t)v19;
        function_140011200(a1, &v18);
        int64_t v20 = function_140011380(a1, &v18); // 0x1400115ab
        *(int32_t *)(a3 != 0 ? a3 : v14) = (int32_t)v20;
        function_140011200(a1, &v18);
        if ((int32_t)function_140011380(a1, &v18) >= 256) {
            int64_t v21 = *(int64_t *)__readgsqword(88); // 0x1400115e2
            *(int64_t *)(v21 + 16) = (int64_t)"max value > 255";
        }
        // 0x140011617
        __security_check_cookie(g66);
        return &g103;
    }
    goto lab_0x1400115f9;
}

// Address range: 0x140011630 - 0x1400127aa
int64_t function_140011630(int64_t a1, int64_t a2, int64_t * a3, int64_t a4) {
    int64_t v1; // 0x140011630
    int64_t * mem = malloc(0x20000); // 0x140011659
    int64_t result = (int64_t)mem; // 0x140011659
    if (mem == NULL) {
        // 0x14001166c
        return result;
    }
    int64_t * mem2 = realloc(NULL, 10); // 0x1400116a7
    int64_t v2 = 0; // 0x1400116b6
    if (mem2 != NULL) {
        int64_t v3 = (int64_t)mem2; // 0x1400116a7
        *(int32_t *)(v3 + 4) = 0;
        *(int32_t *)mem2 = 2;
        v2 = v3 + 8;
    }
    int32_t * v4 = (int32_t *)(v2 - 4);
    int64_t v5 = v2 - 8; // 0x1400116cc
    *(char *)(v2 + (int64_t)*v4) = 120;
    int32_t v6 = *v4; // 0x1400116db
    *v4 = v6 + 1;
    uint32_t v7 = *(int32_t *)v5; // 0x1400116e1
    int32_t * v8 = v4; // 0x1400116e7
    int64_t v9 = v2; // 0x1400116e7
    if (v6 + 2 >= v7) {
        int64_t v10 = 2 * (int64_t)v7 & 0xfffffffe | 1; // 0x1400116e9
        uint64_t v11 = 0x100000000 * v10 >> 32; // 0x1400116f0
        int64_t v12 = v11 > 0xfffffffffffffff7 ? 0xffffffff : v11 + 8; // 0x1400116f7
        int64_t * mem3 = realloc((int64_t *)v5, (int32_t)v12); // 0x1400116fb
        v8 = v4;
        v9 = v2;
        if (mem3 != NULL) {
            int64_t v13 = (int64_t)mem3; // 0x1400116fb
            *(int32_t *)mem3 = (int32_t)v10;
            v8 = (int32_t *)(v13 + 4);
            v9 = v13 + 8;
        }
    }
    int64_t v14 = 0x100000000 * a2;
    int64_t v15 = v14 >> 32; // 0x140011655
    int32_t * v16 = v8;
    *(char *)(v9 + (int64_t)*v16) = 94;
    *v16 = *v16 + 1;
    memset(mem, 0, 0x20000);
    int32_t v17 = v15;
    int64_t v18 = v9; // 0x140011753
    int64_t v19 = 3; // 0x140011753
    int64_t v20 = 0; // 0x140011753
    int64_t v21 = 3; // 0x140011753
    int32_t * v22; // 0x140011630
    int64_t v23; // 0x140011630
    int64_t v24; // 0x140011630
    int64_t v25; // 0x140011630
    int64_t v26; // 0x140011630
    int64_t v27; // 0x140011630
    int64_t v28; // 0x140011630
    int64_t v29; // 0x140011630
    int64_t v30; // 0x140011630
    int64_t v31; // 0x140011630
    int64_t v32; // 0x140011630
    int64_t v33; // 0x140011630
    int32_t v34; // 0x140011630
    int32_t v35; // 0x140011630
    int32_t v36; // 0x140011630
    int32_t v37; // 0x140011630
    uint32_t v38; // 0x140011630
    int64_t v39; // 0x140011630
    int32_t v40; // 0x140011630
    int32_t v41; // 0x140011630
    int64_t v42; // 0x140011630
    int64_t v43; // 0x140011630
    int64_t v44; // 0x140011630
    int64_t v45; // 0x140011630
    char * v46; // 0x140011630
    int64_t v47; // 0x140011630
    char * v48; // 0x140011779
    char * v49; // 0x140011785
    int64_t * v50; // 0x1400117d2
    if (v17 >= 4) {
        // 0x140011765
        v42 = v9;
        v39 = 3;
        v44 = 3;
        v37 = 0;
        v31 = 3;
        v23 = 0;
        v24 = 3;
        while (true) {
          lab_0x140011765:;
            int64_t v51 = v24;
            int64_t v52 = v23;
            int64_t v53 = v31;
            v38 = v37;
            v43 = v42;
            int64_t v54 = 0x100000000 * v52;
            v45 = (v54 >> 32) + a1;
            v46 = (char *)(v45 + 2);
            v47 = v45 + 1;
            v48 = (char *)v47;
            v49 = (char *)v45;
            int64_t v55 = 256 * (int64_t)*v48 | 0x10000 * (int64_t)*v46 | (int64_t)*v49; // 0x14001178d
            uint32_t v56 = (int32_t)(8 * v55 ^ v55); // 0x1400117a5
            int32_t v57 = v56 / 32 + v56; // 0x1400117aa
            uint32_t v58 = 16 * v57 ^ v57; // 0x1400117b1
            uint32_t v59 = v58 / 0x20000 + v58; // 0x1400117b8
            v50 = (int64_t *)((int64_t)(8 * (v59 / 64 + v59) & 0x1fff8) + result);
            int64_t v60 = *v50; // 0x1400117d2
            v40 = 3;
            v35 = 0;
            v32 = v53;
            v25 = v51;
            v27 = 0;
            v30 = 0;
            v34 = 2;
            if (v60 == 0) {
                goto lab_0x140011909;
            } else {
                int32_t * v61 = (int32_t *)(v60 - 4);
                int32_t v62 = *v61; // 0x1400117e0
                v22 = v61;
                v29 = v60;
                v28 = 0;
                v26 = v51;
                v33 = v53;
                v36 = 0;
                v41 = 3;
                if (v62 < 1) {
                    goto lab_0x1400118e3;
                } else {
                    int64_t v63 = 0; // 0x140011815
                    int64_t v64 = 3;
                    int64_t v65 = v52;
                    int32_t v66 = 0;
                    int32_t v67 = 3;
                    int64_t v68 = *(int64_t *)(8 * v63 + v60); // 0x140011820
                    int32_t v69 = v67; // 0x14001182d
                    int32_t v70 = v66; // 0x14001182d
                    int64_t v71 = v65; // 0x14001182d
                    int64_t v72 = v64; // 0x14001182d
                    int64_t v73; // 0x140011630
                    int64_t v74; // 0x140011630
                    uint64_t v75; // 0x140011630
                    int64_t v76; // 0x140011869
                    if (v68 - a1 > v54 - 0x800000000000 >> 32) {
                        // 0x14001182f
                        if ((int32_t)((v15 & 0xffffffff) - v65) >= 1) {
                            // 0x14001183f
                            while (true) {
                                // 0x140011859
                                uint64_t v77; // 0x140011630
                                char v78 = *(char *)(v77 + v45); // 0x14001185d
                                char v79 = *(char *)(v77 + v68); // 0x140011862
                                if (v79 != v78) {
                                    // break -> 0x14001187b
                                    break;
                                }
                                // 0x140011866
                                int64_t v80; // 0x140011630
                                int64_t v81 = v80 + 1 & 0xffffffff; // 0x140011866
                                v76 = v77 + 1;
                                int64_t v82 = v76; // 0x14001186f
                                v74 = v81;
                                uint64_t v83; // 0x140011842
                                if (v76 >= v83) {
                                    // break -> 0x14001187b
                                    break;
                                }
                                v80 = v74;
                                v77 = v82;
                            }
                        }
                        // 0x14001187b
                        v73 = v65;
                        v75 = 0;
                        v69 = v67;
                        v70 = v66;
                        v71 = v73;
                        v72 = v64;
                        if (v75 >= v64) {
                            // 0x140011880
                            v69 = v75;
                            v70 = v68;
                            v71 = v73;
                            v72 = v75 & 0xffffffff;
                        }
                    }
                    int32_t v84 = v70;
                    int32_t v85 = v69;
                    v63++;
                    while (v63 != (int64_t)v62) {
                        // 0x140011820
                        v64 = v72;
                        v65 = v71;
                        v66 = v84;
                        v67 = v85;
                        v68 = *(int64_t *)(8 * v63 + v60);
                        v69 = v67;
                        v70 = v66;
                        v71 = v65;
                        v72 = v64;
                        if (v68 - a1 > v54 - 0x800000000000 >> 32) {
                            // 0x14001182f
                            if ((int32_t)((v15 & 0xffffffff) - v65) >= 1) {
                                // 0x14001183f
                                v74 = 0;
                                v76 = 0;
                                while (v76 < 258) {
                                    // 0x140011859
                                    if (*(char *)(v76 + v68) != *(char *)(v76 + v45)) {
                                        // break -> 0x14001187b
                                        break;
                                    }
                                    // 0x140011866
                                    v76++;
                                    v74 = v74 + 1 & 0xffffffff;
                                    int64_t v86; // 0x140011835
                                    if (v76 >= 0x100000000 * v86 >> 32) {
                                        // break -> 0x14001187b
                                        break;
                                    }
                                }
                            }
                            // 0x14001187b
                            v73 = v65;
                            v75 = 0;
                            v69 = v67;
                            v70 = v66;
                            v71 = v73;
                            v72 = v64;
                            if (v75 >= v64) {
                                // 0x140011880
                                v69 = v75;
                                v70 = v68;
                                v71 = v73;
                                v72 = v75 & 0xffffffff;
                            }
                        }
                        // 0x14001188d
                        v84 = v70;
                        v85 = v69;
                        v63++;
                    }
                    int64_t v87 = v60; // 0x1400118bb
                    if (v62 == 16) {
                        // 0x1400118bd
                        memmove((int64_t *)v60, (int64_t *)(v60 + 64), 64);
                        *(int32_t *)(*v50 - 4) = 8;
                        v87 = *v50;
                    }
                    int64_t v88 = v39 & 0xffffffff; // 0x14001189f
                    int64_t v89 = v44 & 0xffffffff; // 0x1400118a3
                    int64_t v90 = v84; // 0x1400118ac
                    int64_t v91 = v87;
                    v40 = v85;
                    v35 = v84;
                    v32 = v88;
                    v25 = v89;
                    v27 = v90;
                    v30 = 0;
                    v34 = 2;
                    if (v91 == 0) {
                        goto lab_0x140011909;
                    } else {
                        // 0x1400118de
                        v22 = (int32_t *)(v91 - 4);
                        v29 = v91;
                        v28 = v90;
                        v26 = v89;
                        v33 = v88;
                        v36 = v84;
                        v41 = v85;
                        goto lab_0x1400118e3;
                    }
                }
            }
        }
    }
  lab_0x140012266:;
    int64_t v92 = v14 >> 32; // 0x140012266
    int64_t v93 = 0x100000000 * v20 >> 32; // 0x140012269
    int64_t v94 = v18; // 0x140012274
    int64_t v95 = v19; // 0x140012274
    int64_t v96 = v21; // 0x140012274
    int64_t v97 = v93; // 0x140012274
    int64_t v98 = v18; // 0x140012274
    int64_t v99 = v19; // 0x140012274
    int64_t v100 = v21; // 0x140012274
    int64_t v101; // 0x140011630
    int64_t v102; // 0x140011630
    int64_t v103; // 0x140011630
    int64_t v104; // 0x140011630
    int64_t v105; // 0x140011630
    int64_t v106; // 0x140011630
    int64_t v107; // 0x140011630
    int64_t v108; // 0x140011630
    int64_t v109; // 0x140011630
    int64_t v110; // 0x140011630
    int64_t v111; // 0x140011630
    int64_t v112; // 0x140011630
    int64_t v113; // 0x140011630
    int64_t v114; // 0x140011630
    int64_t v115; // 0x140011630
    int64_t v116; // 0x140011630
    int64_t v117; // 0x140011630
    int64_t v118; // 0x140011630
    int64_t v119; // 0x140011630
    int64_t v120; // 0x140011630
    int64_t v121; // 0x140011630
    int64_t v122; // 0x140011630
    int64_t v123; // 0x140011630
    int64_t v124; // 0x140012337
    int64_t v125; // 0x1400123e7
    if (v93 < v92) {
        while (true) {
          lab_0x140012280:
            // 0x140012280
            v103 = v97;
            int64_t v126 = v96;
            int64_t v127 = v95;
            int64_t v128 = v94;
            unsigned char v129 = *(char *)(v103 + a1); // 0x140012280
            int64_t v130 = v129; // 0x140012280
            if (v129 < 144) {
                int64_t v131 = v130 + 48; // 0x14001229a
                int32_t v132 = 8; // 0x14001229a
                int64_t v133 = v131 & 1; // 0x1400122a9
                v132--;
                v131 = (int32_t)v131 >> 1;
                int64_t v134 = v133; // 0x1400122af
                while (v132 != 0) {
                    // 0x1400122a0
                    v133 = 2 * v134 & 0xfffffffe | v131 & 1;
                    v132--;
                    v131 = (int32_t)v131 >> 1;
                    v134 = v133;
                }
                uint64_t v135 = v126 + 8; // 0x1400122b4
                int64_t v136 = v135 & 0xffffffff; // 0x1400122b4
                uint32_t v137 = (int32_t)v126 & 31; // 0x1400122b8
                int64_t v138 = v137 == 0 ? v133 : (int64_t)((int32_t)v133 << v137);
                int64_t v139 = v138 | v127 & 0xffffffff; // 0x1400122ba
                v115 = v128;
                v121 = v139;
                v102 = v136;
                if ((int32_t)v135 < 8) {
                    goto lab_0x1400123fa;
                } else {
                    int64_t v140 = v135 / 8 & 0x1fffffff; // 0x1400122d0
                    v106 = v128;
                    v105 = v140;
                    v118 = v139;
                    while (true) {
                      lab_0x1400122e0:
                        // 0x1400122e0
                        v107 = v106;
                        v116 = 0;
                        v122 = 2;
                        if (v107 == 0) {
                            goto lab_0x140012303;
                        } else {
                            int64_t v141 = v107 - 8; // 0x1400122e8
                            uint32_t v142 = *(int32_t *)v141; // 0x1400122ec
                            v108 = v107;
                            if (*(int32_t *)(v107 - 4) + 1 < v142) {
                                goto lab_0x14001232c;
                            } else {
                                // 0x1400122f4
                                v116 = v141;
                                v122 = 2 * (int64_t)v142 & 0xfffffffe | 1;
                                goto lab_0x140012303;
                            }
                        }
                    }
                  lab_0x1400123f0_2:
                    // 0x1400123f0
                    v114 = v109;
                    v120 = v124;
                    v101 = v136 - 8 * v140;
                    goto lab_0x1400123f0;
                }
            } else {
                int64_t v143 = v130 | 256; // 0x14001234b
                int32_t v144 = 9; // 0x14001234b
                int64_t v145 = v143 & 1; // 0x14001235a
                v144--;
                v143 = (int32_t)v143 >> 1;
                int64_t v146 = v145; // 0x140012360
                while (v144 != 0) {
                    // 0x140012351
                    v145 = 2 * v146 & 0xfffffffe | v143 & 1;
                    v144--;
                    v143 = (int32_t)v143 >> 1;
                    v146 = v145;
                }
                uint64_t v147 = v126 + 9; // 0x140012365
                uint32_t v148 = (int32_t)v126 & 31; // 0x140012369
                int64_t v149 = v148 == 0 ? v145 : (int64_t)((int32_t)v145 << v148);
                int64_t v150 = v149 | v127 & 0xffffffff; // 0x14001236b
                v115 = v128;
                v121 = v150;
                v102 = v147 & 0xffffffff;
                if ((int32_t)v147 < 8) {
                    goto lab_0x1400123fa;
                } else {
                    int64_t v151 = v147 / 8 & 0x1fffffff; // 0x140012381
                    v110 = v128;
                    v104 = v151;
                    v119 = v150;
                    while (true) {
                      lab_0x140012390:
                        // 0x140012390
                        v111 = v110;
                        v117 = 0;
                        v123 = 2;
                        if (v111 == 0) {
                            goto lab_0x1400123b3;
                        } else {
                            int64_t v152 = v111 - 8; // 0x140012398
                            uint32_t v153 = *(int32_t *)v152; // 0x14001239c
                            v112 = v111;
                            if (*(int32_t *)(v111 - 4) + 1 < v153) {
                                goto lab_0x1400123dc;
                            } else {
                                // 0x1400123a4
                                v117 = v152;
                                v123 = 2 * (int64_t)v153 & 0xfffffffe | 1;
                                goto lab_0x1400123b3;
                            }
                        }
                    }
                  lab_0x1400123f0_3:
                    // 0x1400123f0
                    v114 = v113;
                    v120 = v125;
                    v101 = v147 - 8 * v151;
                    goto lab_0x1400123f0;
                }
            }
        }
    }
  lab_0x140012406:;
    int64_t v154 = v98;
    int64_t v155 = v100 + 7; // 0x140012426
    int64_t v156 = v99 & 0xffffffff;
    int32_t v157 = v155;
    int32_t v158 = v157; // 0x140012432
    int64_t v159 = v154; // 0x140012432
    int64_t v160 = v156; // 0x140012432
    int64_t v161 = v155; // 0x140012432
    int64_t v162; // 0x140011630
    int64_t v163; // 0x140011630
    int64_t v164; // 0x140011630
    int64_t v165; // 0x140011630
    int64_t v166; // 0x140011630
    int64_t v167; // 0x140011630
    int64_t v168; // 0x140011630
    int64_t v169; // 0x140011630
    uint64_t v170; // 0x140011630
    int64_t v171; // 0x140011630
    int64_t v172; // 0x1400124a7
    if (v157 >= 8) {
        int64_t v173 = v155 / 8 & 0x1fffffff; // 0x140012442
        v164 = v154;
        v162 = v173;
        v169 = v156;
        while (true) {
          lab_0x140012450:
            // 0x140012450
            v170 = v169;
            v163 = v162;
            v165 = v164;
            v168 = 0;
            v171 = 2;
            if (v165 == 0) {
                goto lab_0x140012473;
            } else {
                int64_t v174 = v165 - 8; // 0x140012458
                uint32_t v175 = *(int32_t *)v174; // 0x14001245c
                v166 = v165;
                if (*(int32_t *)(v165 - 4) + 1 < v175) {
                    goto lab_0x14001249c;
                } else {
                    // 0x140012464
                    v168 = v174;
                    v171 = 2 * (int64_t)v175 & 0xfffffffe | 1;
                    goto lab_0x140012473;
                }
            }
        }
      lab_0x1400124b5:;
        int64_t v176 = v155 - 8 * v173; // 0x14001244a
        v158 = v176;
        v159 = v167;
        v160 = v172;
        v161 = v176;
    }
    int64_t v177 = v159; // 0x1400124b8
    int64_t v178; // 0x140011630
    int64_t v179; // 0x140011630
    int64_t v180; // 0x140011630
    if (v158 != 0) {
        int64_t v181 = v160;
        int64_t v182 = v159;
        int64_t v183 = (v161 & 0xffffffff) + 1; // 0x1400124d3
        int32_t v184 = v183;
        int64_t v185 = v182; // 0x1400124da
        int64_t v186 = v181; // 0x1400124da
        int64_t v187 = v183; // 0x1400124da
        int32_t v188; // 0x140011630
        int64_t v189; // 0x140011630
        int64_t v190; // 0x140012546
        int64_t v191; // 0x1400124df
        if (v184 >= 8) {
            // 0x1400124dc
            v178 = v183 / 8 & 0x1fffffff;
            v180 = v181;
            while (true) {
                // 0x1400124f3
                v179 = v182;
                if (v179 == 0) {
                    goto lab_0x140012516;
                } else {
                    // 0x1400124f8
                    if (*(int32_t *)(v179 - 4) + 1 < *(int32_t *)(v179 - 8)) {
                        goto lab_0x14001253b;
                    } else {
                        // 0x140012507
                        goto lab_0x140012516;
                    }
                }
            }
            // 0x14001254f
            v187 = v183 - 8 * v191;
            v188 = v187;
            v185 = v189;
            v186 = v190;
        }
        // 0x14001254f
        v177 = v185;
        while (v184 != 0) {
            // 0x1400124d3
            v181 = v186;
            v182 = v185;
            v183 = (v187 & 0xffffffff) + 1;
            v184 = v183;
            v185 = v182;
            v186 = v181;
            v187 = v183;
            if (v184 >= 8) {
                // 0x1400124dc
                v178 = v183 / 8 & 0x1fffffff;
                v180 = v181;
                while (true) {
                    // 0x1400124f3
                    v179 = v182;
                    if (v179 == 0) {
                        goto lab_0x140012516;
                    } else {
                        // 0x1400124f8
                        if (*(int32_t *)(v179 - 4) + 1 < *(int32_t *)(v179 - 8)) {
                            goto lab_0x14001253b;
                        } else {
                            // 0x140012507
                            goto lab_0x140012516;
                        }
                    }
                }
                // 0x14001254f
                v187 = v183 - 8 * v191;
                v188 = v187;
                v185 = v189;
                v186 = v190;
            }
            // 0x14001254f
            v177 = v185;
        }
    }
    int64_t v192 = v177;
    int64_t v193 = result; // 0x14001256f
    int64_t v194 = 0x4000;
    int64_t v195 = *(int64_t *)v193; // 0x140012572
    if (v195 != 0) {
        // 0x14001257a
        free((int64_t *)(v195 - 8));
    }
    int64_t v196 = v194 - 1; // 0x140012588
    v193 += 8;
    while (v196 != 0) {
        // 0x140012572
        v194 = v196;
        v195 = *(int64_t *)v193;
        if (v195 != 0) {
            // 0x14001257a
            free((int64_t *)(v195 - 8));
        }
        // 0x140012584
        v196 = v194 - 1;
        v193 += 8;
    }
    // 0x14001258e
    free(mem);
    int64_t v197 = v194 & 0xffffffff; // 0x140012599
    int64_t v198 = 0; // 0x1400125a2
    int64_t v199 = v197; // 0x1400125a2
    if (v14 >= 0x100000000) {
        uint32_t v200 = (int32_t)(0x5e6ea9af * v15 / 0x100000000) >> 11; // 0x1400125bb
        int64_t v201 = 0;
        uint64_t v202 = (int64_t)(-0x15b0 * (v200 / 0x80000000 + v200) + v17);
        int64_t v203 = 0;
        int64_t v204 = v203; // 0x1400125d6
        int64_t v205 = v197; // 0x1400125d6
        unsigned char v206; // 0x1400125e0
        int64_t v207; // 0x1400125e4
        int64_t v208; // 0x1400125e7
        int64_t v209; // 0x1400125e7
        int64_t v210; // 0x1400125ea
        if (v202 >= 1) {
            // 0x1400125d8
            v207 = 0;
            v210 = v203;
            v206 = *(char *)(v201 + a1 + v207);
            v207++;
            v208 = v197 + (int64_t)v206;
            v209 = v208 & 0xffffffff;
            v210 = v208 + v210 & 0xffffffff;
            v204 = v210;
            v205 = v209;
            while (v207 != v202) {
                // 0x1400125e0
                v206 = *(char *)(v201 + a1 + v207);
                v207++;
                v208 = v209 + (int64_t)v206;
                v209 = v208 & 0xffffffff;
                v210 = v208 + v210 & 0xffffffff;
                v204 = v210;
                v205 = v209;
            }
        }
        int64_t v211 = v205;
        int64_t v212 = v204;
        int64_t v213 = v201 + v202; // 0x1400125f7
        int64_t v214 = 0xffff000f * 0x80078071 * (v211 & 0xffffffff) / 0x800000000000 + v211 & 0xffffffff; // 0x14001260c
        int64_t v215 = 0xffff000f * 0x80078071 * (v212 & 0xffffffff) / 0x800000000000 + v212 & 0xffffffff; // 0x14001261f
        v198 = v215;
        v199 = v214;
        while (v213 < v92) {
            int64_t v216 = v214;
            v201 = v213;
            v202 = 0x15b0;
            v203 = v215;
            v204 = v203;
            v205 = v216;
            if (v202 >= 1) {
                // 0x1400125d8
                v207 = 0;
                v210 = v203;
                v206 = *(char *)(v201 + a1 + v207);
                v207++;
                v208 = v216 + (int64_t)v206;
                v209 = v208 & 0xffffffff;
                v210 = v208 + v210 & 0xffffffff;
                v204 = v210;
                v205 = v209;
                while (v207 != v202) {
                    // 0x1400125e0
                    v206 = *(char *)(v201 + a1 + v207);
                    v207++;
                    v208 = v209 + (int64_t)v206;
                    v209 = v208 & 0xffffffff;
                    v210 = v208 + v210 & 0xffffffff;
                    v204 = v210;
                    v205 = v209;
                }
            }
            // 0x1400125f2
            v211 = v205;
            v212 = v204;
            v213 = v201 + v202;
            v214 = 0xffff000f * 0x80078071 * (v211 & 0xffffffff) / 0x800000000000 + v211 & 0xffffffff;
            v215 = 0xffff000f * 0x80078071 * (v212 & 0xffffffff) / 0x800000000000 + v212 & 0xffffffff;
            v198 = v215;
            v199 = v214;
        }
    }
    int64_t v217 = v199;
    int64_t v218 = v198;
    int64_t v219 = -8; // 0x140012629
    int64_t v220 = 2; // 0x140012629
    int64_t v221; // 0x140011630
    int64_t v222; // 0x140011630
    if (v192 == 0) {
        goto lab_0x14001264b;
    } else {
        int64_t v223 = v192 - 8; // 0x14001262e
        uint32_t v224 = *(int32_t *)v223; // 0x140012632
        v221 = v192;
        v222 = v223;
        if (*(int32_t *)(v192 - 4) + 1 < v224) {
            goto lab_0x14001268e;
        } else {
            // 0x14001263a
            v219 = v223;
            v220 = 2 * (int64_t)v224 & 0xfffffffe | 1;
            goto lab_0x14001264b;
        }
    }
  lab_0x140012303:;
    int64_t v225 = v122;
    uint64_t v226 = 0x100000000 * v225 >> 32; // 0x140012303
    int64_t v227 = v226 > 0xfffffffffffffff7 ? 0xffffffff : v226 + 8; // 0x14001230a
    int64_t * mem4 = realloc((int64_t *)v116, (int32_t)v227); // 0x14001230e
    v108 = v107;
    if (mem4 != NULL) {
        int64_t v228 = (int64_t)mem4; // 0x14001230e
        if (v107 == 0) {
            // 0x140012321
            *(int32_t *)(v228 + 4) = 0;
        }
        // 0x140012325
        *(int32_t *)mem4 = (int32_t)v225;
        v108 = v228 + 8;
    }
    goto lab_0x14001232c;
  lab_0x14001232c:
    // 0x14001232c
    v109 = v108;
    int32_t * v229 = (int32_t *)(v109 - 4); // 0x14001232c
    *(char *)(v109 + (int64_t)*v229) = (char)v118;
    *v229 = *v229 + 1;
    v124 = v118 / 256;
    int64_t v230 = v105 - 1; // 0x14001233a
    v106 = v109;
    v105 = v230;
    v118 = v124;
    if (v230 == 0) {
        // break -> 0x1400123f0
        goto lab_0x1400123f0_2;
    }
    goto lab_0x1400122e0;
  lab_0x1400123b3:;
    int64_t v231 = v123;
    uint64_t v232 = 0x100000000 * v231 >> 32; // 0x1400123b3
    int64_t v233 = v232 > 0xfffffffffffffff7 ? 0xffffffff : v232 + 8; // 0x1400123ba
    int64_t * mem5 = realloc((int64_t *)v117, (int32_t)v233); // 0x1400123be
    v112 = v111;
    if (mem5 != NULL) {
        int64_t v234 = (int64_t)mem5; // 0x1400123be
        if (v111 == 0) {
            // 0x1400123d1
            *(int32_t *)(v234 + 4) = 0;
        }
        // 0x1400123d5
        *(int32_t *)mem5 = (int32_t)v231;
        v112 = v234 + 8;
    }
    goto lab_0x1400123dc;
  lab_0x1400123dc:
    // 0x1400123dc
    v113 = v112;
    int32_t * v235 = (int32_t *)(v113 - 4); // 0x1400123dc
    *(char *)(v113 + (int64_t)*v235) = (char)v119;
    *v235 = *v235 + 1;
    v125 = v119 / 256;
    int64_t v236 = v104 - 1; // 0x1400123ea
    v110 = v113;
    v104 = v236;
    v119 = v125;
    if (v236 == 0) {
        // break -> 0x1400123f0
        goto lab_0x1400123f0_3;
    }
    goto lab_0x140012390;
  lab_0x140012516:;
    // 0x140012516
    int64_t v237; // 0x140011630
    uint64_t v238 = 0x100000000 * v237 >> 32; // 0x140012516
    int64_t v239 = v238 > 0xfffffffffffffff7 ? 0xffffffff : v238 + 8; // 0x14001251d
    int64_t v240; // 0x140011630
    int64_t * mem6 = realloc((int64_t *)v240, (int32_t)v239); // 0x140012521
    if (mem6 != NULL) {
        int64_t v241 = (int64_t)mem6; // 0x140012521
        if (v179 == 0) {
            // 0x140012531
            *(int32_t *)(v241 + 4) = (int32_t)v179;
        }
        // 0x140012534
        *(int32_t *)mem6 = (int32_t)v237;
    }
    goto lab_0x14001253b;
  lab_0x14001253b:;
    int32_t * v242 = (int32_t *)(v179 - 4); // 0x14001253b
    *(char *)(v179 + (int64_t)*v242) = (char)v180;
    *v242 = *v242 + 1;
    int64_t v243 = v178 - 1; // 0x140012549
    v178 = v243;
    v180 = v180 / 256 & 0xffffff;
    if (v243 == 0) {
        // break -> 0x14001254f
        goto lab_0x14001254f;
    }
    goto lab_0x1400124f3;
  lab_0x140012473:;
    int64_t v244 = v171;
    uint64_t v245 = 0x100000000 * v244 >> 32; // 0x140012473
    int64_t v246 = v245 > 0xfffffffffffffff7 ? 0xffffffff : v245 + 8; // 0x14001247a
    int64_t * mem7 = realloc((int64_t *)v168, (int32_t)v246); // 0x14001247e
    v166 = v165;
    if (mem7 != NULL) {
        int64_t v247 = (int64_t)mem7; // 0x14001247e
        if (v165 == 0) {
            // 0x140012491
            *(int32_t *)(v247 + 4) = 0;
        }
        // 0x140012495
        *(int32_t *)mem7 = (int32_t)v244;
        v166 = v247 + 8;
    }
    goto lab_0x14001249c;
  lab_0x14001249c:
    // 0x14001249c
    v167 = v166;
    int32_t * v248 = (int32_t *)(v167 - 4); // 0x14001249c
    *(char *)(v167 + (int64_t)*v248) = (char)v170;
    *v248 = *v248 + 1;
    v172 = v170 / 256;
    int64_t v249 = v163 - 1; // 0x1400124aa
    v164 = v167;
    v162 = v249;
    v169 = v172;
    if (v249 == 0) {
        // break -> 0x1400124b5
        goto lab_0x1400124b5;
    }
    goto lab_0x140012450;
  lab_0x1400123fa:;
    int64_t v250 = v103 + 1; // 0x1400123fa
    v94 = v115;
    v95 = v121;
    v96 = v102;
    v97 = v250;
    v98 = v115;
    v99 = v121;
    v100 = v102;
    if (v250 == v15) {
        // break -> 0x140012406
        goto lab_0x140012406;
    }
    goto lab_0x140012280;
  lab_0x1400123f0:
    // 0x1400123f0
    v115 = v114;
    v121 = v120;
    v102 = v101 & 0xffffffff;
    goto lab_0x1400123fa;
  lab_0x140012113:;
    // 0x140012113
    int64_t v251; // 0x140011630
    uint64_t v252 = 0x100000000 * v251 >> 32; // 0x14001211a
    int64_t v253 = v252 > 0xfffffffffffffff7 ? 0xffffffff : v252 + 8; // 0x140012121
    int64_t v254; // 0x140011630
    int64_t * mem8 = realloc((int64_t *)v254, (int32_t)v253); // 0x140012125
    int64_t v255; // 0x140011630
    if (mem8 != NULL) {
        int64_t v256 = (int64_t)mem8; // 0x140012125
        if (v255 == 0) {
            // 0x140012135
            *(int32_t *)(v256 + 4) = 0;
        }
        // 0x140012139
        *(int32_t *)mem8 = (int32_t)v251;
    }
    goto lab_0x140012140;
  lab_0x140012140:;
    int64_t v257 = v255;
    int32_t * v258 = (int32_t *)(v257 - 4); // 0x140012140
    int64_t v259; // 0x140011630
    *(char *)(v257 + (int64_t)*v258) = (char)v259;
    *v258 = *v258 + 1;
    int64_t v260 = v259 / 256; // 0x14001214b
    int64_t v261; // 0x140011630
    int64_t v262 = v261 - 1; // 0x14001214e
    int64_t v263 = v257; // 0x140012152
    v261 = v262;
    v259 = v260;
    if (v262 == 0) {
        // break -> 0x140012224
        goto lab_0x140012224_2;
    }
    goto lab_0x1400120f0;
  lab_0x1400121e3:;
    // 0x1400121e3
    int64_t v264; // 0x140011630
    int64_t v265 = v264;
    uint64_t v266 = 0x100000000 * v265 >> 32; // 0x1400121ea
    int64_t v267 = v266 > 0xfffffffffffffff7 ? 0xffffffff : v266 + 8; // 0x1400121f1
    int64_t v268; // 0x140011630
    int64_t * mem9 = realloc((int64_t *)v268, (int32_t)v267); // 0x1400121f5
    int64_t v269; // 0x140011630
    int64_t v270 = v269; // 0x1400121fe
    if (mem9 != NULL) {
        int64_t v271 = (int64_t)mem9; // 0x1400121f5
        if (v269 == 0) {
            // 0x140012205
            *(int32_t *)(v271 + 4) = 0;
        }
        // 0x140012209
        *(int32_t *)mem9 = (int32_t)v265;
        v270 = v271 + 8;
    }
    goto lab_0x140012210;
  lab_0x140012210:;
    int64_t v272 = v270;
    int32_t * v273 = (int32_t *)(v272 - 4); // 0x140012210
    uint64_t v274; // 0x140011630
    *(char *)(v272 + (int64_t)*v273) = (char)v274;
    *v273 = *v273 + 1;
    int64_t v275 = v274 / 256; // 0x14001221b
    int64_t v276; // 0x140011630
    int64_t v277 = v276 - 1; // 0x14001221e
    int64_t v278 = v272; // 0x140012222
    int64_t v279 = v277; // 0x140012222
    int64_t v280 = v275; // 0x140012222
    if (v277 == 0) {
        // break -> 0x140012224
        goto lab_0x140012224_3;
    }
    goto lab_0x1400121c0;
  lab_0x140012023:;
    // 0x140012023
    int64_t v283; // 0x140011630
    int64_t v284 = v283;
    int64_t v285; // 0x140011630
    int64_t v286 = v285;
    uint64_t v287 = 0x100000000 * v284 >> 32; // 0x140012023
    int64_t v288 = v287 > 0xfffffffffffffff7 ? 0xffffffff : v287 + 8; // 0x14001202a
    int64_t * mem10 = realloc((int64_t *)v286, (int32_t)v288); // 0x14001202e
    int64_t v289; // 0x140011630
    if (mem10 != NULL) {
        int64_t v290 = (int64_t)mem10; // 0x14001202e
        if (v289 == 0) {
            // 0x14001203e
            *(int32_t *)(v290 + 4) = (int32_t)v289;
        }
        // 0x140012041
        *(int32_t *)mem10 = (int32_t)v284;
    }
    goto lab_0x140012048;
  lab_0x140012048:;
    int64_t v291 = v289;
    int32_t * v292 = (int32_t *)(v291 - 4); // 0x140012048
    int64_t v293; // 0x140011630
    *(char *)(v291 + (int64_t)*v292) = (char)v293;
    *v292 = *v292 + 1;
    int64_t v294 = v293 / 256; // 0x140012059
    int64_t v295; // 0x140011630
    int64_t v296 = v295 - 1; // 0x14001205c
    int64_t v297 = v291; // 0x140012060
    v295 = v296;
    v293 = v294;
    if (v296 == 0) {
        // break -> 0x140012062
        goto lab_0x140012062;
    }
    goto lab_0x140012000;
  lab_0x140011f45:;
    // 0x140011f45
    int64_t v298; // 0x140011630
    int64_t v299 = v298;
    uint64_t v300 = 0x100000000 * v299 >> 32; // 0x140011f45
    int64_t v301 = v300 > 0xfffffffffffffff7 ? 0xffffffff : v300 + 8; // 0x140011f4c
    int64_t v302; // 0x140011630
    int64_t * mem11 = realloc((int64_t *)v302, (int32_t)v301); // 0x140011f50
    int64_t v303; // 0x140011630
    int64_t v304 = v303; // 0x140011f5c
    if (mem11 != NULL) {
        // 0x140011f5e
        if (v303 == 0) {
            // 0x140011f63
            int64_t v305; // 0x140011f50
            *(int32_t *)(v305 + 4) = 0;
        }
        // 0x140011f67
        *(int32_t *)mem11 = (int32_t)v299;
        v304 = (int64_t)mem11 + 8;
    }
    goto lab_0x140011f6e;
  lab_0x140011f6e:;
    int64_t v306 = v304;
    int32_t * v307 = (int32_t *)(v306 - 4); // 0x140011f6e
    uint64_t v308; // 0x140011630
    *(char *)(v306 + (int64_t)*v307) = (char)v308;
    *v307 = *v307 + 1;
    int64_t v309 = v308 / 256; // 0x140011f79
    int64_t v310; // 0x140011630
    int64_t v311 = v310 - 1; // 0x140011f7c
    int64_t v312 = v306; // 0x140011f80
    int64_t v313 = v311; // 0x140011f80
    int64_t v314 = v309; // 0x140011f80
    if (v311 == 0) {
        // break -> 0x140011f95
        goto lab_0x140011f95;
    }
    goto lab_0x140011f22;
  lab_0x140011e4a:;
    // 0x140011e4a
    int64_t v317; // 0x140011630
    uint64_t v318 = 0x100000000 * v317 >> 32; // 0x140011e4a
    int64_t v319 = v318 > 0xfffffffffffffff7 ? 0xffffffff : v318 + 8; // 0x140011e51
    int64_t v320; // 0x140011630
    int64_t v321; // 0x140011630
    if (realloc((int64_t *)v321, (int32_t)v319) != NULL) {
        // 0x140011e60
        int64_t * v322; // 0x140011e55
        int64_t v323 = (int64_t)v322; // 0x140011e55
        if (v320 == 0) {
            // 0x140011e65
            *(int32_t *)(v323 + 4) = (int32_t)v320;
        }
        // 0x140011e68
        int64_t v324; // 0x140011630
        *(int32_t *)v322 = (int32_t)v324;
    }
    goto lab_0x140011e6f;
  lab_0x140011e6f:;
    int64_t v325 = v320;
    int32_t * v326 = (int32_t *)(v325 - 4); // 0x140011e6f
    uint64_t v327; // 0x140011630
    *(char *)(v325 + (int64_t)*v326) = (char)v327;
    *v326 = *v326 + 1;
    int64_t v328 = v327 / 256 & 0xffffff; // 0x140011e7a
    int64_t v329; // 0x140011630
    int64_t v330 = v329 - 1; // 0x140011e7d
    int64_t v331 = v325; // 0x140011e81
    int64_t v332 = v330; // 0x140011e81
    int64_t v333 = v328; // 0x140011e81
    if (v330 == 0) {
        // break -> 0x140011e92
        goto lab_0x140011e92;
    }
    goto lab_0x140011e27;
  lab_0x140011b33:;
    // 0x140011b33
    int64_t v336; // 0x140011630
    int64_t v337 = v336;
    uint64_t v338 = 0x100000000 * v337 >> 32; // 0x140011b33
    int64_t v339 = v338 > 0xfffffffffffffff7 ? 0xffffffff : v338 + 8; // 0x140011b3a
    int64_t v340; // 0x140011630
    int64_t * mem12 = realloc((int64_t *)v340, (int32_t)v339); // 0x140011b3e
    int64_t v341; // 0x140011630
    int64_t v342 = v341; // 0x140011b4a
    if (mem12 != NULL) {
        // 0x140011b4c
        if (v341 == 0) {
            // 0x140011b51
            int64_t v343; // 0x140011b3e
            *(int32_t *)(v343 + 4) = 0;
        }
        // 0x140011b55
        *(int32_t *)mem12 = (int32_t)v337;
        v342 = (int64_t)mem12 + 8;
    }
    goto lab_0x140011b5c;
  lab_0x140011b5c:;
    int64_t v344 = v342;
    int32_t * v345 = (int32_t *)(v344 - 4); // 0x140011b5c
    uint64_t v346; // 0x140011630
    *(char *)(v344 + (int64_t)*v345) = (char)v346;
    *v345 = *v345 + 1;
    int64_t v347 = v346 / 256; // 0x140011b67
    int64_t v348; // 0x140011630
    int64_t v349 = v348 - 1; // 0x140011b6a
    int64_t v350 = v344; // 0x140011b6e
    int64_t v351 = v349; // 0x140011b6e
    int64_t v352 = v347; // 0x140011b6e
    if (v349 == 0) {
        // break -> 0x140011db6
        goto lab_0x140011db6_2;
    }
    goto lab_0x140011b10;
  lab_0x140011bf9:;
    // 0x140011bf9
    int64_t v355; // 0x140011630
    int64_t v356 = v355;
    uint64_t v357 = 0x100000000 * v356 >> 32; // 0x140011bf9
    int64_t v358 = v357 > 0xfffffffffffffff7 ? 0xffffffff : v357 + 8; // 0x140011c00
    int64_t v359; // 0x140011630
    int64_t * mem13 = realloc((int64_t *)v359, (int32_t)v358); // 0x140011c04
    int64_t v360; // 0x140011630
    int64_t v361 = v360; // 0x140011c10
    if (mem13 != NULL) {
        // 0x140011c12
        if (v360 == 0) {
            // 0x140011c17
            int64_t v362; // 0x140011c04
            *(int32_t *)(v362 + 4) = 0;
        }
        // 0x140011c1b
        *(int32_t *)mem13 = (int32_t)v356;
        v361 = (int64_t)mem13 + 8;
    }
    goto lab_0x140011c22;
  lab_0x140011c22:;
    int64_t v363 = v361;
    int32_t * v364 = (int32_t *)(v363 - 4); // 0x140011c22
    uint64_t v365; // 0x140011630
    *(char *)(v363 + (int64_t)*v364) = (char)v365;
    *v364 = *v364 + 1;
    int64_t v366 = v365 / 256; // 0x140011c2d
    int64_t v367; // 0x140011630
    int64_t v368 = v367 - 1; // 0x140011c30
    int64_t v369 = v363; // 0x140011c34
    int64_t v370 = v368; // 0x140011c34
    int64_t v371 = v366; // 0x140011c34
    if (v368 == 0) {
        // break -> 0x140011db6
        goto lab_0x140011db6_3;
    }
    goto lab_0x140011bd6;
  lab_0x140011d79:;
    // 0x140011d79
    int64_t v374; // 0x140011630
    int64_t v375 = v374;
    uint64_t v376 = 0x100000000 * v375 >> 32; // 0x140011d79
    int64_t v377 = v376 > 0xfffffffffffffff7 ? 0xffffffff : v376 + 8; // 0x140011d80
    int64_t v378; // 0x140011630
    int64_t * mem14 = realloc((int64_t *)v378, (int32_t)v377); // 0x140011d84
    int64_t v379; // 0x140011630
    int64_t v380 = v379; // 0x140011d90
    if (mem14 != NULL) {
        int64_t v381 = (int64_t)mem14; // 0x140011d84
        if (v379 == 0) {
            // 0x140011d97
            *(int32_t *)(v381 + 4) = 0;
        }
        // 0x140011d9b
        *(int32_t *)mem14 = (int32_t)v375;
        v380 = v381 + 8;
    }
    goto lab_0x140011da2;
  lab_0x140011da2:;
    int64_t v382 = v380;
    int32_t * v383 = (int32_t *)(v382 - 4); // 0x140011da2
    uint64_t v384; // 0x140011630
    *(char *)(v382 + (int64_t)*v383) = (char)v384;
    *v383 = *v383 + 1;
    int64_t v385 = v384 / 256; // 0x140011dad
    int64_t v386; // 0x140011630
    int64_t v387 = v386 - 1; // 0x140011db0
    int64_t v388 = v382; // 0x140011db4
    int64_t v389 = v387; // 0x140011db4
    int64_t v390 = v385; // 0x140011db4
    if (v387 == 0) {
        // break -> 0x140011db6
        goto lab_0x140011db6_4;
    }
    goto lab_0x140011d56;
  lab_0x140011cb9:;
    // 0x140011cb9
    int64_t v393; // 0x140011630
    int64_t v394 = v393;
    uint64_t v395 = 0x100000000 * v394 >> 32; // 0x140011cb9
    int64_t v396 = v395 > 0xfffffffffffffff7 ? 0xffffffff : v395 + 8; // 0x140011cc0
    int64_t v397; // 0x140011630
    int64_t * mem15 = realloc((int64_t *)v397, (int32_t)v396); // 0x140011cc4
    int64_t v398; // 0x140011630
    int64_t v399 = v398; // 0x140011cd0
    if (mem15 != NULL) {
        int64_t v400 = (int64_t)mem15; // 0x140011cc4
        if (v398 == 0) {
            // 0x140011cd7
            *(int32_t *)(v400 + 4) = 0;
        }
        // 0x140011cdb
        *(int32_t *)mem15 = (int32_t)v394;
        v399 = v400 + 8;
    }
    goto lab_0x140011ce2;
  lab_0x140011ce2:;
    int64_t v401 = v399;
    int32_t * v402 = (int32_t *)(v401 - 4); // 0x140011ce2
    uint64_t v403; // 0x140011630
    *(char *)(v401 + (int64_t)*v402) = (char)v403;
    *v402 = *v402 + 1;
    int64_t v404 = v403 / 256; // 0x140011ced
    int64_t v405; // 0x140011630
    int64_t v406 = v405 - 1; // 0x140011cf0
    int64_t v407 = v401; // 0x140011cf4
    int64_t v408 = v406; // 0x140011cf4
    int64_t v409 = v404; // 0x140011cf4
    if (v406 == 0) {
        // break -> 0x140011db6
        goto lab_0x140011db6_5;
    }
    goto lab_0x140011c96;
  lab_0x14001207f:;
    unsigned char v412 = *v49; // 0x14001207f
    int64_t v413 = v412; // 0x14001207f
    int64_t v414; // 0x140011630
    int64_t v415; // 0x140011630
    int32_t v416; // 0x140011630
    int64_t v417; // 0x140011630
    int64_t v418; // 0x140011630
    int64_t v419; // 0x140011630
    int64_t v420; // 0x140011630
    int64_t v421; // 0x140011630
    int64_t v422; // 0x140011630
    if (v412 < 144) {
        int64_t v423 = v413 + 48; // 0x140012099
        int32_t v424 = 8; // 0x140012099
        int64_t v425 = v423 & 1; // 0x1400120a9
        v424--;
        v423 = (int32_t)v423 >> 1;
        int64_t v426 = v425; // 0x1400120af
        while (v424 != 0) {
            // 0x1400120a0
            v425 = 2 * v426 & 0xfffffffe | v423 & 1;
            v424--;
            v423 = (int32_t)v423 >> 1;
            v426 = v425;
        }
        uint32_t v427 = (int32_t)v414 & 31; // 0x1400120b9
        int64_t v428 = v427 == 0 ? v425 : (int64_t)((int32_t)v425 << v427);
        int64_t v429 = v414 + 8; // 0x1400120bb
        int64_t v430 = v429 & 0xffffffff; // 0x1400120bb
        int64_t v431 = v428 | v417;
        int64_t v432 = v431 & 0xffffffff; // 0x1400120bf
        v420 = v43;
        v419 = v431;
        v422 = v429;
        v418 = v432;
        v415 = v430;
        v416 = 1;
        if ((int32_t)v429 < 8) {
            goto lab_0x140012238;
        } else {
            int64_t v433 = v429 / 8 & 0x1fffffff; // 0x1400120d7
            v263 = v43;
            v261 = v433;
            v259 = v432;
            while (true) {
              lab_0x1400120f0:
                // 0x1400120f0
                v255 = v263;
                if (v255 == 0) {
                    goto lab_0x140012113;
                } else {
                    // 0x1400120f5
                    if (*(int32_t *)(v255 - 4) + 1 < *(int32_t *)(v255 - 8)) {
                        goto lab_0x140012140;
                    } else {
                        // 0x140012104
                        goto lab_0x140012113;
                    }
                }
            }
          lab_0x140012224_2:
            // 0x140012224
            v421 = v430 - 8 * v433;
            goto lab_0x140012224;
        }
    } else {
        int64_t v434 = v413 | 256; // 0x140012169
        int64_t v435 = 0; // 0x140012169
        int32_t v436 = 9; // 0x140012169
        v435 = 2 * v435 & 0xfffffffe | v434 & 1;
        v436--;
        v434 = (int32_t)v434 >> 1;
        while (v436 != 0) {
            // 0x140012170
            v435 = 2 * v435 & 0xfffffffe | v434 & 1;
            v436--;
            v434 = (int32_t)v434 >> 1;
        }
        uint32_t v437 = (int32_t)v414 & 31; // 0x140012189
        int64_t v438 = v437 == 0 ? v435 : (int64_t)((int32_t)v435 << v437);
        int64_t v439 = v414 + 9; // 0x14001218b
        int64_t v440 = v438 | v417;
        v420 = v43;
        v419 = v440;
        v422 = v439;
        v418 = v440 & 0xffffffff;
        v415 = v439 & 0xffffffff;
        v416 = 1;
        if ((int32_t)v439 < 8) {
            goto lab_0x140012238;
        } else {
            // 0x1400121a4
            while (true) {
              lab_0x1400121c0:
                // 0x1400121c0
                v274 = v280;
                v276 = v279;
                v269 = v278;
                v268 = 0;
                v264 = 2;
                if (v269 == 0) {
                    goto lab_0x1400121e3;
                } else {
                    int64_t v281 = v269 - 8; // 0x1400121c8
                    uint32_t v282 = *(int32_t *)v281; // 0x1400121cc
                    v270 = v269;
                    if (*(int32_t *)(v269 - 4) + 1 < v282) {
                        goto lab_0x140012210;
                    } else {
                        // 0x1400121d4
                        v268 = v281;
                        v264 = 2 * (int64_t)v282 & 0xfffffffe | 1;
                        goto lab_0x1400121e3;
                    }
                }
            }
          lab_0x140012224_3:;
            // 0x140012224
            int64_t v441; // 0x1400121a7
            v421 = v439 - 8 * v441;
            int64_t v442 = v272; // 0x140011630
            int64_t v443 = v275; // 0x140011630
            goto lab_0x140012224;
        }
    }
  lab_0x140011909:;
    int32_t v444 = 8 * v34; // 0x140011909
    int64_t * mem16 = realloc((int64_t *)v30, v444 == -8 ? -1 : v444 + 8); // 0x140011922
    int32_t v445 = v40; // 0x14001192b
    int32_t v446 = v35; // 0x14001192b
    int64_t v447 = v32; // 0x14001192b
    int64_t v448 = v25; // 0x14001192b
    int64_t v449 = v27; // 0x14001192b
    if (mem16 != NULL) {
        int64_t v450 = (int64_t)mem16; // 0x140011922
        int64_t v451 = *v50; // 0x14001192d
        if (v451 == 0) {
            // 0x140011934
            *(int32_t *)(v450 + 4) = 0;
        }
        // 0x14001193b
        *v50 = v450 + 8;
        int32_t v452; // 0x140011630
        *(int32_t *)mem16 = v452;
        int32_t v453; // 0x140011630
        v445 = v453;
        int32_t v454; // 0x140011630
        v446 = v454;
        int64_t v455; // 0x140011630
        v447 = v455;
        int64_t v456; // 0x140011630
        v448 = v456;
        int64_t v457; // 0x140011630
        v449 = v457;
    }
    goto lab_0x140011946;
  lab_0x140011946:;
    int64_t v458 = v449;
    v414 = v448;
    v417 = v447;
    int32_t v459 = v446;
    int32_t v460 = v445;
    int64_t v461 = *v50; // 0x140011946
    *(int64_t *)(8 * (int64_t)*(int32_t *)(v461 - 4) + v461) = v45;
    int32_t * v462 = (int32_t *)(*v50 - 4); // 0x14001195b
    *v462 = *v462 + 1;
    int64_t v463; // 0x140011630
    int64_t v464; // 0x140011630
    int64_t v465; // 0x140011630
    int64_t v466; // 0x140011630
    int64_t v467; // 0x140011630
    int64_t v468; // 0x140011630
    int64_t v469; // 0x140011630
    int64_t v470; // 0x140011630
    int64_t v471; // 0x140011630
    int64_t v472; // 0x140011630
    int64_t v473; // 0x140011630
    uint64_t v474; // 0x140011a79
    if (v458 == 0) {
        goto lab_0x14001207f;
    } else {
        unsigned char v475 = *(char *)(v45 + 3); // 0x140011967
        int64_t v476 = 256 * (int64_t)*v46 | 0x10000 * (int64_t)v475 | (int64_t)*v48; // 0x140011986
        uint32_t v477 = (int32_t)(8 * v476 ^ v476); // 0x140011991
        int32_t v478 = v477 / 32 + v477; // 0x140011996
        uint32_t v479 = 16 * v478 ^ v478; // 0x14001199d
        uint32_t v480 = v479 / 0x20000 + v479; // 0x1400119a4
        int64_t v481 = *(int64_t *)((int64_t)(8 * (v480 / 64 + v480) & 0x1fff8) + result); // 0x1400119ba
        int64_t v482 = v458; // 0x1400119c1
        if (v481 != 0) {
            uint32_t v483 = *(int32_t *)(v481 - 4); // 0x1400119c3
            v482 = v458;
            if (v483 >= 1) {
                uint64_t v484 = (int64_t)v483; // 0x1400119cc
                int64_t v485 = v15 + (int64_t)(-1 - v38);
                uint64_t v486 = 0x100000000 * v485 >> 32;
                int64_t v487 = 0;
                int64_t v488 = *(int64_t *)(8 * v487 + v481); // 0x1400119f1
                int64_t v489; // 0x140011630
                int64_t v490; // 0x140011630
                int64_t v491; // 0x140011630
                int64_t v492; // 0x140011630
                uint64_t v493; // 0x140011630
                int64_t v494; // 0x140011a37
                int64_t v495; // 0x140011a3a
                if (v488 - a1 > (int64_t)(v38 - 0x7fff)) {
                    // 0x140011a00
                    v491 = 0;
                    if ((int32_t)v485 >= 1) {
                        v490 = 0;
                        v493 = 0;
                        v491 = v490;
                        while (v493 < 258) {
                            // 0x140011a29
                            v491 = v490;
                            if (*(char *)(v493 + v488) != *(char *)(v493 + v47)) {
                                // break -> 0x140011a4b
                                break;
                            }
                            // 0x140011a37
                            v494 = v490 + 1 & 0xffffffff;
                            v495 = v493 + 1;
                            v492 = v495;
                            v489 = v494;
                            v491 = v494;
                            if (v495 >= v486) {
                                // break -> 0x140011a4b
                                break;
                            }
                            v490 = v489;
                            v493 = v492;
                            v491 = v490;
                        }
                    }
                    // 0x140011a4b
                    if (v460 < (int32_t)v491) {
                        goto lab_0x14001207f;
                    }
                }
                int64_t v496 = v487 + 1; // 0x140011a56
                while (v496 < v484) {
                    // 0x1400119f1
                    v487 = v496;
                    v488 = *(int64_t *)(8 * v487 + v481);
                    if (v488 - a1 > (int64_t)(v38 - 0x7fff)) {
                        // 0x140011a00
                        v491 = 0;
                        if ((int32_t)v485 >= 1) {
                            v490 = 0;
                            v493 = 0;
                            v491 = v490;
                            while (v493 < 258) {
                                // 0x140011a29
                                if (*(char *)(v493 + v488) != *(char *)(v493 + v47)) {
                                    // break -> 0x140011a4b
                                    break;
                                }
                                // 0x140011a37
                                v494 = v490 + 1 & 0xffffffff;
                                v495 = v493 + 1;
                                v492 = v495;
                                v489 = v494;
                                v491 = v494;
                                if (v495 >= v486) {
                                    // break -> 0x140011a4b
                                    break;
                                }
                                v490 = v489;
                                v493 = v492;
                                v491 = v490;
                            }
                        }
                        // 0x140011a4b
                        if (v460 < (int32_t)v491) {
                            goto lab_0x14001207f;
                        }
                    }
                    // 0x140011a56
                    v496 = v487 + 1;
                }
                // 0x140011a5e
                v482 = v459;
            }
        }
        // 0x140011a66
        v468 = v482;
        v474 = (int64_t)v460;
        int64_t v497 = 0; // 0x140011a87
        v467 = 0;
        v470 = 0;
        if (v460 < 4) {
            goto lab_0x140011c46;
        } else {
            int64_t v498 = 0;
            uint16_t v499 = *(int16_t *)(2 * v497 + 0x140022484); // 0x140011a90
            int64_t v500 = v497 + 1; // 0x140011a99
            int64_t v501 = v498 + 1; // 0x140011a9e
            int64_t v502 = v501 & 0xffffffff; // 0x140011a9e
            v497 = v500;
            while (((int64_t)v499 + 0xffffffff & 0xffffffff) < v474) {
                // 0x140011a90
                v498 = v502;
                v499 = *(int16_t *)(2 * v497 + 0x140022484);
                v500 = v497 + 1;
                v501 = v498 + 1;
                v502 = v501 & 0xffffffff;
                v497 = v500;
            }
            int32_t v503 = (int32_t)v501 + 257; // 0x140011ab3
            if (v503 > 143) {
                if (v503 > 255) {
                    // 0x140011c3b
                    v467 = v500;
                    v470 = v502;
                    if (v503 > 279) {
                        int64_t v504 = v498 + 170 & 0xffffffff; // 0x140011d07
                        int32_t v505 = 8; // 0x140011d07
                        int64_t v506 = v504 & 1; // 0x140011d19
                        v505--;
                        v504 = (int32_t)v504 >> 1;
                        int64_t v507 = v506; // 0x140011d1f
                        while (v505 != 0) {
                            // 0x140011d10
                            v506 = 2 * v507 & 0xfffffffe | v504 & 1;
                            v505--;
                            v504 = (int32_t)v504 >> 1;
                            v507 = v506;
                        }
                        uint32_t v508 = (int32_t)v414 & 31; // 0x140011d29
                        int64_t v509 = v508 == 0 ? v506 : (int64_t)((int32_t)v506 << v508);
                        uint64_t v510 = v414 + 8; // 0x140011d2b
                        int64_t v511 = v510 & 0xffffffff; // 0x140011d2b
                        int64_t v512 = v509 | v417 & 0xffffffff; // 0x140011d2f
                        v466 = v500;
                        v473 = v43;
                        v472 = v512;
                        v464 = v511;
                        if ((int32_t)v510 < 8) {
                            goto lab_0x140011dc5;
                        } else {
                            int64_t v513 = v510 / 8 & 0x1fffffff; // 0x140011d42
                            v388 = v43;
                            v389 = v513;
                            v390 = v512;
                            while (true) {
                              lab_0x140011d56:
                                // 0x140011d56
                                v384 = v390;
                                v386 = v389;
                                v379 = v388;
                                v378 = 0;
                                v374 = 2;
                                if (v379 == 0) {
                                    goto lab_0x140011d79;
                                } else {
                                    int64_t v391 = v379 - 8; // 0x140011d5e
                                    uint32_t v392 = *(int32_t *)v391; // 0x140011d62
                                    v380 = v379;
                                    if (*(int32_t *)(v379 - 4) + 1 < v392) {
                                        goto lab_0x140011da2;
                                    } else {
                                        // 0x140011d6a
                                        v378 = v391;
                                        v374 = 2 * (int64_t)v392 & 0xfffffffe | 1;
                                        goto lab_0x140011d79;
                                    }
                                }
                            }
                          lab_0x140011db6_4:
                            // 0x140011db6
                            v465 = v500;
                            v469 = v382;
                            v471 = v385;
                            v463 = v511 - 8 * v513;
                            goto lab_0x140011db6;
                        }
                    } else {
                        goto lab_0x140011c46;
                    }
                } else {
                    int64_t v514 = v498 + 514 & 0xffffffff; // 0x140011b8c
                    int32_t v515 = 9; // 0x140011b8c
                    int64_t v516 = v514 & 1; // 0x140011b99
                    v515--;
                    v514 = (int32_t)v514 >> 1;
                    int64_t v517 = v516; // 0x140011b9f
                    while (v515 != 0) {
                        // 0x140011b90
                        v516 = 2 * v517 & 0xfffffffe | v514 & 1;
                        v515--;
                        v514 = (int32_t)v514 >> 1;
                        v517 = v516;
                    }
                    uint32_t v518 = (int32_t)v414 & 31; // 0x140011ba9
                    int64_t v519 = v518 == 0 ? v516 : (int64_t)((int32_t)v516 << v518);
                    uint64_t v520 = v414 + 9; // 0x140011bab
                    int64_t v521 = v520 & 0xffffffff; // 0x140011bab
                    int64_t v522 = v519 | v417 & 0xffffffff; // 0x140011baf
                    v466 = v500;
                    v473 = v43;
                    v472 = v522;
                    v464 = v521;
                    if ((int32_t)v520 < 8) {
                        goto lab_0x140011dc5;
                    } else {
                        int64_t v523 = v520 / 8 & 0x1fffffff; // 0x140011bc2
                        v369 = v43;
                        v370 = v523;
                        v371 = v522;
                        while (true) {
                          lab_0x140011bd6:
                            // 0x140011bd6
                            v365 = v371;
                            v367 = v370;
                            v360 = v369;
                            v359 = 0;
                            v355 = 2;
                            if (v360 == 0) {
                                goto lab_0x140011bf9;
                            } else {
                                int64_t v372 = v360 - 8; // 0x140011bde
                                uint32_t v373 = *(int32_t *)v372; // 0x140011be2
                                v361 = v360;
                                if (*(int32_t *)(v360 - 4) + 1 < v373) {
                                    goto lab_0x140011c22;
                                } else {
                                    // 0x140011bea
                                    v359 = v372;
                                    v355 = 2 * (int64_t)v373 & 0xfffffffe | 1;
                                    goto lab_0x140011bf9;
                                }
                            }
                        }
                      lab_0x140011db6_3:
                        // 0x140011db6
                        v465 = v500;
                        v469 = v363;
                        v471 = v366;
                        v463 = v521 - 8 * v523;
                        goto lab_0x140011db6;
                    }
                }
            } else {
                int64_t v524 = v498 + 306 & 0xffffffff; // 0x140011abf
                int32_t v525 = 8; // 0x140011abf
                int64_t v526 = v524 & 1; // 0x140011ace
                v525--;
                v524 = (int32_t)v524 >> 1;
                int64_t v527 = v526; // 0x140011ad4
                while (v525 != 0) {
                    // 0x140011ac5
                    v526 = 2 * v527 & 0xfffffffe | v524 & 1;
                    v525--;
                    v524 = (int32_t)v524 >> 1;
                    v527 = v526;
                }
                uint32_t v528 = (int32_t)v414 & 31; // 0x140011ade
                int64_t v529 = v528 == 0 ? v526 : (int64_t)((int32_t)v526 << v528);
                uint64_t v530 = v414 + 8; // 0x140011ae0
                int64_t v531 = v529 | v417 & 0xffffffff; // 0x140011ae4
                v466 = v500;
                v473 = v43;
                v472 = v531;
                v464 = v530 & 0xffffffff;
                if ((int32_t)v530 < 8) {
                    goto lab_0x140011dc5;
                } else {
                    int64_t v532 = v530 / 8 & 0x1fffffff; // 0x140011af7
                    v350 = v43;
                    v351 = v532;
                    v352 = v531;
                    while (true) {
                      lab_0x140011b10:
                        // 0x140011b10
                        v346 = v352;
                        v348 = v351;
                        v341 = v350;
                        v340 = 0;
                        v336 = 2;
                        if (v341 == 0) {
                            goto lab_0x140011b33;
                        } else {
                            int64_t v353 = v341 - 8; // 0x140011b18
                            uint32_t v354 = *(int32_t *)v353; // 0x140011b1c
                            v342 = v341;
                            if (*(int32_t *)(v341 - 4) + 1 < v354) {
                                goto lab_0x140011b5c;
                            } else {
                                // 0x140011b24
                                v340 = v353;
                                v336 = 2 * (int64_t)v354 & 0xfffffffe | 1;
                                goto lab_0x140011b33;
                            }
                        }
                    }
                  lab_0x140011db6_2:
                    // 0x140011db6
                    v465 = v500;
                    v469 = v344;
                    v471 = v347;
                    v463 = v530 - 8 * v532;
                    goto lab_0x140011db6;
                }
            }
        }
    }
  lab_0x1400118e3:;
    int32_t v533 = v41;
    int32_t v534 = v36;
    int64_t v535 = v33;
    int64_t v536 = v26;
    int64_t v537 = v28;
    int64_t v538 = v29 - 8; // 0x1400118e8
    int32_t v539 = *(int32_t *)v538; // 0x1400118e8
    v445 = v533;
    v446 = v534;
    v447 = v535;
    v448 = v536;
    v449 = v537;
    if (*v22 + 1 < v539) {
        goto lab_0x140011946;
    } else {
        // 0x1400118f2
        v40 = v533;
        v35 = v534;
        v32 = v535;
        v25 = v536;
        v27 = v537;
        v30 = v538;
        v34 = 2 * v539 | 1;
        goto lab_0x140011909;
    }
  lab_0x140011c46:;
    int64_t v540 = v467;
    int64_t v541 = v470 + 1 & 0xffffffff; // 0x140011c4e
    int64_t v542 = v541 & 1; // 0x140011c59
    int32_t v543 = 6; // 0x140011c5b
    v541 = (int32_t)v541 >> 1;
    int64_t v544 = v542; // 0x140011c5f
    int32_t v545 = v543; // 0x140011c5f
    while (v543 != 0) {
        // 0x140011c50
        v542 = 2 * v544 & 0xfffffffe | v541 & 1;
        v543 = v545 - 1;
        v541 = (int32_t)v541 >> 1;
        v544 = v542;
        v545 = v543;
    }
    uint32_t v546 = (int32_t)v414 & 31; // 0x140011c69
    int64_t v547 = v546 == 0 ? v542 : (int64_t)((int32_t)v542 << v546);
    uint64_t v548 = v414 + 7; // 0x140011c6b
    int64_t v549 = v548 & 0xffffffff; // 0x140011c6b
    int64_t v550 = v547 | v417 & 0xffffffff; // 0x140011c6f
    v466 = v540;
    v473 = v43;
    v472 = v550;
    v464 = v549;
    if ((int32_t)v548 < 8) {
        goto lab_0x140011dc5;
    } else {
        int64_t v551 = v548 / 8 & 0x1fffffff; // 0x140011c82
        v407 = v43;
        v408 = v551;
        v409 = v550;
        while (true) {
          lab_0x140011c96:
            // 0x140011c96
            v403 = v409;
            v405 = v408;
            v398 = v407;
            v397 = 0;
            v393 = 2;
            if (v398 == 0) {
                goto lab_0x140011cb9;
            } else {
                int64_t v410 = v398 - 8; // 0x140011c9e
                uint32_t v411 = *(int32_t *)v410; // 0x140011ca2
                v399 = v398;
                if (*(int32_t *)(v398 - 4) + 1 < v411) {
                    goto lab_0x140011ce2;
                } else {
                    // 0x140011caa
                    v397 = v410;
                    v393 = 2 * (int64_t)v411 & 0xfffffffe | 1;
                    goto lab_0x140011cb9;
                }
            }
        }
      lab_0x140011db6_5:
        // 0x140011db6
        v465 = v540;
        v469 = v401;
        v471 = v404;
        v463 = v549 - 8 * v551;
        goto lab_0x140011db6;
    }
  lab_0x140012238:;
    int32_t v552 = v416 + v38; // 0x140012248
    int64_t v553 = v552; // 0x140012248
    v42 = v420;
    v39 = v419;
    v44 = v422;
    v37 = v552;
    v31 = v418;
    v23 = v553;
    v24 = v415;
    v18 = v420;
    v19 = v418;
    v20 = v553;
    v21 = v415;
    if ((v15 + 0xfffffffd & 0xffffffff) <= v553) {
        // break -> 0x140012266
        goto lab_0x140012266;
    }
    goto lab_0x140011765;
  lab_0x140011dc5:;
    int64_t v554 = v464;
    int64_t v555 = v472;
    int64_t v556 = v473;
    int64_t v557 = v466;
    unsigned char v558 = *(char *)(v557 + 0x140022c50); // 0x140011dcc
    int64_t v559 = v556; // 0x140011dd8
    int64_t v560 = v555; // 0x140011dd8
    int64_t v561 = v554; // 0x140011dd8
    if (v558 != 0) {
        int64_t v562 = v474 - (int64_t)*(int16_t *)(2 * v557 + 0x140022480); // 0x140011df2
        uint64_t v563 = v554 + (int64_t)v558; // 0x140011df4
        uint32_t v564 = (int32_t)v554 & 31; // 0x140011df7
        int64_t v565 = v564 == 0 ? v562 & 0xffffffff : (int64_t)((int32_t)v562 << v564);
        int64_t v566 = v565 | v555 & 0xffffffff; // 0x140011df9
        v559 = v556;
        v560 = v566;
        v561 = v563 & 0xffffffff;
        if ((int32_t)v563 >= 8) {
            int64_t v567 = v563 / 8 & 0x1fffffff; // 0x140011e0e
            int64_t v568 = 8 * v567; // 0x140011e1b
            v331 = v556;
            v332 = v567;
            v333 = v566;
            while (true) {
              lab_0x140011e27:
                // 0x140011e27
                v327 = v333;
                v329 = v332;
                v320 = v331;
                v321 = 0;
                v317 = 2;
                if (v320 == 0) {
                    goto lab_0x140011e4a;
                } else {
                    int64_t v334 = v320 - 8; // 0x140011e2f
                    uint32_t v335 = *(int32_t *)v334; // 0x140011e33
                    if (*(int32_t *)(v320 - 4) + 1 < v335) {
                        goto lab_0x140011e6f;
                    } else {
                        // 0x140011e3b
                        v321 = v334;
                        v317 = 2 * (int64_t)v335 & 0xfffffffe | 1;
                        goto lab_0x140011e4a;
                    }
                }
            }
          lab_0x140011e92:
            // 0x140011e92
            v559 = v325;
            v560 = v328;
            v561 = v563 - v568 & 0xffffffff;
        }
    }
    uint32_t v569 = (int32_t)a1 - (int32_t)v468 + v38; // 0x140011a74
    uint64_t v570 = (int64_t)v569; // 0x140011a74
    int64_t v571 = v559;
    int64_t v572 = 0; // 0x140011e9f
    int64_t v573 = 0; // 0x140011e9f
    int64_t v574 = 0; // 0x140011e9f
    if (v569 >= 2) {
        uint16_t v575 = *(int16_t *)(2 * v572 + 0x140022a44); // 0x140011eb0
        int64_t v576 = v572 + 1; // 0x140011eb9
        int64_t v577 = 1; // 0x140011ebe
        int64_t v578 = v577; // 0x140011ec3
        v572 = v576;
        v573 = v577;
        v574 = v576;
        while (((int64_t)v575 + 0xffffffff & 0xffffffff) < v570) {
            // 0x140011eb0
            v575 = *(int16_t *)(2 * v572 + 0x140022a44);
            v576 = v572 + 1;
            v577 = v578 + 1 & 0xffffffff;
            v578 = v577;
            v572 = v576;
            v573 = v577;
            v574 = v576;
        }
    }
    int64_t v579 = v574;
    int64_t v580 = v573; // 0x140011ecd
    int64_t v581 = v580 & 1; // 0x140011edc
    int32_t v582 = 4; // 0x140011ede
    v580 = (int32_t)v580 >> 1;
    int64_t v583 = v581; // 0x140011ee2
    int32_t v584 = v582; // 0x140011ee2
    while (v582 != 0) {
        // 0x140011ed3
        v581 = 2 * v583 & 0xfffffffe | v580 & 1;
        v582 = v584 - 1;
        v580 = (int32_t)v580 >> 1;
        v583 = v581;
        v584 = v582;
    }
    int64_t v585 = v561 + 5; // 0x140011ee7
    uint32_t v586 = (int32_t)v561 & 31; // 0x140011eeb
    int64_t v587 = (v586 == 0 ? v581 : (int64_t)((int32_t)v581 << v586)) | v560;
    int64_t v588 = v587 & 0xffffffff; // 0x140011eed
    int64_t v589 = v571; // 0x140011efc
    int64_t v590 = v587; // 0x140011efc
    int64_t v591 = v585; // 0x140011efc
    int64_t v592 = v588; // 0x140011efc
    if ((int32_t)v585 >= 8) {
        int64_t v593 = v585 / 8 & 0x1fffffff; // 0x140011f09
        v312 = v571;
        v313 = v593;
        v314 = v588;
        while (true) {
          lab_0x140011f22:
            // 0x140011f22
            v308 = v314;
            v310 = v313;
            v303 = v312;
            v302 = 0;
            v298 = 2;
            if (v303 == 0) {
                goto lab_0x140011f45;
            } else {
                int64_t v315 = v303 - 8; // 0x140011f2a
                uint32_t v316 = *(int32_t *)v315; // 0x140011f2e
                v304 = v303;
                if (*(int32_t *)(v303 - 4) + 1 < v316) {
                    goto lab_0x140011f6e;
                } else {
                    // 0x140011f36
                    v302 = v315;
                    v298 = 2 * (int64_t)v316 & 0xfffffffe | 1;
                    goto lab_0x140011f45;
                }
            }
        }
      lab_0x140011f95:
        // 0x140011f95
        v589 = v306;
        v590 = v309;
        v591 = v585 - 8 * v593;
        v592 = v309;
    }
    int64_t v594 = v592;
    int64_t v595 = v591;
    int64_t v596 = v589;
    int64_t v597 = v595 & 0xffffffff;
    unsigned char v598 = *(char *)(v579 + 0x140022c08); // 0x140011f9c
    v420 = v596;
    v419 = v590;
    v422 = v595;
    v418 = v594;
    v415 = v597;
    v416 = v460;
    if (v598 != 0) {
        int64_t v599 = v570 - (int64_t)*(int16_t *)(2 * v579 + 0x140022a40); // 0x140011fb9
        uint32_t v600 = (int32_t)v595 & 31; // 0x140011fc1
        int64_t v601 = v600 == 0 ? v599 & 0xffffffff : (int64_t)((int32_t)v599 << v600);
        int64_t v602 = v597 + (int64_t)v598; // 0x140011fc4
        int64_t v603 = v601 | v594;
        int64_t v604 = v603 & 0xffffffff; // 0x140011fc7
        v420 = v596;
        v419 = v603;
        v422 = v602;
        v418 = v604;
        v415 = v602 & 0xffffffff;
        v416 = v460;
        if ((int32_t)v602 >= 8) {
            int64_t v605 = v602 / 8 & 0x1fffffff; // 0x140011fe7
            v297 = v596;
            v295 = v605;
            v293 = v604;
            while (true) {
              lab_0x140012000:
                // 0x140012000
                v289 = v297;
                if (v289 == 0) {
                    goto lab_0x140012023;
                } else {
                    // 0x140012005
                    if (*(int32_t *)(v289 - 4) + 1 < *(int32_t *)(v289 - 8)) {
                        goto lab_0x140012048;
                    } else {
                        // 0x140012014
                        goto lab_0x140012023;
                    }
                }
            }
          lab_0x140012062:;
            int64_t v606 = v602 - 8 * v605; // 0x140011fef
            v420 = v291;
            v419 = v294;
            v422 = v606;
            v418 = v294;
            v415 = v606 & 0xffffffff;
            v416 = v460;
        }
    }
    goto lab_0x140012238;
  lab_0x140012224:
    // 0x140012224
    v420 = v257;
    v419 = v260;
    v422 = v421;
    v418 = v260;
    v415 = v421 & 0xffffffff;
    v416 = 1;
    goto lab_0x140012238;
  lab_0x140011db6:
    // 0x140011db6
    v466 = v465;
    v473 = v469;
    v472 = v471;
    v464 = v463 & 0xffffffff;
    goto lab_0x140011dc5;
  lab_0x14001264b:;
    uint64_t v607 = 0x100000000 * v220 >> 32; // 0x14001264b
    int64_t v608 = v607 > 0xfffffffffffffff7 ? 0xffffffff : v607 + 8; // 0x14001265c
    int64_t * mem17 = realloc((int64_t *)(v192 == 0 ? 0 : v219), (int32_t)v608); // 0x140012667
    v221 = v192;
    v222 = v219;
    if (mem17 != NULL) {
        int64_t v609 = (int64_t)mem17; // 0x140012667
        if (v192 == 0) {
            // 0x140012677
            *(int32_t *)(v609 + 4) = 0;
        }
        // 0x14001267a
        *(int32_t *)mem17 = (int32_t)v220;
        v221 = v609 + 8;
        v222 = v609;
    }
    goto lab_0x14001268e;
  lab_0x14001268e:;
    int32_t * v610 = (int32_t *)(v221 - 4);
    int32_t v611 = *v610; // 0x14001268e
    *(char *)(v221 + (int64_t)v611) = (char)((int32_t)v218 / 256);
    int32_t v612 = *v610; // 0x1400126a2
    *v610 = v612 + 1;
    int32_t * v613 = (int32_t *)v222;
    uint32_t v614 = *v613; // 0x1400126a8
    int32_t * v615 = v613; // 0x1400126ae
    int32_t * v616 = v610; // 0x1400126ae
    int64_t v617 = v221; // 0x1400126ae
    int64_t v618 = v222; // 0x1400126ae
    if (v612 + 2 >= v614) {
        int64_t v619 = 2 * (int64_t)v614 & 0xfffffffe | 1; // 0x1400126b0
        uint64_t v620 = 0x100000000 * v619 >> 32; // 0x1400126ba
        int64_t v621 = v620 > 0xfffffffffffffff7 ? 0xffffffff : v620 + 8; // 0x1400126c1
        int64_t * mem18 = realloc((int64_t *)v222, (int32_t)v621); // 0x1400126c5
        v615 = v613;
        v616 = v610;
        v617 = v221;
        v618 = v222;
        if (mem18 != NULL) {
            int64_t v622 = (int64_t)mem18; // 0x1400126c5
            *(int32_t *)mem18 = (int32_t)v619;
            v615 = (int32_t *)mem18;
            v616 = (int32_t *)(v622 + 4);
            v617 = v622 + 8;
            v618 = v622;
        }
    }
    int32_t v623 = *v616; // 0x1400126da
    *(char *)(v617 + (int64_t)v623) = (char)v218;
    int32_t v624 = *v616; // 0x1400126ea
    *v616 = v624 + 1;
    uint32_t v625 = *v615; // 0x1400126f0
    int32_t * v626 = v615; // 0x1400126f6
    int32_t * v627 = v616; // 0x1400126f6
    int64_t v628 = v617; // 0x1400126f6
    int64_t v629 = v618; // 0x1400126f6
    if (v624 + 2 >= v625) {
        int64_t v630 = 2 * (int64_t)v625 & 0xfffffffe | 1; // 0x1400126f8
        uint64_t v631 = 0x100000000 * v630 >> 32; // 0x140012702
        int64_t v632 = v631 > 0xfffffffffffffff7 ? 0xffffffff : v631 + 8; // 0x140012709
        int64_t * mem19 = realloc((int64_t *)v618, (int32_t)v632); // 0x14001270d
        v626 = v615;
        v627 = v616;
        v628 = v617;
        v629 = v618;
        if (mem19 != NULL) {
            int64_t v633 = (int64_t)mem19; // 0x14001270d
            *(int32_t *)mem19 = (int32_t)v630;
            v626 = (int32_t *)mem19;
            v627 = (int32_t *)(v633 + 4);
            v628 = v633 + 8;
            v629 = v633;
        }
    }
    int32_t v634 = *v627; // 0x140012722
    *(char *)(v628 + (int64_t)v634) = (char)((int32_t)v217 / 256);
    int32_t v635 = *v627; // 0x14001272f
    *v627 = v635 + 1;
    uint32_t v636 = *v626; // 0x140012735
    int32_t * v637 = v627; // 0x14001273b
    int64_t v638 = v628; // 0x14001273b
    int64_t result2 = v629; // 0x14001273b
    if (v635 + 2 >= v636) {
        int64_t v639 = 2 * (int64_t)v636 & 0xfffffffe | 1; // 0x14001273d
        uint64_t v640 = 0x100000000 * v639 >> 32; // 0x140012747
        int64_t v641 = v640 > 0xfffffffffffffff7 ? 0xffffffff : v640 + 8; // 0x14001274e
        int64_t * mem20 = realloc((int64_t *)v629, (int32_t)v641); // 0x140012752
        v637 = v627;
        v638 = v628;
        result2 = v629;
        if (mem20 != NULL) {
            int64_t v642 = (int64_t)mem20; // 0x140012752
            *(int32_t *)mem20 = (int32_t)v639;
            v637 = (int32_t *)(v642 + 4);
            v638 = v642 + 8;
            result2 = v642;
        }
    }
    int32_t v643 = *v637; // 0x140012767
    *(char *)(v638 + (int64_t)v643) = (char)v217;
    int32_t v644 = *v637 + 1; // 0x140012777
    *v637 = v644;
    *(int32_t *)a3 = v644;
    memmove((int64_t *)result2, (int64_t *)v638, v644);
    return result2;
}

// Address range: 0x1400127b0 - 0x140012b03
int64_t function_1400127b0(int64_t a1, int32_t a2, int32_t a3, int64_t a4, int64_t a5, int64_t a6, int64_t a7, int64_t a8) {
    int64_t v1 = (int32_t)a5 != 0 ? (int64_t)&g80 : (int64_t)&g75; // 0x1400127d2
    int32_t v2 = *(int32_t *)(v1 + (0x100000000 * a7 >> 30)); // 0x1400127e4
    if (v2 == 0) {
        int64_t v3 = g98 != 0 ? (a5 ^ 0xffffffff) + a4 : a5; // 0x1400127f0
        return (int64_t)memcpy((int64_t *)a8, (int64_t *)((int64_t)((int32_t)v3 * a2) + a1), (int32_t)a6 * a3);
    }
    int64_t v4 = 0x100000000 * a6 >> 32; // 0x14001283d
    uint32_t result = v2 - 1;
    int64_t v5 = v4; // 0x140012868
    if ((int32_t)v4 < 1) {
        if (result < 6) {
            // 0x1400128e0
            return result;
        }
        // 0x140012ad9
        return result;
    }
    while (result >= 6) {
        // 0x1400128ca
        v5--;
        if (v5 == 0) {
            // 0x140012ad9
            return result;
        }
    }
    // 0x140012885
    return result;
}

// Address range: 0x140012b04 - 0x140012b07
int64_t function_140012b04(void) {
    // 0x140012b04
    int64_t result; // 0x140012b04
    return result;
}

// Address range: 0x140012b12 - 0x140012b17
int64_t function_140012b12(void) {
    // 0x140012b12
    int64_t v1; // 0x140012b12
    int64_t result = v1;
    *(int32_t *)result = 2 * (int32_t)result;
    return result;
}

// Address range: 0x140012b18 - 0x140012b1b
int64_t function_140012b18(void) {
    // 0x140012b18
    int64_t result; // 0x140012b18
    return result;
}

// Address range: 0x140012b40 - 0x1400131e5
// Used cryptographic patterns:
//  - CRC_32_IEEE_802_3_poly_0x04C11DB7 (32-bit, little endian)
int64_t function_140012b40(int64_t a1, int32_t a2, int64_t a3, int64_t a4, int64_t a5, int64_t * a6) {
    int64_t v1 = 0x100000000 * a3 >> 32; // 0x140012b8d
    __asm_movdqu(__asm_movdqa(g40));
    int64_t v2 = 0x100000000 * a5 >> 32;
    int64_t v3 = v2 * v1;
    int64_t v4 = v3 + 1; // 0x140012bf2
    uint64_t v5 = (v4 & 0xffffffff) * (a4 & 0xffffffff); // 0x140012bf5
    int64_t * mem = malloc((int32_t)(v5 < 0xffffffff ? v5 : 0xffffffff)); // 0x140012c01
    if (mem == NULL) {
        // 0x140012c39
        __security_check_cookie(g66);
        return &g103;
    }
    int64_t v6 = a3 & 0xffffffff; // 0x140012b6b
    uint64_t v7 = (a5 & 0xffffffff) * v6; // 0x140012c17
    int64_t * mem2 = malloc((int32_t)(v7 < 0xffffffff ? v7 : 0xffffffff)); // 0x140012c20
    if (mem2 == NULL) {
        // 0x140012c2e
        free(mem);
        // 0x140012c39
        __security_check_cookie(g66);
        return &g103;
    }
    uint64_t v8 = 0x100000000 * a4 >> 32; // 0x140012b88
    int64_t v9 = (int64_t)mem; // 0x140012c01
    int64_t v10 = v6; // 0x140012c75
    int64_t v11; // 0x140012b40
    int64_t v12; // 0x140012b40
    int64_t v13; // 0x140012b40
    int64_t v14; // 0x140012b40
    int64_t v15; // 0x140012b40
    int64_t v16; // 0x140012b40
    int64_t v17; // 0x140012b40
    int64_t v18; // 0x140012b40
    int64_t v19; // 0x140012b40
    int64_t v20; // 0x140012b40
    int64_t v21; // 0x140012b40
    int64_t v22; // 0x140012b40
    int64_t v23; // 0x140012b40
    int64_t v24; // 0x140012c20
    int128_t v25; // 0x140012b40
    int128_t v26; // 0x140012b40
    int128_t v27; // 0x140012b40
    int128_t v28; // 0x140012b40
    if ((int32_t)v8 >= 1) {
        uint32_t v29 = (int32_t)v3;
        int32_t v30 = a2 != 0 ? a2 : v29;
        v24 = (int64_t)mem2;
        uint64_t v31 = v8 & 0xffffffff; // 0x140012c6a
        int64_t v32 = 0x100000000 * v3;
        int64_t v33 = v32 >> 32; // 0x140012c7b
        int32_t v34 = v1;
        int32_t v35 = v29 & -0x7ffffff9;
        int64_t v36 = v35;
        int64_t v37 = v33 - 1;
        int64_t v38 = 0; // 0x140012c7e
        while (true) {
            int64_t v39 = 0x100000000 * v38 >> 32; // 0x140012cb7
            int128_t v40; // 0x140012b40
            v25 = v40;
            int128_t v41; // 0x140012b40
            v27 = v41;
            v23 = 0;
            v15 = 0;
            v16 = 0x7fffffff;
            while (true) {
              lab_0x140012c90:
                // 0x140012c90
                v17 = v16;
                int128_t v42 = v27;
                int128_t v43 = v25;
                function_1400127b0(a1, v30, v34, v31, v39, v2, 0x100000000 * v23 >> 32, v24);
                int128_t v44 = v43; // 0x140012cc4
                int128_t v45 = v42; // 0x140012cc4
                int64_t v46 = 0; // 0x140012cc4
                int64_t v47 = 0; // 0x140012cc4
                if (v29 >= 1) {
                    // 0x140012cca
                    v44 = v43;
                    v45 = v42;
                    v46 = 0;
                    v47 = 0;
                    if (v29 >= 8 && g68 >= 2) {
                        int128_t v48 = __asm_xorps(v43, v43); // 0x140012cfe
                        int128_t v49 = __asm_xorps(v42, v42); // 0x140012cfe
                        int64_t v50 = 0; // 0x140012cfe
                        int128_t v51 = __asm_pmovsxbd(__asm_movd(*(int32_t *)(v50 + v24))); // 0x140012d05
                        int128_t v52 = __asm_movd(*(int32_t *)((v50 | 4) + v24)); // 0x140012d0a
                        int128_t v53 = __asm_paddd(v48, __asm_pabsd(v51)); // 0x140012d15
                        int64_t v54 = v50 + 8; // 0x140012d19
                        int128_t v55 = __asm_paddd(__asm_pabsd(__asm_pmovsxbd(v52)), v49); // 0x140012d27
                        int128_t v56 = __asm_movdqa(v55); // 0x140012d2b
                        v48 = v53;
                        v49 = v56;
                        v50 = v54;
                        while (v54 < 0x100000000 * (v3 - (v35 >= 0 ? v36 : (v36 + 7 | 0xfffffff8) + 1)) >> 32) {
                            // 0x140012d00
                            v51 = __asm_pmovsxbd(__asm_movd(*(int32_t *)(v50 + v24)));
                            v52 = __asm_movd(*(int32_t *)((v50 | 4) + v24));
                            v53 = __asm_paddd(v48, __asm_pabsd(v51));
                            v54 = v50 + 8;
                            v55 = __asm_paddd(__asm_pabsd(__asm_pmovsxbd(v52)), v49);
                            v56 = __asm_movdqa(v55);
                            v48 = v53;
                            v49 = v56;
                            v50 = v54;
                        }
                        int128_t v57 = __asm_paddd(v53, v55); // 0x140012d34
                        int128_t v58 = __asm_paddd(v57, __asm_psrldq(__asm_movdqa(v57), 8)); // 0x140012d41
                        int128_t v59 = __asm_paddd(v58, __asm_psrldq(__asm_movdqa(v58), 4)); // 0x140012d4e
                        int32_t v60 = __asm_movd_8(v59); // 0x140012d52
                        v44 = v59;
                        v45 = v56;
                        v46 = v54;
                        v47 = v60;
                    }
                }
                // 0x140012d57
                v12 = v47;
                int64_t v61 = v46;
                v28 = v45;
                v26 = v44;
                v14 = v12;
                if (v33 > v61) {
                    // 0x140012d62
                    v22 = v61;
                    v18 = 0;
                    v20 = 0;
                    if (v33 - v61 < 2) {
                        goto lab_0x140012d99;
                    } else {
                        int64_t v62 = v61 + 2;
                        int64_t v63 = v61; // 0x140012d6e
                        int64_t v64 = v63 + v24;
                        unsigned char v65 = *(char *)v64; // 0x140012d72
                        int64_t v66 = (int64_t)(v65 / 128) + (int64_t)(v65 / 128 ^ v65) & 0xffffffff; // 0x140012d7b
                        unsigned char v67 = *(char *)(v64 + 1); // 0x140012d7e
                        v63 += 2;
                        int64_t v68 = (int64_t)(v67 / 128) + (int64_t)(v67 / 128 ^ v67) & 0xffffffff; // 0x140012d8c
                        int64_t v69 = v66; // 0x140012d92
                        int64_t v70 = v68; // 0x140012d92
                        while (v63 < v37) {
                            // 0x140012d72
                            v64 = v63 + v24;
                            v65 = *(char *)v64;
                            v66 = v69 + (int64_t)(v65 / 128) + (int64_t)(v65 / 128 ^ v65) & 0xffffffff;
                            v67 = *(char *)(v64 + 1);
                            v63 += 2;
                            v68 = v70 + (int64_t)(v67 / 128) + (int64_t)(v67 / 128 ^ v67) & 0xffffffff;
                            v69 = v66;
                            v70 = v68;
                        }
                        int64_t v71 = ((v37 > v62 ? v37 : v62) + -1 - v61 & -2) + v62;
                        v22 = v71;
                        v18 = v66;
                        v20 = v68;
                        v19 = v66;
                        v21 = v68;
                        v13 = v12;
                        if (v71 < v33) {
                            goto lab_0x140012d99;
                        } else {
                            goto lab_0x140012da5;
                        }
                    }
                } else {
                    goto lab_0x140012dac;
                }
            }
          lab_0x140012dd1:;
            int64_t v72 = 5; // 0x140012dd4
            if ((int32_t)v11 != 5) {
                // 0x140012dd6
                function_1400127b0(a1, v30, v34, v31, v39, v2, 0x100000000 * v11 >> 32, v24);
                v72 = v11 & 0xffffffff;
            }
            int64_t v73 = (v39 * (v32 + 0x100000000) >> 32) + v9;
            *(char *)v73 = (char)v72;
            memcpy((int64_t *)(v73 + 1), mem2, v29);
            v38 = v38 + 1 & 0xffffffff;
            v40 = v26;
            v41 = v28;
            if (v38 >= v31) {
                // break -> 0x140012e3b
                break;
            }
        }
        // 0x140012e3b
        v10 = v1 & 0xffffffff;
    }
    // 0x140012e4a
    free(mem2);
    int32_t v74; // bp-96, 0x140012b40
    int64_t v75 = function_140011630(v9, v4 * v8 & 0xffffffff, (int64_t *)&v74, 8); // 0x140012e71
    free(mem);
    if (v75 == 0) {
        // 0x140012c39
        __security_check_cookie(g66);
        return &g103;
    }
    uint32_t v76 = v74 + 57; // 0x140012e9c
    int64_t * mem3 = malloc(v76 < v74 + 45 ? -1 : v76); // 0x140012ea3
    if (mem3 == NULL) {
        // 0x140012c39
        __security_check_cookie(g66);
        return &g103;
    }
    int64_t v77 = (int64_t)mem3; // 0x140012ea3
    *(int32_t *)a6 = v74 + 57;
    *mem3 = 0x474e5089;
    uint32_t v78 = (int32_t)v10; // 0x140012ed8
    char * v79 = (char *)(v77 + 16); // 0x140012ede
    *v79 = (char)(v78 / 0x1000000);
    char * v80 = (char *)(v77 + 17); // 0x140012ee7
    *v80 = (char)(v78 / 0x10000);
    char * v81 = (char *)(v77 + 18); // 0x140012ef0
    *v81 = (char)(v78 / 256);
    char * v82 = (char *)(v77 + 20); // 0x140012ef9
    *v82 = (char)(v8 / 0x1000000);
    char * v83 = (char *)(v77 + 21); // 0x140012f02
    *v83 = (char)(v8 / 0x10000);
    char * v84 = (char *)(v77 + 22); // 0x140012f0b
    *v84 = (char)(v8 / 256);
    char * v85 = (char *)(v77 + 23); // 0x140012f0e
    *v85 = (char)v8;
    *(int32_t *)(v77 + 8) = 0xd000000;
    int64_t v86 = v77 + 12; // 0x140012f1f
    *(int32_t *)v86 = 0x52444849;
    *(char *)(v77 + 19) = (char)v10;
    char * v87 = (char *)(v77 + 24); // 0x140012f2a
    *v87 = 8;
    *(int16_t *)(v77 + 26) = 0;
    *(char *)(v77 + 28) = 0;
    int64_t v88; // bp-232, 0x140012b40
    unsigned char v89 = *(char *)((0x100000000 * a5 >> 30) + 112 + (int64_t)&v88); // 0x140012f39
    *(char *)(v77 + 25) = v89;
    char v90 = *(char *)v86; // 0x140012f43
    unsigned char v91 = *(char *)(v77 + 13); // 0x140012f4c
    int32_t v92 = *(int32_t *)(4 * (int64_t)(-1 - v90) + (int64_t)&CRC_32_IEEE_802_3_poly_0x04C11DB7_at_1400225d0); // 0x140012f50
    uint32_t v93 = v92 ^ 0xffffff; // 0x140012f54
    unsigned char v94 = *(char *)(v77 + 14); // 0x140012f66
    int32_t v95 = *(int32_t *)(4 * ((int64_t)(v93 & 255) ^ (int64_t)v91) + (int64_t)&CRC_32_IEEE_802_3_poly_0x04C11DB7_at_1400225d0); // 0x140012f6a
    uint32_t v96 = v95 ^ v93 / 256; // 0x140012f6e
    unsigned char v97 = *(char *)(v77 + 15); // 0x140012f7a
    int32_t v98 = *(int32_t *)(4 * ((int64_t)(v96 & 255) ^ (int64_t)v94) + (int64_t)&CRC_32_IEEE_802_3_poly_0x04C11DB7_at_1400225d0); // 0x140012f7e
    uint32_t v99 = v98 ^ v96 / 256; // 0x140012f82
    unsigned char v100 = *v79; // 0x140012f90
    int32_t v101 = *(int32_t *)(4 * ((int64_t)(v99 & 255) ^ (int64_t)v97) + (int64_t)&CRC_32_IEEE_802_3_poly_0x04C11DB7_at_1400225d0); // 0x140012f94
    uint32_t v102 = v101 ^ v99 / 256; // 0x140012f98
    unsigned char v103 = *v80; // 0x140012fa4
    int32_t v104 = *(int32_t *)(4 * ((int64_t)(v102 & 255) ^ (int64_t)v100) + (int64_t)&CRC_32_IEEE_802_3_poly_0x04C11DB7_at_1400225d0); // 0x140012fa8
    uint32_t v105 = v104 ^ v102 / 256; // 0x140012fac
    unsigned char v106 = *v81; // 0x140012fba
    int32_t v107 = *(int32_t *)(4 * ((int64_t)(v105 & 255) ^ (int64_t)v103) + (int64_t)&CRC_32_IEEE_802_3_poly_0x04C11DB7_at_1400225d0); // 0x140012fbe
    uint32_t v108 = v107 ^ v105 / 256; // 0x140012fc2
    int32_t v109 = *(int32_t *)(4 * ((int64_t)(v108 & 255) ^ (int64_t)v106) + (int64_t)&CRC_32_IEEE_802_3_poly_0x04C11DB7_at_1400225d0); // 0x140012fd2
    uint32_t v110 = v108 / 256 ^ v109; // 0x140012fd6
    int32_t v111 = *(int32_t *)(4 * (v10 & 255 ^ (int64_t)(v110 & 255)) + (int64_t)&CRC_32_IEEE_802_3_poly_0x04C11DB7_at_1400225d0); // 0x140012fe4
    unsigned char v112 = *v82; // 0x140012feb
    uint32_t v113 = v110 / 256 ^ v111; // 0x140012fef
    unsigned char v114 = *v83; // 0x140012ffb
    int32_t v115 = *(int32_t *)(4 * ((int64_t)(v113 & 255) ^ (int64_t)v112) + (int64_t)&CRC_32_IEEE_802_3_poly_0x04C11DB7_at_1400225d0); // 0x140012fff
    uint32_t v116 = v113 / 256 ^ v115; // 0x140013003
    unsigned char v117 = *v84; // 0x140013011
    int32_t v118 = *(int32_t *)(4 * ((int64_t)(v116 & 255) ^ (int64_t)v114) + (int64_t)&CRC_32_IEEE_802_3_poly_0x04C11DB7_at_1400225d0); // 0x140013015
    uint32_t v119 = v116 / 256 ^ v118; // 0x140013019
    unsigned char v120 = *v85; // 0x140013025
    int32_t v121 = *(int32_t *)(4 * ((int64_t)(v119 & 255) ^ (int64_t)v117) + (int64_t)&CRC_32_IEEE_802_3_poly_0x04C11DB7_at_1400225d0); // 0x140013029
    uint32_t v122 = v119 / 256 ^ v121; // 0x14001302d
    unsigned char v123 = *v87; // 0x14001303b
    *(char *)(v77 + 36) = (char)v74;
    *(int32_t *)(v77 + 37) = 0x54414449;
    int32_t v124 = *(int32_t *)(4 * ((int64_t)(v122 & 255) ^ (int64_t)v120) + (int64_t)&CRC_32_IEEE_802_3_poly_0x04C11DB7_at_1400225d0); // 0x14001304a
    uint32_t v125 = v124 ^ v122 / 256; // 0x14001304e
    int32_t v126 = *(int32_t *)(4 * ((int64_t)(v125 & 255) ^ (int64_t)v123) + (int64_t)&CRC_32_IEEE_802_3_poly_0x04C11DB7_at_1400225d0); // 0x14001305a
    uint32_t v127 = v125 / 256 ^ v126; // 0x14001305e
    int32_t v128 = *(int32_t *)(4 * ((int64_t)(v127 & 255) ^ (int64_t)v89) + (int64_t)&CRC_32_IEEE_802_3_poly_0x04C11DB7_at_1400225d0); // 0x14001306c
    uint32_t v129 = v127 / 256 ^ v128; // 0x140013070
    int32_t v130 = *(int32_t *)((int64_t)(4 * v129 & 1020) + (int64_t)&CRC_32_IEEE_802_3_poly_0x04C11DB7_at_1400225d0); // 0x140013079
    uint32_t v131 = v129 / 256 ^ v130; // 0x14001307d
    int32_t v132 = *(int32_t *)((int64_t)(4 * v131 & 1020) + (int64_t)&CRC_32_IEEE_802_3_poly_0x04C11DB7_at_1400225d0); // 0x140013088
    uint32_t v133 = v131 / 256 ^ v132; // 0x14001308c
    int32_t v134 = *(int32_t *)((int64_t)(4 * v133 & 1020) + (int64_t)&CRC_32_IEEE_802_3_poly_0x04C11DB7_at_1400225d0); // 0x140013095
    uint32_t v135 = -1 - v134;
    uint32_t v136 = v133 / 256 ^ v135; // 0x14001309f
    *(char *)(v77 + 32) = (char)v136;
    *(char *)(v77 + 29) = (char)(v135 / 0x1000000);
    *(char *)(v77 + 30) = (char)(v136 / 0x10000);
    *(char *)(v77 + 31) = (char)(v136 / 256);
    *(char *)(v77 + 33) = (char)(v74 / 0x1000000);
    *(char *)(v77 + 34) = (char)(v74 / 0x10000);
    *(char *)(v77 + 35) = (char)(v74 / 256);
    int64_t v137 = v77 + 41; // 0x1400130df
    int64_t * v138 = (int64_t *)v75; // 0x1400130e6
    memcpy((int64_t *)v137, v138, v74);
    int64_t v139 = v137 + (int64_t)v74; // 0x1400130ee
    free(v138);
    int32_t v140 = v74 + 4; // 0x140013105
    int64_t v141 = 0; // 0x14001310d
    if (v140 >= 1) {
        int64_t v142 = 0; // 0x140013115
        int64_t v143 = 0xffffffff; // 0x140013115
        unsigned char v144 = *(char *)(v139 - 4 - (int64_t)v74 + v142); // 0x140013120
        v142++;
        int32_t v145 = *(int32_t *)(4 * (v143 & 255 ^ (int64_t)v144) + (int64_t)&CRC_32_IEEE_802_3_poly_0x04C11DB7_at_1400225d0); // 0x140013136
        int64_t v146 = v145 ^ (int32_t)v143 / 256; // 0x14001313a
        v143 = v146;
        while (v142 != (int64_t)v140) {
            // 0x140013120
            v144 = *(char *)(v139 - 4 - (int64_t)v74 + v142);
            v142++;
            v145 = *(int32_t *)(4 * (v143 & 255 ^ (int64_t)v144) + (int64_t)&CRC_32_IEEE_802_3_poly_0x04C11DB7_at_1400225d0);
            v146 = v145 ^ (int32_t)v143 / 256;
            v143 = v146;
        }
        // 0x140013142
        v141 = v146 ^ 0xffffffff;
    }
    // 0x140013142
    *(char *)(v139 + 3) = (char)v141;
    uint32_t v147 = (int32_t)v141; // 0x14001314f
    *(char *)v139 = (char)(v147 / 0x1000000);
    *(char *)(v139 + 1) = (char)(v147 / 0x10000);
    *(int32_t *)(v139 + 4) = 0;
    *(int32_t *)(v139 + 8) = 0x444e4549;
    *(char *)(v139 + 2) = (char)(v147 / 256);
    char v148 = *(char *)(v139 + 9); // 0x14001317d
    unsigned char v149 = *(char *)(v139 + 10); // 0x14001318a
    int32_t v150 = *(int32_t *)(4 * (int64_t)(v148 ^ 70) + (int64_t)&CRC_32_IEEE_802_3_poly_0x04C11DB7_at_1400225d0); // 0x14001318e
    uint32_t v151 = v150 ^ 0x22fde9; // 0x140013192
    unsigned char v152 = *(char *)(v139 + 11); // 0x1400131a0
    int32_t v153 = *(int32_t *)(4 * ((int64_t)(v151 & 255) ^ (int64_t)v149) + (int64_t)&CRC_32_IEEE_802_3_poly_0x04C11DB7_at_1400225d0); // 0x1400131a4
    uint32_t v154 = v153 ^ v151 / 256; // 0x1400131a8
    int32_t v155 = *(int32_t *)(4 * ((int64_t)(v154 & 255) ^ (int64_t)v152) + (int64_t)&CRC_32_IEEE_802_3_poly_0x04C11DB7_at_1400225d0); // 0x1400131b7
    uint32_t v156 = -1 - v155;
    uint32_t v157 = v154 / 256 ^ v156; // 0x1400131be
    *(char *)(v139 + 15) = (char)v157;
    *(char *)(v139 + 12) = (char)(v156 / 0x1000000);
    *(char *)(v139 + 13) = (char)(v157 / 0x10000);
    *(char *)(v139 + 14) = (char)(v157 / 256);
    // 0x140012c39
    __security_check_cookie(g66);
    return &g103;
  lab_0x140012dac:;
    int64_t v158 = v14;
    int32_t v159 = v158; // 0x140012dac
    int32_t v160 = v159 - (int32_t)v17; // 0x140012dac
    v11 = v160 < 0 == ((v160 ^ v159) & (int32_t)(v158 ^ v17)) < 0 ? v15 : v23;
    int64_t v161 = v23 + 1; // 0x140012db5
    int64_t v162 = v160 < 0 == ((v160 ^ v159) & (int32_t)(v158 ^ v17)) < 0 ? v17 : v158;
    v25 = v26;
    v27 = v28;
    v23 = v161 & 0xffffffff;
    v15 = v11;
    v16 = v162 & 0xffffffff;
    if ((int32_t)v161 >= 5) {
        // break -> 0x140012dd1
        goto lab_0x140012dd1;
    }
    goto lab_0x140012c90;
  lab_0x140012d99:;
    unsigned char v163 = *(char *)(v22 + v24); // 0x140012d99
    v19 = v18;
    v21 = v20;
    v13 = v12 + (int64_t)(v163 / 128) + (int64_t)(v163 / 128 ^ v163) & 0xffffffff;
    goto lab_0x140012da5;
  lab_0x140012da5:
    // 0x140012da5
    v14 = v21 + v19 + v13 & 0xffffffff;
    goto lab_0x140012dac;
}

// Address range: 0x1400131f0 - 0x1400132b3
int64_t function_1400131f0(int64_t a1, int64_t a2, int64_t a3, int32_t a4, int64_t a5, int64_t a6) {
    // 0x1400131f0
    int32_t nmemb; // bp-56, 0x1400131f0
    int64_t v1 = function_140012b40(a5, (int32_t)a6, a2 & 0xffffffff, a3 & 0xffffffff, (int64_t)a4, (int64_t *)&nmemb); // 0x14001322f
    if (v1 == 0) {
        // 0x14001329f
        __security_check_cookie(g66);
        return &g103;
    }
    // 0x14001323c
    int64_t v2; // bp-48, 0x1400131f0
    int32_t v3 = fopen_s((struct _IO_FILE **)&v2, (char *)a1, "wb"); // 0x14001324b
    int64_t v4 = v3 != 0 ? 0 : v2; // 0x14001325a
    v2 = v4;
    if (v4 != 0) {
        int64_t * data = (int64_t *)v1; // 0x140013282
        struct _IO_FILE * stream = (struct _IO_FILE *)v4; // 0x140013282
        fwrite(data, 1, nmemb, stream);
        fclose(stream);
        free(data);
    } else {
        // 0x14001326b
        free((int64_t *)v1);
    }
    // 0x14001329f
    __security_check_cookie(g66);
    return &g103;
}

// Address range: 0x1400132c0 - 0x1400132df
int64_t function_1400132c0(void) {
    // 0x1400132c0
    int64_t v1; // bp-40, 0x1400132c0
    function_1400010e0(&v1);
    _CxxThrowException(&v1, &g64);
    // UNREACHABLE
}

// Address range: 0x1400132e0 - 0x140013963
int64_t function_1400132e0(int64_t a1, int64_t a2, int64_t a3) {
    // 0x1400132e0
    int32_t v1; // 0x1400132e0
    int32_t v2 = v1;
    int64_t v3 = 0x100000000 * a3 >> 32; // 0x1400132e0
    int64_t v4 = 0x100000000 * a2;
    int64_t v5 = v4 >> 32; // 0x1400132e5
    int64_t v6 = v3; // 0x140013320
    int64_t v7 = v5; // 0x140013320
    int64_t result; // 0x1400132e0
    if ((int32_t)a3 >= 1) {
        int64_t v8 = v5 - 1; // 0x140013326
        int64_t v9 = g72;
        uint32_t v10 = v1 - 1;
        int32_t v11 = v10 * v10;
        int64_t v12 = 0x100000000 * (int64_t)v10;
        int64_t v13 = v5 & 0xffffffff;
        int64_t v14 = 0;
        int64_t v15 = -1;
        int64_t v16 = v15 + 1;
        int64_t v17 = 0; // 0x140013338
        int32_t v18; // 0x1400132e0
        int32_t v19 = v18; // 0x140013338
        int64_t v20 = a1; // 0x140013338
        int64_t v21 = v5; // 0x140013338
        int64_t v22; // 0x1400132e0
        int64_t v23; // 0x1400132e0
        int64_t v24; // 0x1400132e0
        int64_t v25; // 0x1400132e0
        int64_t v26; // 0x1400132e0
        int64_t v27; // 0x1400132e0
        int64_t v28; // 0x1400132e0
        int64_t v29; // 0x1400132e0
        int32_t v30; // 0x1400132e0
        int64_t v31; // 0x1400132e0
        int64_t v32; // 0x14001350c
        int64_t v33; // 0x140013530
        int64_t v34; // 0x140013546
        int64_t v35; // 0x140013552
        int64_t v36; // 0x140013595
        int64_t v37; // 0x140013556
        int64_t v38; // 0x1400135a7
        int32_t v39; // 0x1400135aa
        int64_t v40; // 0x1400135ad
        int32_t v41; // 0x1400135b1
        int32_t v42; // 0x1400135b4
        int64_t v43; // 0x1400135bc
        int64_t v44; // 0x1400135c9
        int64_t v45; // 0x1400132e0
        int64_t v46; // 0x1400132e0
        int64_t v47; // 0x14001335a
        int64_t * v48; // 0x1400132e0
        int64_t v49; // 0x14001335e
        int64_t v50; // 0x14001339c
        int64_t v51; // 0x1400133d9
        int64_t v52; // 0x140013434
        int64_t v53; // 0x140013483
        int64_t v54; // 0x1400134a2
        int64_t v55; // 0x1400133a6
        int64_t v56; // 0x140013365
        int64_t v57; // 0x1400133b0
        int32_t v58; // 0x1400133b4
        int32_t v59; // 0x1400133b6
        int32_t v60; // 0x1400133b9
        int64_t v61; // 0x1400133bc
        int32_t v62; // 0x1400133e2
        int64_t v63; // 0x1400133f1
        int64_t v64; // 0x1400133f5
        int64_t v65; // 0x1400133fb
        int32_t v66; // 0x1400132e0
        int64_t v67; // 0x140013403
        int32_t v68; // 0x140013407
        int32_t v69; // 0x140013410
        int32_t v70; // 0x140013413
        int64_t v71; // 0x140013416
        int64_t v72; // 0x14001344b
        int64_t v73; // 0x14001345a
        int64_t v74; // 0x140013460
        int64_t v75; // 0x14001346d
        int64_t v76; // 0x1400134a6
        int64_t v77; // 0x1400134b6
        int64_t v78; // 0x1400134c8
        int64_t v79; // 0x1400134d0
        int64_t v80; // 0x1400134eb
        if ((int32_t)v5 >= 1) {
            // 0x140013350
            v45 = 8 * v15;
            v24 = 0;
            v80 = 0;
            v28 = -1;
            v30 = v18;
            v46 = v24 + a1;
            v47 = *(int64_t *)v46;
            v48 = (int64_t *)(v47 + v14);
            v49 = *v48;
            v31 = v9;
            if (v28 >= 0) {
                // 0x14001336e
                v31 = v9;
                if (v16 < v3 == v16 > -1 == v28 < v5) {
                    // 0x140013381
                    v31 = *(int64_t *)(*(int64_t *)(v46 - 24) + v14);
                }
            }
            // 0x14001338f
            v50 = v28 + 1;
            v51 = v9;
            if (v15 < v3 == v50 < v5 == (v15 >= 0 && v50 >= 0)) {
                // 0x1400133d5
                v51 = *(int64_t *)(v47 + v45);
            }
            // 0x1400133e2
            v52 = v9;
            if (v15 < v3 == v28 < v5 == (v15 >= 0 && v28 >= 0)) {
                // 0x14001342f
                v52 = *(int64_t *)(*(int64_t *)(v46 - 24) + v45);
            }
            // 0x140013447
            v53 = v28 + 2;
            v54 = v9;
            if (v15 < v3 == v53 < v5 == (v15 >= 0 && v53 >= 0)) {
                // 0x14001349d
                v54 = *(int64_t *)(*(int64_t *)(v46 + 24) + v45);
            }
            // 0x1400134a6
            v55 = 0x100000000 * v49 >> 32;
            v56 = v49 >> 32;
            v57 = 0x100000000 * v31 - 0x100000000 >> 32;
            v58 = (int32_t)(v55 * v55) + (int32_t)(v56 * v56);
            v59 = v30 * v30 + (int32_t)(v57 * v57);
            v60 = v59 - v58;
            v61 = v60 < 0 == ((v60 ^ v59) & (v59 ^ v58)) < 0 ? v49 : v57;
            v62 = v51;
            v63 = v61 >> 32;
            v64 = v51 / 0x100000000 + 0xffffffff;
            v65 = 0x100000000 * v61 >> 32;
            v66 = v64;
            v67 = 0x100000000 * v64 >> 32;
            v68 = (int32_t)(v65 * v65) + (int32_t)(v63 * v63);
            v69 = v62 * v62 + (int32_t)(v67 * v67);
            v70 = v69 - v68;
            v71 = v70 < 0 == ((v70 ^ v69) & (v69 ^ v68)) < 0 ? v61 : 0x100000000 * v51 >> 32;
            v72 = v52 + 0xffffffff;
            v73 = v71 >> 32;
            v74 = 0x100000000 * v71 >> 32;
            v75 = 0x100000000 * v72 >> 32;
            v22 = (v74 * v74 + v73 * v73 & 0xffffffff) > (int64_t)(v11 + (int32_t)(v75 * v75)) ? v72 & 0xffffffff | v12 : v71;
            v76 = v54 + 1;
            v77 = 0x100000000 * v76 >> 32;
            v78 = v22 >> 32;
            v79 = 0x100000000 * v22 >> 32;
            v23 = (v79 * v79 + v78 * v78 & 0xffffffff) > (int64_t)(v11 + (int32_t)(v77 * v77)) ? v76 & 0xffffffff | v12 : v22;
            v80 = v80 + 1 & 0xffffffff;
            *v48 = v23;
            v24 += 24;
            while (v80 < v13) {
                // 0x140013350
                v28 = v50;
                v30 = v66;
                v46 = v24 + v47;
                v47 = *(int64_t *)v46;
                v48 = (int64_t *)(v47 + v14);
                v49 = *v48;
                v31 = v9;
                if (v28 >= 0) {
                    // 0x14001336e
                    v31 = v9;
                    if (v16 < v3 == v16 > -1 == v28 < v5) {
                        // 0x140013381
                        v31 = *(int64_t *)(*(int64_t *)(v46 - 24) + v14);
                    }
                }
                // 0x14001338f
                v50 = v28 + 1;
                v51 = v9;
                if (v15 < v3 == v50 < v5 == (v15 >= 0 && v50 >= 0)) {
                    // 0x1400133d5
                    v51 = *(int64_t *)(v47 + v45);
                }
                // 0x1400133e2
                v52 = v9;
                if (v15 < v3 == v28 < v5 == (v15 >= 0 && v28 >= 0)) {
                    // 0x14001342f
                    v52 = *(int64_t *)(*(int64_t *)(v46 - 24) + v45);
                }
                // 0x140013447
                v53 = v28 + 2;
                v54 = v9;
                if (v15 < v3 == v53 < v5 == (v15 >= 0 && v53 >= 0)) {
                    // 0x14001349d
                    v54 = *(int64_t *)(*(int64_t *)(v46 + 24) + v45);
                }
                // 0x1400134a6
                v55 = 0x100000000 * v49 >> 32;
                v56 = v49 >> 32;
                v57 = 0x100000000 * v31 - 0x100000000 >> 32;
                v58 = (int32_t)(v55 * v55) + (int32_t)(v56 * v56);
                v59 = v30 * v30 + (int32_t)(v57 * v57);
                v60 = v59 - v58;
                v61 = v60 < 0 == ((v60 ^ v59) & (v59 ^ v58)) < 0 ? v49 : v57;
                v62 = v51;
                v63 = v61 >> 32;
                v64 = v51 / 0x100000000 + 0xffffffff;
                v65 = 0x100000000 * v61 >> 32;
                v66 = v64;
                v67 = 0x100000000 * v64 >> 32;
                v68 = (int32_t)(v65 * v65) + (int32_t)(v63 * v63);
                v69 = v62 * v62 + (int32_t)(v67 * v67);
                v70 = v69 - v68;
                v71 = v70 < 0 == ((v70 ^ v69) & (v69 ^ v68)) < 0 ? v61 : 0x100000000 * v51 >> 32;
                v72 = v52 + 0xffffffff;
                v73 = v71 >> 32;
                v74 = 0x100000000 * v71 >> 32;
                v75 = 0x100000000 * v72 >> 32;
                v22 = (v74 * v74 + v73 * v73 & 0xffffffff) > (int64_t)(v11 + (int32_t)(v75 * v75)) ? v72 & 0xffffffff | v12 : v71;
                v76 = v54 + 1;
                v77 = 0x100000000 * v76 >> 32;
                v78 = v22 >> 32;
                v79 = 0x100000000 * v22 >> 32;
                v23 = (v79 * v79 + v78 * v78 & 0xffffffff) > (int64_t)(v11 + (int32_t)(v77 * v77)) ? v76 & 0xffffffff | v12 : v22;
                v80 = v80 + 1 & 0xffffffff;
                *v48 = v23;
                v24 += 24;
            }
            // 0x140013518
            v32 = 0;
            v17 = v32;
            v19 = v66;
            v20 = v47;
            v21 = v13;
            if ((int32_t)v5 >= 1) {
                v26 = 24 * v8;
                v33 = *(int64_t *)a1;
                v34 = v9;
                if (v8 < v5) {
                    // 0x140013542
                    v34 = *(int64_t *)(*(int64_t *)(v33 + v26) + v14);
                }
                // 0x14001354f
                v35 = v8 + 1;
                v27 = v9;
                if (v35 >= 0) {
                    // 0x14001355f
                    v27 = v9;
                    if (v16 < v3 == v16 > -1 == v35 < v5) {
                        // 0x140013572
                        v27 = *(int64_t *)(*(int64_t *)(v33 + v26 + 24) + v14);
                    }
                }
                // 0x140013580
                v36 = 0x100000000 * v34 >> 32;
                v37 = v34 >> 32;
                v38 = 0x100000000 * v27 + 0x100000000 >> 32;
                v39 = (int32_t)(v36 * v36) + (int32_t)(v37 * v37);
                v40 = *(int64_t *)(v33 + v26);
                v41 = v2 * v2 + (int32_t)(v38 * v38);
                v42 = v41 - v39;
                v43 = v42 < 0 == ((v42 ^ v41) & (v41 ^ v39)) < 0 ? v34 : v38;
                v44 = v8 - 1;
                *(int64_t *)(v40 + v14) = v43;
                v25 = v26 - 24;
                v29 = v44;
                v17 = v32;
                v19 = v66;
                v20 = v40;
                v21 = v13;
                while (v44 >= 0) {
                    // 0x140013530
                    v26 = v25;
                    v33 = *(int64_t *)a1;
                    v34 = v9;
                    if (v29 < v5) {
                        // 0x140013542
                        v34 = *(int64_t *)(*(int64_t *)(v33 + v26) + v14);
                    }
                    // 0x14001354f
                    v35 = v29 + 1;
                    v27 = v9;
                    if (v35 >= 0) {
                        // 0x14001355f
                        v27 = v9;
                        if (v16 < v3 == v16 > -1 == v35 < v5) {
                            // 0x140013572
                            v27 = *(int64_t *)(*(int64_t *)(v33 + v26 + 24) + v14);
                        }
                    }
                    // 0x140013580
                    v36 = 0x100000000 * v34 >> 32;
                    v37 = v34 >> 32;
                    v38 = 0x100000000 * v27 + 0x100000000 >> 32;
                    v39 = (int32_t)(v36 * v36) + (int32_t)(v37 * v37);
                    v40 = *(int64_t *)(v33 + v26);
                    v41 = v2 * v2 + (int32_t)(v38 * v38);
                    v42 = v41 - v39;
                    v43 = v42 < 0 == ((v42 ^ v41) & (v41 ^ v39)) < 0 ? v34 : v38;
                    v44 = v29 - 1;
                    *(int64_t *)(v40 + v14) = v43;
                    v25 = v26 - 24;
                    v29 = v44;
                    v17 = v32;
                    v19 = v66;
                    v20 = v40;
                    v21 = v13;
                }
            }
        }
        // 0x1400135e0
        v7 = v21;
        int64_t v81 = v17 + 1; // 0x1400135e5
        int64_t v82 = v7; // 0x1400135ff
        int64_t v83 = v14 + 8; // 0x1400135ff
        while ((int32_t)v81 < (int32_t)v3) {
            // 0x140013332
            v14 = v83;
            v15 = v16;
            int64_t v84 = v20;
            int32_t v85 = v19;
            v16 = v15 + 1;
            v17 = v81 & 0xffffffff;
            v19 = v85;
            v20 = v84;
            v21 = v82;
            if ((int32_t)v82 >= 1) {
                // 0x140013350
                v45 = 8 * v15;
                v24 = 0;
                v80 = 0;
                v28 = -1;
                v30 = v85;
                v46 = v24 + v84;
                v47 = *(int64_t *)v46;
                v48 = (int64_t *)(v47 + v14);
                v49 = *v48;
                v31 = v9;
                if (v28 >= 0) {
                    // 0x14001336e
                    v31 = v9;
                    if (v16 < v3 == v16 > -1 == v28 < v5) {
                        // 0x140013381
                        v31 = *(int64_t *)(*(int64_t *)(v46 - 24) + v14);
                    }
                }
                // 0x14001338f
                v50 = v28 + 1;
                v51 = v9;
                if (v15 < v3 == v50 < v5 == (v15 >= 0 && v50 >= 0)) {
                    // 0x1400133d5
                    v51 = *(int64_t *)(v47 + v45);
                }
                // 0x1400133e2
                v52 = v9;
                if (v15 < v3 == v28 < v5 == (v15 >= 0 && v28 >= 0)) {
                    // 0x14001342f
                    v52 = *(int64_t *)(*(int64_t *)(v46 - 24) + v45);
                }
                // 0x140013447
                v53 = v28 + 2;
                v54 = v9;
                if (v15 < v3 == v53 < v5 == (v15 >= 0 && v53 >= 0)) {
                    // 0x14001349d
                    v54 = *(int64_t *)(*(int64_t *)(v46 + 24) + v45);
                }
                // 0x1400134a6
                v55 = 0x100000000 * v49 >> 32;
                v56 = v49 >> 32;
                v57 = 0x100000000 * v31 - 0x100000000 >> 32;
                v58 = (int32_t)(v55 * v55) + (int32_t)(v56 * v56);
                v59 = v30 * v30 + (int32_t)(v57 * v57);
                v60 = v59 - v58;
                v61 = v60 < 0 == ((v60 ^ v59) & (v59 ^ v58)) < 0 ? v49 : v57;
                v62 = v51;
                v63 = v61 >> 32;
                v64 = v51 / 0x100000000 + 0xffffffff;
                v65 = 0x100000000 * v61 >> 32;
                v66 = v64;
                v67 = 0x100000000 * v64 >> 32;
                v68 = (int32_t)(v65 * v65) + (int32_t)(v63 * v63);
                v69 = v62 * v62 + (int32_t)(v67 * v67);
                v70 = v69 - v68;
                v71 = v70 < 0 == ((v70 ^ v69) & (v69 ^ v68)) < 0 ? v61 : 0x100000000 * v51 >> 32;
                v72 = v52 + 0xffffffff;
                v73 = v71 >> 32;
                v74 = 0x100000000 * v71 >> 32;
                v75 = 0x100000000 * v72 >> 32;
                v22 = (v74 * v74 + v73 * v73 & 0xffffffff) > (int64_t)(v11 + (int32_t)(v75 * v75)) ? v72 & 0xffffffff | v12 : v71;
                v76 = v54 + 1;
                v77 = 0x100000000 * v76 >> 32;
                v78 = v22 >> 32;
                v79 = 0x100000000 * v22 >> 32;
                v23 = (v79 * v79 + v78 * v78 & 0xffffffff) > (int64_t)(v11 + (int32_t)(v77 * v77)) ? v76 & 0xffffffff | v12 : v22;
                v80 = v80 + 1 & 0xffffffff;
                *v48 = v23;
                v24 += 24;
                while (v80 < v13) {
                    // 0x140013350
                    v28 = v50;
                    v30 = v66;
                    v46 = v24 + v47;
                    v47 = *(int64_t *)v46;
                    v48 = (int64_t *)(v47 + v14);
                    v49 = *v48;
                    v31 = v9;
                    if (v28 >= 0) {
                        // 0x14001336e
                        v31 = v9;
                        if (v16 < v3 == v16 > -1 == v28 < v5) {
                            // 0x140013381
                            v31 = *(int64_t *)(*(int64_t *)(v46 - 24) + v14);
                        }
                    }
                    // 0x14001338f
                    v50 = v28 + 1;
                    v51 = v9;
                    if (v15 < v3 == v50 < v5 == (v15 >= 0 && v50 >= 0)) {
                        // 0x1400133d5
                        v51 = *(int64_t *)(v47 + v45);
                    }
                    // 0x1400133e2
                    v52 = v9;
                    if (v15 < v3 == v28 < v5 == (v15 >= 0 && v28 >= 0)) {
                        // 0x14001342f
                        v52 = *(int64_t *)(*(int64_t *)(v46 - 24) + v45);
                    }
                    // 0x140013447
                    v53 = v28 + 2;
                    v54 = v9;
                    if (v15 < v3 == v53 < v5 == (v15 >= 0 && v53 >= 0)) {
                        // 0x14001349d
                        v54 = *(int64_t *)(*(int64_t *)(v46 + 24) + v45);
                    }
                    // 0x1400134a6
                    v55 = 0x100000000 * v49 >> 32;
                    v56 = v49 >> 32;
                    v57 = 0x100000000 * v31 - 0x100000000 >> 32;
                    v58 = (int32_t)(v55 * v55) + (int32_t)(v56 * v56);
                    v59 = v30 * v30 + (int32_t)(v57 * v57);
                    v60 = v59 - v58;
                    v61 = v60 < 0 == ((v60 ^ v59) & (v59 ^ v58)) < 0 ? v49 : v57;
                    v62 = v51;
                    v63 = v61 >> 32;
                    v64 = v51 / 0x100000000 + 0xffffffff;
                    v65 = 0x100000000 * v61 >> 32;
                    v66 = v64;
                    v67 = 0x100000000 * v64 >> 32;
                    v68 = (int32_t)(v65 * v65) + (int32_t)(v63 * v63);
                    v69 = v62 * v62 + (int32_t)(v67 * v67);
                    v70 = v69 - v68;
                    v71 = v70 < 0 == ((v70 ^ v69) & (v69 ^ v68)) < 0 ? v61 : 0x100000000 * v51 >> 32;
                    v72 = v52 + 0xffffffff;
                    v73 = v71 >> 32;
                    v74 = 0x100000000 * v71 >> 32;
                    v75 = 0x100000000 * v72 >> 32;
                    v22 = (v74 * v74 + v73 * v73 & 0xffffffff) > (int64_t)(v11 + (int32_t)(v75 * v75)) ? v72 & 0xffffffff | v12 : v71;
                    v76 = v54 + 1;
                    v77 = 0x100000000 * v76 >> 32;
                    v78 = v22 >> 32;
                    v79 = 0x100000000 * v22 >> 32;
                    v23 = (v79 * v79 + v78 * v78 & 0xffffffff) > (int64_t)(v11 + (int32_t)(v77 * v77)) ? v76 & 0xffffffff | v12 : v22;
                    v80 = v80 + 1 & 0xffffffff;
                    *v48 = v23;
                    v24 += 24;
                }
                // 0x140013518
                v32 = v81 & 0xffffffff;
                v17 = v32;
                v19 = v66;
                v20 = v47;
                v21 = v13;
                if ((int32_t)v5 >= 1) {
                    v26 = 24 * v8;
                    v33 = *(int64_t *)a1;
                    v34 = v9;
                    if (v8 < v5) {
                        // 0x140013542
                        v34 = *(int64_t *)(*(int64_t *)(v33 + v26) + v14);
                    }
                    // 0x14001354f
                    v35 = v8 + 1;
                    v27 = v9;
                    if (v35 >= 0) {
                        // 0x14001355f
                        v27 = v9;
                        if (v16 < v3 == v16 > -1 == v35 < v5) {
                            // 0x140013572
                            v27 = *(int64_t *)(*(int64_t *)(v33 + v26 + 24) + v14);
                        }
                    }
                    // 0x140013580
                    v36 = 0x100000000 * v34 >> 32;
                    v37 = v34 >> 32;
                    v38 = 0x100000000 * v27 + 0x100000000 >> 32;
                    v39 = (int32_t)(v36 * v36) + (int32_t)(v37 * v37);
                    v40 = *(int64_t *)(v33 + v26);
                    v41 = v2 * v2 + (int32_t)(v38 * v38);
                    v42 = v41 - v39;
                    v43 = v42 < 0 == ((v42 ^ v41) & (v41 ^ v39)) < 0 ? v34 : v38;
                    v44 = v8 - 1;
                    *(int64_t *)(v40 + v14) = v43;
                    v25 = v26 - 24;
                    v29 = v44;
                    v17 = v32;
                    v19 = v66;
                    v20 = v40;
                    v21 = v13;
                    while (v44 >= 0) {
                        // 0x140013530
                        v26 = v25;
                        v33 = *(int64_t *)a1;
                        v34 = v9;
                        if (v29 < v5) {
                            // 0x140013542
                            v34 = *(int64_t *)(*(int64_t *)(v33 + v26) + v14);
                        }
                        // 0x14001354f
                        v35 = v29 + 1;
                        v27 = v9;
                        if (v35 >= 0) {
                            // 0x14001355f
                            v27 = v9;
                            if (v16 < v3 == v16 > -1 == v35 < v5) {
                                // 0x140013572
                                v27 = *(int64_t *)(*(int64_t *)(v33 + v26 + 24) + v14);
                            }
                        }
                        // 0x140013580
                        v36 = 0x100000000 * v34 >> 32;
                        v37 = v34 >> 32;
                        v38 = 0x100000000 * v27 + 0x100000000 >> 32;
                        v39 = (int32_t)(v36 * v36) + (int32_t)(v37 * v37);
                        v40 = *(int64_t *)(v33 + v26);
                        v41 = v2 * v2 + (int32_t)(v38 * v38);
                        v42 = v41 - v39;
                        v43 = v42 < 0 == ((v42 ^ v41) & (v41 ^ v39)) < 0 ? v34 : v38;
                        v44 = v29 - 1;
                        *(int64_t *)(v40 + v14) = v43;
                        v25 = v26 - 24;
                        v29 = v44;
                        v17 = v32;
                        v19 = v66;
                        v20 = v40;
                        v21 = v13;
                    }
                }
            }
            // 0x1400135e0
            v7 = v21;
            v81 = v17 + 1;
            v82 = v7;
            v83 = v14 + 8;
        }
        // 0x140013605
        result = v8;
        v6 = v3 & 0xffffffff;
    }
    int64_t v86 = v6 + 0xffffffff; // 0x14001360d
    int32_t v87 = v86; // 0x140013611
    if (v87 < 0) {
        // 0x140013952
        return result;
    }
    int64_t v88 = v7 + 0xffffffff; // 0x140013625
    int64_t result2 = v88 & 0xffffffff; // 0x140013625
    int64_t v89 = 0x100000000 * v86;
    int64_t v90 = g72;
    int64_t v91 = v89 >> 29;
    int64_t v92 = (v89 >> 32) + 1;
    int64_t v93 = v86 & 0xffffffff;
    int64_t v94 = v92 - 1;
    int32_t v95; // 0x1400132e0
    int32_t v96 = v95; // 0x140013645
    int64_t v97 = v93; // 0x140013645
    int64_t v98; // 0x1400132e0
    int64_t v99; // 0x1400132e0
    int64_t v100; // 0x1400132e0
    int64_t v101; // 0x1400132e0
    int64_t v102; // 0x1400132e0
    int64_t v103; // 0x1400132e0
    int32_t v104; // 0x1400132e0
    int64_t v105; // 0x1400132e0
    int64_t v106; // 0x1400136cb
    int32_t v107; // 0x1400136d4
    int32_t v108; // 0x1400136de
    int32_t v109; // 0x1400136e1
    int64_t v110; // 0x1400136ed
    int64_t v111; // 0x140013729
    int64_t v112; // 0x14001372d
    int64_t v113; // 0x140013731
    int64_t v114; // 0x140013737
    int32_t v115; // 0x1400132e0
    int64_t v116; // 0x14001373f
    int32_t v117; // 0x140013743
    int32_t v118; // 0x14001374a
    int32_t v119; // 0x14001374d
    int64_t v120; // 0x140013750
    int64_t v121; // 0x140013787
    uint32_t v122; // 0x14001378b
    int64_t v123; // 0x140013791
    int32_t v124; // 0x140013798
    int64_t v125; // 0x1400137a3
    int64_t v126; // 0x1400137ac
    int64_t v127; // 0x1400137e2
    int64_t v128; // 0x1400137f0
    int64_t v129; // 0x140013803
    int64_t v130; // 0x140013809
    int64_t v131; // 0x140013819
    int32_t v132; // 0x140013839
    int64_t v133; // 0x1400132e0
    int64_t v134; // 0x140013842
    int64_t v135; // 0x1400132e0
    int64_t v136; // 0x140013678
    int64_t v137; // 0x1400136e4
    int64_t v138; // 0x14001370b
    int64_t v139; // 0x140013746
    int64_t v140; // 0x14001376f
    int64_t v141; // 0x14001368c
    int64_t v142; // 0x1400136c8
    if ((int32_t)v88 >= 0) {
        // 0x14001364b
        v133 = 8 * v92;
        v134 = v87;
        v103 = 24 * v5;
        v101 = v5;
        v104 = v95;
        v102 = v103 - 24;
        v135 = *(int64_t *)a1;
        v136 = v90;
        if (v93 < v6 == result2 < v7) {
            // 0x140013671
            v136 = *(int64_t *)(*(int64_t *)(v135 + v102) + v91);
        }
        // 0x140013684
        v105 = v90;
        if (v101 >= 0) {
            // 0x140013698
            v105 = v90;
            if (v94 < v3 == v94 > -1 == v101 < v5) {
                // 0x1400136ab
                v105 = *(int64_t *)(*(int64_t *)(v135 + v103) + v91);
            }
        }
        // 0x1400136b9
        v137 = v101 - 1;
        v138 = v90;
        if (v92 < v3 == v137 < v5 == (v92 >= 0 && v137 >= 0)) {
            // 0x140013707
            v138 = *(int64_t *)(*(int64_t *)(v135 + v102) + v133);
        }
        // 0x140013714
        v139 = v101 - 2;
        v140 = v90;
        if (v92 < v3 == v139 < v5 == (v92 >= 0 && v139 >= 0)) {
            // 0x14001376a
            v140 = *(int64_t *)(*(int64_t *)(v135 + v103 - 48) + v133);
        }
        // 0x140013782
        v141 = v136 >> 32;
        v142 = 0x100000000 * v136 >> 32;
        v106 = 0x100000000 * v105 + 0x100000000 >> 32;
        v107 = (int32_t)(v142 * v142) + (int32_t)(v141 * v141);
        v108 = v104 * v104 + (int32_t)(v106 * v106);
        v109 = v108 - v107;
        v110 = v109 < 0 == ((v109 ^ v108) & (v108 ^ v107)) < 0 ? v136 : v106;
        v111 = 0x100000000 * v138 >> 32;
        v112 = v110 >> 32;
        v113 = v138 / 0x100000000 + 1;
        v114 = 0x100000000 * v110 >> 32;
        v115 = v113;
        v116 = 0x100000000 * v113 >> 32;
        v117 = (int32_t)(v114 * v114) + (int32_t)(v112 * v112);
        v118 = (int32_t)(v116 * v116) + (int32_t)(v111 * v111);
        v119 = v118 - v117;
        v120 = v119 < 0 == ((v119 ^ v118) & (v118 ^ v117)) < 0 ? v110 : v138;
        v121 = v140 + 0xffffffff;
        v122 = v115 + 1;
        v123 = 0x100000000 * v121 >> 32;
        v124 = v122 * v122;
        v125 = v120 >> 32;
        v126 = 0x100000000 * v120 >> 32;
        v99 = v120;
        if ((v126 * v126 + v125 * v125 & 0xffffffff) > (int64_t)(v124 + (int32_t)(v123 * v123))) {
            // 0x1400137b7
            v99 = v121 & 0xffffffff | 0x100000000 * (int64_t)v122;
        }
        // 0x1400137c4
        v127 = v90;
        if (v92 < v3 == v101 < v5 == (v92 >= 0 && v101 >= 0)) {
            // 0x1400137dd
            v127 = *(int64_t *)(*(int64_t *)(v135 + v103) + v133);
        }
        // 0x1400137eb
        v128 = v127 + 1;
        v129 = v99 >> 32;
        v130 = 0x100000000 * v99 >> 32;
        v131 = 0x100000000 * v128 >> 32;
        v100 = v99;
        if ((v130 * v130 + v129 * v129 & 0xffffffff) > (int64_t)(v124 + (int32_t)(v131 * v131))) {
            // 0x140013824
            v100 = v128 & 0xffffffff | 0x100000000 * (int64_t)v122;
        }
        // 0x140013831
        v132 = (int32_t)result2 - 1;
        *(int64_t *)(*(int64_t *)(v135 + v102) + v91) = v100;
        v98 = v132;
        v96 = v115;
        v97 = v134;
        while (v132 >= 0) {
            // 0x140013660
            v103 = v102;
            v101 = v137;
            v104 = v115;
            v102 = v103 - 24;
            v135 = *(int64_t *)a1;
            v136 = v90;
            if (v134 < v6 == v98 < v7) {
                // 0x140013671
                v136 = *(int64_t *)(*(int64_t *)(v135 + v102) + v91);
            }
            // 0x140013684
            v105 = v90;
            if (v101 >= 0) {
                // 0x140013698
                v105 = v90;
                if (v94 < v3 == v94 > -1 == v101 < v5) {
                    // 0x1400136ab
                    v105 = *(int64_t *)(*(int64_t *)(v135 + v103) + v91);
                }
            }
            // 0x1400136b9
            v137 = v101 - 1;
            v138 = v90;
            if (v92 < v3 == v137 < v5 == (v92 >= 0 && v137 >= 0)) {
                // 0x140013707
                v138 = *(int64_t *)(*(int64_t *)(v135 + v102) + v133);
            }
            // 0x140013714
            v139 = v101 - 2;
            v140 = v90;
            if (v92 < v3 == v139 < v5 == (v92 >= 0 && v139 >= 0)) {
                // 0x14001376a
                v140 = *(int64_t *)(*(int64_t *)(v135 + v103 - 48) + v133);
            }
            // 0x140013782
            v141 = v136 >> 32;
            v142 = 0x100000000 * v136 >> 32;
            v106 = 0x100000000 * v105 + 0x100000000 >> 32;
            v107 = (int32_t)(v142 * v142) + (int32_t)(v141 * v141);
            v108 = v104 * v104 + (int32_t)(v106 * v106);
            v109 = v108 - v107;
            v110 = v109 < 0 == ((v109 ^ v108) & (v108 ^ v107)) < 0 ? v136 : v106;
            v111 = 0x100000000 * v138 >> 32;
            v112 = v110 >> 32;
            v113 = v138 / 0x100000000 + 1;
            v114 = 0x100000000 * v110 >> 32;
            v115 = v113;
            v116 = 0x100000000 * v113 >> 32;
            v117 = (int32_t)(v114 * v114) + (int32_t)(v112 * v112);
            v118 = (int32_t)(v116 * v116) + (int32_t)(v111 * v111);
            v119 = v118 - v117;
            v120 = v119 < 0 == ((v119 ^ v118) & (v118 ^ v117)) < 0 ? v110 : v138;
            v121 = v140 + 0xffffffff;
            v122 = v115 + 1;
            v123 = 0x100000000 * v121 >> 32;
            v124 = v122 * v122;
            v125 = v120 >> 32;
            v126 = 0x100000000 * v120 >> 32;
            v99 = v120;
            if ((v126 * v126 + v125 * v125 & 0xffffffff) > (int64_t)(v124 + (int32_t)(v123 * v123))) {
                // 0x1400137b7
                v99 = v121 & 0xffffffff | 0x100000000 * (int64_t)v122;
            }
            // 0x1400137c4
            v127 = v90;
            if (v92 < v3 == v101 < v5 == (v92 >= 0 && v101 >= 0)) {
                // 0x1400137dd
                v127 = *(int64_t *)(*(int64_t *)(v135 + v103) + v133);
            }
            // 0x1400137eb
            v128 = v127 + 1;
            v129 = v99 >> 32;
            v130 = 0x100000000 * v99 >> 32;
            v131 = 0x100000000 * v128 >> 32;
            v100 = v99;
            if ((v130 * v130 + v129 * v129 & 0xffffffff) > (int64_t)(v124 + (int32_t)(v131 * v131))) {
                // 0x140013824
                v100 = v128 & 0xffffffff | 0x100000000 * (int64_t)v122;
            }
            // 0x140013831
            v132 = (int32_t)v98 - 1;
            *(int64_t *)(*(int64_t *)(v135 + v102) + v91) = v100;
            v98 = v132;
            v96 = v115;
            v97 = v134;
        }
    }
    int64_t v143 = v97;
    int32_t v144 = v96;
    int64_t v145 = v143; // 0x14001386a
    int64_t v146; // 0x1400132e0
    int64_t v147; // 0x1400132e0
    int64_t v148; // 0x1400132e0
    int64_t v149; // 0x1400132e0
    int64_t v150; // 0x1400138f5
    int64_t v151; // 0x140013897
    int64_t v152; // 0x1400138a7
    int64_t v153; // 0x1400138df
    int64_t v154; // 0x1400138e2
    int32_t v155; // 0x1400138e9
    int32_t v156; // 0x1400138f3
    int32_t v157; // 0x1400138fc
    int64_t v158; // 0x14001390b
    int64_t v159; // 0x140013911
    if (v4 >= 0x100000000) {
        // 0x140013880
        v150 = v87;
        v147 = 0;
        v149 = 0;
        v151 = v90;
        if (v143 < v6) {
            // 0x140013893
            v151 = *(int64_t *)(*(int64_t *)(v147 + v90) + v91);
        }
        // 0x1400138a0
        v148 = v90;
        if (v149 != 0) {
            // 0x1400138b0
            v148 = v90;
            if (v94 < v3 == v94 > -1 == v149 <= v5) {
                // 0x1400138c3
                v148 = *(int64_t *)(*(int64_t *)(v147 + v90 - 24) + v91);
            }
        }
        // 0x1400138d1
        v152 = v151 >> 32;
        v153 = 0x100000000 * v151 >> 32;
        v154 = 0x100000000 * v148 - 0x100000000 >> 32;
        v155 = (int32_t)(v153 * v153) + (int32_t)(v152 * v152);
        v156 = v144 * v144 + (int32_t)(v154 * v154);
        v157 = v156 - v155;
        v158 = v157 < 0 == ((v157 ^ v156) & (v156 ^ v155)) < 0 ? v151 : v154;
        v159 = v149 + 1;
        *(int64_t *)(*(int64_t *)(v147 + v90) + v91) = v158;
        v146 = v147 + 24;
        v145 = v150;
        while (v159 < v5) {
            // 0x140013880
            v147 = v146;
            v149 = v159;
            v151 = v90;
            if (v150 < v6) {
                // 0x140013893
                v151 = *(int64_t *)(*(int64_t *)(v147 + v90) + v91);
            }
            // 0x1400138a0
            v148 = v90;
            if (v149 != 0) {
                // 0x1400138b0
                v148 = v90;
                if (v94 < v3 == v94 > -1 == v149 <= v5) {
                    // 0x1400138c3
                    v148 = *(int64_t *)(*(int64_t *)(v147 + v90 - 24) + v91);
                }
            }
            // 0x1400138d1
            v152 = v151 >> 32;
            v153 = 0x100000000 * v151 >> 32;
            v154 = 0x100000000 * v148 - 0x100000000 >> 32;
            v155 = (int32_t)(v153 * v153) + (int32_t)(v152 * v152);
            v156 = v144 * v144 + (int32_t)(v154 * v154);
            v157 = v156 - v155;
            v158 = v157 < 0 == ((v157 ^ v156) & (v156 ^ v155)) < 0 ? v151 : v154;
            v159 = v149 + 1;
            *(int64_t *)(*(int64_t *)(v147 + v90) + v91) = v158;
            v146 = v147 + 24;
            v145 = v150;
        }
    }
    int64_t v160 = v145 + 0xffffffff; // 0x14001392a
    int32_t v161 = v160; // 0x140013943
    int64_t v162 = v91 - 8; // 0x14001394c
    while (v161 >= 0) {
        // 0x140013640
        v91 = v162;
        v92 = v94;
        int32_t v163 = v144;
        uint32_t v164 = v161;
        v93 = v160 & 0xffffffff;
        v94 = v92 - 1;
        v96 = v163;
        v97 = v93;
        if ((int32_t)v88 >= 0) {
            // 0x14001364b
            v133 = 8 * v92;
            v134 = v164;
            v103 = 24 * v5;
            v101 = v5;
            v104 = v163;
            v102 = v103 - 24;
            v135 = *(int64_t *)a1;
            v136 = v90;
            if (v93 < v6 == result2 < v7) {
                // 0x140013671
                v136 = *(int64_t *)(*(int64_t *)(v135 + v102) + v91);
            }
            // 0x140013684
            v105 = v90;
            if (v101 >= 0) {
                // 0x140013698
                v105 = v90;
                if (v94 < v3 == v94 > -1 == v101 < v5) {
                    // 0x1400136ab
                    v105 = *(int64_t *)(*(int64_t *)(v135 + v103) + v91);
                }
            }
            // 0x1400136b9
            v137 = v101 - 1;
            v138 = v90;
            if (v92 < v3 == v137 < v5 == (v92 >= 0 && v137 >= 0)) {
                // 0x140013707
                v138 = *(int64_t *)(*(int64_t *)(v135 + v102) + v133);
            }
            // 0x140013714
            v139 = v101 - 2;
            v140 = v90;
            if (v92 < v3 == v139 < v5 == (v92 >= 0 && v139 >= 0)) {
                // 0x14001376a
                v140 = *(int64_t *)(*(int64_t *)(v135 + v103 - 48) + v133);
            }
            // 0x140013782
            v141 = v136 >> 32;
            v142 = 0x100000000 * v136 >> 32;
            v106 = 0x100000000 * v105 + 0x100000000 >> 32;
            v107 = (int32_t)(v142 * v142) + (int32_t)(v141 * v141);
            v108 = v104 * v104 + (int32_t)(v106 * v106);
            v109 = v108 - v107;
            v110 = v109 < 0 == ((v109 ^ v108) & (v108 ^ v107)) < 0 ? v136 : v106;
            v111 = 0x100000000 * v138 >> 32;
            v112 = v110 >> 32;
            v113 = v138 / 0x100000000 + 1;
            v114 = 0x100000000 * v110 >> 32;
            v115 = v113;
            v116 = 0x100000000 * v113 >> 32;
            v117 = (int32_t)(v114 * v114) + (int32_t)(v112 * v112);
            v118 = (int32_t)(v116 * v116) + (int32_t)(v111 * v111);
            v119 = v118 - v117;
            v120 = v119 < 0 == ((v119 ^ v118) & (v118 ^ v117)) < 0 ? v110 : v138;
            v121 = v140 + 0xffffffff;
            v122 = v115 + 1;
            v123 = 0x100000000 * v121 >> 32;
            v124 = v122 * v122;
            v125 = v120 >> 32;
            v126 = 0x100000000 * v120 >> 32;
            v99 = v120;
            if ((v126 * v126 + v125 * v125 & 0xffffffff) > (int64_t)(v124 + (int32_t)(v123 * v123))) {
                // 0x1400137b7
                v99 = v121 & 0xffffffff | 0x100000000 * (int64_t)v122;
            }
            // 0x1400137c4
            v127 = v90;
            if (v92 < v3 == v101 < v5 == (v92 >= 0 && v101 >= 0)) {
                // 0x1400137dd
                v127 = *(int64_t *)(*(int64_t *)(v135 + v103) + v133);
            }
            // 0x1400137eb
            v128 = v127 + 1;
            v129 = v99 >> 32;
            v130 = 0x100000000 * v99 >> 32;
            v131 = 0x100000000 * v128 >> 32;
            v100 = v99;
            if ((v130 * v130 + v129 * v129 & 0xffffffff) > (int64_t)(v124 + (int32_t)(v131 * v131))) {
                // 0x140013824
                v100 = v128 & 0xffffffff | 0x100000000 * (int64_t)v122;
            }
            // 0x140013831
            v132 = (int32_t)result2 - 1;
            *(int64_t *)(*(int64_t *)(v135 + v102) + v91) = v100;
            v98 = v132;
            v96 = v115;
            v97 = v134;
            while (v132 >= 0) {
                // 0x140013660
                v103 = v102;
                v101 = v137;
                v104 = v115;
                v102 = v103 - 24;
                v135 = *(int64_t *)a1;
                v136 = v90;
                if (v134 < v6 == v98 < v7) {
                    // 0x140013671
                    v136 = *(int64_t *)(*(int64_t *)(v135 + v102) + v91);
                }
                // 0x140013684
                v105 = v90;
                if (v101 >= 0) {
                    // 0x140013698
                    v105 = v90;
                    if (v94 < v3 == v94 > -1 == v101 < v5) {
                        // 0x1400136ab
                        v105 = *(int64_t *)(*(int64_t *)(v135 + v103) + v91);
                    }
                }
                // 0x1400136b9
                v137 = v101 - 1;
                v138 = v90;
                if (v92 < v3 == v137 < v5 == (v92 >= 0 && v137 >= 0)) {
                    // 0x140013707
                    v138 = *(int64_t *)(*(int64_t *)(v135 + v102) + v133);
                }
                // 0x140013714
                v139 = v101 - 2;
                v140 = v90;
                if (v92 < v3 == v139 < v5 == (v92 >= 0 && v139 >= 0)) {
                    // 0x14001376a
                    v140 = *(int64_t *)(*(int64_t *)(v135 + v103 - 48) + v133);
                }
                // 0x140013782
                v141 = v136 >> 32;
                v142 = 0x100000000 * v136 >> 32;
                v106 = 0x100000000 * v105 + 0x100000000 >> 32;
                v107 = (int32_t)(v142 * v142) + (int32_t)(v141 * v141);
                v108 = v104 * v104 + (int32_t)(v106 * v106);
                v109 = v108 - v107;
                v110 = v109 < 0 == ((v109 ^ v108) & (v108 ^ v107)) < 0 ? v136 : v106;
                v111 = 0x100000000 * v138 >> 32;
                v112 = v110 >> 32;
                v113 = v138 / 0x100000000 + 1;
                v114 = 0x100000000 * v110 >> 32;
                v115 = v113;
                v116 = 0x100000000 * v113 >> 32;
                v117 = (int32_t)(v114 * v114) + (int32_t)(v112 * v112);
                v118 = (int32_t)(v116 * v116) + (int32_t)(v111 * v111);
                v119 = v118 - v117;
                v120 = v119 < 0 == ((v119 ^ v118) & (v118 ^ v117)) < 0 ? v110 : v138;
                v121 = v140 + 0xffffffff;
                v122 = v115 + 1;
                v123 = 0x100000000 * v121 >> 32;
                v124 = v122 * v122;
                v125 = v120 >> 32;
                v126 = 0x100000000 * v120 >> 32;
                v99 = v120;
                if ((v126 * v126 + v125 * v125 & 0xffffffff) > (int64_t)(v124 + (int32_t)(v123 * v123))) {
                    // 0x1400137b7
                    v99 = v121 & 0xffffffff | 0x100000000 * (int64_t)v122;
                }
                // 0x1400137c4
                v127 = v90;
                if (v92 < v3 == v101 < v5 == (v92 >= 0 && v101 >= 0)) {
                    // 0x1400137dd
                    v127 = *(int64_t *)(*(int64_t *)(v135 + v103) + v133);
                }
                // 0x1400137eb
                v128 = v127 + 1;
                v129 = v99 >> 32;
                v130 = 0x100000000 * v99 >> 32;
                v131 = 0x100000000 * v128 >> 32;
                v100 = v99;
                if ((v130 * v130 + v129 * v129 & 0xffffffff) > (int64_t)(v124 + (int32_t)(v131 * v131))) {
                    // 0x140013824
                    v100 = v128 & 0xffffffff | 0x100000000 * (int64_t)v122;
                }
                // 0x140013831
                v132 = (int32_t)v98 - 1;
                *(int64_t *)(*(int64_t *)(v135 + v102) + v91) = v100;
                v98 = v132;
                v96 = v115;
                v97 = v134;
            }
        }
        // 0x140013865
        v143 = v97;
        v144 = v96;
        v145 = v143;
        if (v4 >= 0x100000000) {
            // 0x140013880
            v150 = v164;
            v147 = 0;
            v149 = 0;
            v151 = v90;
            if (v143 < v6) {
                // 0x140013893
                v151 = *(int64_t *)(*(int64_t *)(v147 + v90) + v91);
            }
            // 0x1400138a0
            v148 = v90;
            if (v149 != 0) {
                // 0x1400138b0
                v148 = v90;
                if (v94 < v3 == v94 > -1 == v149 <= v5) {
                    // 0x1400138c3
                    v148 = *(int64_t *)(*(int64_t *)(v147 + v90 - 24) + v91);
                }
            }
            // 0x1400138d1
            v152 = v151 >> 32;
            v153 = 0x100000000 * v151 >> 32;
            v154 = 0x100000000 * v148 - 0x100000000 >> 32;
            v155 = (int32_t)(v153 * v153) + (int32_t)(v152 * v152);
            v156 = v144 * v144 + (int32_t)(v154 * v154);
            v157 = v156 - v155;
            v158 = v157 < 0 == ((v157 ^ v156) & (v156 ^ v155)) < 0 ? v151 : v154;
            v159 = v149 + 1;
            *(int64_t *)(*(int64_t *)(v147 + v90) + v91) = v158;
            v146 = v147 + 24;
            v145 = v150;
            while (v159 < v5) {
                // 0x140013880
                v147 = v146;
                v149 = v159;
                v151 = v90;
                if (v150 < v6) {
                    // 0x140013893
                    v151 = *(int64_t *)(*(int64_t *)(v147 + v90) + v91);
                }
                // 0x1400138a0
                v148 = v90;
                if (v149 != 0) {
                    // 0x1400138b0
                    v148 = v90;
                    if (v94 < v3 == v94 > -1 == v149 <= v5) {
                        // 0x1400138c3
                        v148 = *(int64_t *)(*(int64_t *)(v147 + v90 - 24) + v91);
                    }
                }
                // 0x1400138d1
                v152 = v151 >> 32;
                v153 = 0x100000000 * v151 >> 32;
                v154 = 0x100000000 * v148 - 0x100000000 >> 32;
                v155 = (int32_t)(v153 * v153) + (int32_t)(v152 * v152);
                v156 = v144 * v144 + (int32_t)(v154 * v154);
                v157 = v156 - v155;
                v158 = v157 < 0 == ((v157 ^ v156) & (v156 ^ v155)) < 0 ? v151 : v154;
                v159 = v149 + 1;
                *(int64_t *)(*(int64_t *)(v147 + v90) + v91) = v158;
                v146 = v147 + 24;
                v145 = v150;
            }
        }
        // 0x140013925
        v160 = v145 + 0xffffffff;
        v161 = v160;
        v162 = v91 - 8;
    }
    // 0x140013952
    return result2;
}

// Address range: 0x140013970 - 0x1400141aa
int64_t function_140013970(int64_t a1, int64_t a2) {
    // 0x140013970
    int128_t v1; // 0x140013970
    int128_t v2 = v1;
    uint64_t v3 = __asm_movaps(v1); // 0x140013993
    int64_t v4 = a1 + 8; // 0x1400139ac
    uint32_t v5 = *(int32_t *)v4; // 0x1400139ac
    int64_t v6 = v5; // 0x1400139ac
    int64_t * v7 = (int64_t *)(a2 + 8); // 0x1400139ba
    if (*v7 != v6) {
        // 0x140014178
        __security_check_cookie(g66);
        __asm_movaps_2((int128_t)v3);
        return &g103;
    }
    uint32_t v8 = *(int32_t *)(a1 + 16); // 0x1400139b3
    uint64_t v9 = (int64_t)v8; // 0x1400139b3
    if (*(int64_t *)(a2 + 16) != v9) {
        // 0x140014178
        __security_check_cookie(g66);
        __asm_movaps_2((int128_t)v3);
        return &g103;
    }
    int128_t v10 = __asm_xorps(v2, v2); // 0x1400139d2
    int64_t v11 = __asm_movdqu(v10); // 0x1400139d5
    int128_t v12 = v11; // bp-96, 0x1400139d5
    int64_t v13 = v11; // 0x1400139e3
    int64_t v14 = a1; // 0x1400139e3
    if (v5 != 0) {
        // 0x1400139e5
        function_14001c9e0(&v12, v6);
        v13 = v12;
        v14 = &v12;
    }
    int64_t v15 = v14; // 0x1400139fc
    int64_t v16; // 0x140013970
    if (v16 != v13) {
        int64_t v17 = v13 + 8;
        int64_t * v18 = (int64_t *)v17; // 0x140013a10
        int64_t v19 = *v18; // 0x140013a10
        int64_t v20 = v17 - 8; // 0x140013a13
        int64_t v21 = *(int64_t *)v20; // 0x140013a13
        int64_t v22 = v19 - v21 >> 3; // 0x140013a1d
        int64_t v23; // 0x140013970
        int64_t v24; // 0x140013970
        int64_t v25; // 0x140013970
        int64_t v26; // 0x140013a52
        if (v22 <= v9) {
            // 0x140013a2f
            v24 = v22;
            if (v22 < v9) {
                // 0x140013a31
                if (*(int64_t *)(v17 + 8) - v21 >> 3 < v9) {
                    // 0x140013a41
                    function_14001c870(v20, v9);
                    v24 = v20;
                } else {
                    // 0x140013a4f
                    v26 = v9 - v22;
                    v23 = v22;
                    v25 = v19;
                    if (v26 != 0) {
                        // 0x140013a57
                        memset((int64_t *)v19, 0, 8 * (int32_t)v26);
                        v23 = v19;
                        v25 = 8 * v26 + v19;
                    }
                    // 0x140013a6d
                    *v18 = v25;
                    v24 = v23;
                }
            }
        } else {
            // 0x140013a26
            *v18 = v21 + 8 * v9;
            v24 = v22;
        }
        int64_t v27 = v17 + 24; // 0x140013a7b
        v15 = v24;
        while (v17 + 16 != v16) {
            // 0x140013a10
            v17 = v27;
            v18 = (int64_t *)v17;
            v19 = *v18;
            v20 = v17 - 8;
            v21 = *(int64_t *)v20;
            v22 = v19 - v21 >> 3;
            if (v22 <= v9) {
                // 0x140013a2f
                v24 = v22;
                if (v22 < v9) {
                    // 0x140013a31
                    if (*(int64_t *)(v17 + 8) - v21 >> 3 < v9) {
                        // 0x140013a41
                        function_14001c870(v20, v9);
                        v24 = v20;
                    } else {
                        // 0x140013a4f
                        v26 = v9 - v22;
                        v23 = v22;
                        v25 = v19;
                        if (v26 != 0) {
                            // 0x140013a57
                            memset((int64_t *)v19, 0, 8 * (int32_t)v26);
                            v23 = v19;
                            v25 = 8 * v26 + v19;
                        }
                        // 0x140013a6d
                        *v18 = v25;
                        v24 = v23;
                    }
                }
            } else {
                // 0x140013a26
                *v18 = v21 + 8 * v9;
                v24 = v22;
            }
            // 0x140013a70
            v27 = v17 + 24;
            v15 = v24;
        }
    }
    int64_t v28 = __asm_movdqu(__asm_xorps(v10, v10)); // 0x140013a82
    int128_t v29 = v28; // bp-120, 0x140013a82
    int64_t v30 = v28; // 0x140013a8e
    int64_t v31 = v15; // 0x140013a8e
    if (v5 != 0) {
        // 0x140013a90
        function_14001c9e0(&v29, v6);
        v30 = v29;
        v31 = &v29;
    }
    int64_t v32 = v31; // 0x140013aab
    if (v16 != v30) {
        int64_t v33 = v30 + 8;
        int64_t * v34 = (int64_t *)v33; // 0x140013ac0
        int64_t v35 = *v34; // 0x140013ac0
        int64_t v36 = v33 - 8; // 0x140013ac3
        int64_t v37 = *(int64_t *)v36; // 0x140013ac3
        int64_t v38 = v35 - v37 >> 3; // 0x140013acd
        int64_t v39; // 0x140013970
        int64_t v40; // 0x140013970
        int64_t v41; // 0x140013970
        int64_t v42; // 0x140013b02
        if (v38 <= v9) {
            // 0x140013adf
            v40 = v38;
            if (v38 < v9) {
                // 0x140013ae1
                if (*(int64_t *)(v33 + 8) - v37 >> 3 < v9) {
                    // 0x140013af1
                    function_14001c870(v36, v9);
                    v40 = v36;
                } else {
                    // 0x140013aff
                    v42 = v9 - v38;
                    v39 = v38;
                    v41 = v35;
                    if (v42 != 0) {
                        // 0x140013b07
                        memset((int64_t *)v35, 0, 8 * (int32_t)v42);
                        v39 = v35;
                        v41 = 8 * v42 + v35;
                    }
                    // 0x140013b1d
                    *v34 = v41;
                    v40 = v39;
                }
            }
        } else {
            // 0x140013ad6
            *v34 = v37 + 8 * v9;
            v40 = v38;
        }
        int64_t v43 = v33 + 24; // 0x140013b2b
        v32 = v40;
        while (v33 + 16 != v16) {
            // 0x140013ac0
            v33 = v43;
            v34 = (int64_t *)v33;
            v35 = *v34;
            v36 = v33 - 8;
            v37 = *(int64_t *)v36;
            v38 = v35 - v37 >> 3;
            if (v38 <= v9) {
                // 0x140013adf
                v40 = v38;
                if (v38 < v9) {
                    // 0x140013ae1
                    if (*(int64_t *)(v33 + 8) - v37 >> 3 < v9) {
                        // 0x140013af1
                        function_14001c870(v36, v9);
                        v40 = v36;
                    } else {
                        // 0x140013aff
                        v42 = v9 - v38;
                        v39 = v38;
                        v41 = v35;
                        if (v42 != 0) {
                            // 0x140013b07
                            memset((int64_t *)v35, 0, 8 * (int32_t)v42);
                            v39 = v35;
                            v41 = 8 * v42 + v35;
                        }
                        // 0x140013b1d
                        *v34 = v41;
                        v40 = v39;
                    }
                }
            } else {
                // 0x140013ad6
                *v34 = v37 + 8 * v9;
                v40 = v38;
            }
            // 0x140013b20
            v43 = v33 + 24;
            v32 = v40;
        }
    }
    int128_t v44; // 0x140013970
    if (v8 >= 1) {
        int64_t v45 = 0;
        int64_t v46 = v32; // 0x140013b46
        int64_t v47; // 0x140013970
        int64_t v48; // 0x140013970
        int64_t v49; // 0x140013970
        int64_t v50; // 0x140013970
        int64_t v51; // 0x140013b7b
        int64_t v52; // 0x140013b69
        int64_t v53; // 0x140013b87
        int64_t v54; // 0x140013b96
        if (v5 >= 1) {
            // 0x140013b50
            v50 = 8 * v45;
            v54 = 0;
            v48 = 0;
            if (*(int16_t *)(2 * (*(int64_t *)v4 * v45 + v54) + v32) == 0) {
                // 0x140013b77
                v51 = *(int64_t *)(v48 + (int64_t)v12);
                *(int64_t *)(v51 + v50) = 0;
                v49 = v29;
            } else {
                // 0x140013b65
                v52 = *(int64_t *)(v48 + (int64_t)v29);
                *(int64_t *)(v52 + v50) = 0;
                v49 = v12;
            }
            // 0x140013b87
            v53 = *(int64_t *)(v49 + v48);
            *(int64_t *)(v53 + v50) = (int64_t)g72;
            v54++;
            v47 = v48 + 24;
            v46 = v53;
            while (v54 != v6) {
                // 0x140013b50
                v48 = v47;
                if (*(int16_t *)(2 * (*(int64_t *)v4 * v45 + v54) + v53) == 0) {
                    // 0x140013b77
                    v51 = *(int64_t *)(v48 + (int64_t)v12);
                    *(int64_t *)(v51 + v50) = 0;
                    v49 = v29;
                } else {
                    // 0x140013b65
                    v52 = *(int64_t *)(v48 + (int64_t)v29);
                    *(int64_t *)(v52 + v50) = 0;
                    v49 = v12;
                }
                // 0x140013b87
                v53 = *(int64_t *)(v49 + v48);
                *(int64_t *)(v53 + v50) = (int64_t)g72;
                v54++;
                v47 = v48 + 24;
                v46 = v53;
            }
        }
        int64_t v55 = v45 + 1; // 0x140013ba2
        while (v55 != v9) {
            // 0x140013b40
            v45 = v55;
            int64_t v56 = v46;
            v46 = v56;
            if (v5 >= 1) {
                // 0x140013b50
                v50 = 8 * v45;
                v54 = 0;
                v48 = 0;
                if (*(int16_t *)(2 * (*(int64_t *)v4 * v45 + v54) + v56) == 0) {
                    // 0x140013b77
                    v51 = *(int64_t *)(v48 + (int64_t)v12);
                    *(int64_t *)(v51 + v50) = 0;
                    v49 = v29;
                } else {
                    // 0x140013b65
                    v52 = *(int64_t *)(v48 + (int64_t)v29);
                    *(int64_t *)(v52 + v50) = 0;
                    v49 = v12;
                }
                // 0x140013b87
                v53 = *(int64_t *)(v49 + v48);
                *(int64_t *)(v53 + v50) = (int64_t)g72;
                v54++;
                v47 = v48 + 24;
                v46 = v53;
                while (v54 != v6) {
                    // 0x140013b50
                    v48 = v47;
                    if (*(int16_t *)(2 * (*(int64_t *)v4 * v45 + v54) + v53) == 0) {
                        // 0x140013b77
                        v51 = *(int64_t *)(v48 + (int64_t)v12);
                        *(int64_t *)(v51 + v50) = 0;
                        v49 = v29;
                    } else {
                        // 0x140013b65
                        v52 = *(int64_t *)(v48 + (int64_t)v29);
                        *(int64_t *)(v52 + v50) = 0;
                        v49 = v12;
                    }
                    // 0x140013b87
                    v53 = *(int64_t *)(v49 + v48);
                    *(int64_t *)(v53 + v50) = (int64_t)g72;
                    v54++;
                    v47 = v48 + 24;
                    v46 = v53;
                }
            }
            // 0x140013ba2
            v55 = v45 + 1;
        }
        int64_t v57 = 0;
        int64_t v58 = v5;
        int128_t v59; // 0x140013970
        int128_t v60 = v59; // 0x140013bd7
        int128_t v61; // 0x140013970
        int128_t v62 = v61; // 0x140013bd7
        int64_t v63 = v58; // 0x140013bd7
        int64_t v64 = 0; // 0x140013bd7
        int64_t v65; // 0x140013d89
        int64_t v66; // 0x140013e6f
        int32_t v67; // 0x140013970
        int32_t v68; // 0x140013970
        int64_t v69; // 0x140013970
        int64_t v70; // 0x140013970
        int64_t v71; // 0x140013970
        int64_t v72; // 0x140013970
        int64_t v73; // 0x140013970
        int32_t v74; // 0x140013970
        int128_t v75; // 0x140013970
        int128_t v76; // 0x140013970
        int128_t v77; // 0x140013970
        int128_t v78; // 0x140013970
        int128_t v79; // 0x140013970
        int128_t v80; // 0x140013970
        int128_t v81; // 0x140013970
        int128_t v82; // 0x140013970
        int128_t v83; // 0x140013970
        uint32_t v84; // 0x140013c9c
        int64_t v85; // 0x140013c9f
        uint32_t v86; // 0x140013ca2
        int128_t v87; // 0x140013ca8
        int128_t v88; // 0x140013cab
        int128_t v89; // 0x140013cbc
        int128_t v90; // 0x140013cc4
        int64_t v91; // 0x140013cc8
        int32_t v92; // 0x140013d1e
        int64_t v93; // 0x140013d1e
        uint32_t v94; // 0x140013d2e
        int64_t v95; // 0x140013970
        int32_t v96; // 0x140013970
        uint32_t v97; // 0x140013d34
        int128_t v98; // 0x140013d3a
        int128_t v99; // 0x140013d3d
        int64_t v100; // 0x140013970
        int64_t v101; // 0x140013ce6
        int64_t v102; // 0x140013cf1
        uint32_t v103; // 0x140013cf1
        int64_t v104; // 0x140013cf4
        uint32_t v105; // 0x140013cf7
        int128_t v106; // 0x140013cfd
        int128_t v107; // 0x140013d00
        int128_t v108; // 0x140013d4e
        int128_t v109; // 0x140013d51
        int128_t v110; // 0x140013d56
        int128_t v111; // 0x140013d11
        int128_t v112; // 0x140013d14
        int128_t v113; // 0x140013d19
        int64_t v114; // 0x140013d77
        int64_t v115; // 0x140013d8c
        uint32_t v116; // 0x140013d8f
        int128_t v117; // 0x140013d95
        int128_t v118; // 0x140013d98
        int64_t v119; // 0x140013d67
        int64_t v120; // 0x140013d6c
        int128_t v121; // 0x140013da9
        int128_t v122; // 0x140013db1
        int64_t v123; // 0x140013db5
        int64_t v124; // 0x140013970
        int64_t v125; // 0x140013dd3
        int64_t v126; // 0x140013dde
        uint32_t v127; // 0x140013dde
        int64_t v128; // 0x140013de1
        uint32_t v129; // 0x140013de4
        int128_t v130; // 0x140013dea
        int128_t v131; // 0x140013ded
        int32_t v132; // 0x140013e0b
        int64_t v133; // 0x140013e0b
        uint32_t v134; // 0x140013e1b
        int64_t v135; // 0x140013970
        int32_t v136; // 0x140013970
        uint32_t v137; // 0x140013e21
        int128_t v138; // 0x140013e27
        int128_t v139; // 0x140013e2a
        int128_t v140; // 0x140013dfe
        int128_t v141; // 0x140013e01
        int128_t v142; // 0x140013e06
        int128_t v143; // 0x140013e3b
        int128_t v144; // 0x140013e3e
        int128_t v145; // 0x140013e43
        int64_t v146; // 0x140013e54
        int64_t v147; // 0x140013e59
        int64_t v148; // 0x140013e64
        int64_t v149; // 0x140013e72
        uint32_t v150; // 0x140013e75
        int128_t v151; // 0x140013e7b
        int128_t v152; // 0x140013e7e
        int128_t v153; // 0x140013e8f
        int128_t v154; // 0x140013e97
        int64_t v155; // 0x140013ea2
        int64_t v156; // 0x140013ec7
        int64_t v157; // 0x140013ecc
        int64_t v158; // 0x140013edc
        uint32_t v159; // 0x140013edc
        int64_t v160; // 0x140013edf
        uint32_t v161; // 0x140013ee2
        int128_t v162; // 0x140013ee8
        int128_t v163; // 0x140013eeb
        int128_t v164; // 0x140013efc
        int128_t v165; // 0x140013eff
        int128_t v166; // 0x140013f04
        int64_t v167; // 0x140013f15
        int64_t v168; // 0x140013f1a
        int64_t v169; // 0x140013f25
        uint32_t v170; // 0x140013f25
        int64_t v171; // 0x140013f28
        uint32_t v172; // 0x140013f2b
        int128_t v173; // 0x140013f31
        int128_t v174; // 0x140013f34
        int128_t v175; // 0x140013f45
        int128_t v176; // 0x140013f5f
        int64_t v177; // 0x140013f63
        int64_t v178; // 0x140013f69
        int64_t v179; // 0x140013970
        int64_t v180; // 0x140013bf6
        int64_t v181; // 0x140013bfa
        int64_t v182; // 0x140013c05
        uint32_t v183; // 0x140013c05
        int64_t v184; // 0x140013c08
        uint32_t v185; // 0x140013c0b
        int128_t v186; // 0x140013c11
        int128_t v187; // 0x140013c14
        int128_t v188; // 0x140013c28
        int128_t v189; // 0x140013c2d
        int64_t v190; // 0x140013c7b
        int64_t v191; // 0x140013c7f
        int64_t v192; // 0x140013c9c
        int128_t v193; // 0x140013970
        int128_t v194; // 0x140013970
        int128_t v195; // 0x140013970
        int128_t v196; // 0x140013970
        int128_t v197; // 0x140013970
        int128_t v198; // 0x140013970
        int128_t v199; // 0x140013970
        int128_t v200; // 0x140013970
        int128_t v201; // 0x140013970
        int128_t v202; // 0x140013970
        int128_t v203; // 0x140013970
        int128_t v204; // 0x140013970
        int128_t v205; // 0x140013970
        int128_t v206; // 0x140013970
        int128_t v207; // 0x140013970
        int128_t v208; // 0x140013970
        int128_t v209; // 0x140013970
        int128_t v210; // 0x140013970
        if (v5 >= 4) {
            // 0x140013be8
            v179 = 8 * v57;
            v74 = 2;
            v178 = 0;
            v70 = 0;
            v197 = v59;
            v180 = *(int64_t *)(v70 + (int64_t)v12);
            v181 = *(int64_t *)(v180 + v179);
            v182 = 0x100000000 * v181 >> 32;
            v183 = (int32_t)(v182 * v182);
            v184 = v181 >> 32;
            v185 = v183 + (int32_t)(v184 * v184);
            v186 = __asm_cvtdq2ps(__asm_movd(v185));
            v187 = __asm_xorps(v197, v197);
            __asm_ucomiss(v187, v186);
            if (v185 < v183 || v185 == 0) {
                // 0x140013c1c
                v205 = v61;
                __asm_xorps(v205, v205);
                v198 = v187;
                v206 = __asm_sqrtss(v186);
            } else {
                // 0x140013c25
                v188 = sqrtf((float32_t)(int32_t)__asm_movaps_2(v186));
                v189 = __asm_movaps_2(v188);
                v198 = v188;
                v206 = v189;
            }
            // 0x140013c83
            v199 = v198;
            v190 = *(int64_t *)(v70 + (int64_t)v29);
            v191 = *(int64_t *)(v190 + v179);
            v192 = v191 >> 32;
            v84 = (int32_t)(v192 * v192);
            v85 = 0x100000000 * v191 >> 32;
            v86 = (int32_t)(v85 * v85) + v84;
            v87 = __asm_cvtdq2ps(__asm_movd(v86));
            v88 = __asm_xorps(v199, v199);
            __asm_ucomiss(v88, v87);
            if (v86 < v84 || v86 == 0) {
                // 0x140013cb3
                __asm_xorps(v88, v88);
                v82 = __asm_sqrtss(v87);
            } else {
                // 0x140013cbc
                v89 = __asm_movaps_2(v87);
                v82 = sqrtf((float32_t)(int32_t)v89);
            }
            // 0x140013cc4
            v83 = v82;
            v90 = __asm_subss(v206, v83);
            v91 = __asm_movss_4(v90);
            *(int32_t *)(4 * (*v7 * v57 + v178) + v58) = (int32_t)v91;
            if (v74 > v5) {
                // 0x140013d1e
                v92 = g72;
                v93 = v92;
                v94 = v92 * v92;
                v95 = v93 >> 32;
                v96 = v95 * v95;
                v97 = v94 + v96;
                v98 = __asm_cvtdq2ps(__asm_movd(v97));
                v99 = __asm_xorps(v83, v83);
                __asm_ucomiss(v99, v98);
                if (v97 < v94 || v97 == 0) {
                    // 0x140013d45
                    __asm_xorps(v90, v90);
                    v67 = v96;
                    v201 = v99;
                    v208 = __asm_sqrtss(v98);
                    v71 = v93;
                } else {
                    // 0x140013d4e
                    v108 = __asm_movaps_2(v98);
                    v109 = sqrtf((float32_t)(int32_t)v108);
                    v110 = __asm_movaps_2(v109);
                    v67 = v96;
                    v201 = v109;
                    v208 = v110;
                    v71 = v93;
                }
            } else {
                // 0x140013cdd
                v100 = v70 | 24;
                v101 = *(int64_t *)(*(int64_t *)(v100 + (int64_t)v12) + v179);
                v102 = v101 >> 32;
                v103 = (int32_t)(v102 * v102);
                v104 = 0x100000000 * v101 >> 32;
                v105 = (int32_t)(v104 * v104) + v103;
                v106 = __asm_cvtdq2ps(__asm_movd(v105));
                v107 = __asm_xorps(v83, v83);
                __asm_ucomiss(v107, v106);
                if (v105 < v103 || v105 == 0) {
                    // 0x140013d08
                    __asm_xorps(v90, v90);
                    v200 = v107;
                    v207 = __asm_sqrtss(v106);
                } else {
                    // 0x140013d11
                    v111 = __asm_movaps_2(v106);
                    v112 = sqrtf((float32_t)(int32_t)v111);
                    v113 = __asm_movaps_2(v112);
                    v200 = v112;
                    v207 = v113;
                }
                // 0x140013d63
                v119 = *(int64_t *)(v100 + (int64_t)v29);
                v120 = *(int64_t *)(v119 + v179);
                v65 = v120 >> 32;
                v67 = v65 * v65;
                v201 = v200;
                v208 = v207;
                v71 = v120;
            }
            // 0x140013d70
            v202 = v201;
            v114 = *v7;
            v115 = 0x100000000 * v71 >> 32;
            v116 = v67 + (int32_t)(v115 * v115);
            v117 = __asm_cvtdq2ps(__asm_movd(v116));
            v118 = __asm_xorps(v202, v202);
            __asm_ucomiss(v118, v117);
            if (v116 < v67 || v116 == 0) {
                // 0x140013da0
                __asm_xorps(v118, v118);
                v80 = __asm_sqrtss(v117);
            } else {
                // 0x140013da9
                v121 = __asm_movaps_2(v117);
                v80 = sqrtf((float32_t)(int32_t)v121);
            }
            // 0x140013db1
            v81 = v80;
            v122 = __asm_subss(v208, v81);
            v123 = __asm_movss_4(v122);
            *(int32_t *)(v58 + 4 + 4 * (v114 * v57 + v178)) = (int32_t)v123;
            if (v74 < v5) {
                // 0x140013dca
                v124 = v70 + 48;
                v125 = *(int64_t *)(*(int64_t *)(v124 + (int64_t)v12) + v179);
                v126 = 0x100000000 * v125 >> 32;
                v127 = (int32_t)(v126 * v126);
                v128 = v125 >> 32;
                v129 = v127 + (int32_t)(v128 * v128);
                v130 = __asm_cvtdq2ps(__asm_movd(v129));
                v131 = __asm_xorps(v81, v81);
                __asm_ucomiss(v131, v130);
                if (v129 < v127 || v129 == 0) {
                    // 0x140013df5
                    __asm_xorps(v122, v122);
                    v203 = v131;
                    v209 = __asm_sqrtss(v130);
                } else {
                    // 0x140013dfe
                    v140 = __asm_movaps_2(v130);
                    v141 = sqrtf((float32_t)(int32_t)v140);
                    v142 = __asm_movaps_2(v141);
                    v203 = v141;
                    v209 = v142;
                }
                // 0x140013e50
                v146 = *(int64_t *)(v124 + (int64_t)v29);
                v147 = *(int64_t *)(v146 + v179);
                v66 = v147 >> 32;
                v68 = v66 * v66;
                v193 = v203;
                v210 = v209;
                v72 = v147;
            } else {
                // 0x140013e0b
                v132 = g72;
                v133 = v132;
                v134 = v132 * v132;
                v135 = v133 >> 32;
                v136 = v135 * v135;
                v137 = v134 + v136;
                v138 = __asm_cvtdq2ps(__asm_movd(v137));
                v139 = __asm_xorps(v81, v81);
                __asm_ucomiss(v139, v138);
                if (v137 < v134 || v137 == 0) {
                    // 0x140013e32
                    __asm_xorps(v122, v122);
                    v68 = v136;
                    v193 = v139;
                    v210 = __asm_sqrtss(v138);
                    v72 = v133;
                } else {
                    // 0x140013e3b
                    v143 = __asm_movaps_2(v138);
                    v144 = sqrtf((float32_t)(int32_t)v143);
                    v145 = __asm_movaps_2(v144);
                    v68 = v136;
                    v193 = v144;
                    v210 = v145;
                    v72 = v133;
                }
            }
            // 0x140013e5d
            v194 = v193;
            v148 = *v7;
            v149 = 0x100000000 * v72 >> 32;
            v150 = v68 + (int32_t)(v149 * v149);
            v151 = __asm_cvtdq2ps(__asm_movd(v150));
            v152 = __asm_xorps(v194, v194);
            __asm_ucomiss(v152, v151);
            if (v150 < v68 || v150 == 0) {
                // 0x140013e86
                __asm_xorps(v152, v152);
                v78 = __asm_sqrtss(v151);
            } else {
                // 0x140013e8f
                v153 = __asm_movaps_2(v151);
                v78 = sqrtf((float32_t)(int32_t)v153);
            }
            // 0x140013ed5
            v79 = v78;
            v154 = __asm_subss(v210, v79);
            v155 = __asm_movss_4(v154);
            *(int32_t *)(v58 + 8 + 4 * (v148 * v57 + v178)) = (int32_t)v155;
            v156 = v70 + 72;
            v157 = *(int64_t *)(*(int64_t *)(v156 + (int64_t)v12) + v179);
            v158 = 0x100000000 * v157 >> 32;
            v159 = (int32_t)(v158 * v158);
            v160 = v157 >> 32;
            v161 = v159 + (int32_t)(v160 * v160);
            v162 = __asm_cvtdq2ps(__asm_movd(v161));
            v163 = __asm_xorps(v79, v79);
            __asm_ucomiss(v163, v162);
            if (v161 < v159 || v161 == 0) {
                // 0x140013ef3
                __asm_xorps(v154, v154);
                v195 = v163;
                v77 = __asm_sqrtss(v162);
            } else {
                // 0x140013efc
                v164 = __asm_movaps_2(v162);
                v165 = sqrtf((float32_t)(int32_t)v164);
                v166 = __asm_movaps_2(v165);
                v195 = v165;
                v77 = v166;
            }
            // 0x140013f1e
            v196 = v195;
            v167 = *(int64_t *)(v156 + (int64_t)v29);
            v168 = *(int64_t *)(v167 + v179);
            v169 = 0x100000000 * v168 >> 32;
            v170 = (int32_t)(v169 * v169);
            v171 = v168 >> 32;
            v172 = v170 + (int32_t)(v171 * v171);
            v173 = __asm_cvtdq2ps(__asm_movd(v172));
            v174 = __asm_xorps(v196, v196);
            __asm_ucomiss(v174, v173);
            if (v172 < v170 || v172 == 0) {
                // 0x140013f3c
                __asm_xorps(v174, v174);
                v75 = __asm_sqrtss(v173);
            } else {
                // 0x140013f45
                v175 = __asm_movaps_2(v173);
                v75 = sqrtf((float32_t)(int32_t)v175);
            }
            // 0x140013f4d
            v76 = v75;
            v176 = __asm_subss(v77, v76);
            v177 = __asm_movss_4(v176);
            *(int32_t *)(a2 + 12 + 4 * (*v7 * v57 + v178)) = (int32_t)v177;
            v178 += 4;
            v74 += 4;
            v204 = v176;
            v73 = a2;
            v69 = v70 + 96;
            v60 = v76;
            v62 = v176;
            v63 = a2;
            v64 = v178;
            while (v178 < v6 - 3) {
                // 0x140013bf2
                v70 = v69;
                v197 = v76;
                v180 = *(int64_t *)(v70 + (int64_t)v12);
                v181 = *(int64_t *)(v180 + v179);
                v182 = 0x100000000 * v181 >> 32;
                v183 = (int32_t)(v182 * v182);
                v184 = v181 >> 32;
                v185 = v183 + (int32_t)(v184 * v184);
                v186 = __asm_cvtdq2ps(__asm_movd(v185));
                v187 = __asm_xorps(v197, v197);
                __asm_ucomiss(v187, v186);
                if (v185 < v183 || v185 == 0) {
                    // 0x140013c1c
                    v205 = v204;
                    __asm_xorps(v205, v205);
                    v198 = v187;
                    v206 = __asm_sqrtss(v186);
                } else {
                    // 0x140013c25
                    v188 = sqrtf((float32_t)(int32_t)__asm_movaps_2(v186));
                    v189 = __asm_movaps_2(v188);
                    v198 = v188;
                    v206 = v189;
                }
                // 0x140013c83
                v199 = v198;
                v190 = *(int64_t *)(v70 + (int64_t)v29);
                v191 = *(int64_t *)(v190 + v179);
                v192 = v191 >> 32;
                v84 = (int32_t)(v192 * v192);
                v85 = 0x100000000 * v191 >> 32;
                v86 = (int32_t)(v85 * v85) + v84;
                v87 = __asm_cvtdq2ps(__asm_movd(v86));
                v88 = __asm_xorps(v199, v199);
                __asm_ucomiss(v88, v87);
                if (v86 < v84 || v86 == 0) {
                    // 0x140013cb3
                    __asm_xorps(v88, v88);
                    v82 = __asm_sqrtss(v87);
                } else {
                    // 0x140013cbc
                    v89 = __asm_movaps_2(v87);
                    v82 = sqrtf((float32_t)(int32_t)v89);
                }
                // 0x140013cc4
                v83 = v82;
                v90 = __asm_subss(v206, v83);
                v91 = __asm_movss_4(v90);
                *(int32_t *)(4 * (*v7 * v57 + v178) + v73) = (int32_t)v91;
                if (v74 > v5) {
                    // 0x140013d1e
                    v92 = g72;
                    v93 = v92;
                    v94 = v92 * v92;
                    v95 = v93 >> 32;
                    v96 = v95 * v95;
                    v97 = v94 + v96;
                    v98 = __asm_cvtdq2ps(__asm_movd(v97));
                    v99 = __asm_xorps(v83, v83);
                    __asm_ucomiss(v99, v98);
                    if (v97 < v94 || v97 == 0) {
                        // 0x140013d45
                        __asm_xorps(v90, v90);
                        v67 = v96;
                        v201 = v99;
                        v208 = __asm_sqrtss(v98);
                        v71 = v93;
                    } else {
                        // 0x140013d4e
                        v108 = __asm_movaps_2(v98);
                        v109 = sqrtf((float32_t)(int32_t)v108);
                        v110 = __asm_movaps_2(v109);
                        v67 = v96;
                        v201 = v109;
                        v208 = v110;
                        v71 = v93;
                    }
                } else {
                    // 0x140013cdd
                    v100 = v70 | 24;
                    v101 = *(int64_t *)(*(int64_t *)(v100 + (int64_t)v12) + v179);
                    v102 = v101 >> 32;
                    v103 = (int32_t)(v102 * v102);
                    v104 = 0x100000000 * v101 >> 32;
                    v105 = (int32_t)(v104 * v104) + v103;
                    v106 = __asm_cvtdq2ps(__asm_movd(v105));
                    v107 = __asm_xorps(v83, v83);
                    __asm_ucomiss(v107, v106);
                    if (v105 < v103 || v105 == 0) {
                        // 0x140013d08
                        __asm_xorps(v90, v90);
                        v200 = v107;
                        v207 = __asm_sqrtss(v106);
                    } else {
                        // 0x140013d11
                        v111 = __asm_movaps_2(v106);
                        v112 = sqrtf((float32_t)(int32_t)v111);
                        v113 = __asm_movaps_2(v112);
                        v200 = v112;
                        v207 = v113;
                    }
                    // 0x140013d63
                    v119 = *(int64_t *)(v100 + (int64_t)v29);
                    v120 = *(int64_t *)(v119 + v179);
                    v65 = v120 >> 32;
                    v67 = v65 * v65;
                    v201 = v200;
                    v208 = v207;
                    v71 = v120;
                }
                // 0x140013d70
                v202 = v201;
                v114 = *v7;
                v115 = 0x100000000 * v71 >> 32;
                v116 = v67 + (int32_t)(v115 * v115);
                v117 = __asm_cvtdq2ps(__asm_movd(v116));
                v118 = __asm_xorps(v202, v202);
                __asm_ucomiss(v118, v117);
                if (v116 < v67 || v116 == 0) {
                    // 0x140013da0
                    __asm_xorps(v118, v118);
                    v80 = __asm_sqrtss(v117);
                } else {
                    // 0x140013da9
                    v121 = __asm_movaps_2(v117);
                    v80 = sqrtf((float32_t)(int32_t)v121);
                }
                // 0x140013db1
                v81 = v80;
                v122 = __asm_subss(v208, v81);
                v123 = __asm_movss_4(v122);
                *(int32_t *)(v73 + 4 + 4 * (v114 * v57 + v178)) = (int32_t)v123;
                if (v74 < v5) {
                    // 0x140013dca
                    v124 = v70 + 48;
                    v125 = *(int64_t *)(*(int64_t *)(v124 + (int64_t)v12) + v179);
                    v126 = 0x100000000 * v125 >> 32;
                    v127 = (int32_t)(v126 * v126);
                    v128 = v125 >> 32;
                    v129 = v127 + (int32_t)(v128 * v128);
                    v130 = __asm_cvtdq2ps(__asm_movd(v129));
                    v131 = __asm_xorps(v81, v81);
                    __asm_ucomiss(v131, v130);
                    if (v129 < v127 || v129 == 0) {
                        // 0x140013df5
                        __asm_xorps(v122, v122);
                        v203 = v131;
                        v209 = __asm_sqrtss(v130);
                    } else {
                        // 0x140013dfe
                        v140 = __asm_movaps_2(v130);
                        v141 = sqrtf((float32_t)(int32_t)v140);
                        v142 = __asm_movaps_2(v141);
                        v203 = v141;
                        v209 = v142;
                    }
                    // 0x140013e50
                    v146 = *(int64_t *)(v124 + (int64_t)v29);
                    v147 = *(int64_t *)(v146 + v179);
                    v66 = v147 >> 32;
                    v68 = v66 * v66;
                    v193 = v203;
                    v210 = v209;
                    v72 = v147;
                } else {
                    // 0x140013e0b
                    v132 = g72;
                    v133 = v132;
                    v134 = v132 * v132;
                    v135 = v133 >> 32;
                    v136 = v135 * v135;
                    v137 = v134 + v136;
                    v138 = __asm_cvtdq2ps(__asm_movd(v137));
                    v139 = __asm_xorps(v81, v81);
                    __asm_ucomiss(v139, v138);
                    if (v137 < v134 || v137 == 0) {
                        // 0x140013e32
                        __asm_xorps(v122, v122);
                        v68 = v136;
                        v193 = v139;
                        v210 = __asm_sqrtss(v138);
                        v72 = v133;
                    } else {
                        // 0x140013e3b
                        v143 = __asm_movaps_2(v138);
                        v144 = sqrtf((float32_t)(int32_t)v143);
                        v145 = __asm_movaps_2(v144);
                        v68 = v136;
                        v193 = v144;
                        v210 = v145;
                        v72 = v133;
                    }
                }
                // 0x140013e5d
                v194 = v193;
                v148 = *v7;
                v149 = 0x100000000 * v72 >> 32;
                v150 = v68 + (int32_t)(v149 * v149);
                v151 = __asm_cvtdq2ps(__asm_movd(v150));
                v152 = __asm_xorps(v194, v194);
                __asm_ucomiss(v152, v151);
                if (v150 < v68 || v150 == 0) {
                    // 0x140013e86
                    __asm_xorps(v152, v152);
                    v78 = __asm_sqrtss(v151);
                } else {
                    // 0x140013e8f
                    v153 = __asm_movaps_2(v151);
                    v78 = sqrtf((float32_t)(int32_t)v153);
                }
                // 0x140013ed5
                v79 = v78;
                v154 = __asm_subss(v210, v79);
                v155 = __asm_movss_4(v154);
                *(int32_t *)(v73 + 8 + 4 * (v148 * v57 + v178)) = (int32_t)v155;
                v156 = v70 + 72;
                v157 = *(int64_t *)(*(int64_t *)(v156 + (int64_t)v12) + v179);
                v158 = 0x100000000 * v157 >> 32;
                v159 = (int32_t)(v158 * v158);
                v160 = v157 >> 32;
                v161 = v159 + (int32_t)(v160 * v160);
                v162 = __asm_cvtdq2ps(__asm_movd(v161));
                v163 = __asm_xorps(v79, v79);
                __asm_ucomiss(v163, v162);
                if (v161 < v159 || v161 == 0) {
                    // 0x140013ef3
                    __asm_xorps(v154, v154);
                    v195 = v163;
                    v77 = __asm_sqrtss(v162);
                } else {
                    // 0x140013efc
                    v164 = __asm_movaps_2(v162);
                    v165 = sqrtf((float32_t)(int32_t)v164);
                    v166 = __asm_movaps_2(v165);
                    v195 = v165;
                    v77 = v166;
                }
                // 0x140013f1e
                v196 = v195;
                v167 = *(int64_t *)(v156 + (int64_t)v29);
                v168 = *(int64_t *)(v167 + v179);
                v169 = 0x100000000 * v168 >> 32;
                v170 = (int32_t)(v169 * v169);
                v171 = v168 >> 32;
                v172 = v170 + (int32_t)(v171 * v171);
                v173 = __asm_cvtdq2ps(__asm_movd(v172));
                v174 = __asm_xorps(v196, v196);
                __asm_ucomiss(v174, v173);
                if (v172 < v170 || v172 == 0) {
                    // 0x140013f3c
                    __asm_xorps(v174, v174);
                    v75 = __asm_sqrtss(v173);
                } else {
                    // 0x140013f45
                    v175 = __asm_movaps_2(v173);
                    v75 = sqrtf((float32_t)(int32_t)v175);
                }
                // 0x140013f4d
                v76 = v75;
                v176 = __asm_subss(v77, v76);
                v177 = __asm_movss_4(v176);
                *(int32_t *)(a2 + 12 + 4 * (*v7 * v57 + v178)) = (int32_t)v177;
                v178 += 4;
                v74 += 4;
                v204 = v176;
                v73 = a2;
                v69 = v70 + 96;
                v60 = v76;
                v62 = v176;
                v63 = a2;
                v64 = v178;
            }
        }
        int64_t v211 = v64;
        int64_t v212 = v63;
        int128_t v213 = v62;
        int128_t v214 = v60;
        int128_t v215 = v214; // 0x140013f8d
        int128_t v216 = v213; // 0x140013f8d
        int64_t v217; // 0x140013970
        int128_t v218; // 0x140013970
        int128_t v219; // 0x140013970
        int128_t v220; // 0x140013970
        int64_t v221; // 0x140013ff3
        int64_t v222; // 0x140013ff7
        int64_t v223; // 0x140014002
        uint32_t v224; // 0x140014002
        int64_t v225; // 0x140014005
        uint32_t v226; // 0x140014008
        int128_t v227; // 0x14001400e
        int128_t v228; // 0x140014011
        int128_t v229; // 0x140014022
        int128_t v230; // 0x14001403c
        int64_t v231; // 0x140014040
        int64_t v232; // 0x140014045
        int64_t v233; // 0x140013970
        int64_t v234; // 0x140013fab
        int64_t v235; // 0x140013faf
        int64_t v236; // 0x140013fbf
        uint32_t v237; // 0x140013fbf
        int64_t v238; // 0x140013fc2
        uint32_t v239; // 0x140013fc5
        int128_t v240; // 0x140013fcb
        int128_t v241; // 0x140013fce
        int128_t v242; // 0x140013fe2
        int128_t v243; // 0x140013fe7
        int128_t v244; // 0x140013970
        int128_t v245; // 0x140013970
        int128_t v246; // 0x140013970
        int128_t v247; // 0x140013970
        int128_t v248; // 0x140013970
        if (v211 < v6) {
            // 0x140013f93
            v233 = 8 * v57;
            v247 = v213;
            v217 = 24 * v211;
            v232 = v211;
            v244 = v214;
            v234 = *(int64_t *)(v217 + (int64_t)v12);
            v235 = *(int64_t *)(v234 + v233);
            v236 = 0x100000000 * v235 >> 32;
            v237 = (int32_t)(v236 * v236);
            v238 = v235 >> 32;
            v239 = v237 + (int32_t)(v238 * v238);
            v240 = __asm_cvtdq2ps(__asm_movd(v239));
            v241 = __asm_xorps(v244, v244);
            __asm_ucomiss(v241, v240);
            if (v239 < v237 || v239 == 0) {
                // 0x140013fd6
                v248 = v247;
                __asm_xorps(v248, v248);
                v245 = v241;
                v218 = __asm_sqrtss(v240);
            } else {
                // 0x140013fdf
                v242 = sqrtf((float32_t)(int32_t)__asm_movaps_2(v240));
                v243 = __asm_movaps_2(v242);
                v245 = v242;
                v218 = v243;
            }
            // 0x140013ffb
            v246 = v245;
            v221 = *(int64_t *)(v217 + (int64_t)v29);
            v222 = *(int64_t *)(v221 + v233);
            v223 = 0x100000000 * v222 >> 32;
            v224 = (int32_t)(v223 * v223);
            v225 = v222 >> 32;
            v226 = v224 + (int32_t)(v225 * v225);
            v227 = __asm_cvtdq2ps(__asm_movd(v226));
            v228 = __asm_xorps(v246, v246);
            __asm_ucomiss(v228, v227);
            if (v226 < v224 || v226 == 0) {
                // 0x140014019
                __asm_xorps(v228, v228);
                v219 = __asm_sqrtss(v227);
            } else {
                // 0x140014022
                v229 = __asm_movaps_2(v227);
                v219 = sqrtf((float32_t)(int32_t)v229);
            }
            // 0x14001402a
            v220 = v219;
            v230 = __asm_subss(v218, v220);
            v231 = __asm_movss_4(v230);
            *(int32_t *)(4 * (*v7 * v57 + v232) + v212) = (int32_t)v231;
            v232++;
            v247 = v230;
            v217 += 24;
            v215 = v220;
            v216 = v230;
            while (v232 != v6) {
                // 0x140013fb8
                v244 = v220;
                v234 = *(int64_t *)(v217 + (int64_t)v12);
                v235 = *(int64_t *)(v234 + v233);
                v236 = 0x100000000 * v235 >> 32;
                v237 = (int32_t)(v236 * v236);
                v238 = v235 >> 32;
                v239 = v237 + (int32_t)(v238 * v238);
                v240 = __asm_cvtdq2ps(__asm_movd(v239));
                v241 = __asm_xorps(v244, v244);
                __asm_ucomiss(v241, v240);
                if (v239 < v237 || v239 == 0) {
                    // 0x140013fd6
                    v248 = v247;
                    __asm_xorps(v248, v248);
                    v245 = v241;
                    v218 = __asm_sqrtss(v240);
                } else {
                    // 0x140013fdf
                    v242 = sqrtf((float32_t)(int32_t)__asm_movaps_2(v240));
                    v243 = __asm_movaps_2(v242);
                    v245 = v242;
                    v218 = v243;
                }
                // 0x140013ffb
                v246 = v245;
                v221 = *(int64_t *)(v217 + (int64_t)v29);
                v222 = *(int64_t *)(v221 + v233);
                v223 = 0x100000000 * v222 >> 32;
                v224 = (int32_t)(v223 * v223);
                v225 = v222 >> 32;
                v226 = v224 + (int32_t)(v225 * v225);
                v227 = __asm_cvtdq2ps(__asm_movd(v226));
                v228 = __asm_xorps(v246, v246);
                __asm_ucomiss(v228, v227);
                if (v226 < v224 || v226 == 0) {
                    // 0x140014019
                    __asm_xorps(v228, v228);
                    v219 = __asm_sqrtss(v227);
                } else {
                    // 0x140014022
                    v229 = __asm_movaps_2(v227);
                    v219 = sqrtf((float32_t)(int32_t)v229);
                }
                // 0x14001402a
                v220 = v219;
                v230 = __asm_subss(v218, v220);
                v231 = __asm_movss_4(v230);
                *(int32_t *)(4 * (*v7 * v57 + v232) + v212) = (int32_t)v231;
                v232++;
                v247 = v230;
                v217 += 24;
                v215 = v220;
                v216 = v230;
            }
        }
        int64_t v249 = v57 + 1; // 0x140014055
        v44 = v215;
        while (v249 != v9) {
            // 0x140013bd0
            v57 = v249;
            v58 = v212;
            int128_t v250 = v216;
            int128_t v251 = v215;
            v60 = v251;
            v62 = v250;
            v63 = v58;
            v64 = 0;
            if (v5 >= 4) {
                // 0x140013be8
                v179 = 8 * v57;
                v74 = 2;
                v204 = v250;
                v178 = 0;
                v70 = 0;
                v197 = v251;
                v180 = *(int64_t *)(v70 + (int64_t)v12);
                v181 = *(int64_t *)(v180 + v179);
                v182 = 0x100000000 * v181 >> 32;
                v183 = (int32_t)(v182 * v182);
                v184 = v181 >> 32;
                v185 = v183 + (int32_t)(v184 * v184);
                v186 = __asm_cvtdq2ps(__asm_movd(v185));
                v187 = __asm_xorps(v197, v197);
                __asm_ucomiss(v187, v186);
                if (v185 < v183 || v185 == 0) {
                    // 0x140013c1c
                    v205 = v204;
                    __asm_xorps(v205, v205);
                    v198 = v187;
                    v206 = __asm_sqrtss(v186);
                } else {
                    // 0x140013c25
                    v188 = sqrtf((float32_t)(int32_t)__asm_movaps_2(v186));
                    v189 = __asm_movaps_2(v188);
                    v198 = v188;
                    v206 = v189;
                }
                // 0x140013c83
                v199 = v198;
                v190 = *(int64_t *)(v70 + (int64_t)v29);
                v191 = *(int64_t *)(v190 + v179);
                v192 = v191 >> 32;
                v84 = (int32_t)(v192 * v192);
                v85 = 0x100000000 * v191 >> 32;
                v86 = (int32_t)(v85 * v85) + v84;
                v87 = __asm_cvtdq2ps(__asm_movd(v86));
                v88 = __asm_xorps(v199, v199);
                __asm_ucomiss(v88, v87);
                if (v86 < v84 || v86 == 0) {
                    // 0x140013cb3
                    __asm_xorps(v88, v88);
                    v82 = __asm_sqrtss(v87);
                } else {
                    // 0x140013cbc
                    v89 = __asm_movaps_2(v87);
                    v82 = sqrtf((float32_t)(int32_t)v89);
                }
                // 0x140013cc4
                v83 = v82;
                v90 = __asm_subss(v206, v83);
                v91 = __asm_movss_4(v90);
                *(int32_t *)(4 * (*v7 * v57 + v178) + v58) = (int32_t)v91;
                if (v74 > v5) {
                    // 0x140013d1e
                    v92 = g72;
                    v93 = v92;
                    v94 = v92 * v92;
                    v95 = v93 >> 32;
                    v96 = v95 * v95;
                    v97 = v94 + v96;
                    v98 = __asm_cvtdq2ps(__asm_movd(v97));
                    v99 = __asm_xorps(v83, v83);
                    __asm_ucomiss(v99, v98);
                    if (v97 < v94 || v97 == 0) {
                        // 0x140013d45
                        __asm_xorps(v90, v90);
                        v67 = v96;
                        v201 = v99;
                        v208 = __asm_sqrtss(v98);
                        v71 = v93;
                    } else {
                        // 0x140013d4e
                        v108 = __asm_movaps_2(v98);
                        v109 = sqrtf((float32_t)(int32_t)v108);
                        v110 = __asm_movaps_2(v109);
                        v67 = v96;
                        v201 = v109;
                        v208 = v110;
                        v71 = v93;
                    }
                } else {
                    // 0x140013cdd
                    v100 = v70 | 24;
                    v101 = *(int64_t *)(*(int64_t *)(v100 + (int64_t)v12) + v179);
                    v102 = v101 >> 32;
                    v103 = (int32_t)(v102 * v102);
                    v104 = 0x100000000 * v101 >> 32;
                    v105 = (int32_t)(v104 * v104) + v103;
                    v106 = __asm_cvtdq2ps(__asm_movd(v105));
                    v107 = __asm_xorps(v83, v83);
                    __asm_ucomiss(v107, v106);
                    if (v105 < v103 || v105 == 0) {
                        // 0x140013d08
                        __asm_xorps(v90, v90);
                        v200 = v107;
                        v207 = __asm_sqrtss(v106);
                    } else {
                        // 0x140013d11
                        v111 = __asm_movaps_2(v106);
                        v112 = sqrtf((float32_t)(int32_t)v111);
                        v113 = __asm_movaps_2(v112);
                        v200 = v112;
                        v207 = v113;
                    }
                    // 0x140013d63
                    v119 = *(int64_t *)(v100 + (int64_t)v29);
                    v120 = *(int64_t *)(v119 + v179);
                    v65 = v120 >> 32;
                    v67 = v65 * v65;
                    v201 = v200;
                    v208 = v207;
                    v71 = v120;
                }
                // 0x140013d70
                v202 = v201;
                v114 = *v7;
                v115 = 0x100000000 * v71 >> 32;
                v116 = v67 + (int32_t)(v115 * v115);
                v117 = __asm_cvtdq2ps(__asm_movd(v116));
                v118 = __asm_xorps(v202, v202);
                __asm_ucomiss(v118, v117);
                if (v116 < v67 || v116 == 0) {
                    // 0x140013da0
                    __asm_xorps(v118, v118);
                    v80 = __asm_sqrtss(v117);
                } else {
                    // 0x140013da9
                    v121 = __asm_movaps_2(v117);
                    v80 = sqrtf((float32_t)(int32_t)v121);
                }
                // 0x140013db1
                v81 = v80;
                v122 = __asm_subss(v208, v81);
                v123 = __asm_movss_4(v122);
                *(int32_t *)(v58 + 4 + 4 * (v114 * v57 + v178)) = (int32_t)v123;
                if (v74 < v5) {
                    // 0x140013dca
                    v124 = v70 + 48;
                    v125 = *(int64_t *)(*(int64_t *)(v124 + (int64_t)v12) + v179);
                    v126 = 0x100000000 * v125 >> 32;
                    v127 = (int32_t)(v126 * v126);
                    v128 = v125 >> 32;
                    v129 = v127 + (int32_t)(v128 * v128);
                    v130 = __asm_cvtdq2ps(__asm_movd(v129));
                    v131 = __asm_xorps(v81, v81);
                    __asm_ucomiss(v131, v130);
                    if (v129 < v127 || v129 == 0) {
                        // 0x140013df5
                        __asm_xorps(v122, v122);
                        v203 = v131;
                        v209 = __asm_sqrtss(v130);
                    } else {
                        // 0x140013dfe
                        v140 = __asm_movaps_2(v130);
                        v141 = sqrtf((float32_t)(int32_t)v140);
                        v142 = __asm_movaps_2(v141);
                        v203 = v141;
                        v209 = v142;
                    }
                    // 0x140013e50
                    v146 = *(int64_t *)(v124 + (int64_t)v29);
                    v147 = *(int64_t *)(v146 + v179);
                    v66 = v147 >> 32;
                    v68 = v66 * v66;
                    v193 = v203;
                    v210 = v209;
                    v72 = v147;
                } else {
                    // 0x140013e0b
                    v132 = g72;
                    v133 = v132;
                    v134 = v132 * v132;
                    v135 = v133 >> 32;
                    v136 = v135 * v135;
                    v137 = v134 + v136;
                    v138 = __asm_cvtdq2ps(__asm_movd(v137));
                    v139 = __asm_xorps(v81, v81);
                    __asm_ucomiss(v139, v138);
                    if (v137 < v134 || v137 == 0) {
                        // 0x140013e32
                        __asm_xorps(v122, v122);
                        v68 = v136;
                        v193 = v139;
                        v210 = __asm_sqrtss(v138);
                        v72 = v133;
                    } else {
                        // 0x140013e3b
                        v143 = __asm_movaps_2(v138);
                        v144 = sqrtf((float32_t)(int32_t)v143);
                        v145 = __asm_movaps_2(v144);
                        v68 = v136;
                        v193 = v144;
                        v210 = v145;
                        v72 = v133;
                    }
                }
                // 0x140013e5d
                v194 = v193;
                v148 = *v7;
                v149 = 0x100000000 * v72 >> 32;
                v150 = v68 + (int32_t)(v149 * v149);
                v151 = __asm_cvtdq2ps(__asm_movd(v150));
                v152 = __asm_xorps(v194, v194);
                __asm_ucomiss(v152, v151);
                if (v150 < v68 || v150 == 0) {
                    // 0x140013e86
                    __asm_xorps(v152, v152);
                    v78 = __asm_sqrtss(v151);
                } else {
                    // 0x140013e8f
                    v153 = __asm_movaps_2(v151);
                    v78 = sqrtf((float32_t)(int32_t)v153);
                }
                // 0x140013ed5
                v79 = v78;
                v154 = __asm_subss(v210, v79);
                v155 = __asm_movss_4(v154);
                *(int32_t *)(v58 + 8 + 4 * (v148 * v57 + v178)) = (int32_t)v155;
                v156 = v70 + 72;
                v157 = *(int64_t *)(*(int64_t *)(v156 + (int64_t)v12) + v179);
                v158 = 0x100000000 * v157 >> 32;
                v159 = (int32_t)(v158 * v158);
                v160 = v157 >> 32;
                v161 = v159 + (int32_t)(v160 * v160);
                v162 = __asm_cvtdq2ps(__asm_movd(v161));
                v163 = __asm_xorps(v79, v79);
                __asm_ucomiss(v163, v162);
                if (v161 < v159 || v161 == 0) {
                    // 0x140013ef3
                    __asm_xorps(v154, v154);
                    v195 = v163;
                    v77 = __asm_sqrtss(v162);
                } else {
                    // 0x140013efc
                    v164 = __asm_movaps_2(v162);
                    v165 = sqrtf((float32_t)(int32_t)v164);
                    v166 = __asm_movaps_2(v165);
                    v195 = v165;
                    v77 = v166;
                }
                // 0x140013f1e
                v196 = v195;
                v167 = *(int64_t *)(v156 + (int64_t)v29);
                v168 = *(int64_t *)(v167 + v179);
                v169 = 0x100000000 * v168 >> 32;
                v170 = (int32_t)(v169 * v169);
                v171 = v168 >> 32;
                v172 = v170 + (int32_t)(v171 * v171);
                v173 = __asm_cvtdq2ps(__asm_movd(v172));
                v174 = __asm_xorps(v196, v196);
                __asm_ucomiss(v174, v173);
                if (v172 < v170 || v172 == 0) {
                    // 0x140013f3c
                    __asm_xorps(v174, v174);
                    v75 = __asm_sqrtss(v173);
                } else {
                    // 0x140013f45
                    v175 = __asm_movaps_2(v173);
                    v75 = sqrtf((float32_t)(int32_t)v175);
                }
                // 0x140013f4d
                v76 = v75;
                v176 = __asm_subss(v77, v76);
                v177 = __asm_movss_4(v176);
                *(int32_t *)(a2 + 12 + 4 * (*v7 * v57 + v178)) = (int32_t)v177;
                v178 += 4;
                v74 += 4;
                v204 = v176;
                v73 = a2;
                v69 = v70 + 96;
                v60 = v76;
                v62 = v176;
                v63 = a2;
                v64 = v178;
                while (v178 < v6 - 3) {
                    // 0x140013bf2
                    v70 = v69;
                    v197 = v76;
                    v180 = *(int64_t *)(v70 + (int64_t)v12);
                    v181 = *(int64_t *)(v180 + v179);
                    v182 = 0x100000000 * v181 >> 32;
                    v183 = (int32_t)(v182 * v182);
                    v184 = v181 >> 32;
                    v185 = v183 + (int32_t)(v184 * v184);
                    v186 = __asm_cvtdq2ps(__asm_movd(v185));
                    v187 = __asm_xorps(v197, v197);
                    __asm_ucomiss(v187, v186);
                    if (v185 < v183 || v185 == 0) {
                        // 0x140013c1c
                        v205 = v204;
                        __asm_xorps(v205, v205);
                        v198 = v187;
                        v206 = __asm_sqrtss(v186);
                    } else {
                        // 0x140013c25
                        v188 = sqrtf((float32_t)(int32_t)__asm_movaps_2(v186));
                        v189 = __asm_movaps_2(v188);
                        v198 = v188;
                        v206 = v189;
                    }
                    // 0x140013c83
                    v199 = v198;
                    v190 = *(int64_t *)(v70 + (int64_t)v29);
                    v191 = *(int64_t *)(v190 + v179);
                    v192 = v191 >> 32;
                    v84 = (int32_t)(v192 * v192);
                    v85 = 0x100000000 * v191 >> 32;
                    v86 = (int32_t)(v85 * v85) + v84;
                    v87 = __asm_cvtdq2ps(__asm_movd(v86));
                    v88 = __asm_xorps(v199, v199);
                    __asm_ucomiss(v88, v87);
                    if (v86 < v84 || v86 == 0) {
                        // 0x140013cb3
                        __asm_xorps(v88, v88);
                        v82 = __asm_sqrtss(v87);
                    } else {
                        // 0x140013cbc
                        v89 = __asm_movaps_2(v87);
                        v82 = sqrtf((float32_t)(int32_t)v89);
                    }
                    // 0x140013cc4
                    v83 = v82;
                    v90 = __asm_subss(v206, v83);
                    v91 = __asm_movss_4(v90);
                    *(int32_t *)(4 * (*v7 * v57 + v178) + v73) = (int32_t)v91;
                    if (v74 > v5) {
                        // 0x140013d1e
                        v92 = g72;
                        v93 = v92;
                        v94 = v92 * v92;
                        v95 = v93 >> 32;
                        v96 = v95 * v95;
                        v97 = v94 + v96;
                        v98 = __asm_cvtdq2ps(__asm_movd(v97));
                        v99 = __asm_xorps(v83, v83);
                        __asm_ucomiss(v99, v98);
                        if (v97 < v94 || v97 == 0) {
                            // 0x140013d45
                            __asm_xorps(v90, v90);
                            v67 = v96;
                            v201 = v99;
                            v208 = __asm_sqrtss(v98);
                            v71 = v93;
                        } else {
                            // 0x140013d4e
                            v108 = __asm_movaps_2(v98);
                            v109 = sqrtf((float32_t)(int32_t)v108);
                            v110 = __asm_movaps_2(v109);
                            v67 = v96;
                            v201 = v109;
                            v208 = v110;
                            v71 = v93;
                        }
                    } else {
                        // 0x140013cdd
                        v100 = v70 | 24;
                        v101 = *(int64_t *)(*(int64_t *)(v100 + (int64_t)v12) + v179);
                        v102 = v101 >> 32;
                        v103 = (int32_t)(v102 * v102);
                        v104 = 0x100000000 * v101 >> 32;
                        v105 = (int32_t)(v104 * v104) + v103;
                        v106 = __asm_cvtdq2ps(__asm_movd(v105));
                        v107 = __asm_xorps(v83, v83);
                        __asm_ucomiss(v107, v106);
                        if (v105 < v103 || v105 == 0) {
                            // 0x140013d08
                            __asm_xorps(v90, v90);
                            v200 = v107;
                            v207 = __asm_sqrtss(v106);
                        } else {
                            // 0x140013d11
                            v111 = __asm_movaps_2(v106);
                            v112 = sqrtf((float32_t)(int32_t)v111);
                            v113 = __asm_movaps_2(v112);
                            v200 = v112;
                            v207 = v113;
                        }
                        // 0x140013d63
                        v119 = *(int64_t *)(v100 + (int64_t)v29);
                        v120 = *(int64_t *)(v119 + v179);
                        v65 = v120 >> 32;
                        v67 = v65 * v65;
                        v201 = v200;
                        v208 = v207;
                        v71 = v120;
                    }
                    // 0x140013d70
                    v202 = v201;
                    v114 = *v7;
                    v115 = 0x100000000 * v71 >> 32;
                    v116 = v67 + (int32_t)(v115 * v115);
                    v117 = __asm_cvtdq2ps(__asm_movd(v116));
                    v118 = __asm_xorps(v202, v202);
                    __asm_ucomiss(v118, v117);
                    if (v116 < v67 || v116 == 0) {
                        // 0x140013da0
                        __asm_xorps(v118, v118);
                        v80 = __asm_sqrtss(v117);
                    } else {
                        // 0x140013da9
                        v121 = __asm_movaps_2(v117);
                        v80 = sqrtf((float32_t)(int32_t)v121);
                    }
                    // 0x140013db1
                    v81 = v80;
                    v122 = __asm_subss(v208, v81);
                    v123 = __asm_movss_4(v122);
                    *(int32_t *)(v73 + 4 + 4 * (v114 * v57 + v178)) = (int32_t)v123;
                    if (v74 < v5) {
                        // 0x140013dca
                        v124 = v70 + 48;
                        v125 = *(int64_t *)(*(int64_t *)(v124 + (int64_t)v12) + v179);
                        v126 = 0x100000000 * v125 >> 32;
                        v127 = (int32_t)(v126 * v126);
                        v128 = v125 >> 32;
                        v129 = v127 + (int32_t)(v128 * v128);
                        v130 = __asm_cvtdq2ps(__asm_movd(v129));
                        v131 = __asm_xorps(v81, v81);
                        __asm_ucomiss(v131, v130);
                        if (v129 < v127 || v129 == 0) {
                            // 0x140013df5
                            __asm_xorps(v122, v122);
                            v203 = v131;
                            v209 = __asm_sqrtss(v130);
                        } else {
                            // 0x140013dfe
                            v140 = __asm_movaps_2(v130);
                            v141 = sqrtf((float32_t)(int32_t)v140);
                            v142 = __asm_movaps_2(v141);
                            v203 = v141;
                            v209 = v142;
                        }
                        // 0x140013e50
                        v146 = *(int64_t *)(v124 + (int64_t)v29);
                        v147 = *(int64_t *)(v146 + v179);
                        v66 = v147 >> 32;
                        v68 = v66 * v66;
                        v193 = v203;
                        v210 = v209;
                        v72 = v147;
                    } else {
                        // 0x140013e0b
                        v132 = g72;
                        v133 = v132;
                        v134 = v132 * v132;
                        v135 = v133 >> 32;
                        v136 = v135 * v135;
                        v137 = v134 + v136;
                        v138 = __asm_cvtdq2ps(__asm_movd(v137));
                        v139 = __asm_xorps(v81, v81);
                        __asm_ucomiss(v139, v138);
                        if (v137 < v134 || v137 == 0) {
                            // 0x140013e32
                            __asm_xorps(v122, v122);
                            v68 = v136;
                            v193 = v139;
                            v210 = __asm_sqrtss(v138);
                            v72 = v133;
                        } else {
                            // 0x140013e3b
                            v143 = __asm_movaps_2(v138);
                            v144 = sqrtf((float32_t)(int32_t)v143);
                            v145 = __asm_movaps_2(v144);
                            v68 = v136;
                            v193 = v144;
                            v210 = v145;
                            v72 = v133;
                        }
                    }
                    // 0x140013e5d
                    v194 = v193;
                    v148 = *v7;
                    v149 = 0x100000000 * v72 >> 32;
                    v150 = v68 + (int32_t)(v149 * v149);
                    v151 = __asm_cvtdq2ps(__asm_movd(v150));
                    v152 = __asm_xorps(v194, v194);
                    __asm_ucomiss(v152, v151);
                    if (v150 < v68 || v150 == 0) {
                        // 0x140013e86
                        __asm_xorps(v152, v152);
                        v78 = __asm_sqrtss(v151);
                    } else {
                        // 0x140013e8f
                        v153 = __asm_movaps_2(v151);
                        v78 = sqrtf((float32_t)(int32_t)v153);
                    }
                    // 0x140013ed5
                    v79 = v78;
                    v154 = __asm_subss(v210, v79);
                    v155 = __asm_movss_4(v154);
                    *(int32_t *)(v73 + 8 + 4 * (v148 * v57 + v178)) = (int32_t)v155;
                    v156 = v70 + 72;
                    v157 = *(int64_t *)(*(int64_t *)(v156 + (int64_t)v12) + v179);
                    v158 = 0x100000000 * v157 >> 32;
                    v159 = (int32_t)(v158 * v158);
                    v160 = v157 >> 32;
                    v161 = v159 + (int32_t)(v160 * v160);
                    v162 = __asm_cvtdq2ps(__asm_movd(v161));
                    v163 = __asm_xorps(v79, v79);
                    __asm_ucomiss(v163, v162);
                    if (v161 < v159 || v161 == 0) {
                        // 0x140013ef3
                        __asm_xorps(v154, v154);
                        v195 = v163;
                        v77 = __asm_sqrtss(v162);
                    } else {
                        // 0x140013efc
                        v164 = __asm_movaps_2(v162);
                        v165 = sqrtf((float32_t)(int32_t)v164);
                        v166 = __asm_movaps_2(v165);
                        v195 = v165;
                        v77 = v166;
                    }
                    // 0x140013f1e
                    v196 = v195;
                    v167 = *(int64_t *)(v156 + (int64_t)v29);
                    v168 = *(int64_t *)(v167 + v179);
                    v169 = 0x100000000 * v168 >> 32;
                    v170 = (int32_t)(v169 * v169);
                    v171 = v168 >> 32;
                    v172 = v170 + (int32_t)(v171 * v171);
                    v173 = __asm_cvtdq2ps(__asm_movd(v172));
                    v174 = __asm_xorps(v196, v196);
                    __asm_ucomiss(v174, v173);
                    if (v172 < v170 || v172 == 0) {
                        // 0x140013f3c
                        __asm_xorps(v174, v174);
                        v75 = __asm_sqrtss(v173);
                    } else {
                        // 0x140013f45
                        v175 = __asm_movaps_2(v173);
                        v75 = sqrtf((float32_t)(int32_t)v175);
                    }
                    // 0x140013f4d
                    v76 = v75;
                    v176 = __asm_subss(v77, v76);
                    v177 = __asm_movss_4(v176);
                    *(int32_t *)(a2 + 12 + 4 * (*v7 * v57 + v178)) = (int32_t)v177;
                    v178 += 4;
                    v74 += 4;
                    v204 = v176;
                    v73 = a2;
                    v69 = v70 + 96;
                    v60 = v76;
                    v62 = v176;
                    v63 = a2;
                    v64 = v178;
                }
            }
            // 0x140013f8a
            v211 = v64;
            v212 = v63;
            v213 = v62;
            v214 = v60;
            v215 = v214;
            v216 = v213;
            if (v211 < v6) {
                // 0x140013f93
                v233 = 8 * v57;
                v247 = v213;
                v217 = 24 * v211;
                v232 = v211;
                v244 = v214;
                v234 = *(int64_t *)(v217 + (int64_t)v12);
                v235 = *(int64_t *)(v234 + v233);
                v236 = 0x100000000 * v235 >> 32;
                v237 = (int32_t)(v236 * v236);
                v238 = v235 >> 32;
                v239 = v237 + (int32_t)(v238 * v238);
                v240 = __asm_cvtdq2ps(__asm_movd(v239));
                v241 = __asm_xorps(v244, v244);
                __asm_ucomiss(v241, v240);
                if (v239 < v237 || v239 == 0) {
                    // 0x140013fd6
                    v248 = v247;
                    __asm_xorps(v248, v248);
                    v245 = v241;
                    v218 = __asm_sqrtss(v240);
                } else {
                    // 0x140013fdf
                    v242 = sqrtf((float32_t)(int32_t)__asm_movaps_2(v240));
                    v243 = __asm_movaps_2(v242);
                    v245 = v242;
                    v218 = v243;
                }
                // 0x140013ffb
                v246 = v245;
                v221 = *(int64_t *)(v217 + (int64_t)v29);
                v222 = *(int64_t *)(v221 + v233);
                v223 = 0x100000000 * v222 >> 32;
                v224 = (int32_t)(v223 * v223);
                v225 = v222 >> 32;
                v226 = v224 + (int32_t)(v225 * v225);
                v227 = __asm_cvtdq2ps(__asm_movd(v226));
                v228 = __asm_xorps(v246, v246);
                __asm_ucomiss(v228, v227);
                if (v226 < v224 || v226 == 0) {
                    // 0x140014019
                    __asm_xorps(v228, v228);
                    v219 = __asm_sqrtss(v227);
                } else {
                    // 0x140014022
                    v229 = __asm_movaps_2(v227);
                    v219 = sqrtf((float32_t)(int32_t)v229);
                }
                // 0x14001402a
                v220 = v219;
                v230 = __asm_subss(v218, v220);
                v231 = __asm_movss_4(v230);
                *(int32_t *)(4 * (*v7 * v57 + v232) + v212) = (int32_t)v231;
                v232++;
                v247 = v230;
                v217 += 24;
                v215 = v220;
                v216 = v230;
                while (v232 != v6) {
                    // 0x140013fb8
                    v244 = v220;
                    v234 = *(int64_t *)(v217 + (int64_t)v12);
                    v235 = *(int64_t *)(v234 + v233);
                    v236 = 0x100000000 * v235 >> 32;
                    v237 = (int32_t)(v236 * v236);
                    v238 = v235 >> 32;
                    v239 = v237 + (int32_t)(v238 * v238);
                    v240 = __asm_cvtdq2ps(__asm_movd(v239));
                    v241 = __asm_xorps(v244, v244);
                    __asm_ucomiss(v241, v240);
                    if (v239 < v237 || v239 == 0) {
                        // 0x140013fd6
                        v248 = v247;
                        __asm_xorps(v248, v248);
                        v245 = v241;
                        v218 = __asm_sqrtss(v240);
                    } else {
                        // 0x140013fdf
                        v242 = sqrtf((float32_t)(int32_t)__asm_movaps_2(v240));
                        v243 = __asm_movaps_2(v242);
                        v245 = v242;
                        v218 = v243;
                    }
                    // 0x140013ffb
                    v246 = v245;
                    v221 = *(int64_t *)(v217 + (int64_t)v29);
                    v222 = *(int64_t *)(v221 + v233);
                    v223 = 0x100000000 * v222 >> 32;
                    v224 = (int32_t)(v223 * v223);
                    v225 = v222 >> 32;
                    v226 = v224 + (int32_t)(v225 * v225);
                    v227 = __asm_cvtdq2ps(__asm_movd(v226));
                    v228 = __asm_xorps(v246, v246);
                    __asm_ucomiss(v228, v227);
                    if (v226 < v224 || v226 == 0) {
                        // 0x140014019
                        __asm_xorps(v228, v228);
                        v219 = __asm_sqrtss(v227);
                    } else {
                        // 0x140014022
                        v229 = __asm_movaps_2(v227);
                        v219 = sqrtf((float32_t)(int32_t)v229);
                    }
                    // 0x14001402a
                    v220 = v219;
                    v230 = __asm_subss(v218, v220);
                    v231 = __asm_movss_4(v230);
                    *(int32_t *)(4 * (*v7 * v57 + v232) + v212) = (int32_t)v231;
                    v232++;
                    v247 = v230;
                    v217 += 24;
                    v215 = v220;
                    v216 = v230;
                }
            }
            // 0x140014055
            v249 = v57 + 1;
            v44 = v215;
        }
    }
    int64_t v252 = v29; // 0x140014090
    if (v252 != 0) {
        int128_t v253 = v44;
        function_14001b340((int128_t)v252, v16);
        int64_t v254 = 0; // 0x1400140d3
        int64_t v255 = v29; // 0x1400140a6
        function_14001ea5c(v255, v254, v255);
        v29 = __asm_movdqu(__asm_xorps(v253, v253));
    }
    int64_t v256 = v12; // 0x140014109
    if (v256 == 0) {
        // 0x140014178
        __security_check_cookie(g66);
        __asm_movaps_2((int128_t)v3);
        return &g103;
    }
    // 0x140014112
    function_14001b340((int128_t)v256, v16);
    int64_t v257 = 0; // 0x14001414c
    int64_t v258 = v12; // 0x14001411f
    function_14001ea5c(v258, v257, v258);
    // 0x140014178
    __security_check_cookie(g66);
    __asm_movaps_2((int128_t)v3);
    return &g103;
}

// Address range: 0x1400141b0 - 0x140014240
int64_t function_1400141b0(int64_t a1) {
    // 0x1400141b0
    if (a1 == 0) {
        // 0x14001422a
        int64_t result; // 0x1400141b0
        return result;
    }
    int64_t * v1 = (int64_t *)(a1 + 8); // 0x1400141c1
    function_14001b340((int128_t)a1, *v1);
    int64_t v2 = 0; // 0x1400141fe
    // 0x140014218
    int64_t v3; // 0x1400141b0
    function_14001ea5c(a1, v2, v3);
    *(int64_t *)a1 = 0;
    *v1 = 0;
    *(int64_t *)(a1 + 16) = 0;
    // 0x14001422a
    return 0;
}

// Address range: 0x140014240 - 0x140014260
int64_t function_140014240(void) {
    // 0x140014240
    _3f__Xlength_error_40_std_40__40_YAXPEBD_40_Z((char *)&g103);
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    return __asm_int3();
}

// Address range: 0x140014260 - 0x140014291
int64_t function_140014260(int64_t * a1) {
    // 0x140014260
    int128_t v1; // 0x140014260
    int128_t v2 = v1;
    int64_t result = (int64_t)a1;
    __asm_movups(*(int128_t *)(result + 8), __asm_xorps(v2, v2));
    *a1 = (int64_t)&g15;
    int64_t v3; // 0x140014260
    function_140019960(result + 24, v3);
    return result;
}

// Address range: 0x1400142a0 - 0x14001432f
int64_t function_1400142a0(int64_t a1) {
    int64_t * v1 = (int64_t *)a1; // 0x1400142b0
    *v1 = (int64_t)&g15;
    int64_t * v2 = (int64_t *)(a1 + 48); // 0x1400142b3
    uint64_t v3 = *v2; // 0x1400142b3
    int64_t v4 = a1 + 24;
    if (v3 >= 16) {
        int64_t v5 = *(int64_t *)v4; // 0x1400142bd
        int64_t v6 = v3 + 1; // 0x1400142c1
        int64_t v7 = v5; // 0x1400142cb
        int64_t v8 = v6; // 0x1400142cb
        int64_t v9; // 0x1400142a0
        if (v6 >= 0x1000) {
            // 0x1400142cd
            v7 = *(int64_t *)(v5 - 8);
            int64_t v10 = v5 - v7; // 0x1400142d5
            if (v10 >= 40) {
                // 0x140014318
                _invalid_parameter_noinfo_noreturn();
                __asm_int3();
                __asm_int3();
                int64_t v11 = v10 + 24; // 0x140014325
                int64_t result = v11; // 0x140014329
                if (*(int64_t *)(v10 + 48) >= 16) {
                    // 0x14001432b
                    result = *(int64_t *)v11;
                }
                // 0x14001432e
                return result;
            }
            // 0x1400142e2
            v8 = v3 + 40;
            v9 = v7;
        }
        // 0x1400142e5
        function_14001ea5c(v7, v8, v9);
    }
    // 0x1400142ea
    *(int64_t *)(a1 + 40) = 0;
    *v2 = 15;
    *(char *)v4 = 0;
    *v1 = (int64_t)&g6;
    return __std_exception_destroy(a1 + 8);
}

// Address range: 0x140014330 - 0x1400143d0
int64_t function_140014330(int64_t result, int64_t a2) {
    int64_t * v1 = (int64_t *)result; // 0x140014343
    *v1 = (int64_t)&g15;
    int64_t * v2 = (int64_t *)(result + 48); // 0x140014349
    uint64_t v3 = *v2; // 0x140014349
    int64_t v4 = result + 24;
    int64_t v5; // 0x140014330
    if (v3 >= 16) {
        int64_t v6 = *(int64_t *)v4; // 0x140014353
        int64_t v7 = v3 + 1; // 0x140014357
        int64_t v8 = v6; // 0x140014361
        int64_t v9 = v7; // 0x140014361
        int64_t v10; // 0x140014330
        if (v7 >= 0x1000) {
            int64_t v11 = v6 - 8;
            v8 = *(int64_t *)v11;
            if (v11 - v8 >= 32) {
                // 0x1400143c9
                _invalid_parameter_noinfo_noreturn();
                return __asm_int3();
            }
            // 0x140014378
            v9 = v3 + 40;
            v10 = v8;
        }
        // 0x14001437b
        function_14001ea5c(v8, v9, v10);
        v5 = v10;
    }
    // 0x140014380
    *(int64_t *)(result + 40) = 0;
    *v2 = 15;
    *(char *)v4 = 0;
    *v1 = (int64_t)&g6;
    __std_exception_destroy(result + 8);
    if ((a2 & 1) != 0) {
        // 0x1400143ae
        function_14001ea5c(result, 56, v5);
    }
    // 0x1400143bb
    return result;
}

// Address range: 0x1400143d0 - 0x140015720
int64_t function_1400143d0(int128_t * a1) {
    // 0x1400143d0
    int128_t v1; // 0x1400143d0
    int128_t v2 = v1;
    int64_t v3 = (int64_t)a1;
    int64_t * v4 = (int64_t *)(v3 + 128); // 0x140014454
    int64_t v5 = *v4; // 0x140014454
    int64_t v6; // 0x1400143d0
    int64_t v7; // 0x1400143d0
    int64_t v8; // 0x1400143d0
    int64_t v9; // 0x1400143d0
    int64_t * v10; // 0x140014462
    int64_t * v11; // 0x140014475
    int64_t v12; // 0x14001448c
    int64_t v13; // 0x140014490
    if (v5 == 0) {
        goto lab_0x1400144c2;
    } else {
        // 0x140014462
        v10 = (int64_t *)(v3 + 136);
        function_14001afc0(v5, *v10);
        int64_t v14 = *v4; // 0x14001446e
        v11 = (int64_t *)(v3 + 144);
        int64_t v15 = *v11 - v14 & -32; // 0x14001447f
        v12 = v14;
        v13 = v15;
        if (v15 < 0x1000) {
            goto lab_0x1400144a8;
        } else {
            // 0x14001448c
            v12 = *(int64_t *)(v14 - 8);
            v13 = v15 + 39;
            int64_t v16 = v14 - v12; // 0x140014494
            v6 = v12;
            v8 = v16;
            v9 = v13;
            v7 = v12;
            if (v16 < 40) {
                goto lab_0x1400144a8;
            } else {
                goto lab_0x14001461c;
            }
        }
    }
  lab_0x1400156fd:
    // 0x1400156fd
    _invalid_parameter_noinfo_noreturn();
    function_1400011e0();
    function_140014240();
    __asm_int3();
    function_140014240();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    return __asm_int3();
  lab_0x140015095:;
    int128_t v17 = 0; // bp-192, 0x1400150a1
    function_140019e40((char *)&v17, "undefined short option: -", 25);
    int64_t v18; // 0x1400143d0
    int64_t v19; // 0x140014992
    int64_t * v20 = (int64_t *)(v18 + v19);
    int64_t v21 = *v20; // 0x1400150bb
    int64_t v22; // 0x1400143d0
    char v23 = *(char *)(v22 - 1 + v21); // 0x1400150bf
    *(char *)&v17 = v23;
    char * v24; // 0x1400143d0
    *v24 = 0;
    int128_t v25 = v17; // 0x1400150fb
    int128_t v26 = __asm_movups_1(v25); // 0x1400150fb
    int128_t v27; // bp-240, 0x1400143d0
    int128_t v28 = v27; // 0x1400150ff
    __asm_movups(v28, v26);
    int128_t v29 = __asm_movups_1(1); // 0x140015103
    int128_t v30; // 0x1400143d0
    __asm_movups(v30, v29);
    v17 = 0;
    int64_t * v31; // 0x140014682
    int64_t v32 = *v31; // 0x140015120
    int64_t * v33; // 0x1400143d0
    int64_t v34 = *v33; // 0x140015124
    int64_t * v35; // 0x1400143d0
    int64_t v36; // 0x1400143d0
    int64_t v37; // 0x14001467b
    if (v32 == v34) {
        // 0x14001514f
        function_14001ab60(v37, v32, (char *)&v27);
        v35 = v20;
        v36 = v18;
        uint64_t v38; // 0x1400143d0
        if (v38 >= 16) {
            int128_t v39 = v27; // 0x140015158
            int64_t v40 = v39; // 0x140015158
            int64_t v41 = v40; // 0x140015166
            int64_t v42; // 0x1400143d0
            int64_t v43 = v42; // 0x140015166
            if (v42 >= 0x1000) {
                int64_t v44 = v40 - 8;
                int64_t v45 = *(int64_t *)v44; // 0x14001516c
                v41 = v45;
                int64_t v46; // 0x1400143d0
                v43 = v46;
                if (v44 - v45 >= 32) {
                    // 0x1400156ef
                    _invalid_parameter_noinfo_noreturn();
                    // 0x1400156f6
                    _invalid_parameter_noinfo_noreturn();
                    goto lab_0x1400156fd;
                }
            }
            int64_t v47 = v43;
            int64_t v48 = v41;
            int64_t v49; // 0x1400143d0
            function_14001ea5c(v48, v47, v49);
            v35 = v20;
            v36 = v18;
        }
    } else {
        int128_t v50 = *(int128_t *)v32; // 0x14001512a
        __asm_movups(v50, v26);
        int128_t v51 = *(int128_t *)(v32 + 16); // 0x14001512d
        __asm_movups(v51, v29);
        v27 = 0;
        int64_t v52 = *v31; // 0x140015138
        *v31 = v52 + 32;
        v35 = v20;
        v36 = v18;
    }
    goto lab_0x1400152d6;
  lab_0x1400152d6:;
    int64_t v53 = v36;
    int64_t * v54 = v35;
    int64_t v55 = v22 + 1; // 0x1400152d8
    int64_t v56 = *v54; // 0x1400152db
    char v57 = *(char *)(v56 + v55); // 0x1400152e2
    int64_t v58 = v56; // 0x1400152e7
    int64_t v59 = v53; // 0x1400152e7
    int64_t v60; // 0x1400143d0
    int64_t v61 = v60 + 1 & 0xffffffff; // 0x1400152e7
    int64_t v62 = v55; // 0x1400152e7
    if (v57 == 0) {
        // break -> 0x1400152ed
        goto lab_0x1400152ed;
    }
    goto lab_0x140015040;
  lab_0x140015606:;
    // 0x140015606
    int64_t v127; // 0x1400143d0
    int64_t v128 = v127;
    int64_t v129; // 0x1400143d0
    int64_t v130 = v129 + 1; // 0x140015606
    int64_t v131; // 0x1400143d0
    int64_t v132 = v131; // 0x140015611
    int64_t v133 = v128; // 0x140015611
    int64_t v134; // 0x1400143d0
    int64_t v135 = v134 + 1; // 0x140015611
    int64_t v136 = v130 & 0xffffffff; // 0x140015611
    int32_t v137; // 0x140014664
    if (v137 <= (int32_t)v130) {
        // break -> 0x140015617
        goto lab_0x140015617;
    }
    goto lab_0x140014981;
  lab_0x140015344:
    // 0x140015344
    v17 = 0;
    function_140019e40((char *)&v17, "undefined short option: -", 25);
    int32_t v66; // bp-208, 0x1400143d0
    *(char *)&v17 = (char)v66;
    *v24 = 0;
    int128_t v189 = __asm_movups_1(v17); // 0x14001539d
    int128_t v190; // bp-272, 0x1400143d0
    __asm_movups(v190, v189);
    int128_t v191 = __asm_movups_1(1); // 0x1400153a5
    __asm_movups(v1, v191);
    v17 = 0;
    int64_t v192 = *v31; // 0x1400153c4
    int64_t v193; // 0x1400143d0
    int64_t v194; // 0x1400143d0
    int64_t v195; // 0x1400143d0
    if (v192 == *v33) {
        // 0x1400153f3
        function_14001ab60(v37, v192, (char *)&v190);
        if (v195 >= 16) {
            int64_t v196 = v190; // 0x1400153fc
            int64_t v197 = v196; // 0x14001540a
            int64_t v198 = v194; // 0x14001540a
            if (v194 >= 0x1000) {
                int64_t v199 = v196 - 8;
                v197 = *(int64_t *)v199;
                v198 = v195 + 40;
                if (v199 - v197 >= 32) {
                    goto lab_0x1400156fd;
                }
            }
            // 0x140015425
            function_14001ea5c(v197, v198, v193);
        }
    } else {
        // 0x1400153f3
        __asm_movups(*(int128_t *)v192, v189);
        __asm_movups(*(int128_t *)(v192 + 16), v191);
        v190 = 0;
        *v31 = *v31 + 32;
    }
    // 0x14001542b
    int64_t v141; // 0x1400143d0
    v131 = v141;
    int64_t v96; // bp-392, 0x1400143d0
    v127 = v96;
    int64_t v139; // 0x1400143d0
    v134 = v139;
    int64_t v138; // 0x1400143d0
    v129 = v138;
    goto lab_0x140015606;
  lab_0x140014e16:
    // 0x140014e16
    v131 = v141;
    int64_t v140; // 0x1400143d0
    v127 = v140;
    v134 = v139;
    v129 = v138;
    int64_t v144; // 0x1400143d0
    int128_t v143; // bp-136, 0x1400143d0
    if (v141 >= 16) {
        int64_t v200 = v141 + 1; // 0x140014e1c
        int64_t v201 = 0x100000000000000 * (int64_t)v143 >> 56; // 0x140014e1f
        int64_t v202 = v201; // 0x140014e2d
        int64_t v203 = v200; // 0x140014e2d
        if (v200 >= 0x1000) {
            int64_t v204 = v201 - 8;
            v202 = *(int64_t *)v204;
            v203 = v141 + 40;
            if (v204 - v202 >= 32) {
                // 0x1400156e1
                _invalid_parameter_noinfo_noreturn();
                _invalid_parameter_noinfo_noreturn();
                // 0x1400156ef
                _invalid_parameter_noinfo_noreturn();
                // 0x1400156f6
                _invalid_parameter_noinfo_noreturn();
                goto lab_0x1400156fd;
            }
        }
        // 0x140014e48
        function_14001ea5c(v202, v203, v144);
        v131 = v141;
        v127 = v140;
        v134 = v139;
        v129 = v138;
    }
    goto lab_0x140015606;
  lab_0x140015486:;
    // 0x140015486
    int128_t v205; // 0x1400143d0
    int128_t v206 = v205; // bp-336, 0x14001548a
    int64_t v207 = function_14001e5fc(72); // 0x140015497
    *(char *)(v207 + 32) = (char)v66;
    *(int64_t *)(v207 + 56) = 0;
    *(int64_t *)(v207 + 64) = 15;
    *(char *)(v207 + 40) = 0;
    int64_t v147; // 0x1400152f1
    *(int64_t *)v207 = v147;
    *(int64_t *)(v207 + 8) = v147;
    *(int64_t *)(v207 + 16) = v147;
    *(int16_t *)(v207 + 24) = 0;
    function_14001bec0((int64_t *)&v206);
    v17 = __asm_movaps(__asm_movups_1(v17));
    int128_t v68; // bp-152, 0x1400143d0
    int64_t v169 = function_14001bb20(&v68, &v17, v207); // 0x1400154e7
    goto lab_0x1400154ea;
  lab_0x1400154ea:;
    // 0x1400154ea
    int64_t v208; // 0x1400143d0
    int32_t v92; // bp-160, 0x1400143d0
    int64_t v209; // 0x1400143d0
    if ((char)function_14001a5e0(v169 + 40) == 0) {
        int64_t v210 = v138 + 1; // 0x140015547
        if (v137 > (int32_t)v210) {
            int64_t v211 = function_140019460(&v68, v209); // 0x140015559
            int64_t v212 = v96; // 0x140015561
            int64_t v213 = *(int64_t *)function_1400196a0(v212, v211); // 0x14001556e
            v208 = v212;
            if ((char)*(int64_t *)v213 == 0) {
                goto lab_0x1400155c4;
            } else {
                int64_t v214 = v139 + 1; // 0x14001557b
                int64_t v215 = *(int64_t *)(8 * v214 + (int64_t)v92); // 0x140015582
                function_140019920(&v143, (char *)v215);
                int64_t v216 = function_140019460(&v68, v209); // 0x140015598
                function_1400162d0(v212, (char *)v216, &v143);
                function_1400198c0((char *)&v143);
                v131 = v141;
                v127 = v212;
                v134 = v214;
                v129 = v210 & 0xffffffff;
                goto lab_0x140015606;
            }
        } else {
            // 0x1400155bf
            v208 = v96;
            goto lab_0x1400155c4;
        }
    } else {
        int64_t v217 = function_140019920(&v17, "ambiguous short option: -"); // 0x140015502
        int64_t v218 = function_14001a5f0((char *)&v143, v217, (int64_t)(v66 & 255)); // 0x140015514
        function_1400195e0(v37, v218);
        function_1400198c0((char *)&v143);
        function_1400198c0((char *)&v17);
        v131 = v141;
        v127 = v96;
        v134 = v139;
        v129 = v138;
        goto lab_0x140015606;
    }
  lab_0x1400155c4:;
    int64_t v219 = function_140019460(&v68, v209); // 0x1400155cc
    function_1400160e0(v208, (int128_t *)v219);
    v131 = v141;
    v127 = v208;
    v134 = v139;
    v129 = v138;
    goto lab_0x140015606;
  lab_0x14001490f:;
    // 0x14001490f
    int64_t v220; // 0x1400143d0
    int64_t v221 = *(int64_t *)(v220 + 16); // 0x14001490f
    int64_t v222; // 0x1400143d0
    if (*(char *)(v221 + 25) == 0) {
        int64_t v223 = *(int64_t *)v221; // 0x14001493e
        int64_t v224 = v223; // 0x140014945
        v222 = v221;
        if (*(char *)(v223 + 25) == 0) {
            int64_t v225 = *(int64_t *)v224; // 0x140014953
            v222 = v224;
            while (*(char *)(v225 + 25) == 0) {
                int64_t v226 = v225;
                v225 = *(int64_t *)v226;
                v222 = v226;
            }
        }
    } else {
        int64_t v227 = *(int64_t *)(v220 + 8); // 0x140014919
        int64_t v228 = v227; // 0x140014921
        int64_t v229 = v220; // 0x140014921
        v222 = v227;
        if (*(char *)(v227 + 25) == 0) {
            int64_t v230 = v228;
            v222 = v230;
            while (v229 == *(int64_t *)(v230 + 16)) {
                int64_t v231 = *(int64_t *)(v230 + 8); // 0x14001492c
                v228 = v231;
                v229 = v230;
                v222 = v231;
                if (*(char *)(v231 + 25) != 0) {
                    // break -> 0x14001495f
                    break;
                }
                v230 = v228;
                v222 = v230;
            }
        }
    }
    // 0x14001495f
    int64_t v232; // 0x1400143d0
    int64_t v233 = *(int64_t *)v232; // 0x14001495f
    int64_t v234 = v222; // 0x140014965
    int64_t v235 = v232; // 0x140014965
    int64_t v236 = v233; // 0x140014965
    int64_t v237 = v232; // 0x140014965
    if (v222 == v233) {
        // break -> 0x14001496f
        goto lab_0x14001496f;
    }
    goto lab_0x1400147c1;
  lab_0x140014897:;
    // 0x140014897
    int128_t v268; // 0x1400143d0
    v206 = v268;
    int64_t v269 = function_14001e5fc(72); // 0x1400148a8
    char v240; // 0x1400143d0
    *(char *)(v269 + 32) = v240;
    *(int64_t *)(v269 + 56) = 0;
    *(int64_t *)(v269 + 64) = 15;
    *(char *)(v269 + 40) = 0;
    int64_t v242; // 0x1400143d0
    *(int64_t *)v269 = v242;
    *(int64_t *)(v269 + 8) = v242;
    *(int64_t *)(v269 + 16) = v242;
    *(int16_t *)(v269 + 24) = 0;
    v17 = __asm_movaps(__asm_movups_1(0));
    int64_t v267 = function_14001bb20(&v68, &v17, v269); // 0x1400148e6
    goto lab_0x1400148eb;
  lab_0x1400148eb:;
    int64_t v270 = v220 + 32; // 0x140014832
    int64_t v271 = v267 + 40; // 0x1400148eb
    int64_t * v238; // 0x1400147c1
    if (v271 != v270) {
        int64_t v272 = v270; // 0x1400148fc
        if (*(int64_t *)(v220 + 56) >= 16) {
            // 0x1400148fe
            v272 = *(int64_t *)v270;
        }
        // 0x140014901
        function_140019e40((char *)v271, (char *)v272, *v238);
    }
    // 0x14001490a
    v232 = v96;
    goto lab_0x14001490f;
  lab_0x1400144c2:;
    int64_t * v273 = (int64_t *)(v3 + 104); // 0x1400144c2
    int64_t v274 = *v273; // 0x1400144c2
    int64_t v275; // 0x1400143d0
    int64_t v276 = v275; // 0x1400144c9
    int64_t v277; // 0x1400143d0
    int64_t v278; // 0x1400143d0
    int64_t v279; // 0x1400143d0
    int64_t * v280; // 0x1400144cb
    int64_t * v281; // 0x1400144d8
    if (v274 == 0) {
        goto lab_0x140014519;
    } else {
        // 0x1400144cb
        v280 = (int64_t *)(v3 + 112);
        function_14001afc0(v274, *v280);
        int64_t v282 = *v273; // 0x1400144d4
        v281 = (int64_t *)(v3 + 120);
        int64_t v283 = *v281 - v282 & -32; // 0x1400144df
        v278 = v282;
        v279 = v283;
        v277 = v275;
        if (v283 < 0x1000) {
            goto lab_0x140014508;
        } else {
            int64_t v284 = *(int64_t *)(v282 - 8); // 0x1400144ec
            int64_t v285 = v283 + 39; // 0x1400144f0
            int64_t v286 = v282 - v284; // 0x1400144f4
            v278 = v284;
            v279 = v285;
            v277 = v284;
            v8 = v286;
            v9 = v285;
            v7 = v284;
            if (v286 < 40) {
                goto lab_0x140014508;
            } else {
                goto lab_0x14001461c;
            }
        }
    }
  lab_0x140014519:;
    int64_t v287 = v276;
    int64_t * v288 = (int64_t *)(v3 + 96); // 0x140014519
    uint64_t v289 = *v288; // 0x140014519
    int64_t v290 = v3 + 72;
    int64_t v291 = v287; // 0x140014521
    int64_t v292; // 0x1400143d0
    int64_t v293; // 0x1400143d0
    int64_t v294; // 0x1400143d0
    if (v289 < 16) {
        goto lab_0x140014554;
    } else {
        int64_t v295 = *(int64_t *)v290; // 0x140014523
        int64_t v296 = v289 + 1; // 0x140014527
        v293 = v295;
        v294 = v296;
        v292 = v287;
        if (v296 < 0x1000) {
            goto lab_0x14001454f;
        } else {
            int64_t v297 = *(int64_t *)(v295 - 8); // 0x140014533
            int64_t v298 = v289 + 40; // 0x140014537
            int64_t v299 = v295 - v297; // 0x14001453b
            v293 = v297;
            v294 = v298;
            v292 = v297;
            v8 = v299;
            v9 = v298;
            v7 = v297;
            if (v299 < 40) {
                goto lab_0x14001454f;
            } else {
                goto lab_0x14001461c;
            }
        }
    }
  lab_0x1400144a8:
    // 0x1400144a8
    function_14001ea5c(v12, v13, v6);
    *v4 = 0;
    *v10 = 0;
    *v11 = 0;
    v275 = v6;
    goto lab_0x1400144c2;
  lab_0x140014554:;
    int64_t v300 = v291;
    *(int64_t *)(v3 + 88) = 0;
    *v288 = 15;
    *(char *)v290 = 0;
    int64_t * v301 = (int64_t *)(v3 + 64); // 0x140014563
    uint64_t v302 = *v301; // 0x140014563
    int64_t v303 = v3 + 40;
    int64_t v304 = v300; // 0x14001456b
    int64_t v305; // 0x1400143d0
    int64_t v306; // 0x1400143d0
    int64_t v307; // 0x1400143d0
    if (v302 < 16) {
        goto lab_0x14001459e;
    } else {
        int64_t v308 = *(int64_t *)v303; // 0x14001456d
        int64_t v309 = v302 + 1; // 0x140014571
        v306 = v308;
        v307 = v309;
        v305 = v300;
        if (v309 < 0x1000) {
            goto lab_0x140014599;
        } else {
            int64_t v310 = *(int64_t *)(v308 - 8); // 0x14001457d
            int64_t v311 = v302 + 40; // 0x140014581
            int64_t v312 = v308 - v310; // 0x140014585
            v306 = v310;
            v307 = v311;
            v305 = v310;
            v8 = v312;
            v9 = v311;
            v7 = v310;
            if (v312 < 40) {
                goto lab_0x140014599;
            } else {
                goto lab_0x14001461c;
            }
        }
    }
  lab_0x140014508:
    // 0x140014508
    function_14001ea5c(v278, v279, v277);
    *v273 = 0;
    *v280 = 0;
    *v281 = 0;
    v276 = v277;
    goto lab_0x140014519;
  lab_0x14001461c:;
    int64_t v313 = v7;
    int64_t v314 = v9;
    int64_t v315 = v8;
    _invalid_parameter_noinfo_noreturn();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    v92 = v313;
    v137 = v314;
    v96 = v315;
    v37 = v315 + 128;
    v31 = (int64_t *)(v315 + 136);
    int64_t * v316 = (int64_t *)v37; // 0x140014686
    function_14001afc0(*v316, *v31);
    *v31 = *v316;
    int64_t * v317 = (int64_t *)(v315 + 112); // 0x140014695
    int64_t * v318 = (int64_t *)(v315 + 104); // 0x140014699
    function_14001afc0(*v318, *v317);
    *v317 = *v318;
    int128_t v174; // bp-384, 0x1400143d0
    if (v137 <= 0) {
        // 0x1400146b4
        v174 = 0;
        function_140019e40((char *)&v174, "argument number must be longer than 0", 37);
        int64_t v319 = *v31; // 0x1400146df
        if (v319 == *(int64_t *)(v315 + 144)) {
            // 0x140014706
            function_14001ab60(v37, v319, (char *)&v174);
        } else {
            // 0x1400146e9
            __asm_movups(*(int128_t *)v319, __asm_movups_1(0));
            __asm_movups(*(int128_t *)(v319 + 16), __asm_movups_1(0));
            v174 = 0;
            *v31 = *v31 + 32;
        }
        // 0x1400156b3
        __security_check_cookie(g66);
        return &g103;
    }
    // 0x14001475b
    if (*(int64_t *)(v315 + 88) == 0) {
        int64_t v320 = *(int64_t *)v313; // 0x140014765
        int64_t v321 = 0; // 0x140014770
        int64_t v322 = v321; // 0x140014777
        while (*(char *)(v321 + v320) != 0) {
            // 0x140014770
            v321 = v322 + 1;
            v322 = v321;
        }
        // 0x140014779
        function_140019e40((char *)(v315 + 72), (char *)v320, v321);
    }
    // 0x14001477e
    __asm_movups(v68, __asm_xorps(v2, v2));
    v68 = 0;
    int64_t v323 = function_14001e5fc(72); // 0x140014792
    *(int64_t *)v323 = v323;
    *(int64_t *)(v323 + 8) = v323;
    *(int64_t *)(v323 + 16) = v323;
    *(int16_t *)(v323 + 24) = 257;
    v68 = v323;
    int64_t v324 = *(int64_t *)v315; // 0x1400147ac
    int64_t v325 = *(int64_t *)v324; // 0x1400147af
    v236 = v324;
    v237 = v315;
    int64_t v255; // 0x1400143d0
    int64_t v256; // 0x1400143d0
    int64_t v257; // 0x1400143d0
    int64_t v241; // 0x1400147d6
    if (v325 != v324) {
        // 0x1400147c1
        v268 = &v68;
        v234 = v325;
        v235 = v315;
        while (true) {
          lab_0x1400147c1:
            // 0x1400147c1
            v220 = v234;
            v238 = (int64_t *)(v220 + 48);
            v232 = v235;
            if (*v238 == 0) {
                goto lab_0x14001490f;
            } else {
                int64_t v239 = *(int64_t *)*(int64_t *)(v220 + 64); // 0x1400147d0
                v240 = v239;
                if (v240 == 0) {
                    // 0x14001490a
                    v232 = v96;
                    goto lab_0x14001490f;
                } else {
                    // 0x1400147e1
                    v241 = v239 & 255;
                    v242 = v68;
                    int64_t v243 = *(int64_t *)(v242 + 8); // 0x1400147e5
                    char * v244 = (char *)(v243 + 25);
                    char v245 = *v244; // 0x1400147ec
                    int64_t v246 = v242; // 0x1400147f4
                    int64_t v247 = v243; // 0x1400147f4
                    int64_t v248 = v242; // 0x1400147f4
                    if (v245 == 0) {
                        int64_t v249 = v247;
                        char v250 = *(char *)(v249 + 32); // 0x140014800
                        int64_t v251 = v241 > (int64_t)v250 ? v246 : v249;
                        int64_t v252 = v241 > (int64_t)v250 ? v249 + 16 : v249;
                        int64_t v253 = *(int64_t *)v252;
                        v246 = v251;
                        v248 = v251;
                        while (*(char *)(v253 + 25) == 0) {
                            // 0x140014800
                            v249 = v253;
                            v250 = *(char *)(v249 + 32);
                            v251 = v241 > (int64_t)v250 ? v246 : v249;
                            v252 = v241 > (int64_t)v250 ? v249 + 16 : v249;
                            v253 = *(int64_t *)v252;
                            v246 = v251;
                            v248 = v251;
                        }
                    }
                    int64_t v254 = v248;
                    if (*(char *)(v254 + 25) == 0) {
                        // 0x14001481e
                        if (*(char *)(v254 + 32) <= v240) {
                            // 0x140014ac0
                            v174 = v243;
                            v255 = v243;
                            v256 = v242;
                            v257 = v242;
                            if (*v244 != 0) {
                                goto lab_0x140014b09;
                            } else {
                                goto lab_0x140014ae0;
                            }
                        }
                    }
                    // 0x140014832
                    v174 = v243;
                    int64_t v258 = v242; // 0x140014847
                    int64_t v259 = v243; // 0x140014847
                    int64_t v260 = v242; // 0x140014847
                    if (v245 == 0) {
                        int64_t v261 = v259;
                        v174 = v261;
                        char v262 = *(char *)(v261 + 32); // 0x140014855
                        int64_t v263 = v241 > (int64_t)v262 ? v258 : v261;
                        int64_t v264 = v241 > (int64_t)v262 ? v261 + 16 : v261;
                        int64_t v265 = *(int64_t *)v264;
                        v258 = v263;
                        v260 = v263;
                        while (*(char *)(v265 + 25) == 0) {
                            // 0x140014850
                            v261 = v265;
                            v174 = v261;
                            v262 = *(char *)(v261 + 32);
                            v263 = v241 > (int64_t)v262 ? v258 : v261;
                            v264 = v241 > (int64_t)v262 ? v261 + 16 : v261;
                            v265 = *(int64_t *)v264;
                            v258 = v263;
                            v260 = v263;
                        }
                    }
                    int64_t v266 = v260;
                    if (*(char *)(v266 + 25) != 0) {
                        goto lab_0x140014897;
                    } else {
                        // 0x14001487d
                        v267 = v266;
                        if (*(char *)(v266 + 32) > v240) {
                            goto lab_0x140014897;
                        } else {
                            goto lab_0x1400148eb;
                        }
                    }
                }
            }
        }
    }
  lab_0x14001496f:;
    int64_t v326 = v236; // 0x140014978
    int64_t v327 = v237; // 0x140014978
    int128_t v107; // bp-304, 0x1400143d0
    if ((v314 & 0xfffffffe) != 0) {
        int64_t v183 = &v17;
        v33 = (int64_t *)(v315 + 144);
        int64_t v181 = &v174;
        v144 = &v143;
        v24 = (char *)(v183 | 1);
        v193 = &v190;
        v194 = v195 + 1;
        v205 = &v68;
        v209 = &v66;
        v133 = v237;
        v135 = 1;
        v136 = 1;
        while (true) {
          lab_0x140014981:
            // 0x140014981
            v138 = v136;
            v139 = v135;
            v140 = v133;
            v141 = v132;
            v19 = 8 * v139;
            int64_t * str = (int64_t *)(v19 + (int64_t)v92); // 0x140014992
            int32_t strncmp_rc = strncmp((char *)*str, "--", 2); // 0x140014996
            int64_t str2 = *str; // 0x14001499c
            if (strncmp_rc != 0) {
                int32_t strncmp_rc2 = strncmp((char *)str2, "-", 1); // 0x140014ffe
                int64_t v142 = *str; // 0x140015004
                if (strncmp_rc2 != 0) {
                    // 0x1400155e2
                    function_140019920(&v143, (char *)v142);
                    function_1400195e0(v140 + 104, v144);
                    function_1400198c0((char *)&v143);
                    v131 = v141;
                    v127 = v140;
                    v134 = v139;
                    v129 = v138;
                    goto lab_0x140015606;
                } else {
                    unsigned char v145 = *(char *)(v142 + 1); // 0x140015010
                    v131 = v141;
                    v127 = v140;
                    v134 = v139;
                    v129 = v138;
                    if (v145 == 0) {
                        goto lab_0x140015606;
                    } else {
                        // 0x14001501d
                        v66 = v145;
                        if (*(char *)(v142 + 2) != (char)strncmp_rc2) {
                            while (true) {
                              lab_0x140015040:
                                // 0x140015040
                                v22 = v62;
                                v60 = v61;
                                v18 = v59;
                                int64_t v63 = v58;
                                int64_t v64 = v22 + v63; // 0x140015040
                                char v65 = *(char *)v64; // 0x140015044
                                v66 = v65;
                                int128_t v67 = v68; // 0x14001504b
                                int64_t v69 = v67; // 0x14001504b
                                int64_t v70 = *(int64_t *)(v69 + 8); // 0x14001504f
                                char v71 = *(char *)(v70 + 25); // 0x140015053
                                int64_t v72 = v69; // 0x140015057
                                if (v71 == 0) {
                                    unsigned char v73 = *(char *)(v64 - 1); // 0x140015059
                                    int64_t v74 = v73; // 0x140015059
                                    int64_t v75 = v70; // 0x14001505e
                                    int64_t v76 = v69; // 0x14001505e
                                    int64_t v77 = v76;
                                    int64_t v78 = v75;
                                    char v79 = *(char *)(v78 + 32); // 0x140015060
                                    int64_t v80 = v74 > (int64_t)v79 ? v77 : v78;
                                    int64_t v81 = v74 > (int64_t)v79 ? v78 + 16 : v78;
                                    int64_t v82 = *(int64_t *)v81;
                                    char v83 = *(char *)(v82 + 25); // 0x140015071
                                    v75 = v82;
                                    v76 = v80;
                                    v72 = v80;
                                    while (v83 == 0) {
                                        // 0x140015060
                                        v77 = v76;
                                        v78 = v75;
                                        v79 = *(char *)(v78 + 32);
                                        v80 = v74 > (int64_t)v79 ? v77 : v78;
                                        v81 = v74 > (int64_t)v79 ? v78 + 16 : v78;
                                        v82 = *(int64_t *)v81;
                                        v83 = *(char *)(v82 + 25);
                                        v75 = v82;
                                        v76 = v80;
                                        v72 = v80;
                                    }
                                }
                                int64_t v84 = v72;
                                char v85 = *(char *)(v84 + 25); // 0x140015077
                                if (v85 != 0) {
                                    goto lab_0x140015095;
                                } else {
                                    unsigned char v86 = *(char *)(v84 + 32); // 0x14001507d
                                    char v87 = *(char *)(v64 - 1); // 0x140015081
                                    if ((int64_t)v87 < (int64_t)v86) {
                                        goto lab_0x140015095;
                                    } else {
                                        int64_t v88 = (0x100000000 * v60 >> 32) - 1;
                                        int64_t v89 = function_140019460(&v68, v88 + v63); // 0x14001519a
                                        int64_t v90 = *(int64_t *)(v89 + 16); // 0x14001519f
                                        if (v90 != 0) {
                                            int32_t v91 = v92; // 0x1400152ad
                                            int64_t v93 = *(int64_t *)(v19 + (int64_t)v91); // 0x1400152b1
                                            int64_t v94 = function_140019460(&v68, v93 + v88); // 0x1400152c0
                                            int64_t v95 = v96; // 0x1400152c8
                                            function_1400160e0(v95, (int128_t *)v94);
                                            int32_t v97 = v92; // 0x1400152d2
                                            int64_t v98 = v97; // 0x1400152d2
                                            v35 = (int64_t *)(v19 + v98);
                                            v36 = v98;
                                        } else {
                                            // 0x1400151b4
                                            v17 = 0;
                                            function_140019e40((char *)&v17, "ambiguous short option: -", 25);
                                            int32_t v99 = v92; // 0x1400151db
                                            int64_t v100 = v99; // 0x1400151db
                                            int64_t * v101 = (int64_t *)(v19 + v100);
                                            int64_t v102 = *v101; // 0x1400151df
                                            char v103 = *(char *)(v22 - 1 + v102); // 0x1400151e3
                                            *(char *)&v17 = v103;
                                            *v24 = 0;
                                            int128_t v104 = v17; // 0x14001521f
                                            int128_t v105 = __asm_movups_1(v104); // 0x14001521f
                                            int128_t v106 = v107; // 0x140015223
                                            __asm_movups(v106, v105);
                                            int128_t v108 = __asm_movups_1(1); // 0x140015227
                                            int128_t v109; // 0x1400143d0
                                            __asm_movups(v109, v108);
                                            v17 = 0;
                                            int64_t v110 = *v31; // 0x140015244
                                            int64_t v111 = *v33; // 0x140015248
                                            if (v110 == v111) {
                                                // 0x140015273
                                                function_14001ab60(v37, v110, (char *)&v107);
                                                v35 = v101;
                                                v36 = v100;
                                                uint64_t v112; // 0x1400143d0
                                                if (v112 >= 16) {
                                                    int128_t v113 = v107; // 0x14001527c
                                                    int64_t v114 = v113; // 0x14001527c
                                                    int64_t v115 = v114; // 0x14001528a
                                                    int64_t v116; // 0x1400143d0
                                                    int64_t v117 = v116; // 0x14001528a
                                                    if (v116 >= 0x1000) {
                                                        int64_t v118 = v114 - 8;
                                                        int64_t v119 = *(int64_t *)v118; // 0x140015290
                                                        v115 = v119;
                                                        int64_t v120; // 0x1400143d0
                                                        v117 = v120;
                                                        if (v118 - v119 >= 32) {
                                                            // 0x1400156f6
                                                            _invalid_parameter_noinfo_noreturn();
                                                            goto lab_0x1400156fd;
                                                        }
                                                    }
                                                    int64_t v121 = v117;
                                                    int64_t v122 = v115;
                                                    int64_t v123; // 0x1400143d0
                                                    function_14001ea5c(v122, v121, v123);
                                                    v35 = v101;
                                                    v36 = v100;
                                                }
                                            } else {
                                                int128_t v124 = *(int128_t *)v110; // 0x14001524e
                                                __asm_movups(v124, v105);
                                                int128_t v125 = *(int128_t *)(v110 + 16); // 0x140015251
                                                __asm_movups(v125, v108);
                                                v107 = 0;
                                                int64_t v126 = *v31; // 0x14001525c
                                                *v31 = v126 + 32;
                                                v35 = v101;
                                                v36 = v100;
                                            }
                                        }
                                        goto lab_0x1400152d6;
                                    }
                                }
                            }
                          lab_0x1400152ed:;
                        }
                        int64_t v146 = v145;
                        v147 = v68;
                        int64_t v148 = *(int64_t *)(v147 + 8); // 0x1400152f5
                        char v149 = *(char *)(v148 + 25); // 0x1400152fc
                        int64_t v150 = v148; // 0x140015304
                        int64_t v151 = v147; // 0x140015304
                        int64_t v152 = v147; // 0x140015304
                        if (v149 == 0) {
                            int64_t v153 = v150;
                            char v154 = *(char *)(v153 + 32); // 0x140015310
                            int64_t v155 = v146 > (int64_t)v154 ? v151 : v153;
                            int64_t v156 = v146 > (int64_t)v154 ? v153 + 16 : v153;
                            int64_t v157 = *(int64_t *)v156;
                            v151 = v155;
                            v152 = v155;
                            while (*(char *)(v157 + 25) == 0) {
                                // 0x140015310
                                v153 = v157;
                                v154 = *(char *)(v153 + 32);
                                v155 = v146 > (int64_t)v154 ? v151 : v153;
                                v156 = v146 > (int64_t)v154 ? v153 + 16 : v153;
                                v157 = *(int64_t *)v156;
                                v151 = v155;
                                v152 = v155;
                            }
                        }
                        int64_t v158 = v152;
                        if (*(char *)(v158 + 25) != 0) {
                            goto lab_0x140015344;
                        } else {
                            char v159 = v146; // 0x140015332
                            if (*(char *)(v158 + 32) > v159) {
                                goto lab_0x140015344;
                            } else {
                                // 0x140015435
                                v17 = v148;
                                int64_t v160 = v148; // 0x140015442
                                int64_t v161 = v147; // 0x140015442
                                int64_t v162 = v147; // 0x140015442
                                if (v149 == 0) {
                                    int64_t v163 = v160;
                                    v17 = v163;
                                    char v164 = *(char *)(v163 + 32); // 0x140015448
                                    int64_t v165 = v146 > (int64_t)v164 ? v161 : v163;
                                    int64_t v166 = v146 > (int64_t)v164 ? v163 + 16 : v163;
                                    int64_t v167 = *(int64_t *)v166;
                                    v161 = v165;
                                    v162 = v165;
                                    while (*(char *)(v167 + 25) == 0) {
                                        // 0x140015444
                                        v163 = v167;
                                        v17 = v163;
                                        v164 = *(char *)(v163 + 32);
                                        v165 = v146 > (int64_t)v164 ? v161 : v163;
                                        v166 = v146 > (int64_t)v164 ? v163 + 16 : v163;
                                        v167 = *(int64_t *)v166;
                                        v161 = v165;
                                        v162 = v165;
                                    }
                                }
                                int64_t v168 = v162;
                                if (*(char *)(v168 + 25) != 0) {
                                    goto lab_0x140015486;
                                } else {
                                    // 0x14001546d
                                    v169 = v168;
                                    if (*(char *)(v168 + 32) > v159) {
                                        goto lab_0x140015486;
                                    } else {
                                        goto lab_0x1400154ea;
                                    }
                                }
                            }
                        }
                    }
                }
            } else {
                char * found_char_pos = strchr((char *)(str2 + 2), strncmp_rc + 61); // 0x1400149af
                int64_t v170 = *(int64_t *)(v19 + (int64_t)v92) + 2; // 0x1400149c0
                if (found_char_pos == NULL) {
                    // 0x140014d50
                    v17 = 0;
                    int64_t v171 = 0; // 0x140014d64
                    int64_t v172 = v171; // 0x140014d6b
                    while (*(char *)(v171 + v170) != 0) {
                        // 0x140014d64
                        v171 = v172 + 1;
                        v172 = v171;
                    }
                    // 0x140014d6d
                    function_140019e40((char *)&v17, (char *)v170, v171);
                    if (function_1400196c0(v140, &v17) != 0) {
                        int64_t v173 = function_14001adf0(v140, (char *)&v174, &v17); // 0x140014e9e
                        int64_t v175 = *(int64_t *)(*(int64_t *)v173 + 64); // 0x140014ea6
                        if ((char)*(int64_t *)v175 == 0) {
                            // 0x140014fe0
                            function_1400160e0(v140, &v17);
                            v131 = v141;
                            v127 = v140;
                            v134 = v139;
                            v129 = v138;
                            goto lab_0x140015606;
                        } else {
                            int64_t v176 = v138 + 1; // 0x140014eb8
                            if (v137 > (int32_t)v176) {
                                int64_t v177 = v139 + 1; // 0x140014f58
                                int64_t v178 = *(int64_t *)(8 * v177 + (int64_t)v92); // 0x140014f5f
                                v143 = 0;
                                int64_t v179 = 0; // 0x140014f76
                                int64_t v180 = v179; // 0x140014f7e
                                while (*(char *)(v179 + v178) != 0) {
                                    // 0x140014f76
                                    v179 = v180 + 1;
                                    v180 = v179;
                                }
                                // 0x140014f80
                                function_140019e40((char *)&v143, (char *)v178, v179);
                                function_1400162d0(v140, (char *)&v17, &v143);
                                v131 = 15;
                                v127 = v140;
                                v134 = v177;
                                v129 = v176 & 0xffffffff;
                                goto lab_0x140015606;
                            } else {
                                // 0x140014ee1
                                function_14001bda0((char *)&v143, v181);
                                int64_t v182 = *v31; // 0x140014f19
                                if (v182 == *v33) {
                                    // 0x140014f40
                                    function_14001ab60(v37, v182, (char *)&v143);
                                    goto lab_0x140014e16;
                                } else {
                                    // 0x140014f23
                                    __asm_movups(*(int128_t *)v182, __asm_movups_1(0));
                                    __asm_movups(*(int128_t *)(v182 + 16), __asm_movups_1(0));
                                    v143 = 0;
                                    *v31 = *v31 + 32;
                                    v131 = v141;
                                    v127 = v140;
                                    v134 = v139;
                                    v129 = v138;
                                    goto lab_0x140015606;
                                }
                            }
                        }
                    } else {
                        // 0x140014da7
                        function_14001bda0((char *)&v143, v183);
                        int64_t v184 = *v31; // 0x140014ddf
                        if (v184 == *v33) {
                            // 0x140014e06
                            function_14001ab60(v37, v184, (char *)&v143);
                            goto lab_0x140014e16;
                        } else {
                            // 0x140014de9
                            __asm_movups(*(int128_t *)v184, __asm_movups_1(0));
                            __asm_movups(*(int128_t *)(v184 + 16), __asm_movups_1(0));
                            v143 = 0;
                            *v31 = *v31 + 32;
                            v131 = v141;
                            v127 = v140;
                            v134 = v139;
                            v129 = v138;
                            goto lab_0x140015606;
                        }
                    }
                } else {
                    int64_t v185 = (int64_t)found_char_pos; // 0x1400149af
                    v143 = 0;
                    if (v170 != v185) {
                        // 0x1400149e2
                        function_140019e40((char *)&v143, (char *)v170, v185 - v170);
                    }
                    int64_t v186 = v185 + 1; // 0x1400149f2
                    v17 = 0;
                    int64_t v187 = 0; // 0x140014a10
                    int64_t v188 = v187; // 0x140014a17
                    while (*(char *)(v187 + v186) != 0) {
                        // 0x140014a10
                        v187 = v188 + 1;
                        v188 = v187;
                    }
                    // 0x140014a19
                    function_140019e40((char *)&v17, (char *)v186, v187);
                    function_1400162d0(v140, (char *)&v143, &v17);
                    v17 = 0;
                    v131 = 15;
                    v127 = v140;
                    v134 = v139;
                    v129 = v138;
                    goto lab_0x140015606;
                }
            }
        }
      lab_0x140015617:
        // 0x140015617
        v326 = *(int64_t *)v128;
        v327 = v128;
    }
    int64_t v328 = *(int64_t *)v326; // 0x14001561a
    v92 = v328;
    if (v328 == v326) {
        // 0x1400156a7
        function_140016790(&v68);
        // 0x1400156b3
        __security_check_cookie(g66);
        return &g103;
    }
    // 0x140015630
    int64_t v329; // 0x140015649
    int64_t v330; // 0x14001565d
    if ((char)*(int64_t *)*(int64_t *)(v328 + 64) == 0) {
        // 0x140015642
        v329 = function_140019960((int64_t)&v107, v328 + 32);
        v330 = function_14001a460(&v190, "need option: --", v329);
        function_1400195e0(v37, v330);
        function_1400198c0((char *)&v190);
        function_1400198c0((char *)&v107);
    }
    // 0x140015682
    function_140019570((int64_t *)&v92, &v96);
    int64_t v331 = v92; // 0x140015690
    while (*(int64_t *)v327 != v331) {
        int64_t v332 = v331;
        if ((char)*(int64_t *)*(int64_t *)(v332 + 64) == 0) {
            // 0x140015642
            v329 = function_140019960((int64_t)&v107, v332 + 32);
            v330 = function_14001a460(&v190, "need option: --", v329);
            function_1400195e0(v37, v330);
            function_1400198c0((char *)&v190);
            function_1400198c0((char *)&v107);
        }
        // 0x140015682
        function_140019570((int64_t *)&v92, &v96);
        v331 = v92;
    }
  lab_0x1400156a7:
    // 0x1400156a7
    function_140016790(&v68);
    // 0x1400156b3
    __security_check_cookie(g66);
    return &g103;
  lab_0x14001459e:
    // 0x14001459e
    *(int64_t *)(v3 + 56) = 0;
    *v301 = 15;
    *(char *)v303 = 0;
    int64_t * v333 = (int64_t *)(v3 + 16); // 0x1400145ad
    int64_t v334 = *v333; // 0x1400145ad
    int64_t v335; // 0x1400145fc
    if (v334 == 0) {
        // 0x1400145f3
        v335 = *(int64_t *)8;
        function_14001c7b0(v3, v3, v335);
        return function_14001ea5c(v3, 72, v335);
    }
    int64_t * v336 = (int64_t *)(v3 + 32); // 0x1400145b6
    int64_t v337 = *v336 - v334 & -8; // 0x1400145bd
    int64_t v338 = v334; // 0x1400145c8
    int64_t v339 = v337; // 0x1400145c8
    int64_t v340 = v304; // 0x1400145c8
    if (v337 < 0x1000) {
        goto lab_0x1400145e2;
    } else {
        int64_t v341 = *(int64_t *)(v334 - 8); // 0x1400145ca
        int64_t v342 = v334 - v341; // 0x1400145d2
        v8 = v342;
        v9 = v337 + 39;
        v7 = v341;
        if (v342 < 40) {
            goto lab_0x1400145e2;
        } else {
            goto lab_0x14001461c;
        }
    }
  lab_0x14001454f:
    // 0x14001454f
    function_14001ea5c(v293, v294, v292);
    v291 = v292;
    goto lab_0x140014554;
  lab_0x1400145e2:
    // 0x1400145e2
    function_14001ea5c(v338, v339, v340);
    *v333 = 0;
    *(int64_t *)(v3 + 24) = 0;
    *v336 = 0;
    // 0x1400145f3
    v335 = *(int64_t *)(v338 + 8);
    function_14001c7b0(v3, v3, v335);
    return function_14001ea5c(v3, 72, v335);
  lab_0x140014599:
    // 0x140014599
    function_14001ea5c(v306, v307, v305);
    v304 = v305;
    goto lab_0x14001459e;
  lab_0x140014b09:;
    // 0x140014b09
    int64_t v343; // 0x1400143d0
    if (*(char *)(v257 + 25) != 0) {
        goto lab_0x140014b29;
    } else {
        // 0x140014b0f
        v343 = v257;
        if (*(char *)(v257 + 32) > v240) {
            goto lab_0x140014b29;
        } else {
            goto lab_0x140014b7d;
        }
    }
  lab_0x140014ae0:;
    int64_t v344 = v255;
    v174 = v344;
    char v345 = *(char *)(v344 + 32); // 0x140014ae5
    int64_t v346 = v241 > (int64_t)v345 ? v256 : v344;
    int64_t v347 = v241 > (int64_t)v345 ? v344 + 16 : v344;
    int64_t v348 = *(int64_t *)v347;
    v255 = v348;
    v256 = v346;
    v257 = v346;
    if (*(char *)(v348 + 25) == 0) {
        goto lab_0x140014ae0;
    } else {
        goto lab_0x140014b09;
    }
  lab_0x140014b29:
    // 0x140014b29
    v206 = v268;
    int64_t v349 = function_14001e5fc(72); // 0x140014b3a
    *(char *)(v349 + 32) = v240;
    *(int64_t *)(v349 + 56) = 0;
    *(int64_t *)(v349 + 64) = 15;
    *(char *)(v349 + 40) = 0;
    *(int64_t *)v349 = v242;
    *(int64_t *)(v349 + 8) = v242;
    *(int64_t *)(v349 + 16) = v242;
    *(int16_t *)(v349 + 24) = 0;
    v206 = __asm_movaps(__asm_movups_1(0));
    v343 = function_14001bb20(&v68, &v206, v349);
    goto lab_0x140014b7d;
  lab_0x140014b7d:
    // 0x140014b7d
    function_140019e40((char *)(v343 + 40), (char *)&g10, 0);
    v174 = 0;
    function_140019e40((char *)&v174, "short option '", 14);
    *(char *)&v174 = v240;
    *(char *)((int64_t)&v174 | 1) = 0;
    __asm_movups(0, __asm_movups_1(0));
    int128_t v350 = __asm_movups_1(1); // 0x140014c00
    __asm_movups(v1, v350);
    v174 = 0;
    int64_t v351 = __asm_movq_9(v350); // 0x140014c18
    uint64_t v352 = __asm_movq_9(__asm_psrldq(v350, 8)); // 0x140014c22
    int64_t v353; // 0x1400143d0
    if (v352 - v351 < 14) {
        // 0x140014c6a
        v353 = function_14001b1b0((int64_t *)&v206, 14);
        goto lab_0x140014c88;
    } else {
        int64_t v354 = &v206; // 0x140014c3b
        int64_t v355 = (v352 >= 16 ? (int64_t)v206 : v354) + v351; // 0x140014c48
        memmove((int64_t *)v355, (int64_t *)"' is ambiguous", 14);
        *(char *)(v355 + 14) = 0;
        v353 = v354;
        goto lab_0x140014c88;
    }
  lab_0x140014c88:;
    int128_t v356 = __asm_movups_1(*(int128_t *)v353); // 0x140014c88
    __asm_movups(0, v356);
    int64_t v357 = v353 + 16; // 0x140014c8f
    int128_t v358 = __asm_movups_1(*(int128_t *)v357); // 0x140014c8f
    __asm_movups(0, v358);
    *(int64_t *)v357 = 0;
    *(int64_t *)(v353 + 24) = 15;
    *(char *)v353 = 0;
    int64_t v359 = *v31; // 0x140014ca2
    int64_t v360; // 0x1400143d0
    int64_t v361; // 0x1400143d0
    int64_t v362; // 0x1400143d0
    int64_t v363; // 0x140014cbe
    if (v359 == *(int64_t *)(v315 + 144)) {
        // 0x140014cce
        v363 = &v143;
        function_14001ab60(v37, v359, (char *)&v143);
        v360 = v363;
        if (v195 < 16) {
            goto lab_0x140014d0a;
        } else {
            int64_t v364 = v195 + 1; // 0x140014cd4
            int64_t v365 = 0x100000000000000 * (int64_t)v143 >> 56; // 0x140014cd8
            v361 = v365;
            v362 = v364;
            if (v364 < 0x1000) {
                goto lab_0x140014d04;
            } else {
                int64_t v366 = v195 + 40; // 0x140014ce8
                int64_t v367 = v365 - 8;
                int64_t v368 = *(int64_t *)v367; // 0x140014cec
                v361 = v368;
                v362 = v366;
                if (v367 - v368 < 32) {
                    goto lab_0x140014d04;
                } else {
                    // 0x140014cfd
                    _invalid_parameter_noinfo_noreturn();
                    __asm_int3();
                    v361 = v368;
                    v362 = v366;
                    goto lab_0x140014d04;
                }
            }
        }
    } else {
        // 0x140014cce
        __asm_movups(*(int128_t *)v359, v356);
        __asm_movups(*(int128_t *)(v359 + 16), v358);
        v143 = 0;
        *v31 = *v31 + 32;
        v360 = 14;
        goto lab_0x140014d0a;
    }
  lab_0x140014d0a:;
    int64_t v369; // 0x1400143d0
    int64_t v370; // 0x1400143d0
    if (v195 < 16) {
        goto lab_0x1400156a7;
    } else {
        int64_t v371 = v195 + 1; // 0x140014d14
        int64_t v372 = v206; // 0x140014d17
        v369 = v372;
        v370 = v371;
        if (v371 < 0x1000) {
            goto lab_0x140014d43;
        } else {
            int64_t v373 = v195 + 40; // 0x140014d27
            int64_t v374 = v372 - 8;
            int64_t v375 = *(int64_t *)v374; // 0x140014d2b
            v369 = v375;
            v370 = v373;
            if (v374 - v375 < 32) {
                goto lab_0x140014d43;
            } else {
                // 0x140014d3c
                _invalid_parameter_noinfo_noreturn();
                __asm_int3();
                v369 = v375;
                v370 = v373;
                goto lab_0x140014d43;
            }
        }
    }
  lab_0x140014d04:
    // 0x140014d04
    function_14001ea5c(v361, v362, v363);
    v360 = v363;
    goto lab_0x140014d0a;
  lab_0x140014d43:
    // 0x140014d43
    function_14001ea5c(v369, v370, v360);
    goto lab_0x1400156a7;
}

// Address range: 0x140015720 - 0x140015994
int64_t function_140015720(int128_t * a1, int64_t a2, int64_t a3) {
    int64_t v1 = (int64_t)a1;
    char v2 = 0; // bp-200, 0x14001574f
    function_140019e40(&v2, "help", 4);
    int64_t v3 = function_1400196c0(v1, (int128_t *)&v2); // 0x14001576e
    if (v3 != 0) {
        // 0x140015932
        return function_140015f00(v1, a2 & 0xffffffff, v3 & 255);
    }
    char v4 = 0; // bp-168, 0x1400157c9
    function_140019e40(&v4, "print this message", v3 + 18 & 0xffffffff);
    v2 = v3;
    function_140019e40(&v2, "help", v3 + 4 & 0xffffffff);
    int64_t v5; // bp-136, 0x140015720
    if (function_1400196c0(v1, (int128_t *)&v2) != 0) {
        // 0x140015963
        function_14001a3f0(&v5, "multiple definition: ", &v2);
        int64_t v6; // bp-104, 0x140015720
        function_140014260(&v6);
        _CxxThrowException(&v6, &g61);
        // UNREACHABLE
    }
    int64_t v7 = function_14001e5fc(v3 + 88 & 0xffffffff); // 0x14001581e
    v5 = v7;
    *(int64_t *)v7 = (int64_t)&g32;
    function_140019960(v7 + 8, (int64_t)&v2);
    *(char *)(v7 + 40) = 63;
    function_140019960(v7 + 48, (int64_t)&v4);
    *(char *)(v7 + 80) = 0;
    int64_t v8 = function_14001adf0(v1, (char *)&v5, (int128_t *)&v2); // 0x140015862
    *(int64_t *)(*(int64_t *)v8 + 64) = v7;
    int64_t v9 = function_14001adf0(v1, (char *)&v5, (int128_t *)&v2); // 0x140015879
    int64_t v10 = *(int64_t *)v9 + 64; // 0x140015881
    int64_t * v11 = (int64_t *)(v1 + 24); // 0x140015889
    int64_t v12 = *v11; // 0x140015889
    int64_t v13; // 0x140015720
    if (v12 == *(int64_t *)(v1 + 32)) {
        // 0x1400158a0
        v13 = function_14001a9c0(v1 + 16, v12, v10);
    } else {
        int64_t v14 = *(int64_t *)v10; // 0x140015893
        *(int64_t *)v12 = v14;
        *v11 = *v11 + 8;
        v13 = v14;
    }
    // 0x1400158e4
    v2 = 0;
    // 0x140015932
    return function_140015f00(v1, a2 & 0xffffffff, v13 & 255);
}

// Address range: 0x1400159a0 - 0x140015ac5
int64_t function_1400159a0(int64_t a1, int64_t result, int64_t a3) {
    // 0x1400159a0
    int64_t v1; // 0x1400159a0
    uint64_t v2 = v1;
    int64_t v3 = *(int64_t *)(a1 + 128); // 0x1400159ba
    int64_t v4; // bp-40, 0x1400159a0
    int64_t v5; // 0x1400159a0
    char v6; // bp-80, 0x1400159a0
    int64_t v7; // 0x1400159a0
    int64_t v8; // 0x1400159a0
    if (*(int64_t *)(a1 + 136) - v3 < 32) {
        // 0x1400159e6
        v6 = 0;
        function_140019e40(&v6, (char *)&g10, 0);
        v5 = 15;
        v7 = &v6;
        v8 = 2;
    } else {
        // 0x1400159d4
        v7 = function_140019960((int64_t)&v4, v3);
        v8 = 1;
    }
    // 0x140015a14
    function_140019960(result, v7);
    int64_t v9 = v8 | 4; // 0x140015a23
    int64_t v10 = v9; // 0x140015a29
    if ((v8 & 2) != 0) {
        int64_t v11 = v9 & 5; // 0x140015a2b
        v10 = v11;
        if (v5 >= 16) {
            int64_t v12 = v5 + 1; // 0x140015a39
            int64_t v13 = v6; // 0x140015a3c
            int64_t v14 = v13; // 0x140015a4b
            int64_t v15 = v12; // 0x140015a4b
            if (v12 >= 0x1000) {
                int64_t v16 = v5 + 40; // 0x140015a4d
                int64_t v17 = v13 - 8;
                int64_t v18 = *(int64_t *)v17; // 0x140015a51
                v14 = v18;
                v15 = v16;
                if (v17 - v18 >= 32) {
                    // 0x140015a62
                    _invalid_parameter_noinfo_noreturn();
                    __asm_int3();
                    v14 = v18;
                    v15 = v16;
                }
            }
            // 0x140015a69
            function_14001ea5c(v14, v15, 0);
            v10 = v11;
        }
    }
    // 0x140015a6f
    if (v2 < 16 || (v10 & 1) == 0) {
        // 0x140015ab4
        return result;
    }
    int64_t v19 = v2 + 1; // 0x140015a7f
    if (v19 < 0x1000) {
        // 0x140015aaf
        function_14001ea5c(v4, v19, 0);
        // 0x140015ab4
        return result;
    }
    int64_t v20 = v4 - 8;
    int64_t v21 = *(int64_t *)v20; // 0x140015a97
    if (v20 - v21 >= 32) {
        // 0x140015aa8
        _invalid_parameter_noinfo_noreturn();
        __asm_int3();
    }
    // 0x140015aaf
    function_14001ea5c(v21, v2 + 40, 0);
    // 0x140015ab4
    return result;
}

// Address range: 0x140015ad0 - 0x140015efb
int64_t function_140015ad0(int64_t a1, char * a2) {
    // 0x140015ad0
    int64_t v1; // 0x140015ad0
    uint64_t v2 = v1;
    int64_t v3; // bp-296, 0x140015ad0
    memset(&v3, 0, 232);
    function_1400193b0(&v3, 0, 232, v1);
    int64_t v4 = function_14001a060(&v3, "usage: "); // 0x140015b32
    int64_t v5 = a1 + 72; // 0x140015b37
    int64_t v6 = v5; // 0x140015b40
    if (*(int64_t *)(a1 + 96) >= 16) {
        // 0x140015b42
        v6 = *(int64_t *)v5;
    }
    // 0x140015b46
    function_14001a060((int64_t *)function_14001c100(v4, v6, *(int64_t *)(a1 + 88)), " ");
    int64_t * v7 = (int64_t *)(a1 + 16); // 0x140015b63
    int64_t v8 = *v7; // 0x140015b63
    int64_t * v9 = (int64_t *)(a1 + 24); // 0x140015b67
    int64_t v10; // 0x140015ad0
    int64_t v11; // 0x140015ad0
    int64_t v12; // 0x140015ad0
    if (*v9 - v8 >= 8) {
        int64_t v13 = &v3;
        int64_t v14 = v1 + 1;
        int64_t v15 = v1 - 8;
        int64_t v16 = 0; // 0x140015c0a
        int64_t v17 = *(int64_t *)*(int64_t *)(8 * v16 + v8); // 0x140015b84
        int64_t v18; // 0x140015ad0
        int64_t v19; // 0x140015ad0
        int64_t v20; // 0x140015baf
        int64_t v21; // 0x140015bac
        int64_t v22; // 0x140015bf0
        if ((char)v17 != 0) {
            // 0x140015b8e
            v21 = v17;
            if (*(int64_t *)(v17 + 24) >= 16) {
                // 0x140015bac
                v21 = *(int64_t *)v17;
            }
            // 0x140015baf
            v20 = *(int64_t *)(v17 + 16);
            function_14001a060((int64_t *)function_14001c100(v13, v21, v20), " ");
            if (v1 >= 16) {
                // 0x140015bd8
                v19 = v14;
                if (v14 >= 0x1000) {
                    // 0x140015bec
                    v22 = *(int64_t *)v15;
                    v18 = v22;
                    v19 = v1 + 40;
                    if (v15 - v22 >= 32) {
                        // 0x140015d34
                        _invalid_parameter_noinfo_noreturn();
                        __asm_int3();
                        v10 = 8 * v1;
                        v12 = v13;
                        v11 = (int64_t)"      ";
                        goto lab_0x140015d47;
                    }
                }
                // 0x140015c05
                function_14001ea5c(v18, v19, v20);
            }
        }
        // 0x140015c0a
        v16++;
        int64_t v23 = *v7; // 0x140015c0d
        while (v16 < *v9 - v23 >> 3) {
            // 0x140015b80
            v17 = *(int64_t *)*(int64_t *)(8 * v16 + v23);
            if ((char)v17 != 0) {
                // 0x140015b8e
                v21 = v17;
                if (*(int64_t *)(v17 + 24) >= 16) {
                    // 0x140015bac
                    v21 = *(int64_t *)v17;
                }
                // 0x140015baf
                v20 = *(int64_t *)(v17 + 16);
                function_14001a060((int64_t *)function_14001c100(v13, v21, v20), " ");
                if (v1 >= 16) {
                    // 0x140015bd8
                    v19 = v14;
                    if (v14 >= 0x1000) {
                        // 0x140015bec
                        v22 = *(int64_t *)v15;
                        v18 = v22;
                        v19 = v1 + 40;
                        if (v15 - v22 >= 32) {
                            // 0x140015d34
                            _invalid_parameter_noinfo_noreturn();
                            __asm_int3();
                            v10 = 8 * v1;
                            v12 = v13;
                            v11 = (int64_t)"      ";
                            goto lab_0x140015d47;
                        }
                    }
                    // 0x140015c05
                    function_14001ea5c(v18, v19, v20);
                }
            }
            // 0x140015c0a
            v16++;
            v23 = *v7;
        }
    }
    int64_t v24 = function_14001a060(&v3, "[options] ... "); // 0x140015c31
    int64_t v25 = a1 + 40; // 0x140015c36
    int64_t v26 = v25; // 0x140015c3f
    if (*(int64_t *)(a1 + 64) >= 16) {
        // 0x140015c41
        v26 = *(int64_t *)v25;
    }
    // 0x140015c45
    function_14001c100(v24, v26, *(int64_t *)(a1 + 56));
    _3f__3f_6_3f__24_basic_ostream_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_QEAAAEAV01_40_P6AAEAV01_40_AEAV01_40__40_Z_40_Z((int64_t * (*)(int64_t *))&g103);
    function_14001a060(&v3, "options:");
    _3f__3f_6_3f__24_basic_ostream_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_QEAAAEAV01_40_P6AAEAV01_40_AEAV01_40__40_Z_40_Z((int64_t * (*)(int64_t *))&g103);
    int64_t v27 = *v7; // 0x140015c8a
    int64_t v28 = *v9 - v27;
    int64_t v29; // 0x140015ad0
    int64_t v30; // 0x140015ad0
    int64_t v31; // 0x140015ad0
    if (v28 < 8) {
        goto lab_0x140015e16;
    } else {
        int64_t v32 = 0; // 0x140015cb7
        uint64_t v33 = 0;
        uint64_t v34 = *(int64_t *)(*(int64_t *)*(int64_t *)(8 * v32 + v27) + 16); // 0x140015cae
        int64_t v35 = v33 < v34 ? v34 : v33; // 0x140015cb2
        v32++;
        while (v32 < v28 >> 3) {
            // 0x140015ca0
            v33 = v35;
            v34 = *(int64_t *)(*(int64_t *)*(int64_t *)(8 * v32 + v27) + 16);
            v35 = v33 < v34 ? v34 : v33;
            v32++;
        }
        // 0x140015cd1
        v29 = v27;
        v31 = 0;
        v30 = v35 + 4;
        goto lab_0x140015cf0;
    }
  lab_0x140015e16:;
    int64_t v36 = (int64_t)a2;
    *(int64_t *)(v36 + 16) = 0;
    *(int64_t *)(v36 + 24) = 15;
    *a2 = 0;
    int64_t v37; // 0x140015ad0
    int64_t v38; // 0x140015ad0
    char v39; // 0x140015ad0
    if ((v39 & 2) != 0) {
        goto lab_0x140015e5d;
    } else {
        uint64_t v40 = *(int64_t *)v1; // 0x140015e3f
        if (v40 == 0) {
            goto lab_0x140015e5d;
        } else {
            int64_t v41 = *(int64_t *)v1; // 0x140015e4c
            v37 = v41;
            v38 = (v40 < v2 ? v2 : v40) - v41;
            goto lab_0x140015e83;
        }
    }
  lab_0x140015e5d:
    if ((v39 & 4) != 0) {
        goto lab_0x140015e8c;
    } else {
        int64_t v42 = *(int64_t *)v1; // 0x140015e66
        if (v42 == 0) {
            goto lab_0x140015e8c;
        } else {
            int64_t v43 = *(int64_t *)v1; // 0x140015e73
            v37 = v43;
            int32_t * v44; // 0x140015ad0
            v38 = v42 - v43 + (int64_t)*v44;
            goto lab_0x140015e83;
        }
    }
  lab_0x140015cf0:;
    int64_t v45 = v30;
    int64_t v46 = v31;
    int64_t v47 = 8 * v46;
    int64_t v48 = *(int64_t *)*(int64_t *)(v47 + v29); // 0x140015cf4
    int64_t v49; // 0x140015ad0
    int64_t v50; // 0x140015ad0
    if ((char)v48 == 0) {
        // 0x140015cf0
        v10 = v47;
        v50 = v46;
        v49 = v45;
        v12 = &v3;
        v11 = (int64_t)"      ";
    } else {
        int64_t v51 = function_14001a060(&v3, "  -"); // 0x140015d1b
        v10 = v47;
        v50 = v46;
        v49 = v45;
        v12 = function_14001a230(v51, v48 & 255);
        v11 = (int64_t)", ";
    }
    goto lab_0x140015d47;
  lab_0x140015e8c:;
    // 0x140015e8c
    int64_t v68; // bp-376, 0x140015ad0
    int64_t v69 = &v68; // 0x140015ae1
    int32_t v70 = *(int32_t *)(v3 + 4); // 0x140015e91
    *(int64_t *)(v69 + 80 + (int64_t)v70) = (int64_t)&g19;
    int32_t v71 = *(int32_t *)(v3 + 4); // 0x140015ea6
    *(int32_t *)(v69 + 76 + (int64_t)v71) = v71 - 136;
    int64_t v72; // bp-288, 0x140015ad0
    function_1400192f0(&v72);
    _3f__3f_1_3f__24_basic_ostream_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_UEAA_40_XZ();
    _3f__3f_1_3f__24_basic_ios_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_UEAA_40_XZ();
    __security_check_cookie(g66);
    return &g103;
  lab_0x140015d47:;
    int64_t v52 = v49;
    int64_t v53 = v10;
    function_14001a060((int64_t *)v12, (char *)v11);
    int64_t v54 = *(int64_t *)*(int64_t *)(*v7 + v53); // 0x140015d57
    int64_t v55 = function_14001a060(&v3, "--"); // 0x140015d6c
    int64_t v56 = v54; // 0x140015d79
    if (*(int64_t *)(v54 + 24) >= 16) {
        // 0x140015d7b
        v56 = *(int64_t *)v54;
    }
    int64_t v57 = v56;
    function_14001c100(v55, v57, *(int64_t *)(v54 + 16));
    int64_t v58 = *(int64_t *)*(int64_t *)(*v7 + v53); // 0x140015d92
    uint64_t v59 = *(int64_t *)(v58 + 16); // 0x140015d98
    int64_t v60 = v58; // 0x140015d9f
    if (v52 > v59) {
        int64_t v61 = v57; // 0x140015da7
        int64_t v62 = v52 - v59; // 0x140015da7
        v61 = v61 & -256 | 32;
        function_14001a230((int64_t)&v3, v61);
        while (v62 != 1) {
            // 0x140015db0
            v62--;
            v61 = v61 & -256 | 32;
            function_14001a230((int64_t)&v3, v61);
        }
        // 0x140015dc2
        v60 = *(int64_t *)*(int64_t *)(*v7 + v53);
    }
    int64_t v63 = v60; // 0x140015dca
    int64_t v64 = v63; // 0x140015dd8
    if (*(int64_t *)(v63 + 24) >= 16) {
        // 0x140015dda
        v64 = *(int64_t *)v63;
    }
    int64_t v65 = *(int64_t *)(v63 + 16); // 0x140015ddd
    function_14001c100((int64_t)&v3, v64, v65);
    _3f__3f_6_3f__24_basic_ostream_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_QEAAAEAV01_40_P6AAEAV01_40_AEAV01_40__40_Z_40_Z((int64_t * (*)(int64_t *))&g103);
    int64_t v66 = v50 + 1; // 0x140015dfb
    int64_t v67 = *v7; // 0x140015dfe
    v29 = v67;
    v31 = v66;
    v30 = v52;
    if (v66 < *v9 - v67 >> 3) {
        goto lab_0x140015cf0;
    } else {
        goto lab_0x140015e16;
    }
  lab_0x140015e83:
    // 0x140015e83
    function_140019e40(a2, (char *)v37, v38);
    goto lab_0x140015e8c;
}

// Address range: 0x140015f00 - 0x1400160d5
int64_t function_140015f00(int64_t a1, int64_t a2, int64_t a3) {
    char v1; // bp-144, 0x140015f00
    if ((int32_t)a2 == 1 == (char)a3 == 0) {
        // 0x140015fec
        function_140015ad0(a1, &v1);
        function_14001a580();
        function_1400198c0(&v1);
        exit(0);
        // UNREACHABLE
    }
    // 0x140015f2e
    v1 = 0;
    function_140019e40(&v1, "help", 4);
    int64_t v2; // bp-104, 0x140015f00
    if (function_1400196c0(a1, (int128_t *)&v1) == 0) {
        // 0x1400160a5
        function_14001a3f0(&v2, "there is no flag: --", &v1);
        int64_t v3; // bp-72, 0x140015f00
        function_140014260(&v3);
        _CxxThrowException(&v3, &g61);
        // UNREACHABLE
    }
    // 0x140015f7c
    int64_t v4; // bp-112, 0x140015f00
    int64_t v5 = *(int64_t *)function_1400197b0(a1, &v4, &v1); // 0x140015f89
    int64_t result = *(int64_t *)*(int64_t *)(v5 + 64); // 0x140015f90
    if ((char)result != 0) {
        // 0x140015fec
        function_140015ad0(a1, &v1);
        function_14001a580();
        function_1400198c0(&v1);
        exit(0);
        // UNREACHABLE
    }
    if ((char)a3 != 0) {
        // 0x14001608c
        return result;
    }
    // 0x140016022
    function_140015ad0(a1, (char *)&v2);
    function_14001a580();
    _3f__3f_6_3f__24_basic_ostream_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_QEAAAEAV01_40_P6AAEAV01_40_AEAV01_40__40_Z_40_Z((int64_t * (*)(int64_t *))&g103);
    function_14001a580();
    function_1400198c0(&v1);
    function_1400198c0((char *)&v2);
    exit(1);
    // UNREACHABLE
}

// Address range: 0x1400160e0 - 0x1400162d0
int64_t function_1400160e0(int64_t a1, int128_t * a2) {
    int64_t v1 = (int64_t)a2;
    int64_t v2; // 0x1400160e0
    int64_t v3; // 0x1400160e0
    int64_t v4; // 0x1400160e0
    int128_t v5; // bp-40, 0x1400160e0
    int64_t v6; // 0x1400160e0
    int128_t v7; // 0x1400160e0
    if (function_1400196c0(a1, a2) != 0) {
        int64_t v8 = *(int64_t *)function_14001adf0(a1, (char *)&v5, a2); // 0x1400161e1
        int64_t result = *(int64_t *)*(int64_t *)(v8 + 64); // 0x1400161e8
        if ((char)result != 0) {
            // 0x1400161c3
            return result;
        }
        // 0x1400161f2
        if (-*(int64_t *)(v1 + 16) < 0x8000000000000017) {
            goto lab_0x1400162c1;
        } else {
            int64_t v9 = &v5; // 0x1400161d4
            function_14001bda0((char *)&v5, v9);
            int64_t * v10 = (int64_t *)(a1 + 136); // 0x140016243
            int64_t v11 = *v10; // 0x140016243
            if (v11 != *(int64_t *)(a1 + 144)) {
                // 0x14001627e
                __asm_movups(*(int128_t *)v11, __asm_movups_1(0));
                __asm_movups(*(int128_t *)(v11 + 16), __asm_movups_1(v7));
                v5 = 0;
                *v10 = *v10 + 32;
                // 0x1400161c3
                return 15;
            }
            // 0x14001627e
            function_14001ab60(a1 + 128, v11, (char *)&v5);
            if (v6 < 16) {
                // 0x1400161c3
                return result;
            }
            int64_t v12 = v6 + 1; // 0x140016288
            int64_t v13 = v5; // 0x14001628c
            v3 = v13;
            v4 = v12;
            v2 = v9;
            if (v12 < 0x1000) {
                return function_14001ea5c(v3, v4, v2);
            } else {
                int64_t v14 = v13 - 8;
                int64_t v15 = *(int64_t *)v14; // 0x1400162a5
                v3 = v15;
                v4 = v6 + 40;
                v2 = v9;
                if (v14 - v15 < 32) {
                    return function_14001ea5c(v3, v4, v2);
                } else {
                    // 0x1400162ba
                    _invalid_parameter_noinfo_noreturn();
                    __asm_int3();
                    goto lab_0x1400162c1;
                }
            }
        }
    } else {
        // 0x1400160fe
        if (-*(int64_t *)(v1 + 16) < 0x8000000000000015) {
            goto lab_0x1400162c1;
        } else {
            // 0x140016119
            function_14001bda0((char *)&v5, v1);
            int64_t * v16 = (int64_t *)(a1 + 136); // 0x14001614f
            int64_t v17 = *v16; // 0x14001614f
            if (v17 != *(int64_t *)(a1 + 144)) {
                // 0x14001618a
                __asm_movups(*(int128_t *)v17, __asm_movups_1(0));
                __asm_movups(*(int128_t *)(v17 + 16), __asm_movups_1(v7));
                v5 = 0;
                *v16 = *v16 + 32;
                // 0x1400161c3
                return 15;
            }
            // 0x14001618a
            function_14001ab60(a1 + 128, v17, (char *)&v5);
            if (v6 < 16) {
                // 0x1400161c3
                int64_t result2; // 0x1400160e0
                return result2;
            }
            int64_t v18 = &v5; // 0x14001617b
            int64_t v19 = v6 + 1; // 0x140016190
            int64_t v20 = v5; // 0x140016194
            v3 = v20;
            v4 = v19;
            v2 = v18;
            if (v19 < 0x1000) {
                return function_14001ea5c(v3, v4, v2);
            } else {
                int64_t v21 = v20 - 8;
                int64_t v22 = *(int64_t *)v21; // 0x1400161a9
                v3 = v22;
                v4 = v6 + 40;
                v2 = v18;
                if (v21 - v22 < 32) {
                    return function_14001ea5c(v3, v4, v2);
                } else {
                    // 0x1400162ba
                    _invalid_parameter_noinfo_noreturn();
                    __asm_int3();
                    goto lab_0x1400162c1;
                }
            }
        }
    }
  lab_0x1400162c1:
    // 0x1400162c1
    function_1400011e0();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    return __asm_int3();
    // 0x1400161c3
    return function_14001ea5c(v3, v4, v2);
}

// Address range: 0x1400162d0 - 0x14001665b
int64_t function_1400162d0(int64_t a1, char * a2, int128_t * a3) {
    int64_t v1 = (int64_t)a2;
    int64_t v2 = v1; // 0x1400162f9
    int64_t v3; // 0x1400162d0
    int64_t v4; // 0x1400162d0
    int64_t v5; // 0x1400162d0
    int64_t v6; // 0x1400162d0
    int128_t v7; // bp-104, 0x1400162d0
    int64_t v8; // 0x1400162d0
    int128_t v9; // 0x1400162d0
    if (function_1400196c0(a1, (int128_t *)a2) != 0) {
        goto lab_0x1400163c7;
    } else {
        int64_t v10 = *(int64_t *)(v1 + 16); // 0x1400162ff
        v5 = a1;
        if (-v10 < 0x8000000000000015) {
            goto lab_0x140016646;
        } else {
            int64_t result = function_14001bda0((char *)&v7, v10); // 0x140016342
            int64_t * v11 = (int64_t *)(a1 + 136); // 0x14001634f
            int64_t v12 = *v11; // 0x14001634f
            if (v12 != *(int64_t *)(a1 + 144)) {
                // 0x140016385
                __asm_movups(*(int128_t *)v12, __asm_movups_1(0));
                __asm_movups(*(int128_t *)(v12 + 16), __asm_movups_1(v9));
                v7 = 0;
                *v11 = *v11 + 32;
                // 0x140016629
                return result;
            }
            int64_t result2 = function_14001ab60(a1 + 128, v12, (char *)&v7); // 0x14001637c
            if (v8 < 16) {
                // 0x140016629
                return result2;
            }
            int64_t v13 = &v7; // 0x140016378
            int64_t v14 = v8 + 1; // 0x14001638f
            int64_t v15 = v7; // 0x140016393
            v4 = v15;
            v6 = v14;
            v3 = v13;
            if (v14 < 0x1000) {
                return function_14001ea5c(v4, v6, v3);
            } else {
                int64_t v16 = v15 - 8;
                int64_t v17 = *(int64_t *)v16; // 0x1400163ab
                v4 = v17;
                v6 = v8 + 40;
                v3 = v13;
                if (v16 - v17 < 32) {
                    return function_14001ea5c(v4, v6, v3);
                } else {
                    // 0x1400163c0
                    v2 = *(int64_t *)(v1 + 24) < 16 ? v1 : v10;
                    _invalid_parameter_noinfo_noreturn();
                    __asm_int3();
                    goto lab_0x1400163c7;
                }
            }
        }
    }
  lab_0x1400163c7:;
    // 0x1400163c7
    int128_t v18; // bp-136, 0x1400162d0
    int64_t v19 = function_14001adf0(a1, (char *)&v18, (int128_t *)v2); // 0x1400163d1
    int64_t result3 = *(int64_t *)*(int64_t *)(*(int64_t *)v19 + 64); // 0x1400163dd
    if ((char)result3 != 0) {
        // 0x140016629
        return result3;
    }
    int64_t v20 = *(int64_t *)(v2 + 16); // 0x1400163ee
    if (-v20 < 0x800000000000001c) {
        // 0x140016640
        function_1400011e0();
        __asm_int3();
        v5 = v20;
        goto lab_0x140016646;
    } else {
        int64_t v21 = (int64_t)a3;
        function_14001bda0((char *)&v7, v21);
        int64_t v22 = v9; // 0x140016437
        int64_t v23; // 0x1400162d0
        if (v8 == v22) {
            // 0x14001646c
            v23 = function_14001b1b0((int64_t *)&v7, 1);
        } else {
            int64_t v24 = &v7; // 0x140016453
            *(int16_t *)((v8 >= 16 ? (int64_t)v7 : v24) + v22) = 61;
            v23 = v24;
        }
        // 0x14001648a
        __asm_movups(0, __asm_movups_1(*(int128_t *)v23));
        int64_t v25 = v23 + 16; // 0x14001649c
        __asm_movups(0, __asm_movups_1(*(int128_t *)v25));
        *(int64_t *)v25 = 0;
        *(int64_t *)(v23 + 24) = 15;
        *(char *)v23 = 0;
        int64_t v26 = *(int64_t *)(v21 + 16); // 0x1400164c1
        char * v27; // 0x1400162d0
        int64_t v28; // 0x1400162d0
        int64_t v29; // 0x1400162d0
        if (v26 == 0) {
            uint64_t v30 = *(int64_t *)(v21 + 24); // 0x1400164b7
            memmove((int64_t *)&v18, (int64_t *)(v30 < 16 ? v21 : v2), 0);
            *(char *)&v18 = 0;
            v27 = (char *)&v18;
            v28 = 0;
            v29 = &v18;
        } else {
            int64_t v31 = function_14001b1b0((int64_t *)&v18, v26); // 0x140016514
            v27 = (char *)v31;
            v28 = v2;
            v29 = v31;
        }
        int128_t v32 = __asm_movups_1(*(int128_t *)v29); // 0x140016519
        int128_t v33; // bp-72, 0x1400162d0
        __asm_movups(v33, v32);
        int64_t v34 = v29 + 16; // 0x140016520
        int128_t v35 = __asm_movups_1(*(int128_t *)v34); // 0x140016520
        __asm_movups(v9, v35);
        *(int64_t *)v34 = 0;
        *(int64_t *)(v29 + 24) = 15;
        *v27 = 0;
        int64_t * v36 = (int64_t *)(a1 + 136); // 0x14001653a
        int64_t v37 = *v36; // 0x14001653a
        int64_t v38; // 0x1400162d0
        int64_t result4; // 0x1400162d0
        if (v37 == *(int64_t *)(a1 + 144)) {
            int64_t v39 = &v33; // 0x140016559
            int64_t v40 = function_14001ab60(a1 + 128, v37, (char *)&v33); // 0x14001655d
            v38 = v39;
            result4 = v40;
            if (v8 >= 16) {
                int64_t v41 = v8 + 1; // 0x14001656c
                int64_t v42 = v33; // 0x14001656f
                int64_t v43 = v42; // 0x14001657d
                int64_t v44 = v41; // 0x14001657d
                if (v41 >= 0x1000) {
                    int64_t v45 = v8 + 40; // 0x14001657f
                    int64_t v46 = v42 - 8;
                    int64_t v47 = *(int64_t *)v46; // 0x140016583
                    v43 = v47;
                    v44 = v45;
                    if (v46 - v47 >= 32) {
                        // 0x140016594
                        _invalid_parameter_noinfo_noreturn();
                        __asm_int3();
                        v43 = v47;
                        v44 = v45;
                    }
                }
                int64_t v48 = function_14001ea5c(v43, v44, v39); // 0x14001659b
                v38 = v39;
                result4 = v48;
            }
        } else {
            // 0x140016566
            __asm_movups(*(int128_t *)v37, v32);
            __asm_movups(*(int128_t *)(v37 + 16), v35);
            v33 = 0;
            *v36 = *v36 + 32;
            v38 = v28;
            result4 = v29;
        }
        // 0x1400165df
        v18 = 0;
        if (v8 < 16) {
            // 0x140016629
            return result4;
        }
        int64_t v49 = v8 + 1; // 0x1400165f5
        int64_t v50 = v7; // 0x1400165f8
        v4 = v50;
        v6 = v49;
        v3 = v38;
        if (v49 >= 0x1000) {
            int64_t v51 = v8 + 40; // 0x140016608
            int64_t v52 = v50 - 8;
            int64_t v53 = *(int64_t *)v52; // 0x14001660c
            v4 = v53;
            v6 = v51;
            v3 = v38;
            if (v52 - v53 >= 32) {
                // 0x14001661d
                _invalid_parameter_noinfo_noreturn();
                __asm_int3();
                v4 = v53;
                v6 = v51;
                v3 = v38;
            }
        }
        return function_14001ea5c(v4, v6, v3);
    }
  lab_0x140016646:
    // 0x140016646
    function_1400011e0();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    *(int64_t *)v5 = (int64_t)&g28;
    return &g28;
    // 0x140016629
    return function_14001ea5c(v4, v6, v3);
}

// Address range: 0x140016660 - 0x140016663
int64_t function_140016660(void) {
    // 0x140016660
    int64_t v1; // 0x140016660
    return v1 & -256;
}

// Address range: 0x140016670 - 0x140016677
int64_t function_140016670(int64_t a1) {
    // 0x140016670
    *(char *)(a1 + 80) = 1;
    int64_t v1; // 0x140016670
    return v1 & -256 | 1;
}

// Address range: 0x140016680 - 0x140016685
int64_t function_140016680(int64_t a1) {
    // 0x140016680
    return (int64_t)*(char *)(a1 + 80);
}

// Address range: 0x140016690 - 0x140016693
int64_t function_140016690(void) {
    // 0x140016690
    int64_t v1; // 0x140016690
    return v1 & -256 | 1;
}

// Address range: 0x1400166a0 - 0x1400166a5
int64_t function_1400166a0(int64_t a1) {
    // 0x1400166a0
    return a1 + 8;
}

// Address range: 0x1400166b0 - 0x1400166b5
int64_t function_1400166b0(int64_t a1) {
    // 0x1400166b0
    return (int64_t)*(char *)(a1 + 40);
}

// Address range: 0x1400166c0 - 0x1400166c5
int64_t function_1400166c0(int64_t a1) {
    // 0x1400166c0
    return a1 + 48;
}

// Address range: 0x1400166d0 - 0x14001678a
int64_t function_1400166d0(int64_t a1, int64_t result) {
    // 0x1400166d0
    int128_t v1; // 0x1400166d0
    int128_t v2 = v1;
    int64_t v3 = *(int64_t *)(a1 + 24); // 0x1400166e7
    if ((v3 || 1) != 0x7fffffffffffffff) {
        // 0x1400166f4
        function_14001bda0((char *)result, v3);
        return result;
    }
    int64_t result2 = a1 + 8; // 0x1400166d6
    function_1400011e0();
    __asm_int3();
    __asm_int3();
    int64_t * v4 = (int64_t *)result2; // 0x14001674c
    *v4 = (int64_t)&g6;
    __asm_movups(*(int128_t *)(a1 + 16), __asm_xorps(v2, v2));
    __std_exception_copy(v3 + 8);
    *v4 = (int64_t)&g15;
    function_140019960(a1 + 32, v3 + 24);
    return result2;
}

// Address range: 0x140016790 - 0x1400167ba
int64_t function_140016790(int128_t * a1) {
    int64_t v1 = (int64_t)a1;
    int64_t v2 = *(int64_t *)(v1 + 8); // 0x14001679f
    function_14001c6f0(v1, v1, v2);
    return function_14001ea5c(v1, 72, v2);
}

// Address range: 0x1400167c0 - 0x14001681f
int64_t function_1400167c0(int64_t a1) {
    int32_t v1 = *(int32_t *)(a1 + 4); // 0x1400167d4
    *(int64_t *)((int64_t)v1 + a1) = (int64_t)&g19;
    int32_t v2 = *(int32_t *)(*(int64_t *)a1 + 4); // 0x1400167ee
    *(int32_t *)(a1 - 4 + (int64_t)v2) = v2 - 136;
    function_1400192f0((int64_t *)(a1 + 8));
    _3f__3f_1_3f__24_basic_ostream_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_UEAA_40_XZ();
    _3f__3f_1_3f__24_basic_ios_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_UEAA_40_XZ();
    return &g103;
}

// Address range: 0x140016850 - 0x140016940
int64_t function_140016850(int64_t result, int64_t a2) {
    int64_t * v1 = (int64_t *)result; // 0x140016863
    *v1 = (int64_t)&g32;
    int64_t * v2 = (int64_t *)(result + 72); // 0x140016869
    uint64_t v3 = *v2; // 0x140016869
    int64_t v4 = result + 48;
    int64_t v5; // 0x140016850
    int64_t v6; // 0x140016850
    int64_t v7; // 0x140016850
    if (v3 < 16) {
        goto lab_0x1400168a4;
    } else {
        int64_t v8 = *(int64_t *)v4; // 0x140016873
        int64_t v9 = v3 + 1; // 0x140016877
        v6 = v8;
        v7 = v9;
        if (v9 < 0x1000) {
            goto lab_0x14001689f;
        } else {
            int64_t v10 = v8 - 8;
            int64_t v11 = *(int64_t *)v10; // 0x140016883
            if (v10 - v11 < 32) {
                // 0x14001689c
                v6 = v11;
                v7 = v3 + 40;
                v5 = v11;
                goto lab_0x14001689f;
            } else {
                goto lab_0x14001692e;
            }
        }
    }
  lab_0x1400168a4:
    // 0x1400168a4
    *(int64_t *)(result + 64) = 0;
    *v2 = 15;
    *(char *)v4 = 0;
    int64_t * v12 = (int64_t *)(result + 32); // 0x1400168b8
    uint64_t v13 = *v12; // 0x1400168b8
    int64_t v14 = result + 8;
    int64_t v15; // 0x140016850
    int64_t v16 = v15; // 0x1400168c0
    int64_t v17; // 0x140016850
    int64_t v18; // 0x140016850
    int64_t v19; // 0x140016850
    if (v13 < 16) {
        goto lab_0x1400168ef;
    } else {
        int64_t v20 = *(int64_t *)v14; // 0x1400168c2
        int64_t v21 = v13 + 1; // 0x1400168c6
        v18 = v20;
        v19 = v21;
        v17 = v15;
        if (v21 < 0x1000) {
            goto lab_0x1400168ea;
        } else {
            int64_t v22 = v20 - 8;
            int64_t v23 = *(int64_t *)v22; // 0x1400168d2
            if (v22 - v23 < 32) {
                // 0x1400168e7
                v18 = v23;
                v19 = v13 + 40;
                v17 = v23;
                goto lab_0x1400168ea;
            } else {
                goto lab_0x14001692e;
            }
        }
    }
  lab_0x1400168ef:
    // 0x1400168ef
    *(int64_t *)(result + 24) = 0;
    *v12 = 15;
    *(char *)v14 = 0;
    *v1 = (int64_t)&g28;
    if ((a2 & 1) != 0) {
        // 0x140016913
        function_14001ea5c(result, 88, v16);
    }
    // 0x140016920
    return result;
  lab_0x14001689f:
    // 0x14001689f
    function_14001ea5c(v6, v7, v5);
    v15 = v5;
    goto lab_0x1400168a4;
  lab_0x1400168ea:
    // 0x1400168ea
    function_14001ea5c(v18, v19, v17);
    v16 = v17;
    goto lab_0x1400168ef;
  lab_0x14001692e:
    // 0x14001692e
    _invalid_parameter_noinfo_noreturn();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    return __asm_int3();
}

// Address range: 0x140016940 - 0x140018c7d
int64_t function_140016940(uint32_t a1, int64_t a2) {
    // 0x140016940
    int128_t v1; // 0x140016940
    int128_t v2 = v1;
    int128_t v3 = v1;
    int128_t v4 = v1;
    int64_t v5 = __asm_movaps(v2); // 0x140016960
    int64_t v6 = __asm_movaps(v1); // 0x140016964
    int64_t v7 = __asm_movaps(v1); // 0x140016968
    int64_t v8 = __asm_movaps(v1); // 0x14001696d
    int64_t v9 = *(int64_t *)0x1400211b8; // 0x140016996
    function_14001a060((int64_t *)v9, (char *)&g12);
    _3f__3f_6_3f__24_basic_ostream_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_QEAAAEAV01_40_P6AAEAV01_40_AEAV01_40__40_Z_40_Z((int64_t * (*)(int64_t *))&g103);
    int128_t v10 = __asm_xorps(v4, v4); // 0x1400169b2
    __asm_movups(v1, v10);
    __asm_movups(v1, v10);
    __asm_movups(v1, v10);
    __asm_movups(v1, v10);
    __asm_movups(v1, v10);
    __asm_movups(v1, v10);
    __asm_movups(v1, v10);
    __asm_movups(v1, v10);
    __asm_movups(v1, v10);
    int64_t v11 = function_14001e5fc((int64_t)(int32_t)((int64_t)((int32_t)&g103 ^ (int32_t)&g103) + 72)); // 0x140016a0e
    *(int64_t *)v11 = v11;
    *(int64_t *)(v11 + 8) = v11;
    *(int64_t *)(v11 + 16) = v11;
    *(int16_t *)(v11 + 24) = 257;
    int128_t v12 = v11; // bp-632, 0x140016a24
    int128_t v13 = __asm_xorps(v10, v10); // 0x140016a2b
    __asm_movdqu(v13);
    __asm_movdqu(v13);
    int128_t v14 = __asm_xorps(v3, v3); // 0x140016a7e
    __asm_movdqu(v14);
    int128_t v15 = 0; // bp-1008, 0x140016aa2
    function_140019e40((char *)&v15, "source image folder path", 24);
    int128_t v16 = 0; // bp-1080, 0x140016adb
    function_140019e40((char *)&v16, "folderpath", 10);
    int64_t * v17 = NULL; // bp-1448, 0x140016b09
    int64_t v18 = (int64_t)&v17; // 0x140016b1a
    int64_t v19; // bp-976, 0x140016940
    int64_t v20 = &v19; // 0x140016b1f
    int64_t v21 = function_140019960(v20, v18); // 0x140016b26
    function_14001c2c0(&v12, (char *)&v16, 112, (char *)&v15, 1, v21);
    v17 = NULL;
    v16 = 0;
    v15 = 0;
    function_140019e40((char *)&v15, "image name", 10);
    v16 = 0;
    function_140019e40((char *)&v16, "name", 4);
    v17 = NULL;
    int64_t v22 = function_140019960(v20, v18); // 0x140016cd8
    function_14001c2c0(&v12, (char *)&v16, 110, (char *)&v15, 1, v22);
    v17 = NULL;
    v16 = 0;
    v15 = 0;
    function_140019e40((char *)&v15, "folder path and image name", 26);
    v16 = 0;
    function_140019e40((char *)&v16, "exportpath", 10);
    v17 = NULL;
    int128_t * v23 = (int128_t *)&v17; // bp-1048, 0x140016e77
    int64_t v24 = function_140019960(v20, v18); // 0x140016e8a
    function_14001c2c0(&v12, (char *)&v16, 101, (char *)&v15, 1, v24);
    v17 = NULL;
    v16 = 0;
    v15 = 0;
    function_140019e40((char *)&v15, "blending times", 14);
    v17 = NULL;
    function_140019e40((char *)&v17, "blendingtimes", 13);
    function_14001c560(&v12, (char *)&v17, 98, (char *)&v15, 1, 0);
    v17 = NULL;
    function_140015720(&v12, (int64_t)a1, a2);
    v17 = NULL;
    function_140019e40((char *)&v17, "folderpath", 10);
    int64_t v25 = &v12; // 0x140017107
    int128_t * v26; // bp-688, 0x140016940
    if (function_1400196c0(v25, (int128_t *)&v17) == 0) {
        // 0x140018a2c
        function_14001a3f0((int64_t *)&v15, "there is no flag: --", (char *)&v17);
        function_140014260((int64_t *)&v26);
        _CxxThrowException((int64_t *)&v26, &g61);
        // UNREACHABLE
    }
    int64_t v27 = function_1400197b0(v25, (int64_t *)&v23, (char *)&v17); // 0x14001712f
    int64_t v28 = *(int64_t *)(*(int64_t *)v27 + 64); // 0x14001714c
    int64_t * v29 = __RTDynamicCast((int64_t *)v28, 0, (int64_t *)&g81, (int64_t *)&g84, false); // 0x140017150
    int64_t v30; // bp-1376, 0x140016940
    int64_t v31; // bp-752, 0x140016940
    if (v29 == NULL) {
        int64_t v32 = function_14001a3f0(&v19, "type mismatch flag '", (char *)&v17); // 0x140018a76
        function_14001a680(&v31, v32, &g13);
        function_140014260(&v30);
        _CxxThrowException(&v30, &g61);
        // UNREACHABLE
    }
    int64_t v33 = (int64_t)v29; // 0x140017150
    int64_t v34 = v33 + 120; // 0x14001715e
    uint64_t v35 = *(int64_t *)(v33 + 136); // 0x140017170
    int64_t v36 = v34; // 0x140017179
    if (*(int64_t *)(v33 + 144) >= 16) {
        // 0x14001717b
        v36 = *(int64_t *)v34;
    }
    // 0x14001717e
    if (v35 >= 16) {
        uint64_t v37 = v35 | 15; // 0x1400171a8
        int64_t v38 = v37 < 0x7fffffffffffffff ? v37 : 0x7fffffffffffffff; // 0x1400171af
        uint64_t v39 = v38 + 1; // 0x1400171b3
        int64_t v40; // 0x140016940
        if (v39 < 0x1000) {
            // 0x1400171f7
            v40 = function_14001e5fc(v39);
        } else {
            int64_t v41 = function_14001e5fc(v38 + 40); // 0x1400171d0
            if (v41 == 0) {
                // 0x1400171f2
                _invalid_parameter_noinfo_noreturn();
                __asm_int3();
                v40 = 0;
            } else {
                int64_t v42 = v41 + 39 & -32; // 0x1400171e1
                *(int64_t *)(v42 - 8) = v41;
                v40 = v42;
            }
        }
        // 0x140017201
        v16 = v40;
        memcpy((int64_t *)v40, (int64_t *)v36, (int32_t)v35 + 1);
    } else {
        // 0x14001718e
        __asm_movups(0, __asm_movups_1(*(int128_t *)v36));
    }
    // 0x140017265
    v17 = NULL;
    function_140019e40((char *)&v17, "name", 4);
    if (function_1400196c0(v25, (int128_t *)&v17) == 0) {
        // 0x140018ab6
        function_14001a3f0(&v19, "there is no flag: --", (char *)&v17);
        function_140014260(&v30);
        _CxxThrowException(&v30, &g61);
        // UNREACHABLE
    }
    int64_t v43 = function_1400197b0(v25, (int64_t *)&v23, (char *)&v17); // 0x1400172bd
    int64_t v44 = *(int64_t *)(*(int64_t *)v43 + 64); // 0x1400172da
    int64_t * v45 = __RTDynamicCast((int64_t *)v44, 0, (int64_t *)&g81, (int64_t *)&g84, false); // 0x1400172de
    int64_t v46; // bp-472, 0x140016940
    if (v45 == NULL) {
        int64_t v47 = function_14001a3f0(&v31, "type mismatch flag '", (char *)&v17); // 0x140018afa
        function_14001a680((int64_t *)&v26, v47, &g13);
        function_140014260(&v46);
        _CxxThrowException(&v46, &g61);
        // UNREACHABLE
    }
    int64_t v48 = (int64_t)v45; // 0x1400172de
    int64_t v49 = v48 + 120; // 0x1400172ec
    uint64_t v50 = *(int64_t *)(v48 + 136); // 0x1400172fe
    int64_t v51 = v49; // 0x140017307
    if (*(int64_t *)(v48 + 144) >= 16) {
        // 0x140017309
        v51 = *(int64_t *)v49;
    }
    // 0x14001730c
    if (v50 >= 16) {
        uint64_t v52 = v50 | 15; // 0x14001732c
        int64_t v53 = v52 < 0x7fffffffffffffff ? v52 : 0x7fffffffffffffff; // 0x140017333
        uint64_t v54 = v53 + 1; // 0x140017337
        int64_t v55; // 0x140016940
        if (v54 < 0x1000) {
            // 0x14001737b
            v55 = function_14001e5fc(v54);
        } else {
            int64_t v56 = function_14001e5fc(v53 + 40); // 0x140017354
            if (v56 == 0) {
                // 0x140017376
                _invalid_parameter_noinfo_noreturn();
                __asm_int3();
                v55 = 0;
            } else {
                int64_t v57 = v56 + 39 & -32; // 0x140017365
                *(int64_t *)(v57 - 8) = v56;
                v55 = v57;
            }
        }
        // 0x140017385
        v15 = v55;
        memcpy((int64_t *)v55, (int64_t *)v51, (int32_t)v50 + 1);
    } else {
        // 0x140017312
        __asm_movups(0, __asm_movups_1(*(int128_t *)v51));
    }
    // 0x1400173e9
    v17 = NULL;
    function_140019e40((char *)&v17, "exportpath", 10);
    if (function_1400196c0(v25, (int128_t *)&v17) == 0) {
        // 0x140018b40
        function_14001a3f0(&v19, "there is no flag: --", (char *)&v17);
        function_140014260(&v46);
        _CxxThrowException(&v46, &g61);
        // UNREACHABLE
    }
    int64_t v58 = function_1400197b0(v25, (int64_t *)&v23, (char *)&v17); // 0x140017441
    int64_t v59 = *(int64_t *)(*(int64_t *)v58 + 64); // 0x14001745e
    int64_t * v60 = __RTDynamicCast((int64_t *)v59, 0, (int64_t *)&g81, (int64_t *)&g84, false); // 0x140017462
    if (v60 == NULL) {
        int64_t v61 = function_14001a3f0(&v31, "type mismatch flag '", (char *)&v17); // 0x140018b8a
        function_14001a680((int64_t *)&v26, v61, &g13);
        function_140014260(&v30);
        _CxxThrowException(&v30, &g61);
        // UNREACHABLE
    }
    int64_t v62 = (int64_t)v60; // 0x140017462
    int64_t v63 = v62 + 120; // 0x140017470
    uint64_t v64 = *(int64_t *)(v62 + 136); // 0x140017482
    int64_t v65 = v63; // 0x14001748b
    if (*(int64_t *)(v62 + 144) >= 16) {
        // 0x14001748d
        v65 = *(int64_t *)v63;
    }
    // 0x140017490
    int128_t v66; // bp-720, 0x140016940
    if (v64 >= 16) {
        uint64_t v67 = v64 | 15; // 0x1400174b0
        int64_t v68 = v67 < 0x7fffffffffffffff ? v67 : 0x7fffffffffffffff; // 0x1400174b7
        uint64_t v69 = v68 + 1; // 0x1400174bb
        int64_t v70; // 0x140016940
        if (v69 < 0x1000) {
            // 0x1400174ff
            v70 = function_14001e5fc(v69);
        } else {
            int64_t v71 = function_14001e5fc(v68 + 40); // 0x1400174d8
            if (v71 == 0) {
                // 0x1400174fa
                _invalid_parameter_noinfo_noreturn();
                __asm_int3();
                v70 = 0;
            } else {
                int64_t v72 = v71 + 39 & -32; // 0x1400174e9
                *(int64_t *)(v72 - 8) = v71;
                v70 = v72;
            }
        }
        // 0x140017509
        v66 = v70;
        memcpy((int64_t *)v70, (int64_t *)v65, (int32_t)v64 + 1);
    } else {
        // 0x140017496
        __asm_movups(v66, __asm_movups_1(*(int128_t *)v65));
    }
    // 0x14001756a
    v17 = NULL;
    function_140019e40((char *)&v17, "blendingtimes", 13);
    if (function_1400196c0(v25, (int128_t *)&v17) == 0) {
        // 0x140018bca
        function_14001a3f0(&v19, "there is no flag: --", (char *)&v17);
        function_140014260(&v46);
        _CxxThrowException(&v46, &g61);
        // UNREACHABLE
    }
    int64_t v73 = function_1400197b0(v25, (int64_t *)&v23, (char *)&v17); // 0x1400175c2
    int64_t v74 = *(int64_t *)(*(int64_t *)v73 + 64); // 0x1400175df
    int64_t * v75 = __RTDynamicCast((int64_t *)v74, 0, (int64_t *)&g81, (int64_t *)&g83, false); // 0x1400175e3
    if (v75 == NULL) {
        int64_t v76 = function_14001a3f0(&v31, "type mismatch flag '", (char *)&v17); // 0x140018c14
        function_14001a680((int64_t *)&v26, v76, &g13);
        function_140014260(&v30);
        _CxxThrowException(&v30, &g61);
        // UNREACHABLE
    }
    // 0x1400175f1
    int64_t v77; // bp-1256, 0x140016940
    int64_t v78 = &v77; // 0x140016952
    int32_t v79 = *(int32_t *)((int64_t)v75 + 88); // 0x1400175f1
    int32_t v80 = v79 > 19 ? v79 + 1 : 21;
    int128_t v81 = __asm_cvtdq2ps(__asm_movd(v80)); // 0x14001764b
    int128_t v82 = __asm_movaps_2(v81); // 0x14001764f
    int128_t v83 = __asm_movss(0x3f800000); // 0x140017653
    int128_t v84 = __asm_subss(v82, v83); // 0x14001765b
    int128_t v85 = __asm_divss(__asm_movaps_2(v83), v84); // 0x140017663
    int64_t v86; // bp-392, 0x140016940
    memset(&v86, 0, 248);
    v86 = &g35;
    _3f__3f_0_3f__24_basic_ios_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_IEAA_40_XZ();
    _3f__3f_0_3f__24_basic_iostream_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_QEAA_40_PEAV_3f__24_basic_streambuf_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_1_40__40_Z((int64_t *)1);
    *(int64_t *)(v78 + 1016) = (int64_t)&g31;
    *(int32_t *)(v78 + 1012) = (int32_t)&g30;
    int64_t v87; // bp-368, 0x140016940
    function_140019cb0(&v87, (char *)&v15, 3);
    char v88 = 0; // bp-856, 0x140017726
    int128_t v89 = __asm_xorps(v14, v14); // 0x14001772d
    int64_t v90 = __asm_movdqu(v89); // 0x140017730
    int128_t v91 = v90; // bp-920, 0x140017730
    v19 = __asm_movdqu(v89);
    int32_t * v92 = (int32_t *)__asm_movdqu(v89); // bp-800, 0x140017751
    function_14001a060((int64_t *)*(int64_t *)0x1400211b8, "Begin Load Texture...");
    _3f__3f_6_3f__24_basic_ostream_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_QEAAAEAV01_40_P6AAEAV01_40_AEAV01_40__40_Z_40_Z((int64_t * (*)(int64_t *))&g103);
    int64_t v93 = 3; // 0x14001777d
    v93 = v93 & -256 | 32;
    function_14001bf60(&v86, &v88, v93);
    _3f__3f_Bios_base_40_std_40__40_QEBA_NXZ();
    while (((char)&g103 & (char)&g103) != 0) {
        // 0x140017783
        v93 = v93 & -256 | 32;
        function_14001bf60(&v86, &v88, v93);
        _3f__3f_Bios_base_40_std_40__40_QEBA_NXZ();
    }
    // 0x1400178f7
    int128_t * v94; // 0x140016940
    int64_t v95 = (int64_t)v94 - v90 >> 5; // 0x140017908
    v31 = v95;
    int32_t v96; // 0x140016940
    int32_t v97; // 0x140016940
    int64_t v98; // 0x140016940
    int64_t v99; // 0x140016940
    int64_t v100; // 0x140016940
    int32_t v101; // bp-1016, 0x140016940
    int64_t v102; // bp-872, 0x140016940
    int64_t v103; // 0x140016940
    int64_t v104; // 0x140016940
    int64_t v105; // 0x140016940
    int64_t v106; // 0x140017b09
    int64_t v107; // 0x140016940
    int64_t v108; // 0x140017b1a
    int128_t v109; // 0x140016940
    int128_t v110; // 0x140016940
    if ((int32_t)v95 > 1) {
        int64_t v111 = 0x100000000 * v95 >> 32; // 0x140017940
        v102 = v111;
        v104 = (int64_t)&v26;
        int64_t v112 = 0; // 0x140016940
        int64_t v113 = v111; // 0x140017af8
        int64_t v114 = v90 + v112; // 0x140017965
        int64_t v115 = v114; // 0x14001796e
        if (*(int64_t *)(v114 + 24) >= 16) {
            // 0x140017970
            v115 = *(int64_t *)v114;
        }
        int32_t v116 = fopen_s((struct _IO_FILE **)&v101, (char *)v115, "rb"); // 0x140017981
        int64_t v117 = v116 != 0 ? 0 : (int64_t)v101; // 0x140017990
        v101 = v117;
        struct _IO_FILE * stream; // 0x140016940
        int64_t v118; // 0x140016940
        int64_t v119; // bp-1248, 0x140016940
        int64_t v120; // bp-1304, 0x140016940
        int32_t v121; // 0x140016940
        int128_t v122; // 0x1400179b9
        int128_t v123; // 0x1400179c4
        int64_t v124; // 0x140017a2c
        int128_t v125; // 0x140016940
        int128_t v126; // 0x140016940
        if (v117 != 0) {
            // 0x1400179b9
            v122 = __asm_movups_1(g73);
            __asm_movups(v1, v122);
            v123 = __asm_movsd(g74);
            __asm_movsd_3(v123);
            v77 = 1;
            function_140001d70((int64_t)&v120);
            v124 = function_140001b20();
            stream = (struct _IO_FILE *)v117;
            if (v124 != 0) {
                // 0x140017a39
                fseek(stream, (int32_t)(int64_t)&v119 - v121, SEEK_CUR);
            }
            // 0x140017a54
            fclose(stream);
            v125 = v122;
            v126 = v123;
            v118 = v124;
        } else {
            // 0x1400179a0
            *(int64_t *)(*(int64_t *)__readgsqword(88) + 16) = (int64_t)"can't fopen";
            v125 = v84;
            v126 = v89;
            v118 = 0;
        }
        int64_t v127 = v118;
        v110 = v126;
        int128_t v128 = v125;
        v26 = (int128_t *)v127;
        int64_t v129; // 0x140016940
        int64_t v130; // 0x140016940
        if (v129 == 0) {
            // 0x140017a80
            function_14001a9c0(v20, 0, v104);
            v130 = 0;
        } else {
            // 0x140017a70
            *(int64_t *)v129 = v127;
            v130 = v129 + 8;
        }
        // 0x140017a9d
        v103 = v130;
        v23 = (int128_t *)1;
        int64_t v131; // 0x140016940
        int64_t v132; // 0x140016940
        int128_t v133; // 0x140017ac8
        int128_t v134; // 0x140016940
        if (v131 == 0) {
            // 0x140017ae1
            function_14001a740((int128_t *)&v92, 0, (int64_t *)&v23);
            v132 = 0;
            v134 = v128;
        } else {
            // 0x140017ac8
            v133 = __asm_movsd(1);
            *(int64_t *)v131 = __asm_movsd_3(v133);
            v132 = v131 + 12;
            v134 = v133;
        }
        // 0x140017af4
        v109 = v134;
        v113--;
        v105 = v91;
        v112 += 32;
        while (v113 != 0) {
            int128_t v135 = v110;
            int128_t v136 = v109;
            int64_t v137 = v132;
            int64_t v138 = v103;
            v114 = v105 + v112;
            v115 = v114;
            if (*(int64_t *)(v114 + 24) >= 16) {
                // 0x140017970
                v115 = *(int64_t *)v114;
            }
            // 0x140017973
            v116 = fopen_s((struct _IO_FILE **)&v101, (char *)v115, "rb");
            v117 = v116 != 0 ? 0 : (int64_t)v101;
            v101 = v117;
            if (v117 != 0) {
                // 0x1400179b9
                v122 = __asm_movups_1(g73);
                __asm_movups(v1, v122);
                v123 = __asm_movsd(g74);
                __asm_movsd_3(v123);
                v77 = 1;
                function_140001d70((int64_t)&v120);
                v124 = function_140001b20();
                stream = (struct _IO_FILE *)v117;
                if (v124 != 0) {
                    // 0x140017a39
                    fseek(stream, (int32_t)(int64_t)&v119 - v121, SEEK_CUR);
                }
                // 0x140017a54
                fclose(stream);
                v125 = v122;
                v126 = v123;
                v118 = v124;
            } else {
                // 0x1400179a0
                *(int64_t *)(*(int64_t *)__readgsqword(88) + 16) = (int64_t)"can't fopen";
                v125 = v136;
                v126 = v135;
                v118 = 0;
            }
            // 0x140017a5d
            v127 = v118;
            v110 = v126;
            v128 = v125;
            v26 = (int128_t *)v127;
            if (v138 == 0) {
                // 0x140017a80
                function_14001a9c0(v20, 0, v104);
                v130 = 0;
            } else {
                // 0x140017a70
                *(int64_t *)v138 = v127;
                v130 = v138 + 8;
            }
            // 0x140017a9d
            v103 = v130;
            v23 = (int128_t *)1;
            if (v137 == 0) {
                // 0x140017ae1
                function_14001a740((int128_t *)&v92, 0, (int64_t *)&v23);
                v132 = 0;
                v134 = v128;
            } else {
                // 0x140017ac8
                v133 = __asm_movsd(1);
                *(int64_t *)v137 = __asm_movsd_3(v133);
                v132 = v137 + 12;
                v134 = v133;
            }
            // 0x140017af4
            v109 = v134;
            v113--;
            v105 = v91;
            v112 += 32;
        }
        // 0x140017b10
        v106 = v102;
        v107 = (int64_t)v92;
        v108 = v107 + 8;
        int64_t v139 = v108; // 0x140017b1e
        int64_t v140 = 0; // 0x140017b1e
        int64_t v141 = 0;
        while (*(int32_t *)(v139 - 8) >= 2) {
            // 0x140017b2b
            if (*(int32_t *)(v139 - 4) < 2) {
                // break -> 0x140018904
                break;
            }
            // 0x140017b35
            if (*(int32_t *)v139 < 3) {
                // break -> 0x140018904
                break;
            }
            // 0x140017b3e
            v140++;
            v139 += 12;
            if (v140 >= v106) {
                // 0x140017b60
                v96 = *v92;
                v97 = v96;
                v98 = v108;
                v100 = 1;
                v99 = 1;
                goto lab_0x140017b60_2;
            }
            v141 = v141 + 1 & 0xffffffff;
        }
        int64_t v142 = 32 * v141 + v105; // 0x14001890a
        int64_t v143 = function_14001a060((int64_t *)*(int64_t *)0x1400211b8, "Error Texture : "); // 0x14001891b
        int64_t v144 = v142; // 0x140018928
        if (*(int64_t *)(v142 + 24) >= 16) {
            // 0x14001892a
            v144 = *(int64_t *)v142;
        }
        // 0x14001892d
        function_14001c100(v143, v144, *(int64_t *)(v142 + 16));
        _3f__3f_6_3f__24_basic_ostream_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_QEAAAEAV01_40_P6AAEAV01_40_AEAV01_40__40_Z_40_Z((int64_t * (*)(int64_t *))&g103);
        if (v19 != v103) {
            free((int64_t *)*(int64_t *)v19);
            int64_t v145 = v19 + 8; // 0x140018969
            int64_t v146 = v145; // 0x140018970
            while (v145 != v103) {
                // 0x140018960
                free((int64_t *)*(int64_t *)v146);
                v145 = v146 + 8;
                v146 = v145;
            }
        }
    } else {
        // 0x140017918
        function_14001a060((int64_t *)*(int64_t *)0x1400211b8, "At Least Two Texture Are Required!");
        _3f__3f_6_3f__24_basic_ostream_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_QEAAAEAV01_40_P6AAEAV01_40_AEAV01_40__40_Z_40_Z((int64_t * (*)(int64_t *))&g103);
    }
    goto lab_0x140018972;
  lab_0x140018972:
    // 0x140018972
    function_140018d00((int128_t *)&v92);
    function_140018d80(&v19);
    function_140019630(&v91);
    function_1400198c0(&v88);
    function_140018c80(&v86);
    function_1400198c0((char *)&v66);
    function_1400198c0((char *)&v15);
    function_1400198c0((char *)&v16);
    function_1400143d0(&v12);
    __security_check_cookie(g66);
    __asm_movaps_2((int128_t)v5);
    __asm_movaps_2((int128_t)v6);
    __asm_movaps_2((int128_t)v7);
    __asm_movaps_2((int128_t)v8);
    return &g103;
  lab_0x140017b60_2:;
    int64_t v147 = v99;
    int64_t v148 = v98;
    int32_t v149 = *(int32_t *)(v148 + 4); // 0x140017b60
    int64_t v150; // 0x140016940
    int32_t v151; // bp-1408, 0x140016940
    int32_t v152; // bp-1412, 0x140016940
    int128_t v153; // bp-776, 0x140016940
    uint32_t v154; // 0x140017ba0
    int128_t v155; // 0x140017ba8
    uint64_t v156; // 0x140017bd8
    if (v97 != v149) {
        goto lab_0x140018890;
    } else {
        // 0x140017b6c
        if (*(int32_t *)(v148 - 4) != *(int32_t *)(v148 + 8)) {
            goto lab_0x140018890;
        } else {
            int64_t v157 = v148 + 12; // 0x140017b78
            if (*(int32_t *)v148 != *(int32_t *)v157) {
                goto lab_0x140018890;
            } else {
                int64_t v158 = v100 + 1; // 0x140017b85
                v97 = v149;
                v98 = v157;
                v100 = v158;
                v99 = v147 + 1 & 0xffffffff;
                if (v158 < v106) {
                    goto lab_0x140017b60_2;
                } else {
                    // 0x140017b91
                    v152 = v96;
                    v151 = *(int32_t *)(v107 + 4);
                    v154 = *(int32_t *)v108;
                    v155 = __asm_xorps(v109, v109);
                    v153 = __asm_movdqu(v155);
                    if (v106 >= 0xaaaaaaaaaaaaaab) {
                        // 0x140018c54
                        function_14001bb00();
                        __asm_int3();
                        // 0x140018c5a
                        function_140001140();
                        // UNREACHABLE
                    }
                    // 0x140017bcd
                    v156 = 24 * v106;
                    if (v156 < 0x1000) {
                        // 0x140017c1b
                        v150 = 0;
                        if (v156 == 0) {
                            goto lab_0x140017c3b;
                        } else {
                            // 0x140017c20
                            v150 = function_14001e5fc(v156);
                            goto lab_0x140017c3b;
                        }
                    } else {
                        if (v156 > 0xffffffffffffffd8) {
                            // 0x140018c5a
                            function_140001140();
                            // UNREACHABLE
                        }
                        int64_t v159 = function_14001e5fc(v156 + 39); // 0x140017bf2
                        if (v159 == 0) {
                            // 0x140017c1b
                            _invalid_parameter_noinfo_noreturn();
                            __asm_int3();
                            // 0x140017c20
                            v150 = function_14001e5fc(v156);
                            goto lab_0x140017c3b;
                        } else {
                            int64_t v160 = v159 + 39 & -32; // 0x140017c03
                            *(int64_t *)(v160 - 8) = v159;
                            v150 = v160;
                            goto lab_0x140017c3b;
                        }
                    }
                }
            }
        }
    }
  lab_0x140018890:;
    int64_t v161 = (0x100000000 * v147 >> 27) + v105; // 0x140018897
    int64_t v162 = *(int64_t *)0x1400211b8; // 0x1400188a1
    int64_t v163 = function_14001a060((int64_t *)v162, "Texture Message Not Uniform: "); // 0x1400188a8
    int64_t v164 = v161; // 0x1400188b5
    if (*(int64_t *)(v161 + 24) < 16) {
        goto lab_0x1400188ba;
    } else {
        // 0x1400188b7
        v164 = *(int64_t *)v161;
        goto lab_0x1400188ba;
    }
  lab_0x1400188ba:
    // 0x1400188ba
    function_14001c100(v163, v164, *(int64_t *)(v161 + 16));
    _3f__3f_6_3f__24_basic_ostream_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_QEAAAEAV01_40_P6AAEAV01_40_AEAV01_40__40_Z_40_Z((int64_t * (*)(int64_t *))&g103);
    int64_t v165 = v19; // 0x1400188e7
    if (v19 == v103) {
        goto lab_0x140018972;
    } else {
        goto lab_0x1400188f0;
    }
  lab_0x1400188f0:
    // 0x1400188f0
    free((int64_t *)*(int64_t *)v165);
    int64_t v166 = v165 + 8; // 0x1400188f9
    v165 = v166;
    if (v166 != v103) {
        goto lab_0x1400188f0;
    } else {
        goto lab_0x140018972;
    }
  lab_0x140017c3b:;
    int64_t v167 = v154; // 0x140017ba0
    v153 = v150;
    int64_t v168 = v150; // 0x140017c4c
    int64_t v169 = v106; // 0x140017c4c
    goto lab_0x140017c50;
  lab_0x140017c50:
    // 0x140017c50
    *(int64_t *)v168 = 0;
    *(int64_t *)(v168 + 8) = 0;
    *(int64_t *)(v168 + 16) = 0;
    int64_t v170 = v169 - 1; // 0x140017c5f
    v168 += 24;
    v169 = v170;
    int64_t v171; // 0x140016940
    int128_t v172; // bp-824, 0x140016940
    int128_t v173; // 0x140017c6c
    if (v170 != 0) {
        goto lab_0x140017c50;
    } else {
        // 0x140017c65
        v173 = __asm_xorps(v155, v155);
        v172 = __asm_movdqu(v173);
        if (v106 > 0xaaaaaaaaaaaaaaa) {
            // 0x140018c60
            function_14001bb00();
            __asm_int3();
            // 0x140018c66
            function_140001140();
            // UNREACHABLE
        }
        if (v156 < 0x1000) {
            // 0x140017cd5
            v171 = 0;
            if (v156 == 0) {
                goto lab_0x140017cf5;
            } else {
                // 0x140017cda
                v171 = function_14001e5fc(v156);
                goto lab_0x140017cf5;
            }
        } else {
            if (v156 > 0xffffffffffffffd8) {
                // 0x140018c66
                function_140001140();
                // UNREACHABLE
            }
            int64_t v174 = function_14001e5fc(v156 + 39); // 0x140017cac
            if (v174 == 0) {
                // 0x140017cd5
                _invalid_parameter_noinfo_noreturn();
                __asm_int3();
                // 0x140017cda
                v171 = function_14001e5fc(v156);
                goto lab_0x140017cf5;
            } else {
                int64_t v175 = v174 + 39 & -32; // 0x140017cbd
                *(int64_t *)(v175 - 8) = v174;
                v171 = v175;
                goto lab_0x140017cf5;
            }
        }
    }
  lab_0x140017cf5:
    // 0x140017cf5
    v172 = v171;
    int64_t v176 = v171; // 0x140017d06
    int64_t v177 = v106; // 0x140017d06
    goto lab_0x140017d10;
  lab_0x140017d10:
    // 0x140017d10
    *(int64_t *)v176 = 0;
    *(int64_t *)(v176 + 8) = 0;
    *(int64_t *)(v176 + 16) = 0;
    int64_t v178 = v177 - 1; // 0x140017d1f
    v176 += 24;
    v177 = v178;
    int64_t v179; // 0x140016940
    int64_t v180; // 0x140016940
    int128_t v181; // 0x140017d36
    int128_t v182; // 0x140016940
    int128_t v183; // 0x140016940
    if (v178 != 0) {
        goto lab_0x140017d10;
    } else {
        // 0x140017d25
        v181 = __asm_xorps(v2, v2);
        v183 = v173;
        v180 = 0;
        v179 = 0;
        v182 = v173;
        if (v106 < 1) {
            goto lab_0x140017f22;
        } else {
            goto lab_0x140017d46;
        }
    }
  lab_0x140017f22:;
    uint32_t v184 = v152 * v154; // 0x140017d2e
    v26 = (int128_t *)v19;
    int128_t v185 = v182; // 0x140017f48
    int128_t v186 = v110; // 0x140017f48
    int64_t v187; // 0x140016940
    int64_t v188; // 0x140016940
    int64_t v189; // 0x140016940
    int64_t v190; // 0x140016940
    int64_t v191; // 0x140016940
    if (v19 == v103) {
        goto lab_0x14001824c;
    } else {
        // 0x140017f4e
        v102 = 0;
        v101 = 0;
        v191 = 0;
        v190 = 0;
        v187 = v19;
        v188 = 0;
        v189 = 0;
        goto lab_0x140017f65;
    }
  lab_0x140017d46:;
    int64_t v192 = v152; // 0x140017d46
    uint64_t v193 = (int64_t)v151; // 0x140017d4b
    int64_t v194 = v180 + (int64_t)v153;
    int64_t * v195 = (int64_t *)(v194 + 8); // 0x140017d57
    int64_t v196 = *v195; // 0x140017d57
    int64_t v197; // 0x140016940
    if (v196 != v192) {
        goto lab_0x140017d6b;
    } else {
        // 0x140017d61
        if (*(int64_t *)(v194 + 16) == v193) {
            // 0x140017d61
            v197 = v196 * v193;
            goto lab_0x140017dd6;
        } else {
            goto lab_0x140017d6b;
        }
    }
  lab_0x14001824c:;
    int128_t v198 = v186;
    int128_t v199 = v185;
    function_14001a060((int64_t *)*(int64_t *)0x1400211b8, "Blending...");
    _3f__3f_6_3f__24_basic_ostream_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_QEAAAEAV01_40_P6AAEAV01_40_AEAV01_40__40_Z_40_Z((int64_t * (*)(int64_t *))&g103);
    int64_t v200 = v152; // 0x140018272
    uint64_t v201 = (int64_t)v151; // 0x140018277
    int64_t v202 = __asm_movdqu(__asm_xorps(v199, v199)); // 0x14001827c
    int64_t * v203 = (int64_t *)v202; // bp-944, 0x14001827c
    if (v152 == 0 || v151 == 0) {
        goto lab_0x1400182c1;
    } else {
        if (0x7fffffffffffffff / v201 < v200) {
            // 0x140018c78
            function_1400132c0();
            // UNREACHABLE
        }
        goto lab_0x1400182c1;
    }
  lab_0x140017d6b:
    if (v152 == 0 || v151 == 0) {
        goto lab_0x140017d8f;
    } else {
        if (0x7fffffffffffffff / v193 < v192) {
            // 0x140018c6c
            function_1400132c0();
            // UNREACHABLE
        }
        goto lab_0x140017d8f;
    }
  lab_0x1400182c1:;
    int64_t v204 = v201 * v200; // 0x1400182c4
    int64_t v205 = v202; // 0x1400182cb
    if (v204 == 0) {
        goto lab_0x1400182f0;
    } else {
        // 0x1400182cd
        free(NULL);
        int64_t v206 = function_14001e050(v204); // 0x1400182d8
        v203 = (int64_t *)v206;
        v205 = v206;
        goto lab_0x1400182f0;
    }
  lab_0x140017f65:;
    int64_t v207 = v190;
    int64_t v208 = v191;
    int64_t v209 = *(int64_t *)v187; // 0x140017f65
    v17 = NULL;
    function_140019e40((char *)&v17, "Converting: ", 12);
    int64_t v210 = v207 + (int64_t)v91; // 0x140017f9b
    int64_t v211 = v210; // 0x140017fa6
    if (*(int64_t *)(v210 + 24) < 16) {
        goto lab_0x140017fab;
    } else {
        // 0x140017fa8
        v211 = *(int64_t *)v210;
        goto lab_0x140017fab;
    }
  lab_0x140017d8f:;
    int64_t v212 = v193 * v192;
    int64_t * v213 = (int64_t *)(v194 + 16); // 0x140017d96
    if (v212 == *v213 * v196) {
        goto lab_0x140017dc6;
    } else {
        int64_t * v214 = (int64_t *)v194; // 0x140017da1
        free((int64_t *)*v214);
        if (v212 == 0) {
            // 0x140017dc0
            *v214 = 0;
            goto lab_0x140017dc6;
        } else {
            // 0x140017db0
            *v214 = function_14001e500(v212);
            goto lab_0x140017dc6;
        }
    }
  lab_0x1400182f0:
    // 0x1400182f0
    v26 = (int128_t *)(0x100000000 * __asm_movss_4(v181) >> 32);
    int128_t * v215 = (int128_t *)v205;
    v23 = v215;
    v17 = (int64_t *)&v23;
    int64_t v216 = (v204 >> 63 & 3) + v204 & -4; // 0x14001834d
    int64_t v217; // 0x140016940
    if (v216 < 1) {
        goto lab_0x140018385;
    } else {
        int128_t v218 = __asm_movaps_2(v181); // 0x140018360
        __asm_movups(*v215, __asm_shufps(v218, v218, 0));
        v217 = 4;
        if (v216 > 4) {
            goto lab_0x140018374;
        } else {
            goto lab_0x140018385;
        }
    }
  lab_0x140017fab:;
    uint64_t v219 = *(int64_t *)(v210 + 16); // 0x140017fab
    int64_t v220; // 0x140016940
    int64_t v221; // 0x140016940
    if (v219 > 15) {
        // 0x140017fff
        v220 = function_14001b1b0((int64_t *)&v17, v219);
        v221 = v207;
        goto lab_0x140018011;
    } else {
        // 0x140017fc4
        memmove((int64_t *)&v17, (int64_t *)v211, (int32_t)v219);
        *(char *)(v219 + v18) = 0;
        v220 = v18;
        v221 = v101;
        goto lab_0x140018011;
    }
  lab_0x140017dc6:
    // 0x140017dc6
    *v195 = v192;
    *v213 = v193;
    v197 = v212;
    goto lab_0x140017dd6;
  lab_0x140017dd6:;
    int64_t v222 = v197;
    if (v222 < 1) {
        goto lab_0x140017de9;
    } else {
        // 0x140017ddf
        __asm_rep_stosw_memset((char *)*(int64_t *)v194, 0, v222);
        goto lab_0x140017de9;
    }
  lab_0x140018385:;
    int64_t v223 = (int64_t)&v203; // 0x14001833d
    function_14001e2e0((char *)&v17, v216, v204);
    int128_t v224 = __asm_movdqu(__asm_xorps(v198, v198)); // bp-896, 0x140018396
    int64_t v225 = v31; // 0x1400183ab
    int64_t v226 = 0x100000000 * v225;
    int64_t * v227; // 0x140016940
    int64_t * v228; // 0x140016940
    int64_t v229; // 0x140016940
    int64_t v230; // 0x140016940
    int64_t v231; // 0x140016940
    int64_t * v232; // 0x140016940
    int64_t * v233; // 0x140016940
    if (v226 < 0x200000000) {
        int64_t v234 = 0x100000000 * v223 >> 32; // 0x1400186db
        v228 = (int64_t *)(v234 + 8);
        v227 = (int64_t *)(v234 + 16);
        v230 = v225;
        goto lab_0x140018680;
    } else {
        int64_t v235 = 0x100000000 * v223 >> 32;
        v232 = (int64_t *)(v235 + 16);
        v233 = (int64_t *)(v235 + 8);
        v231 = 24;
        v229 = 1;
        goto lab_0x1400183d0_2;
    }
  lab_0x140017de9:;
    int64_t v236 = v152; // 0x140017de9
    uint64_t v237 = (int64_t)v151; // 0x140017dee
    int64_t v238 = v180 + (int64_t)v172; // 0x140017dfa
    v101 = 0;
    int64_t * v239 = (int64_t *)(v238 + 8); // 0x140017e07
    int64_t v240 = *v239; // 0x140017e07
    int64_t v241; // 0x140016940
    if (v240 != v236) {
        goto lab_0x140017e19;
    } else {
        // 0x140017e10
        if (*(int64_t *)(v238 + 16) == v237) {
            // 0x140017e10
            v241 = v240 * v237;
            goto lab_0x140017e7f;
        } else {
            goto lab_0x140017e19;
        }
    }
  lab_0x140018374:;
    int128_t v242 = __asm_movaps_2(__asm_movss((int32_t)(int64_t)v26)); // 0x140018360
    int128_t v243 = __asm_shufps(v242, v242, 0); // 0x140018363
    __asm_movups(*(int128_t *)(4 * v217 + (int64_t)v23), v243);
    int64_t v244 = v217 + 4; // 0x14001836b
    v217 = v244;
    if (v244 < v216) {
        goto lab_0x140018374;
    } else {
        goto lab_0x140018385;
    }
  lab_0x140018011:;
    int128_t v245 = __asm_movups_1(*(int128_t *)v220); // 0x14001801f
    __asm_movups((int128_t)(int64_t)v23, v245);
    int64_t v246 = v220 + 16; // 0x140018029
    int128_t v247 = __asm_movups_1(*(int128_t *)v246); // 0x140018029
    __asm_movups(0, v247);
    *(int64_t *)v246 = 0;
    *(int64_t *)(v220 + 24) = 15;
    *(char *)v220 = 0;
    function_14001c100(*(int64_t *)0x1400211b8, (int64_t)&v23, 0);
    _3f__3f_6_3f__24_basic_ostream_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_QEAAAEAV01_40_P6AAEAV01_40_AEAV01_40__40_Z_40_Z((int64_t * (*)(int64_t *))&g103);
    int64_t v248 = v188 + (int64_t)v153; // 0x140018120
    int64_t v249 = 0x100000000 * v189;
    int64_t v250 = 8 * ((v249 >> 32) + (v249 >> 31)) + (int64_t)v172; // 0x140018135
    v23 = (int128_t *)v250;
    int64_t v251 = v250; // 0x14001814c
    int64_t v252 = v221; // 0x14001814c
    int64_t v253 = v187; // 0x14001814c
    int64_t v254 = v189; // 0x14001814c
    int64_t v255; // 0x140016940
    int64_t v256; // 0x140016940
    int64_t v257; // 0x140016940
    int64_t v258; // 0x140016940
    int64_t v259; // 0x140016940
    int64_t * v260; // 0x140016940
    int64_t * v261; // 0x140016940
    if (v151 < 1) {
        goto lab_0x1400181ed;
    } else {
        // 0x140018152
        v260 = (int64_t *)v248;
        v261 = (int64_t *)(v248 + 8);
        v257 = v152;
        v258 = v151;
        v259 = 0;
        v255 = 0;
        v256 = 2;
        goto lab_0x140018164;
    }
  lab_0x140017e19:
    if (v152 == 0 || v151 == 0) {
        goto lab_0x140017e3b;
    } else {
        if (0x7fffffffffffffff / v237 < v236) {
            // 0x140018c72
            function_1400132c0();
            // UNREACHABLE
        }
        goto lab_0x140017e3b;
    }
  lab_0x140018680:;
    int128_t * v262 = (int128_t *)&v203;
    int128_t v263 = __asm_mulss(__asm_cvtdq2ps(__asm_movd((int32_t)v230 - 1)), v81); // 0x140018689
    v23 = (int128_t *)(0x100000000 * __asm_movss_4(v263) >> 32);
    v31 = (int64_t)v203;
    int64_t v264; // bp-1404, 0x140016940
    function_14001e0a0((char *)&v17, &v31, (int64_t *)&v23, &v264, v262);
    int64_t v265 = *v228 * *v227; // 0x1400186e4
    int64_t v266 = (v265 >> 63 & 3) + v265 & -4; // 0x1400186f4
    int64_t v267; // 0x140016940
    int64_t * v268; // 0x140016940
    if (v266 < 1) {
        goto lab_0x14001872f;
    } else {
        // 0x1400186fd
        v268 = (int64_t *)(0x100000000000000 * (int64_t)v17 >> 56);
        v267 = 0;
        goto lab_0x140018710;
    }
  lab_0x1400183d0_2:;
    int64_t v269 = v231;
    int64_t v270; // 0x140016940
    int64_t v271; // 0x1400183d7
    if (v80 < 1) {
        goto lab_0x140018665;
    } else {
        // 0x1400183f0
        v271 = v269 + (int64_t)v172;
        v270 = 0;
        goto lab_0x1400183f0_2;
    }
  lab_0x1400181ed:
    // 0x1400181ed
    function_140013970(v248, v251);
    int64_t v272 = v254 + 1; // 0x1400181f8
    int64_t v273 = v252 + 32; // 0x1400181ff
    v101 = v273;
    int64_t v274 = v102 + 24; // 0x140018211
    v102 = v274;
    int64_t v275 = v253 + 8; // 0x14001821c
    v26 = (int128_t *)v275;
    v191 = v272;
    v190 = v273;
    v187 = v275;
    v188 = v274;
    v189 = v272 & 0xffffffff;
    v185 = v245;
    v186 = v247;
    if (v275 == v103) {
        goto lab_0x14001824c;
    } else {
        goto lab_0x140017f65;
    }
  lab_0x140017e3b:;
    int64_t v276 = v237 * v236;
    int64_t * v277 = (int64_t *)(v238 + 16); // 0x140017e42
    if (v276 == *v277 * v240) {
        goto lab_0x140017e71;
    } else {
        int64_t * v278 = (int64_t *)v238; // 0x140017e4f
        free((int64_t *)*v278);
        if (v276 == 0) {
            // 0x140017e6a
            *v278 = 0;
            goto lab_0x140017e71;
        } else {
            // 0x140017e5d
            *v278 = function_14001e050(v276);
            goto lab_0x140017e71;
        }
    }
  lab_0x14001872f:
    // 0x14001872f
    function_14001e0c0((char *)&v17, v266, v265);
    int64_t v279 = function_14001e5fc((int64_t)(3 * v151 * v152)); // 0x140018748
    int64_t v280 = v152; // 0x140018753
    int64_t v281 = v151; // 0x140018757
    int64_t v282 = v281; // 0x14001875d
    int64_t v283 = v280; // 0x14001875d
    int64_t v284; // 0x140016940
    int64_t v285; // 0x140016940
    int64_t v286; // 0x140016940
    int64_t v287; // 0x140016940
    int64_t v288; // 0x140016940
    int64_t v289; // 0x140016940
    if (v152 < 1) {
        goto lab_0x1400187e2;
    } else {
        // 0x140018763
        v289 = 2;
        v286 = 2;
        v288 = v281;
        v287 = v280;
        v284 = 0;
        v285 = 0;
        goto lab_0x140018773;
    }
  lab_0x140018665:;
    int64_t v290 = v229 + 1; // 0x140018665
    v231 = v269 + 24;
    v229 = v290;
    if (v290 < v226 >> 32) {
        goto lab_0x1400183d0_2;
    } else {
        // 0x140018676
        v228 = v233;
        v227 = v232;
        v230 = v31;
        goto lab_0x140018680;
    }
  lab_0x140018164:;
    int64_t v291 = v259;
    int64_t v292 = v256; // 0x14001816c
    int64_t v293 = 0; // 0x14001816c
    int64_t v294 = 0; // 0x14001816c
    int64_t v295 = v257; // 0x14001816c
    int64_t v296 = v258; // 0x14001816c
    if ((int32_t)v257 < 1) {
        goto lab_0x1400181c6;
    } else {
        goto lab_0x140018171;
    }
  lab_0x140017e71:
    // 0x140017e71
    *v239 = v236;
    *v277 = v237;
    v241 = v276;
    goto lab_0x140017e7f;
  lab_0x140017e7f:;
    int64_t v297 = v241;
    int128_t * v298 = (int128_t *)*(int64_t *)v238;
    v23 = v298;
    v17 = (int64_t *)&v23;
    int64_t v299 = (v297 >> 63 & 3) + v297 & -4; // 0x140017ec6
    int128_t v300 = v183; // 0x140017ed3
    int64_t v301; // 0x140016940
    if (v299 < 1) {
        goto lab_0x140017f02;
    } else {
        int128_t v302 = __asm_movss(v101); // 0x140017ee0
        int128_t v303 = __asm_shufps(v302, v302, 0); // 0x140017ee8
        __asm_movups(*v298, v303);
        v301 = 4;
        v300 = v303;
        if (v299 > 4) {
            goto lab_0x140017ef9;
        } else {
            goto lab_0x140017f02;
        }
    }
  lab_0x1400187e2:;
    int64_t v304 = function_1400198b0(&v66); // 0x1400187e9
    int64_t v305 = v282 & 0xffffffff; // 0x140018800
    int64_t v306 = v283 & 0xffffffff; // 0x140018803
    function_1400131f0(v304, v306, v305, v154, 0x100000000000000 * v279 >> 56, 0);
    function_14001ea5c(v279, v306, v305);
    int64_t v307 = v19; // 0x14001881c
    if (v19 == v103) {
        goto lab_0x140018832;
    } else {
        goto lab_0x140018820;
    }
  lab_0x140018710:;
    int128_t v308 = __asm_movss(*(int32_t *)&v26); // 0x140018710
    int128_t v309 = __asm_shufps(v308, v308, 0); // 0x140018714
    int128_t * v310 = (int128_t *)(*v268 + 4 * v267); // 0x14001871b
    __asm_movups(*v310, __asm_divps(__asm_movups_1(*v310), v309));
    int64_t v311 = v267 + 4; // 0x140018726
    v267 = v311;
    if (v311 < v266) {
        goto lab_0x140018710;
    } else {
        goto lab_0x14001872f;
    }
  lab_0x1400183f0_2:;
    int128_t v312 = __asm_mulss(__asm_cvtdq2ps(__asm_movd((int32_t)v270)), v85); // 0x1400183f7
    int128_t v313 = __asm_subss(__asm_movaps_2(v83), v312); // 0x1400183ff
    uint64_t v314 = *(int64_t *)(v271 + 16); // 0x140018403
    int64_t v315 = *(int64_t *)(v271 + 8); // 0x140018407
    v77 = 0x100000000 * __asm_movss_4(v313) >> 32;
    __asm_movss_4(v312);
    __asm_movss_4(v313);
    int64_t v316; // bp-1240, 0x140016940
    int64_t v317; // bp-432, 0x140016940
    function_14001e360(&v317, &v316);
    int64_t v318; // 0x140016940
    if (v314 == 0 == v318 == v315) {
        goto lab_0x1400184b2;
    } else {
        if (v314 == 0 || v315 == 0) {
            // 0x140018495
            function_14001df30(&v224, (int128_t)(v315 * v314), v315, v314);
            goto lab_0x1400184b2;
        } else {
            if (v315 > 0x7fffffffffffffff / v314) {
                // 0x140018a26
                function_1400132c0();
                // UNREACHABLE
            }
            // 0x140018495
            function_14001df30(&v224, (int128_t)(v315 * v314), v315, v314);
            goto lab_0x1400184b2;
        }
    }
  lab_0x1400181c6:;
    int64_t v319 = v255 + 1 & 0xffffffff; // 0x1400181c6
    v257 = v295;
    v258 = v296;
    v259 = v291 + 1;
    v255 = v319;
    v256 = v256 + (int64_t)v184 & 0xffffffff;
    if (v319 < v296) {
        goto lab_0x140018164;
    } else {
        // 0x1400181d4
        v251 = (int64_t)v23;
        v252 = v101;
        v253 = (int64_t)v26;
        v254 = v208 & 0xffffffff;
        goto lab_0x1400181ed;
    }
  lab_0x140018171:;
    int64_t v320 = *v260; // 0x140018171
    int64_t v321 = *v261; // 0x140018177
    int64_t v322 = (0x100000000 * v292 >> 32) + v209;
    unsigned char v323 = *(char *)(v322 - 2); // 0x140018182
    unsigned char v324 = *(char *)(v322 - 1); // 0x14001818a
    unsigned char v325 = *(char *)v322; // 0x140018194
    *(int16_t *)(2 * (v321 * v291 + v294) + v320) = (int16_t)((int32_t)v324 + (int32_t)v323 + (int32_t)v325 >= 256);
    int64_t v326 = v293 + 1 & 0xffffffff; // 0x1400181aa
    int64_t v327 = v152; // 0x1400181b3
    v292 = v292 + v167 & 0xffffffff;
    v293 = v326;
    v294++;
    if (v326 < v327) {
        goto lab_0x140018171;
    } else {
        // 0x1400181bc
        v295 = v327;
        v296 = v151;
        goto lab_0x1400181c6;
    }
  lab_0x140017f02:
    // 0x140017f02
    function_14001e2e0((char *)&v17, v299, v297);
    int64_t v328 = v179 + 1; // 0x140017f0c
    v183 = v300;
    v180 += 24;
    v179 = v328;
    v182 = v300;
    if (v328 < v106) {
        goto lab_0x140017d46;
    } else {
        goto lab_0x140017f22;
    }
  lab_0x140018832:
    // 0x140018832
    function_14001a060((int64_t *)*(int64_t *)0x1400211b8, "Finish");
    _3f__3f_6_3f__24_basic_ostream_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_QEAAAEAV01_40_P6AAEAV01_40_AEAV01_40__40_Z_40_Z((int64_t * (*)(int64_t *))&g103);
    free((int64_t *)(int64_t)v224);
    free(v203);
    function_140019bf0(&v172);
    function_140019bf0(&v153);
    goto lab_0x140018972;
  lab_0x140018820:
    // 0x140018820
    free((int64_t *)*(int64_t *)v307);
    int64_t v329 = v307 + 8; // 0x140018829
    v307 = v329;
    if (v329 != v103) {
        goto lab_0x140018820;
    } else {
        goto lab_0x140018832;
    }
  lab_0x140018773:;
    int64_t v330 = v284;
    int64_t v331 = v289;
    int64_t v332 = v286; // 0x14001877b
    int64_t v333 = 0; // 0x14001877b
    int64_t v334 = 0; // 0x14001877b
    int64_t v335 = v286; // 0x14001877b
    int64_t v336 = v288; // 0x14001877b
    int64_t v337 = v287; // 0x14001877b
    if ((int32_t)v288 < 1) {
        goto lab_0x1400187cb;
    } else {
        goto lab_0x140018780;
    }
  lab_0x1400184b2:
    // 0x1400184b2
    v23 = (int128_t *)(int64_t)v224;
    int64_t v338; // bp-1416, 0x140016940
    function_14001e0a0((char *)&v17, (int64_t *)&v23, &v46, &v338, &v224);
    int64_t v339 = *v233 * *v232; // 0x1400184f9
    int64_t v340 = (v339 >> 63 & 3) + v339 & -4; // 0x140018509
    int64_t v341; // 0x140016940
    int64_t * v342; // 0x140016940
    if (v340 < 1) {
        goto lab_0x14001855b;
    } else {
        // 0x140018514
        v342 = (int64_t *)(0x100000000000000 * (int64_t)v17 >> 56);
        v341 = 0;
        goto lab_0x140018520;
    }
  lab_0x140017ef9:;
    int128_t v343 = __asm_movss(v101); // 0x140017ee0
    int128_t v344 = __asm_shufps(v343, v343, 0); // 0x140017ee8
    __asm_movups(*(int128_t *)(4 * v301 + (int64_t)v23), v344);
    int64_t v345 = v301 + 4; // 0x140017ef0
    v301 = v345;
    v300 = v344;
    if (v345 < v299) {
        goto lab_0x140017ef9;
    } else {
        goto lab_0x140017f02;
    }
  lab_0x1400187cb:;
    int64_t v346 = v285 + 1 & 0xffffffff; // 0x1400187cb
    int64_t v347 = v335 + v167; // 0x1400187ce
    v289 = v347;
    v286 = v347 & 0xffffffff;
    v288 = v336;
    v287 = v337;
    v284 = v330 + 1;
    v285 = v346;
    v282 = v336;
    v283 = v337;
    if (v346 < v337) {
        goto lab_0x140018773;
    } else {
        goto lab_0x1400187e2;
    }
  lab_0x140018780:;
    int32_t v348 = *(int32_t *)(4 * (v334 * v200 + v330) + (int64_t)v203); // 0x140018795
    char v349 = __asm_cvttss2si(v348); // 0x14001879d
    int64_t v350 = (0x100000000 * v332 >> 32) + v279;
    *(char *)(v350 - 2) = v349;
    *(char *)(v350 - 1) = v349;
    *(char *)v350 = v349;
    int64_t v351 = v333 + 1 & 0xffffffff; // 0x1400187ae
    int64_t v352 = v151; // 0x1400187b7
    v332 = v332 + (int64_t)v184 & 0xffffffff;
    v333 = v351;
    v334++;
    if (v351 < v352) {
        goto lab_0x140018780;
    } else {
        // 0x1400187c0
        v335 = v331 & 0xffffffff;
        v336 = v352;
        v337 = v152;
        goto lab_0x1400187cb;
    }
  lab_0x14001855b:
    // 0x14001855b
    function_14001e380((char *)&v17, v340, v339);
    _vcomp_fork(1, 3, 0x14001f2e0, &v224, &v151, &v152);
    v26 = (int128_t *)(int64_t)v224;
    v102 = (int64_t)v203;
    function_14001e0a0((char *)&v17, &v102, (int64_t *)&v26, &v264, (int128_t *)&v203);
    int64_t v353 = *v233 * *v232; // 0x1400185fe
    int64_t v354 = (v353 >> 63 & 3) + v353 & -4; // 0x14001860e
    int64_t v355; // 0x140016940
    int64_t * v356; // 0x140018633
    if (v354 < 1) {
        goto lab_0x14001864b;
    } else {
        // 0x140018619
        v356 = (int64_t *)(0x100000000000000 * (int64_t)v17 >> 56);
        v355 = 0;
        goto lab_0x140018630;
    }
  lab_0x14001864b:
    // 0x14001864b
    function_14001e150((char *)&v17, v354, v353);
    int64_t v357 = v270 + 1; // 0x140018655
    v270 = v357 & 0xffffffff;
    if (v80 > (int32_t)v357) {
        goto lab_0x1400183f0_2;
    } else {
        goto lab_0x140018665;
    }
  lab_0x140018520:;
    int128_t v358 = __asm_movss(*(int32_t *)(v104 + 64)); // 0x140018520
    int128_t v359 = __asm_shufps(v358, v358, 0); // 0x140018525
    int64_t v360 = *(int64_t *)(v104 + 48); // 0x140018529
    int64_t v361 = 4 * v341; // 0x14001852d
    int128_t v362 = __asm_mulps(__asm_movups_1(*(int128_t *)(v360 + v361)), v359); // 0x140018531
    int128_t v363 = __asm_movss(*(int32_t *)(v104 + 32)); // 0x140018534
    int128_t v364 = __asm_shufps(v363, v363, 0); // 0x140018539
    int128_t v365 = __asm_movups_1(*(int128_t *)(*(int64_t *)(v104 + 16) + v361)); // 0x140018541
    __asm_movups(*(int128_t *)(*v342 + v361), __asm_addps(__asm_mulps(v365, v364), v362));
    int64_t v366 = v341 + 4; // 0x140018552
    v341 = v366;
    if (v366 < v340) {
        goto lab_0x140018520;
    } else {
        goto lab_0x14001855b;
    }
  lab_0x140018630:;
    int64_t v367 = 4 * v355; // 0x140018636
    int128_t * v368 = (int128_t *)(*v356 + v367); // 0x140018636
    int128_t v369 = __asm_movups_1(*v368); // 0x140018636
    int128_t v370 = __asm_addps(v369, *(int128_t *)(v367 + (int64_t)v26)); // 0x14001863a
    __asm_movups(*v368, v370);
    int64_t v371 = v355 + 4; // 0x140018642
    v355 = v371;
    if (v371 < v354) {
        goto lab_0x140018630;
    } else {
        goto lab_0x14001864b;
    }
}

// Address range: 0x140018c80 - 0x140018cdf
int64_t function_140018c80(int64_t * a1) {
    int64_t v1 = (int64_t)a1;
    int32_t v2 = *(int32_t *)(v1 + 4); // 0x140018c94
    *(int64_t *)((int64_t)v2 + v1) = (int64_t)&g31;
    int32_t v3 = *(int32_t *)(*a1 + 4); // 0x140018cae
    *(int32_t *)(v1 - 4 + (int64_t)v3) = v3 - 152;
    function_1400192f0((int64_t *)(v1 + 24));
    _3f__3f_1_3f__24_basic_iostream_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_UEAA_40_XZ();
    _3f__3f_1_3f__24_basic_ios_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_UEAA_40_XZ();
    return &g103;
}

// Address range: 0x140018ce0 - 0x140018cea
void function_140018ce0(int64_t * ptr) {
    // 0x140018ce0
    free(ptr);
}

// Address range: 0x140018cf0 - 0x140018cf5
int64_t function_140018cf0(int64_t a1) {
    // 0x140018cf0
    return function_140019bf0((int128_t *)a1);
}

// Address range: 0x140018d00 - 0x140018d80
int64_t function_140018d00(int128_t * a1) {
    // 0x140018d00
    if (a1 == NULL) {
        // 0x140018d6d
        int64_t result; // 0x140018d00
        return result;
    }
    int64_t v1 = 0; // 0x140018d41
    int64_t v2 = (int64_t)a1;
    int64_t v3; // 0x140018d00
    function_14001ea5c(v2, v1, v3);
    *(int64_t *)a1 = 0;
    *(int64_t *)(v2 + 8) = 0;
    *(int64_t *)(v2 + 16) = 0;
    // 0x140018d6d
    return 0;
}

// Address range: 0x140018d80 - 0x140018ec9
int64_t function_140018d80(int64_t * a1) {
    // 0x140018d80
    if (a1 == NULL) {
        // 0x140018dcf
        int64_t result; // 0x140018d80
        return result;
    }
    int64_t v1 = (int64_t)a1;
    int64_t * v2 = (int64_t *)(v1 + 16); // 0x140018d91
    int64_t v3 = *v2 - v1 & -8; // 0x140018d98
    int64_t v4 = v1; // 0x140018da3
    int64_t result2 = v3; // 0x140018da3
    int64_t v5; // 0x140018d80
    if (v3 >= 0x1000) {
        // 0x140018da5
        v4 = *(int64_t *)(v1 - 8);
        result2 = v3 + 39;
        int64_t v6 = v1 - v4; // 0x140018dad
        v5 = v4;
        if (v6 >= 40) {
            // 0x140018dd5
            _invalid_parameter_noinfo_noreturn();
            __asm_int3();
            __asm_int3();
            __asm_int3();
            __asm_int3();
            __asm_int3();
            int64_t * v7 = (int64_t *)(v6 + 64); // 0x140018dfb
            int64_t * v8 = (int64_t *)*(int64_t *)(v6 + 56); // 0x140018e06
            int64_t v9 = *v8; // 0x140018e06
            uint64_t v10 = *(int64_t *)*v7; // 0x140018e09
            int64_t * v11 = (int64_t *)(v6 + 104);
            uint64_t v12 = *v11;
            int64_t v13 = v12; // 0x140018e0f
            if (v10 != 0 && v12 < v10) {
                // 0x140018e17
                *v11 = v10;
                v13 = v10;
            }
            uint64_t v14 = *(int64_t *)v4 + *(int64_t *)(v4 + 8); // 0x140018e03
            int64_t v15 = *(int64_t *)*(int64_t *)(v6 + 24); // 0x140018e23
            if (v14 > v13 - v15) {
                // 0x140018e9c
                *(int64_t *)result2 = -1;
                // 0x140018ea3
                *(int64_t *)(v3 + 47) = 0;
                *(int64_t *)(v3 + 55) = 0;
                return result2;
            }
            // 0x140018e31
            int64_t v16; // 0x140018d80
            int64_t v17 = v16 & 1;
            if (v14 != 0) {
                if (v17 != 0 == v9 == 0) {
                    // 0x140018e9c
                    *(int64_t *)result2 = -1;
                    // 0x140018ea3
                    *(int64_t *)(v3 + 47) = 0;
                    *(int64_t *)(v3 + 55) = 0;
                    return result2;
                }
                if ((v16 & 2) != 0 == v10 == 0) {
                    // 0x140018e9c
                    *(int64_t *)result2 = -1;
                    // 0x140018ea3
                    *(int64_t *)(v3 + 47) = 0;
                    *(int64_t *)(v3 + 55) = 0;
                    return result2;
                }
            }
            int64_t v18 = v15 + v14; // 0x140018e4c
            if (v17 != 0 && v9 != 0) {
                // 0x140018e5b
                *v8 = v18;
                int64_t v19 = *(int64_t *)(v6 + 80); // 0x140018e61
                *(int32_t *)v19 = (int32_t)v13 - (int32_t)v18;
            }
            if ((v16 & 2) != 0 && v10 != 0) {
                int64_t * v20 = (int64_t *)(v6 + 88); // 0x140018e72
                int32_t v21 = *(int32_t *)*v20; // 0x140018e76
                int64_t v22 = *(int64_t *)*v7; // 0x140018e7d
                *(int64_t *)*(int64_t *)(v6 + 32) = v15;
                *(int64_t *)*v7 = v18;
                *(int32_t *)*v20 = v21 - (int32_t)v18 + (int32_t)v22;
            }
            // 0x140018e97
            *(int64_t *)result2 = v14;
            // 0x140018ea3
            *(int64_t *)(v3 + 47) = 0;
            *(int64_t *)(v3 + 55) = 0;
            return result2;
        }
    }
    // 0x140018dbd
    function_14001ea5c(v4, result2, v5);
    *a1 = 0;
    *(int64_t *)(v1 + 8) = 0;
    *v2 = 0;
    // 0x140018dcf
    return 0;
}

// Address range: 0x140018ed0 - 0x140019024
int64_t function_140018ed0(int64_t a1, int64_t result, int64_t a3, int64_t a4, uint32_t a5) {
    int64_t * v1 = (int64_t *)(a1 + 64); // 0x140018eed
    int64_t * v2 = (int64_t *)*(int64_t *)(a1 + 56); // 0x140018ef4
    int64_t v3 = *v2; // 0x140018ef4
    int64_t * v4 = (int64_t *)(a1 + 104);
    uint64_t v5 = *v4;
    uint64_t v6 = v5; // 0x140018efd
    if (v6 != 0 && v5 < v6) {
        // 0x140018f05
        *v4 = v6;
    }
    int64_t v7 = a5; // 0x140018f11
    int64_t v8 = *(int64_t *)*(int64_t *)(a1 + 24); // 0x140018f19
    int64_t v9 = v6 - v8; // 0x140018f1c
    int32_t v10 = a4; // 0x140018f1f
    int64_t v11 = 0; // 0x140018f22
    if (v10 != 0) {
        int32_t v12 = v10 - 1; // 0x140018f24
        if (v12 == 0) {
            if ((v7 & 3) == 3) {
                // 0x140018ff5
                *(int64_t *)result = -1;
                // 0x140018ffc
                *(int64_t *)(result + 8) = 0;
                *(int64_t *)(result + 16) = 0;
                return result;
            }
            if ((v7 & 1) == 0) {
                if ((v7 & 2) == 0) {
                    // 0x140018ff5
                    *(int64_t *)result = -1;
                    // 0x140018ffc
                    *(int64_t *)(result + 8) = 0;
                    *(int64_t *)(result + 16) = 0;
                    return result;
                }
                if (v6 == 0 == (v8 != 0)) {
                    // 0x140018ff5
                    *(int64_t *)result = -1;
                    // 0x140018ffc
                    *(int64_t *)(result + 8) = 0;
                    *(int64_t *)(result + 16) = 0;
                    return result;
                }
                // 0x140018f77
                v11 = v6 - v8;
            } else {
                if (v3 == 0 == (v8 != 0)) {
                    // 0x140018ff5
                    *(int64_t *)result = -1;
                    // 0x140018ffc
                    *(int64_t *)(result + 8) = 0;
                    *(int64_t *)(result + 16) = 0;
                    return result;
                }
                // 0x140018f5b
                v11 = v3 - v8;
            }
        } else {
            // 0x140018f2a
            v11 = v9;
            if (v12 != 1) {
                // 0x140018ff5
                *(int64_t *)result = -1;
                // 0x140018ffc
                *(int64_t *)(result + 8) = 0;
                *(int64_t *)(result + 16) = 0;
                return result;
            }
        }
    }
    uint64_t v13 = v11 + a3; // 0x140018f81
    if (v13 > v9) {
        // 0x140018ff5
        *(int64_t *)result = -1;
        // 0x140018ffc
        *(int64_t *)(result + 8) = 0;
        *(int64_t *)(result + 16) = 0;
        return result;
    }
    int64_t v14 = v7 & 1;
    if (v13 != 0) {
        if (v14 != 0 == v3 == 0) {
            // 0x140018ff5
            *(int64_t *)result = -1;
            // 0x140018ffc
            *(int64_t *)(result + 8) = 0;
            *(int64_t *)(result + 16) = 0;
            return result;
        }
        if ((v7 & 2) != 0 == v6 == 0) {
            // 0x140018ff5
            *(int64_t *)result = -1;
            // 0x140018ffc
            *(int64_t *)(result + 8) = 0;
            *(int64_t *)(result + 16) = 0;
            return result;
        }
    }
    int64_t v15 = v13 + v8; // 0x140018fa5
    if (v14 != 0 && v3 != 0) {
        // 0x140018fb4
        *v2 = v15;
        int64_t v16 = *(int64_t *)(a1 + 80); // 0x140018fba
        *(int32_t *)v16 = (int32_t)v6 - (int32_t)v15;
    }
    if ((v7 & 2) != 0 && v6 != 0) {
        int64_t * v17 = (int64_t *)(a1 + 88); // 0x140018fcb
        int32_t v18 = *(int32_t *)*v17; // 0x140018fcf
        int64_t v19 = *(int64_t *)*v1; // 0x140018fd6
        *(int64_t *)*(int64_t *)(a1 + 32) = v8;
        *(int64_t *)*v1 = v15;
        *(int32_t *)*v17 = v18 - (int32_t)v15 + (int32_t)v19;
    }
    // 0x140018ff0
    *(int64_t *)result = v13;
    // 0x140018ffc
    *(int64_t *)(result + 8) = 0;
    *(int64_t *)(result + 16) = 0;
    return result;
}

// Address range: 0x140019030 - 0x140019098
int64_t function_140019030(int64_t a1) {
    int64_t * v1 = (int64_t *)(a1 + 56); // 0x140019030
    int64_t * v2 = (int64_t *)*v1; // 0x140019037
    uint64_t v3 = *v2; // 0x140019037
    if (v3 == 0) {
        // 0x140019092
        return 0xffffffff;
    }
    int64_t * v4 = (int64_t *)(a1 + 80); // 0x14001903f
    if (v3 < v3 + (int64_t)*(int32_t *)*v4) {
        // 0x14001904e
        return (int64_t)*(char *)v3;
    }
    uint64_t v5 = *(int64_t *)*(int64_t *)(a1 + 64); // 0x140019057
    if (v5 == 0 || (*(char *)(a1 + 112) & 4) != 0) {
        // 0x140019092
        return 0xffffffff;
    }
    int64_t * v6 = (int64_t *)(a1 + 104); // 0x140019065
    uint64_t v7 = *v6; // 0x140019065
    uint64_t v8 = v7 < v5 ? v5 : v7; // 0x14001906c
    if (v8 <= v3) {
        // 0x140019092
        return 0xffffffff;
    }
    // 0x140019075
    *v6 = v8;
    *(int32_t *)*v4 = (int32_t)v8 - (int32_t)*v2;
    return (int64_t)*(char *)*(int64_t *)*v1;
}

// Address range: 0x1400190a0 - 0x1400190f2
int64_t function_1400190a0(int64_t a1, int64_t a2) {
    int64_t * v1 = (int64_t *)(a1 + 56); // 0x1400190a0
    uint64_t v2 = *(int64_t *)*v1; // 0x1400190a4
    if (v2 == 0 || v2 <= *(int64_t *)*(int64_t *)(a1 + 24)) {
        // 0x1400190ec
        return 0xffffffff;
    }
    if ((int32_t)a2 != -1) {
        // 0x1400190ba
        if (*(char *)(v2 - 1) != (char)a2) {
            // 0x1400190c0
            if ((*(char *)(a1 + 112) & 2) != 0) {
                // 0x1400190ec
                return 0xffffffff;
            }
        }
    }
    int32_t * v3 = (int32_t *)*(int64_t *)(a1 + 80); // 0x1400190ca
    *v3 = *v3 + 1;
    int64_t * v4 = (int64_t *)*v1; // 0x1400190d0
    *v4 = *v4 - 1;
    if ((int32_t)a2 != -1) {
        // 0x1400190d8
        *(char *)*(int64_t *)*v1 = (char)a2;
    }
    // 0x1400190e1
    return (int32_t)a2 == -1 ? 0 : a2 & 0xffffffff;
}

// Address range: 0x140019100 - 0x1400192e6
int64_t function_140019100(int64_t a1, int64_t a2) {
    int64_t v1 = a1 + 112; // 0x140019116
    char * v2 = (char *)v1; // 0x140019116
    if ((*v2 & 2) != 0) {
        // 0x1400192ca
        return 0xffffffff;
    }
    // 0x140019126
    if ((int32_t)a2 == -1) {
        // 0x1400192ca
        return 0;
    }
    int64_t result = a2 & 0xffffffff; // 0x14001911a
    int64_t * v3 = (int64_t *)(a1 + 64); // 0x140019132
    uint64_t v4 = *(int64_t *)*v3; // 0x140019136
    int64_t * v5 = (int64_t *)(a1 + 88); // 0x140019139
    uint64_t v6 = v4 + (int64_t)*(int32_t *)*v5; // 0x140019140
    if (v4 != 0 && v4 < v6) {
        // 0x14001914d
        _3f__Pninc_40__3f__24_basic_streambuf_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_IEAAPEADXZ();
        *(char *)&g103 = (char)a2;
        *(int64_t *)(a1 + 104) = v4 + 1;
        // 0x1400192ca
        return result;
    }
    int64_t * v7 = (int64_t *)(a1 + 24); // 0x140019166
    int64_t v8 = *(int64_t *)*v7; // 0x14001916d
    uint64_t v9 = v4 == 0 ? 0 : v6 - v8; // 0x140019176
    int64_t v10; // 0x140019100
    int64_t v11; // 0x140019100
    int64_t v12; // 0x140019100
    int64_t v13; // 0x140019100
    if (v9 >= 32) {
        if (v9 >= 0x3fffffff) {
            // 0x1400191cd
            v12 = 0x80000026;
            v10 = 0x7fffffff;
            if (v9 >= 0x7fffffff) {
                // 0x1400192ca
                return 0xffffffff;
            }
            goto lab_0x1400191e0;
        } else {
            int64_t v14 = 2 * v9; // 0x14001919a
            if (v14 < 0x1000) {
                // 0x1400191b6
                v11 = 0;
                v13 = 0;
                if (v14 != 0) {
                    int64_t v15 = function_14001e5fc(v14); // 0x1400191be
                    v11 = v14;
                    v13 = v15;
                }
                goto lab_0x1400191fa;
            } else {
                // 0x1400191a7
                v12 = v14 + 39;
                v10 = v14;
                if (v14 > 0xffffffffffffffd8) {
                    // 0x1400192e1
                    function_140001140();
                    // UNREACHABLE
                }
                goto lab_0x1400191e0;
            }
        }
    } else {
        // 0x140019180
        v11 = 32;
        v13 = function_14001e5fc(32);
        goto lab_0x1400191fa;
    }
  lab_0x1400191fa:
    // 0x1400191fa
    memcpy((int64_t *)v13, (int64_t *)v8, (int32_t)v9);
    int64_t v16 = v13 + v9; // 0x140019208
    int32_t v17 = v13; // 0x14001920c
    int64_t * v18 = (int64_t *)(a1 + 104); // 0x140019214
    *v18 = v16 + 1;
    *(int64_t *)*(int64_t *)(a1 + 32) = v13;
    *(int64_t *)*v3 = v16;
    *(int32_t *)*v5 = v17 + (int32_t)v11 - (int32_t)v16;
    if ((*v2 & 4) == 0) {
        int64_t * v19 = (int64_t *)(a1 + 56); // 0x14001924a
        int64_t v20 = *(int64_t *)*v19 - v8 + v13; // 0x14001925c
        *(int64_t *)*v7 = v13;
        *(int64_t *)*v19 = v20;
        int64_t v21 = *(int64_t *)(a1 + 80); // 0x14001926b
        *(int32_t *)v21 = (int32_t)*v18 - (int32_t)v20;
    } else {
        // 0x140019234
        *(int64_t *)*v7 = v13;
        *(int64_t *)*(int64_t *)(a1 + 56) = 0;
        *(int32_t *)*(int64_t *)(a1 + 80) = v17;
    }
    int32_t * v22 = (int32_t *)v1; // 0x140019271
    int32_t v23 = *v22; // 0x140019271
    int32_t v24 = v23; // 0x140019276
    if ((v23 & 1) != 0) {
        int64_t v25 = v9; // 0x14001927f
        int64_t v26 = v8; // 0x14001927f
        if (v9 >= 0x1000) {
            int64_t v27 = v8 - 8;
            v26 = *(int64_t *)v27;
            if (v27 - v26 >= 32) {
                // 0x1400192be
                _invalid_parameter_noinfo_noreturn();
                __asm_int3();
                // 0x1400192ca
                return 0xffffffff;
            }
            // 0x140019296
            v25 = v9 + 39;
        }
        // 0x140019299
        function_14001ea5c(v26, v25, v9);
        v24 = *v22;
    }
    // 0x1400192a7
    *v22 = v24 | 1;
    _3f__Pninc_40__3f__24_basic_streambuf_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_IEAAPEADXZ();
    *(char *)&g103 = (char)a2;
    // 0x1400192ca
    return result;
  lab_0x1400191e0:;
    int64_t v28 = function_14001e5fc(v12); // 0x1400191e0
    if (v28 == 0) {
        // 0x1400192be
        _invalid_parameter_noinfo_noreturn();
        __asm_int3();
        // 0x1400192ca
        return 0xffffffff;
    }
    int64_t v29 = v28 + 39 & -32; // 0x1400191f2
    *(int64_t *)(v29 - 8) = v28;
    v11 = v10;
    v13 = v29;
    goto lab_0x1400191fa;
}

// Address range: 0x1400192f0 - 0x1400193b0
int64_t function_1400192f0(int64_t * a1) {
    int64_t v1 = (int64_t)a1;
    int64_t v2 = v1 + 112; // 0x1400192f6
    *a1 = (int64_t)&g27;
    int64_t * v3; // 0x1400192f0
    int64_t * v4; // 0x1400192f0
    if ((*(char *)v2 & 1) == 0) {
        // 0x1400192f0
        v4 = (int64_t *)(v1 + 64);
        v3 = (int64_t *)(v1 + 24);
    } else {
        int64_t * v5 = (int64_t *)(v1 + 64);
        int64_t v6 = *(int64_t *)*v5; // 0x14001930d
        int64_t v7; // 0x1400192f0
        if (v6 == 0) {
            int64_t v8 = *(int64_t *)*(int64_t *)(v1 + 56); // 0x14001932c
            v7 = v8 + (int64_t)*(int32_t *)*(int64_t *)(v1 + 80);
        } else {
            // 0x140019315
            v7 = v6 + (int64_t)*(int32_t *)*(int64_t *)(v1 + 88);
        }
        int64_t * v9 = (int64_t *)(v1 + 24);
        int64_t v10 = *(int64_t *)*v9; // 0x140019333
        int64_t v11 = v7 - v10; // 0x140019336
        int64_t v12 = v10; // 0x140019340
        int64_t v13 = v11; // 0x140019340
        int64_t v14; // 0x1400192f0
        if (v11 >= 0x1000) {
            int64_t v15 = v10 - 8;
            v12 = *(int64_t *)v15;
            if (v15 - v12 >= 32) {
                // 0x1400193a0
                _invalid_parameter_noinfo_noreturn();
                __asm_int3();
                __asm_int3();
                __asm_int3();
                __asm_int3();
                __asm_int3();
                __asm_int3();
                __asm_int3();
                __asm_int3();
                __asm_int3();
                return __asm_int3();
            }
            // 0x140019357
            v13 = v11 + 39;
            v14 = v12;
        }
        // 0x14001935a
        function_14001ea5c(v12, v13, v14);
        v4 = v5;
        v3 = v9;
    }
    // 0x14001935f
    *(int64_t *)*v3 = 0;
    *(int64_t *)*(int64_t *)(v1 + 56) = 0;
    *(int32_t *)*(int64_t *)(v1 + 80) = 0;
    *(int64_t *)*(int64_t *)(v1 + 32) = 0;
    *(int64_t *)*v4 = 0;
    *(int32_t *)*(int64_t *)(v1 + 88) = 0;
    int32_t * v16 = (int32_t *)v2; // 0x140019389
    *v16 = *v16 & -2;
    *(int64_t *)(v1 + 104) = 0;
    _3f__3f_1_3f__24_basic_streambuf_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_UEAA_40_XZ();
    return &g103;
}

// Address range: 0x1400193b0 - 0x14001945d
int64_t function_1400193b0(int64_t * a1, int64_t a2, int64_t a3, int64_t a4) {
    int64_t result = (int64_t)a1;
    *a1 = (int64_t)&g21;
    _3f__3f_0_3f__24_basic_ios_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_IEAA_40_XZ();
    _3f__3f_0_3f__24_basic_ostream_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_QEAA_40_PEAV_3f__24_basic_streambuf_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_1_40__N_40_Z((int64_t *)1, (bool)&g103);
    int64_t v1 = (int64_t)*(int32_t *)(result + 4); // 0x140019408
    *(int64_t *)(v1 + result) = (int64_t)&g19;
    int32_t v2 = *(int32_t *)(v1 + 4); // 0x14001941a
    *(int32_t *)(result - 4 + (int64_t)v2) = v2 - 136;
    _3f__3f_0_3f__24_basic_streambuf_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_IEAA_40_XZ();
    *(int64_t *)(result + 8) = (int64_t)&g27;
    *(int64_t *)(result + 112) = 0;
    *(int32_t *)(result + 120) = 4;
    return result;
}

// Address range: 0x140019460 - 0x140019570
int64_t function_140019460(int128_t * a1, int64_t a2) {
    int64_t v1 = (int64_t)a1;
    int64_t v2 = *(int64_t *)(v1 + 8); // 0x14001947d
    int64_t v3 = v2; // 0x140019493
    int64_t v4 = v1; // 0x140019493
    int64_t v5; // 0x140019460
    if (*(char *)(v2 + 25) == 0) {
        int64_t v6 = v5 & 255; // 0x140019495
        int64_t v7 = v1; // 0x140019499
        int64_t v8 = v2;
        char v9 = *(char *)(v8 + 32); // 0x1400194a5
        v7 = v6 > (int64_t)v9 ? v7 : v8;
        int64_t v10 = *(int64_t *)(v6 > (int64_t)v9 ? v8 + 16 : v8);
        v3 = v8;
        v4 = v7;
        while (*(char *)(v10 + 25) == 0) {
            // 0x1400194a0
            v8 = v10;
            v9 = *(char *)(v8 + 32);
            v7 = v6 > (int64_t)v9 ? v7 : v8;
            v10 = *(int64_t *)(v6 > (int64_t)v9 ? v8 + 16 : v8);
            v3 = v8;
            v4 = v7;
        }
    }
    // 0x1400194c9
    if (*(char *)(v4 + 25) == 0) {
        // 0x1400194cf
        if (0x100000000000000 * v5 >> 56 >= (int64_t)*(char *)(v4 + 32)) {
            // 0x140019542
            return v4 + 40;
        }
    }
    if (v2 != 0x38e38e38e38e38e) {
        int128_t * v11 = a1; // bp-56, 0x1400194e7
        int64_t v12 = function_14001e5fc(72); // 0x1400194f6
        *(char *)(v12 + 32) = (char)v5;
        *(int64_t *)(v12 + 56) = 0;
        *(int64_t *)(v12 + 64) = 15;
        *(char *)(v12 + 40) = 0;
        *(int64_t *)v12 = v1;
        *(int64_t *)(v12 + 8) = v1;
        *(int64_t *)(v12 + 16) = v1;
        *(int16_t *)(v12 + 24) = 0;
        int128_t v13 = __asm_movups_1((int128_t)v3); // 0x140019528
        v11 = (int128_t *)__asm_movaps(v13);
        // 0x140019542
        return function_14001bb20(a1, (int128_t *)&v11, v12) + 40;
    }
    // 0x14001955b
    function_140014240();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    return __asm_int3();
}

// Address range: 0x140019570 - 0x1400195d6
int64_t function_140019570(int64_t * a1, int64_t * a2) {
    int64_t result = (int64_t)a2;
    int64_t v1 = (int64_t)a1;
    *a2 = v1;
    int64_t v2 = *(int64_t *)(v1 + 16); // 0x140019579
    if (*(char *)(v2 + 25) == 0) {
        int64_t v3 = *(int64_t *)v2; // 0x1400195ad
        if (*(char *)(v3 + 25) != 0) {
            // 0x1400195cf
            *a1 = v2;
            return result;
        }
        int64_t v4 = v3;
        int64_t v5 = *(int64_t *)v4; // 0x1400195c0
        while (*(char *)(v5 + 25) == 0) {
            // 0x1400195c0
            v4 = v5;
            v5 = *(int64_t *)v4;
        }
        // 0x1400195cf
        *a1 = v4;
        return result;
    }
    int64_t v6 = *(int64_t *)(v1 + 8); // 0x140019584
    if (*(char *)(v6 + 25) != 0) {
        // 0x1400195a6
        *a1 = v6;
        return result;
    }
    int64_t v7 = v1;
    int64_t v8 = v6;
    int64_t v9 = v8; // 0x140019594
    while (v7 == *(int64_t *)(v8 + 16)) {
        // 0x140019596
        *a1 = v8;
        int64_t v10 = *(int64_t *)(v8 + 8); // 0x14001959c
        v9 = v10;
        if (*(char *)(v10 + 25) != 0) {
            // break -> 0x1400195a6
            break;
        }
        v7 = v8;
        v8 = v10;
        v9 = v8;
    }
    // 0x1400195a6
    *a1 = v9;
    return result;
}

// Address range: 0x1400195e0 - 0x140019621
int64_t function_1400195e0(int64_t a1, int64_t a2) {
    int64_t * v1 = (int64_t *)(a1 + 8); // 0x1400195e3
    int64_t v2 = *v1; // 0x1400195e3
    int64_t v3 = v2; // 0x1400195e3
    if (v2 == *(int64_t *)(a1 + 16)) {
        // 0x14001961c
        return function_14001ab60(a1, v2, (char *)a2);
    }
    // 0x1400195ed
    *(int64_t *)(v2 + 16) = 0;
    *(int64_t *)(v3 + 24) = 0;
    int128_t v4 = *(int128_t *)&v3; // 0x1400195f7
    int128_t v5 = __asm_movups_1(v4); // 0x1400195f7
    int64_t v6 = v4;
    __asm_movups(*(int128_t *)v6, v5);
    int64_t v7 = a2 + 16; // 0x1400195fe
    __asm_movups(*(int128_t *)(v6 + 16), __asm_movups_1(*(int128_t *)v7));
    *(int64_t *)v7 = 0;
    *(int64_t *)(a2 + 24) = 15;
    *(char *)a2 = 0;
    *v1 = *v1 + 32;
    return 0;
}

// Address range: 0x140019630 - 0x1400196a0
int64_t function_140019630(int128_t * a1) {
    if (a1 == NULL) {
        // 0x14001968b
        int64_t result; // 0x140019630
        return result;
    }
    int64_t v1 = (int64_t)a1;
    int64_t * v2 = (int64_t *)(v1 + 8); // 0x140019641
    function_14001afc0(v1, *v2);
    int64_t * v3 = (int64_t *)(v1 + 16); // 0x14001964d
    int64_t v4 = *v3 - v1 & -32; // 0x140019654
    int64_t v5 = v1; // 0x14001965f
    int64_t v6 = v4; // 0x14001965f
    int64_t v7; // 0x140019630
    if (v4 >= 0x1000) {
        int64_t v8 = v1 - 8;
        v5 = *(int64_t *)v8;
        if (v8 - v5 >= 32) {
            // 0x140019691
            _invalid_parameter_noinfo_noreturn();
            __asm_int3();
            __asm_int3();
            __asm_int3();
            __asm_int3();
            __asm_int3();
            __asm_int3();
            __asm_int3();
            __asm_int3();
            return __asm_int3();
        }
        // 0x140019676
        v6 = v4 + 39;
        v7 = v5;
    }
    // 0x140019679
    function_14001ea5c(v5, v6, v7);
    *(int64_t *)a1 = 0;
    *v2 = 0;
    *v3 = 0;
    // 0x14001968b
    return 0;
}

// Address range: 0x1400196a0 - 0x1400196bd
int64_t function_1400196a0(int64_t a1, int64_t a2) {
    // 0x1400196a0
    int64_t v1; // bp-24, 0x1400196a0
    int64_t v2 = function_14001adf0(a1, (char *)&v1, (int128_t *)a2); // 0x1400196ac
    return *(int64_t *)v2 + 64;
}

// Address range: 0x1400196c0 - 0x1400197aa
int64_t function_1400196c0(int64_t a1, int128_t * str2) {
    int64_t v1 = (int64_t)str2;
    int64_t v2 = *(int64_t *)(a1 + 8); // 0x1400196d2
    int64_t v3 = a1; // 0x1400196da
    int64_t v4; // 0x1400196c0
    int64_t v5; // 0x1400196c0
    int64_t v6; // 0x1400196c0
    int64_t v7; // 0x1400196c0
    if (*(char *)(v2 + 25) == 0) {
        uint64_t v8 = *(int64_t *)(v1 + 16); // 0x1400196e1
        v6 = v2;
        v4 = a1;
        while (true) {
          lab_0x1400196f0:;
            int64_t v9 = v4;
            int64_t v10 = v6;
            int64_t v11 = v10 + 32; // 0x140019701
            int64_t str = v11; // 0x140019705
            if (*(int64_t *)(v10 + 56) >= 16) {
                // 0x140019707
                str = *(int64_t *)v11;
            }
            uint64_t v12 = *(int64_t *)(v10 + 48); // 0x14001970b
            int64_t n = v8 < v12 ? v8 : v12; // 0x140019715
            int32_t memcmp_rc = memcmp((int64_t *)str, (int64_t *)str2, (int32_t)n); // 0x140019719
            if (memcmp_rc == 0) {
                // 0x140019788
                v5 = v10;
                v7 = v10;
                if (v12 >= v8) {
                    goto lab_0x14001972a;
                } else {
                    // 0x14001978d
                    v5 = v9;
                    v7 = v10 + 16;
                    goto lab_0x14001972a;
                }
            } else {
                // 0x140019722
                v5 = v10;
                v7 = v10;
                if (memcmp_rc < 0) {
                    // 0x14001978d
                    v5 = v9;
                    v7 = v10 + 16;
                    goto lab_0x14001972a;
                } else {
                    goto lab_0x14001972a;
                }
            }
        }
    }
  lab_0x14001973a:
    // 0x14001973a
    if (*(char *)(v3 + 25) != 0) {
        // 0x140019779
        return 0;
    }
    int64_t v13 = v3 + 32; // 0x140019745
    int64_t str4 = v13; // 0x140019749
    if (*(int64_t *)(v3 + 56) >= 16) {
        // 0x14001974b
        str4 = *(int64_t *)v13;
    }
    int64_t str3 = *(int64_t *)(v1 + 24) < 16 ? v1 : str4;
    uint64_t v14 = *(int64_t *)(v3 + 48); // 0x14001975c
    uint64_t v15 = *(int64_t *)(v1 + 16); // 0x140019760
    int64_t n2 = v14 < v15 ? v14 : v15; // 0x14001976a
    int32_t memcmp_rc2 = memcmp((int64_t *)str3, (int64_t *)str4, (int32_t)n2); // 0x14001976e
    if (memcmp_rc2 == 0) {
        // 0x140019793
        if (v15 < v14) {
            // 0x140019779
            return 0;
        }
        // 0x140019779
        return 1;
    }
    // 0x140019777
    if (memcmp_rc2 < 0) {
        // 0x140019779
        return 0;
    }
    // 0x140019779
    return 1;
  lab_0x14001972a:;
    int64_t v16 = *(int64_t *)v7;
    v6 = v16;
    v4 = v5;
    v3 = v5;
    if (*(char *)(v16 + 25) != 0) {
        // break -> 0x14001973a
        goto lab_0x14001973a;
    }
    goto lab_0x1400196f0;
}

// Address range: 0x1400197b0 - 0x1400198a5
int64_t function_1400197b0(int64_t a1, int64_t * a2, char * a3) {
    int64_t v1 = (int64_t)a3;
    int64_t v2 = *(int64_t *)(a1 + 8); // 0x1400197cc
    int64_t v3 = a1; // 0x1400197d4
    int64_t v4 = v1; // 0x1400197d4
    int64_t v5; // 0x1400197b0
    int64_t v6; // 0x1400197b0
    int64_t v7; // 0x1400197b0
    int64_t v8; // 0x1400197b0
    int64_t v9; // 0x1400197b0
    int64_t n; // 0x140019815
    if (*(char *)(v2 + 25) == 0) {
        uint64_t v10 = *(int64_t *)(v1 + 16); // 0x1400197e4
        v8 = v2;
        v6 = a1;
        v5 = v1;
        while (true) {
          lab_0x1400197f0:;
            int64_t v11 = v6;
            int64_t v12 = v8;
            int64_t v13 = v12 + 32; // 0x140019801
            int64_t str = v13; // 0x140019805
            if (*(int64_t *)(v12 + 56) >= 16) {
                // 0x140019807
                str = *(int64_t *)v13;
            }
            int64_t str2 = *(int64_t *)(v1 + 24) < 16 ? v1 : v5;
            uint64_t v14 = *(int64_t *)(v12 + 48); // 0x14001980b
            n = v10 < v14 ? v10 : v14;
            int32_t memcmp_rc = memcmp((int64_t *)str, (int64_t *)str2, (int32_t)n); // 0x140019819
            if (memcmp_rc == 0) {
                // 0x140019890
                v7 = v12;
                v9 = v12;
                if (v14 >= v10) {
                    goto lab_0x14001982a;
                } else {
                    // 0x140019895
                    v7 = v11;
                    v9 = v12 + 16;
                    goto lab_0x14001982a;
                }
            } else {
                // 0x140019822
                v7 = v12;
                v9 = v12;
                if (memcmp_rc < 0) {
                    // 0x140019895
                    v7 = v11;
                    v9 = v12 + 16;
                    goto lab_0x14001982a;
                } else {
                    goto lab_0x14001982a;
                }
            }
        }
    }
  lab_0x14001983a:
    // 0x14001983a
    if (*(char *)(v3 + 25) != 0) {
        // 0x14001987c
        *a2 = a1;
        return (int64_t)a2;
    }
    int64_t v15 = v3 + 32; // 0x140019845
    int64_t str4 = v15; // 0x140019849
    if (*(int64_t *)(v3 + 56) >= 16) {
        // 0x14001984b
        str4 = *(int64_t *)v15;
    }
    int64_t str3 = *(int64_t *)(v1 + 24) < 16 ? v1 : v4;
    uint64_t v16 = *(int64_t *)(v3 + 48); // 0x14001985c
    uint64_t v17 = *(int64_t *)(v1 + 16); // 0x140019860
    int64_t n2 = v16 < v17 ? v16 : v17; // 0x14001986a
    int32_t memcmp_rc2 = memcmp((int64_t *)str3, (int64_t *)str4, (int32_t)n2); // 0x14001986e
    if (memcmp_rc2 == 0) {
        // 0x14001989b
        if (v17 < v16) {
            // 0x14001987c
            *a2 = a1;
            return (int64_t)a2;
        }
        // 0x14001987c
        *a2 = v3;
        return (int64_t)a2;
    }
    // 0x140019877
    if (memcmp_rc2 < 0) {
        // 0x14001987c
        *a2 = a1;
        return (int64_t)a2;
    }
    // 0x14001987c
    *a2 = v3;
    return (int64_t)a2;
  lab_0x14001982a:;
    int64_t v18 = *(int64_t *)v9;
    v8 = v18;
    v6 = v7;
    v5 = n;
    v3 = v7;
    v4 = n;
    if (*(char *)(v18 + 25) != 0) {
        // break -> 0x14001983a
        goto lab_0x14001983a;
    }
    goto lab_0x1400197f0;
}

// Address range: 0x1400198b0 - 0x1400198bf
int64_t function_1400198b0(int128_t * a1) {
    // 0x1400198b0
    return (int64_t)a1;
}

// Address range: 0x1400198c0 - 0x140019920
int64_t function_1400198c0(char * a1) {
    int64_t v1 = (int64_t)a1;
    int64_t * v2 = (int64_t *)(v1 + 24); // 0x1400198c6
    uint64_t v3 = *v2; // 0x1400198c6
    int64_t result; // 0x1400198c0
    if (v3 < 16) {
        // 0x1400198ff
        *(int64_t *)(v1 + 16) = 0;
        *v2 = 15;
        *a1 = 0;
        return result;
    }
    int64_t v4 = v3 + 1; // 0x1400198d6
    int64_t v5 = v1; // 0x1400198e0
    int64_t v6 = v4; // 0x1400198e0
    int64_t v7; // 0x1400198c0
    if (v4 >= 0x1000) {
        int64_t v8 = v1 - 8;
        v5 = *(int64_t *)v8;
        if (v8 - v5 >= 32) {
            // 0x140019918
            _invalid_parameter_noinfo_noreturn();
            __asm_int3();
            return __asm_int3();
        }
        // 0x1400198f7
        v6 = v3 + 40;
        v7 = v5;
    }
    // 0x1400198fa
    result = function_14001ea5c(v5, v6, v7);
    // 0x1400198ff
    *(int64_t *)(v1 + 16) = 0;
    *v2 = 15;
    *a1 = 0;
    return result;
}

// Address range: 0x140019920 - 0x14001995b
int64_t function_140019920(int128_t * a1, char * a2) {
    int64_t result = (int64_t)a1;
    *(int64_t *)(result + 16) = 0;
    *(int64_t *)(result + 24) = 15;
    *(char *)a1 = 0;
    int64_t v1 = -1; // 0x140019940
    v1++;
    while (*(char *)(v1 + (int64_t)a2) != 0) {
        // 0x140019943
        v1++;
    }
    // 0x14001994d
    function_140019e40((char *)a1, a2, v1);
    return result;
}

// Address range: 0x140019960 - 0x140019a2a
int64_t function_140019960(int64_t result, int64_t a2) {
    int64_t v1 = a2;
    int64_t * v2 = (int64_t *)(result + 16); // 0x14001996d
    *v2 = 0;
    int64_t * v3 = (int64_t *)(result + 24); // 0x140019974
    *v3 = 0;
    uint64_t v4 = *(int64_t *)(a2 + 16); // 0x14001997d
    int64_t v5; // 0x140019960
    if (v4 < 16) {
        // 0x140019991
        __asm_movups(*(int128_t *)&v5, __asm_movups_1(*(int128_t *)&v1));
        // 0x140019a0d
        *v2 = v4;
        *v3 = 15;
        return result;
    }
    int64_t v6 = v4 | 15; // 0x1400199ab
    int64_t v7 = v6 > -1 ? v6 : 0x7fffffffffffffff; // 0x1400199b2
    int64_t v8 = v7 + 1; // 0x1400199b6
    v5 = v8;
    int64_t v9; // 0x140019960
    if (v8 < 0x1000) {
        // 0x1400199f6
        v9 = function_14001e5fc(v8);
    } else {
        int64_t v10 = function_14001e5fc(v7 + 40); // 0x1400199cf
        v5 = v10;
        if (v10 == 0) {
            // 0x1400199f1
            _invalid_parameter_noinfo_noreturn();
            v9 = __asm_int3();
        } else {
            int64_t v11 = v10 + 39 & -32; // 0x1400199e0
            *(int64_t *)(v11 - 8) = v10;
            v9 = v11;
        }
    }
    int64_t v12 = *(int64_t *)(a2 + 24) < 16 ? a2 : v1;
    *(int64_t *)result = v9;
    memcpy((int64_t *)v9, (int64_t *)v12, (int32_t)v4 + 1);
    // 0x140019a0d
    *v2 = v4;
    *v3 = v7;
    return result;
}

// Address range: 0x140019a30 - 0x140019ac2
int64_t function_140019a30(int64_t a1, int64_t a2) {
    int64_t result = a1 - 152;
    int64_t * v1 = (int64_t *)result; // 0x140019a3f
    int32_t v2 = *(int32_t *)(*v1 + 4); // 0x140019a4b
    *(int64_t *)(result + (int64_t)v2) = (int64_t)&g31;
    int32_t v3 = *(int32_t *)(*v1 + 4); // 0x140019a65
    int64_t v4 = v3; // 0x140019a65
    *(int32_t *)(a1 - 156 + v4) = v3 - 152;
    function_1400192f0((int64_t *)(a1 - 128));
    _3f__3f_1_3f__24_basic_iostream_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_UEAA_40_XZ();
    _3f__3f_1_3f__24_basic_ios_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_UEAA_40_XZ();
    if ((a2 & 1) != 0) {
        // 0x140019a9a
        function_14001ea5c(result, 248, v4);
    }
    // 0x140019aab
    return result;
}

// Address range: 0x140019ad0 - 0x140019b04
int64_t function_140019ad0(int64_t result, int64_t a2) {
    // 0x140019ad0
    function_1400192f0((int64_t *)result);
    if ((a2 & 1) != 0) {
        // 0x140019ae9
        int64_t v1; // 0x140019ad0
        function_14001ea5c(result, 120, v1);
    }
    // 0x140019af6
    return result;
}

// Address range: 0x140019b10 - 0x140019ba2
int64_t function_140019b10(int64_t a1, int64_t a2) {
    int64_t result = a1 - 136;
    int64_t * v1 = (int64_t *)result; // 0x140019b1f
    int32_t v2 = *(int32_t *)(*v1 + 4); // 0x140019b2b
    *(int64_t *)(result + (int64_t)v2) = (int64_t)&g19;
    int32_t v3 = *(int32_t *)(*v1 + 4); // 0x140019b45
    int64_t v4 = v3; // 0x140019b45
    *(int32_t *)(a1 - 140 + v4) = v3 - 136;
    function_1400192f0((int64_t *)(a1 - 128));
    _3f__3f_1_3f__24_basic_ostream_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_UEAA_40_XZ();
    _3f__3f_1_3f__24_basic_ios_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_UEAA_40_XZ();
    if ((a2 & 1) != 0) {
        // 0x140019b7a
        function_14001ea5c(result, 232, v4);
    }
    // 0x140019b8b
    return result;
}

// Address range: 0x140019bb0 - 0x140019bee
int64_t function_140019bb0(int64_t a1) {
    // 0x140019bb0
    _3f_uncaught_exception_40_std_40__40_YA_NXZ();
    if (((char)&g103 & (char)&g103) == 0) {
        // 0x140019bc3
        _3f__Osfx_40__3f__24_basic_ostream_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_QEAAXXZ();
    }
    int64_t v1 = *(int64_t *)(a1 + 72 + (int64_t)*(int32_t *)(a1 + 4)); // 0x140019bd7
    int64_t result = a1; // 0x140019bdf
    if (v1 != 0) {
        // 0x140019be1
        result = *(int64_t *)v1;
    }
    // 0x140019be8
    return result;
}

// Address range: 0x140019bf0 - 0x140019cb0
int64_t function_140019bf0(int128_t * a1) {
    // 0x140019bf0
    if (a1 == NULL) {
        // 0x140019c91
        int64_t result; // 0x140019bf0
        return result;
    }
    int64_t v1 = (int64_t)a1;
    int64_t * v2 = (int64_t *)(v1 + 8); // 0x140019c0e
    int64_t v3 = *v2; // 0x140019c0e
    int64_t v4 = v1; // 0x140019c15
    int64_t v5 = v1; // 0x140019c15
    if (v3 != v1) {
        int64_t v6 = *(int64_t *)v4; // 0x140019c17
        free((int64_t *)v6);
        v4 += 24;
        v5 = v6;
        while (v4 != v3) {
            // 0x140019c17
            v6 = *(int64_t *)v4;
            free((int64_t *)v6);
            v4 += 24;
            v5 = v6;
        }
    }
    int64_t v7 = 0; // 0x140019c62
    // 0x140019c7c
    int64_t v8; // 0x140019bf0
    function_14001ea5c(v5, v7, v8);
    *(int64_t *)a1 = 0;
    *v2 = 0;
    *(int64_t *)(v1 + 16) = 0;
    // 0x140019c91
    return 0;
}

// Address range: 0x140019cb0 - 0x140019e37
int64_t function_140019cb0(int64_t * a1, char * a2, int64_t a3) {
    int64_t v1 = (int64_t)a2;
    _3f__3f_0_3f__24_basic_streambuf_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_IEAA_40_XZ();
    *a1 = (int64_t)&g27;
    uint64_t v2 = *(int64_t *)(v1 + 16); // 0x140019d21
    if (v2 >= 0x80000000) {
        // 0x140019d2e
        _3f__Xbad_alloc_40_std_40__40_YAXXZ();
        __asm_int3();
    }
    int64_t result = (int64_t)a1;
    int64_t v3 = 4 * a3; // 0x140019ce4
    int64_t v4 = v3 & 4 ^ 4; // 0x140019ceb
    int64_t v5 = (a3 & 2) != 0 ? v4 : v4 | 2; // 0x140019cf9
    int64_t v6 = v5 | a3 & 8;
    int64_t v7 = v6 | v3 & 16; // 0x140019d11
    if (v5 == 6 || v2 == 0) {
        // 0x140019e11
        *(int64_t *)(result + 104) = 0;
        // 0x140019e19
        *(int32_t *)(result + 112) = (int32_t)v7;
        return result;
    }
    int64_t v8; // 0x140019cb0
    if (v2 < 0x1000) {
        // 0x140019d80
        v8 = function_14001e5fc(v2);
        goto lab_0x140019d8b;
    } else {
        if (v2 > 0xffffffffffffffd8) {
            // 0x140019e32
            function_140001140();
            // UNREACHABLE
        }
        int64_t v9 = function_14001e5fc(v2 + 39); // 0x140019d61
        if (v9 == 0) {
            // 0x140019d79
            _invalid_parameter_noinfo_noreturn();
            __asm_int3();
            // 0x140019d80
            v8 = function_14001e5fc(v2);
            goto lab_0x140019d8b;
        } else {
            int64_t v10 = v9 + 39 & -32; // 0x140019d6f
            *(int64_t *)(v10 - 8) = v9;
            v8 = v10;
            goto lab_0x140019d8b;
        }
    }
  lab_0x140019d8b:;
    int64_t v11 = *(int64_t *)(v1 + 24) < 16 ? v1 : v6;
    memcpy((int64_t *)v8, (int64_t *)v11, (int32_t)v2);
    int64_t v12 = v8 + v2; // 0x140019d99
    int64_t * v13 = (int64_t *)(result + 104); // 0x140019d9d
    *v13 = v12;
    if ((v5 & 4) == 0) {
        // 0x140019dad
        *(int64_t *)*(int64_t *)(result + 24) = v8;
        *(int64_t *)*(int64_t *)(result + 56) = v8;
        int64_t v14 = *(int64_t *)(result + 80); // 0x140019dbd
        *(int32_t *)v14 = (int32_t)v12 - (int32_t)v8;
    }
    if ((v5 & 2) != 0) {
        // 0x140019e19
        *(int32_t *)(result + 112) = (int32_t)(v7 & 0xfffffffe | 1);
        return result;
    }
    int64_t v15 = *v13; // 0x140019dc9
    int64_t v16 = (v7 & 24) == 0 ? v8 : v15; // 0x140019dd4
    *(int64_t *)*(int64_t *)(result + 32) = v8;
    *(int64_t *)*(int64_t *)(result + 64) = v16;
    int64_t v17 = *(int64_t *)(result + 88); // 0x140019de8
    *(int32_t *)v17 = (int32_t)v15 - (int32_t)v16;
    if ((v5 & 4) != 0) {
        // 0x140019df3
        *(int64_t *)*(int64_t *)(result + 24) = v8;
        *(int64_t *)*(int64_t *)(result + 56) = 0;
        *(int32_t *)*(int64_t *)(result + 80) = (int32_t)v8;
    }
    // 0x140019e19
    *(int32_t *)(result + 112) = (int32_t)(v7 & 0xfffffffe | 1);
    return result;
}

// Address range: 0x140019e40 - 0x140019fc4
int64_t function_140019e40(char * a1, char * a2, uint64_t a3) {
    int64_t result = (int64_t)a1;
    int64_t * v1 = (int64_t *)(result + 24); // 0x140019e4c
    uint64_t v2 = *v1; // 0x140019e4c
    if (v2 >= a3) {
        // 0x140019e5e
        *(int64_t *)(result + 16) = a3;
        memmove((int64_t *)a1, (int64_t *)a2, (int32_t)a3);
        *(char *)(result + a3) = 0;
        return result;
    }
    if (a3 <= 0xffffffffffffffff) {
        // 0x140019f97
        function_1400011e0();
        __asm_int3();
        __asm_int3();
        __asm_int3();
        __asm_int3();
        int64_t v3 = *(int64_t *)(result + 72 + (int64_t)*(int32_t *)(result + 4)); // 0x140019fae
        int64_t result2 = result; // 0x140019fb6
        if (v3 != 0) {
            // 0x140019fb8
            result2 = *(int64_t *)v3;
        }
        // 0x140019fbf
        return result2;
    }
    int64_t v4 = a3 | 15; // 0x140019ea0
    int64_t v5 = 0x7fffffffffffffff; // 0x140019ea7
    int64_t v6; // 0x140019e40
    int64_t v7; // 0x140019e40
    if (v4 < 0) {
        goto lab_0x140019ef5;
    } else {
        uint64_t v8 = v2 / 2; // 0x140019eaf
        v5 = 0x7fffffffffffffff;
        if (v2 > (v8 ^ 0x7fffffffffffffff)) {
            goto lab_0x140019ef5;
        } else {
            int64_t v9 = v8 + v2; // 0x140019eba
            int64_t v10 = v4; // 0x140019e40
            if (v4 < v9) {
                // 0x140019ec8
                v10 = v9;
                if (v9 == -1) {
                    // 0x140019f91
                    function_140001140();
                    // UNREACHABLE
                }
            }
            uint64_t v11 = v10 + 1;
            if (v11 < 0x1000) {
                // 0x140019f19
                v6 = v10;
                v7 = function_14001e5fc(v11);
                goto lab_0x140019f25;
            } else {
                // 0x140019ee8
                v5 = v10;
                if (v11 > 0xffffffffffffffd8) {
                    // 0x140019f91
                    function_140001140();
                    // UNREACHABLE
                }
                goto lab_0x140019ef5;
            }
        }
    }
  lab_0x140019ef5:;
    int64_t v12 = function_14001e5fc(v5 + 40); // 0x140019ef8
    if (v12 == 0) {
        // 0x140019f8a
        _invalid_parameter_noinfo_noreturn();
        __asm_int3();
        // 0x140019f91
        function_140001140();
        // UNREACHABLE
    }
    int64_t v13 = v12 + 39 & -32; // 0x140019f0a
    *(int64_t *)(v13 - 8) = v12;
    v6 = v5;
    v7 = v13;
    goto lab_0x140019f25;
  lab_0x140019f25:
    // 0x140019f25
    *(int64_t *)(result + 16) = a3;
    *v1 = v6;
    memcpy((int64_t *)v7, (int64_t *)a2, (int32_t)a3);
    *(char *)(v7 + a3) = 0;
    if (v2 < 16) {
        // 0x140019f73
        *(int64_t *)a1 = v7;
        return result;
    }
    int64_t v14 = v2 + 1; // 0x140019f49
    int64_t v15 = v7; // 0x140019f54
    int64_t v16 = v14; // 0x140019f54
    int64_t v17 = a3; // 0x140019f54
    if (v14 >= 0x1000) {
        int64_t v18 = v7 - 8;
        int64_t v19 = *(int64_t *)v18; // 0x140019f56
        if (v18 - v19 >= 32) {
            // 0x140019f8a
            _invalid_parameter_noinfo_noreturn();
            __asm_int3();
            // 0x140019f91
            function_140001140();
            // UNREACHABLE
        }
        // 0x140019f6b
        v15 = v19;
        v16 = v2 + 40;
        v17 = v19;
    }
    // 0x140019f6e
    function_14001ea5c(v15, v16, v17);
    // 0x140019f73
    *(int64_t *)a1 = v7;
    return result;
}

// Address range: 0x140019fd0 - 0x14001a060
int64_t function_140019fd0(int64_t result, int64_t a2) {
    int64_t v1 = result;
    if (result == a2) {
        // 0x14001a047
        return result;
    }
    int64_t * v2 = (int64_t *)(result + 24);
    uint64_t v3 = *v2; // 0x140019fe5
    int64_t v4 = v3; // 0x140019fe5
    if (v3 >= 16) {
        int64_t v5 = v3 + 1; // 0x140019ff2
        v4 = v5;
        int64_t v6 = v5; // 0x140019ffc
        int64_t v7 = result; // 0x140019ffc
        int64_t v8; // 0x140019fd0
        if (v5 >= 0x1000) {
            int64_t v9 = result - 8;
            v7 = *(int64_t *)v9;
            v6 = v3 + 40;
            v4 = v6;
            if (v9 - v7 >= 32) {
                // 0x14001a055
                _invalid_parameter_noinfo_noreturn();
                __asm_int3();
                __asm_int3();
                __asm_int3();
                __asm_int3();
                return __asm_int3();
            }
            // 0x14001a013
            v1 = v7;
            v8 = v7;
        }
        // 0x14001a016
        function_14001ea5c(v7, v6, v8);
    }
    // 0x14001a01b
    *v2 = 15;
    int64_t v10 = result + 16; // 0x14001a025
    *(int64_t *)v10 = 0;
    *(char *)result = 0;
    __asm_movups(*(int128_t *)&v1, __asm_movups_1(*(int128_t *)&v4));
    int64_t v11 = a2 + 16; // 0x14001a031
    __asm_movups(*(int128_t *)v10, __asm_movups_1(*(int128_t *)v11));
    *(int64_t *)v11 = 0;
    *(int64_t *)(a2 + 24) = 15;
    *(char *)a2 = 0;
    // 0x14001a047
    return result;
}

// Address range: 0x14001a060 - 0x14001a1c4
int64_t function_14001a060(int64_t * a1, char * a2) {
    int64_t v1 = -1; // 0x14001a089
    v1++;
    while (*(char *)(v1 + (int64_t)a2) != 0) {
        // 0x14001a090
        v1++;
    }
    int64_t v2 = (int64_t)a1;
    int64_t v3 = (int64_t)*(int32_t *)(v2 + 4); // 0x14001a09c
    int64_t v4 = v2 + 72;
    int64_t v5 = *(int64_t *)(v4 + v3); // 0x14001a0be
    int64_t v6 = v5 == 0 ? v2 : v5;
    int64_t v7 = (int64_t)*(int32_t *)(v6 + 4);
    int64_t v8 = v2 + 16;
    if (*(int32_t *)(v8 + v7) != 0) {
        // 0x14001a11f
        return function_14001a1d2();
    }
    int64_t v9 = v2 + 40;
    int64_t v10 = *(int64_t *)(v9 + v3); // 0x14001a0a0
    int64_t v11 = v7; // 0x14001a0f1
    int64_t v12 = v6; // 0x14001a0f1
    if (v12 != 0 && v12 != v2) {
        // 0x14001a117
        _3f_flush_40__3f__24_basic_ostream_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_QEAAAEAV12_40_XZ();
        v11 = (int64_t)*(int32_t *)(v12 + 4);
        if (*(int32_t *)(v8 + v11) != 0) {
            // 0x14001a11f
            return function_14001a1d2();
        }
    }
    int64_t v13 = v10 - v1;
    int64_t v14 = v10 > 0 == v10 > v1 ? v13 : 0;
    uint32_t v15 = *(int32_t *)(v2 + 24 + v11) & 448; // 0x14001a131
    int64_t v16 = v12; // 0x14001a13a
    int64_t v17 = v14; // 0x14001a13a
    if (v15 != 64) {
        int64_t v18 = v15; // 0x14001a131
        int64_t v19 = v13; // 0x14001a143
        v16 = v18;
        v17 = v14;
        if (v14 >= 1) {
            int64_t v20 = *(int64_t *)(v4 + (int64_t)*(int32_t *)(v18 + 4)); // 0x14001a151
            _3f_sputc_40__3f__24_basic_streambuf_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_QEAAHD_40_Z((char)&g103);
            while ((int32_t)&g103 != -1) {
                int64_t v21 = v19;
                int64_t v22 = v21 - 1; // 0x14001a161
                v19 = v22;
                v16 = v20;
                v17 = v22;
                if (v21 < 2) {
                    goto lab_0x14001a169;
                }
                v20 = *(int64_t *)(v4 + (int64_t)*(int32_t *)(v20 + 4));
                _3f_sputc_40__3f__24_basic_streambuf_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_QEAAHD_40_Z((char)&g103);
            }
            // 0x14001a1b2
            *(int64_t *)(v9 + (int64_t)*(int32_t *)(v20 + 4)) = 0;
            return function_14001a1d2();
        }
    }
  lab_0x14001a169:;
    int32_t v23 = *(int32_t *)(v16 + 4); // 0x14001a169
    int64_t v24 = *(int64_t *)(v4 + (int64_t)v23); // 0x14001a173
    _3f_sputn_40__3f__24_basic_streambuf_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_QEAA_JPEBD_J_40_Z((char *)&g103, (int64_t)&g103);
    int64_t v25 = v17; // 0x14001a181
    if (v1 != (int64_t)&g103 || v17 < 1) {
        // 0x14001a1b2
        *(int64_t *)(v9 + (int64_t)*(int32_t *)(v24 + 4)) = 0;
        return function_14001a1d2();
    }
    int64_t v26 = *(int64_t *)(v4 + (int64_t)*(int32_t *)(v24 + 4)); // 0x14001a194
    _3f_sputc_40__3f__24_basic_streambuf_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_QEAAHD_40_Z((char)&g103);
    while ((int32_t)&g103 != -1) {
        int64_t v27 = v25;
        v25 = v27 - 1;
        if (v27 < 2) {
            // break -> 0x14001a1b2
            break;
        }
        v26 = *(int64_t *)(v4 + (int64_t)*(int32_t *)(v26 + 4));
        _3f_sputc_40__3f__24_basic_streambuf_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_QEAAHD_40_Z((char)&g103);
    }
    // 0x14001a1b2
    *(int64_t *)(v9 + (int64_t)*(int32_t *)(v26 + 4)) = 0;
    return function_14001a1d2();
}

// Address range: 0x14001a1c4 - 0x14001a1d2
int64_t function_14001a1c4(void) {
    // 0x14001a1c4
    int64_t result; // 0x14001a1c4
    return result;
}

// Address range: 0x14001a1d2 - 0x14001a22a
int64_t function_14001a1d2(void) {
    // 0x14001a1d2
    _3f_setstate_40__3f__24_basic_ios_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_QEAAXH_N_40_Z((int32_t)&g103, (bool)&g103);
    _3f_uncaught_exception_40_std_40__40_YA_NXZ();
    if (((char)&g103 & (char)&g103) == 0) {
        // 0x14001a1f2
        _3f__Osfx_40__3f__24_basic_ostream_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_QEAAXXZ();
    }
    // 0x14001a1fc
    int64_t result; // 0x14001a1d2
    return result;
}

// Address range: 0x14001a230 - 0x14001a3e4
int64_t function_14001a230(int64_t result, int64_t a2) {
    int32_t * v1 = (int32_t *)(result + 4);
    int64_t v2 = result + 72;
    int64_t v3 = *(int64_t *)(v2 + (int64_t)*v1); // 0x14001a262
    int64_t v4 = v3 == 0 ? result : v3;
    int64_t v5 = (int64_t)*((v3 == 0 ? v1 : (int32_t *)(v3 + 4)));
    int64_t v6 = result + 16;
    int64_t v7 = v4; // 0x14001a27e
    int64_t v8; // 0x14001a230
    int64_t v9; // 0x14001a230
    if (*(int32_t *)(v6 + v5) == 0) {
        // 0x14001a284
        v7 = *(int64_t *)(result + 80 + v5);
        v9 = v5;
        v8 = v4;
        if (v7 == 0 || v7 == result) {
            goto lab_0x14001a2be;
        } else {
            // 0x14001a2b2
            _3f_flush_40__3f__24_basic_ostream_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_QEAAAEAV12_40_XZ();
            v9 = (int64_t)*(int32_t *)(v7 + 4);
            v8 = v7;
            if (*(int32_t *)(v6 + v9) != 0) {
                goto lab_0x14001a2b2;
            } else {
                goto lab_0x14001a2be;
            }
        }
    } else {
        goto lab_0x14001a2b2;
    }
  lab_0x14001a37d:;
    // 0x14001a37d
    int64_t v10; // 0x14001a230
    int32_t v11 = *(int32_t *)(v10 + 4); // 0x14001a380
    int64_t v12; // 0x14001a230
    *(int64_t *)(v12 + (int64_t)v11) = 0;
    int32_t v13; // 0x14001a230
    _3f_setstate_40__3f__24_basic_ios_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_QEAAXH_N_40_Z(v13, (bool)&g103);
    _3f_uncaught_exception_40_std_40__40_YA_NXZ();
    if (((char)&g103 & (char)&g103) == 0) {
        // 0x14001a3ad
        _3f__Osfx_40__3f__24_basic_ostream_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_QEAAXXZ();
    }
    // 0x14001a3b7
    return result;
  lab_0x14001a2b2:
    // 0x14001a2b2
    v13 = 0;
    v12 = result + 40;
    v10 = v7;
    goto lab_0x14001a37d;
  lab_0x14001a2be:;
    int64_t v14 = result + 40;
    int64_t v15 = *(int64_t *)(v14 + v9); // 0x14001a2c2
    int64_t v16 = v15 - 1; // 0x14001a2cb
    int64_t v17 = v16 < 0 == (v15 & -v15) < 0 == (v16 != 0) ? v16 : 0; // 0x14001a2d5
    uint32_t v18 = *(int32_t *)(result + 24 + v9) & 448; // 0x14001a2d9
    int64_t v19 = v8; // 0x14001a2e8
    int64_t v20 = 0; // 0x14001a2e8
    int64_t v21 = v17; // 0x14001a2e8
    if (v18 != 64) {
        int64_t v22 = v17; // 0x14001a230
        int64_t v23 = 0;
        int64_t v24 = v18; // 0x14001a305
        v19 = v24;
        v20 = v23;
        v21 = v22;
        while (v22 >= 1) {
            // 0x14001a2f9
            v24 = *(int64_t *)(v2 + (int64_t)*(int32_t *)(v24 + 4));
            _3f_sputc_40__3f__24_basic_streambuf_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_QEAAHD_40_Z((char)&g103);
            v23 = (int32_t)&g103 == -1 ? 4 : v23;
            v22--;
            v13 = 1;
            v12 = v14;
            v10 = v24;
            if (v23 != 0) {
                goto lab_0x14001a37d;
            }
            v19 = v24;
            v20 = v23;
            v21 = v22;
        }
    }
    int32_t v25 = *(int32_t *)(v19 + 4); // 0x14001a323
    int64_t v26 = *(int64_t *)(v2 + (int64_t)v25); // 0x14001a32b
    _3f_sputc_40__3f__24_basic_streambuf_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_QEAAHD_40_Z((char)&g103);
    int64_t v27 = (int32_t)&g103 == -1 ? 4 : v20 & 0xffffffff; // 0x14001a339
    v13 = 1;
    v12 = v14;
    v10 = v26;
    if (v21 >= 1 && v27 == 0) {
        int64_t v28 = v21;
        int64_t v29 = *(int64_t *)(v2 + (int64_t)*(int32_t *)(v26 + 4)); // 0x14001a356
        _3f_sputc_40__3f__24_basic_streambuf_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_QEAAHD_40_Z((char)v27);
        int64_t v30 = (int32_t)&g103 == -1 ? 4 : v27; // 0x14001a364
        int64_t v31 = v28 - 1; // 0x14001a343
        int64_t v32 = v30; // 0x14001a343
        int64_t v33 = v29; // 0x14001a343
        v13 = 1;
        v12 = v14;
        v10 = v29;
        while (v28 >= 2 && v30 == 0) {
            // 0x14001a34a
            v28 = v31;
            v29 = *(int64_t *)(v2 + (int64_t)*(int32_t *)(v33 + 4));
            _3f_sputc_40__3f__24_basic_streambuf_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_QEAAHD_40_Z((char)v32);
            v30 = (int32_t)&g103 == -1 ? 4 : v32;
            v31 = v28 - 1;
            v32 = v30;
            v33 = v29;
            v13 = 1;
            v12 = v14;
            v10 = v29;
        }
    }
    goto lab_0x14001a37d;
}

// Address range: 0x14001a3f0 - 0x14001a460
int64_t function_14001a3f0(int64_t * a1, char * a2, char * a3) {
    int64_t v1 = (int64_t)a2;
    int64_t v2 = -1; // 0x14001a3f9
    v2++;
    while (*(char *)(v2 + v1) != 0) {
        // 0x14001a400
        v2++;
    }
    // 0x14001a40a
    if (0x7fffffffffffffff - *(int64_t *)((int64_t)a3 + 16) >= v2) {
        // 0x14001a420
        function_14001bda0((char *)a1, v1);
        return (int64_t)a1;
    }
    // 0x14001a44d
    function_1400011e0();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    return __asm_int3();
}

// Address range: 0x14001a460 - 0x14001a57e
int64_t function_14001a460(int128_t * a1, char * a2, int64_t a3) {
    uint64_t v1 = (int64_t)a2;
    int64_t v2 = -1; // 0x14001a47c
    v2++;
    uint64_t v3 = v2 + v1;
    while (*(char *)v3 != 0) {
        // 0x14001a480
        v2++;
        v3 = v2 + v1;
    }
    int64_t * v4 = (int64_t *)(a3 + 24);
    int64_t v5 = *v4; // 0x14001a489
    int64_t v6 = v5; // 0x14001a489
    int64_t v7 = a3 + 16;
    int64_t * v8 = (int64_t *)v7;
    int64_t v9 = *v8; // 0x14001a48d
    int64_t * v10; // 0x14001a460
    int64_t * v11; // 0x14001a460
    int64_t v12; // 0x14001a460
    int64_t v13; // 0x14001a460
    if (v2 > v5 - v9) {
        int64_t v14 = function_14001ccc0(a3, v2); // 0x14001a534
        int64_t v15 = v14 + 16; // 0x14001a55b
        v10 = (int64_t *)(v14 + 24);
        v11 = (int64_t *)v15;
        v12 = v15;
        v13 = v14;
    } else {
        // 0x14001a4a0
        *v8 = v9 + v2;
        uint64_t v16 = v6 < 16 ? a3 : v9;
        int64_t v17 = v2; // 0x14001a4c5
        if (v3 > v16 && v16 + v9 >= v1) {
            // 0x14001a4d0
            v17 = (v16 > v1 ? v16 : v1) - v1;
        }
        int64_t v18 = v17;
        int64_t * v19 = (int64_t *)v16; // 0x14001a4ef
        memmove((int64_t *)(v16 + v2), v19, (int32_t)v9 + 1);
        memcpy(v19, (int64_t *)a2, (int32_t)v18);
        memcpy((int64_t *)(v18 + v16), (int64_t *)(v18 + v3), (int32_t)(v2 - v18));
        v10 = v4;
        v11 = v8;
        v12 = v7;
        v13 = a3;
    }
    int64_t result = (int64_t)a1;
    int64_t v20 = result + 16; // 0x14001a544
    *(int64_t *)v20 = 0;
    *(int64_t *)(result + 24) = 0;
    __asm_movups(*(int128_t *)&v6, __asm_movups_1(*(int128_t *)v13));
    __asm_movups(*(int128_t *)v20, __asm_movups_1(*(int128_t *)v12));
    *v11 = 0;
    *v10 = 15;
    *(char *)v13 = 0;
    return result;
}

// Address range: 0x14001a580 - 0x14001a599
int64_t function_14001a580(void) {
    // 0x14001a580
    int64_t v1; // 0x14001a580
    int64_t v2 = v1;
    return function_14001c100(v1, v2, *(int64_t *)(v2 + 16));
}

// Address range: 0x14001a5a0 - 0x14001a5d9
int64_t function_14001a5a0(int64_t result, int64_t a2) {
    // 0x14001a5a0
    int64_t v1; // 0x14001a5a0
    _3f_widen_40__3f__24_basic_ios_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_QEBADD_40_Z((char)v1);
    _3f_put_40__3f__24_basic_ostream_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_QEAAAEAV12_40_D_40_Z((char)&g103);
    _3f_flush_40__3f__24_basic_ostream_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_QEAAAEAV12_40_XZ();
    return result;
}

// Address range: 0x14001a5e0 - 0x14001a5ed
int64_t function_14001a5e0(int64_t a1) {
    // 0x14001a5e0
    int64_t v1; // 0x14001a5e0
    int64_t result = v1 & -256;
    if (*(int64_t *)(a1 + 16) != 0) {
        // 0x14001a5ea
        return result;
    }
    // 0x14001a5e7
    return result | 1;
}

// Address range: 0x14001a5f0 - 0x14001a671
int64_t function_14001a5f0(char * a1, int64_t a2, int64_t a3) {
    int64_t v1 = a2 + 16; // 0x14001a602
    int64_t * v2 = (int64_t *)v1; // 0x14001a602
    uint64_t v3 = *v2; // 0x14001a602
    int64_t v4 = v3; // 0x14001a602
    int64_t * v5 = (int64_t *)(a2 + 24); // 0x14001a609
    uint64_t v6 = *v5; // 0x14001a609
    int64_t v7 = v6; // 0x14001a609
    char * v8; // 0x14001a5f0
    if (v3 >= v6) {
        char * v9 = (char *)a2;
        function_14001b050(v9);
        v8 = v9;
    } else {
        // 0x14001a612
        *v2 = v3 + 1;
        uint64_t v10 = v7; // 0x14001a61d
        int64_t v11 = v10 < 16 ? a2 : v10;
        *(char *)(v11 + v4) = (char)a3;
        *(char *)(v11 + 1 + v4) = 0;
        v8 = (char *)a2;
    }
    int64_t result = (int64_t)a1;
    int64_t v12 = result + 16; // 0x14001a63f
    *(int64_t *)v12 = 0;
    *(int64_t *)(result + 24) = 0;
    __asm_movups(*(int128_t *)&v4, __asm_movups_1(*(int128_t *)&v7));
    __asm_movups(*(int128_t *)v12, __asm_movups_1(*(int128_t *)v1));
    *v2 = 0;
    *v8 = 0;
    *v5 = 15;
    return result;
}

// Address range: 0x14001a680 - 0x14001a740
int64_t function_14001a680(int64_t * a1, int64_t a2, int64_t * a3) {
    int64_t v1 = -1; // 0x14001a69f
    v1++;
    while (*(char *)(v1 + (int64_t)a3) != 0) {
        // 0x14001a6a0
        v1++;
    }
    int64_t v2 = a2 + 16;
    int64_t * v3 = (int64_t *)v2;
    int64_t v4 = *v3; // 0x14001a6aa
    int64_t v5 = v4; // 0x14001a6aa
    int64_t * v6 = (int64_t *)(a2 + 24);
    uint64_t v7 = *v6; // 0x14001a6ae
    int64_t * v8; // 0x14001a680
    int64_t * v9; // 0x14001a680
    int64_t v10; // 0x14001a680
    int64_t v11; // 0x14001a680
    if (v1 > v7 - v4) {
        int64_t v12 = function_14001b1b0((int64_t *)a2, v1); // 0x14001a6fe
        int64_t v13 = v12 + 16; // 0x14001a717
        v9 = (int64_t *)(v12 + 24);
        v8 = (int64_t *)v13;
        v10 = v13;
        v11 = v12;
    } else {
        // 0x14001a6bd
        *v3 = v4 + v1;
        int64_t v14 = v5 + (v7 < 16 ? a2 : v7); // 0x14001a6d6
        memmove((int64_t *)v14, a3, (int32_t)v1);
        *(char *)(v14 + v1) = 0;
        v9 = v6;
        v8 = v3;
        v10 = v2;
        v11 = a2;
    }
    int64_t result = (int64_t)a1;
    int64_t v15 = result + 16; // 0x14001a708
    *(int64_t *)v15 = 0;
    *(int64_t *)(result + 24) = 0;
    __asm_movups(*(int128_t *)&v5, __asm_movups_1(*(int128_t *)v11));
    __asm_movups(*(int128_t *)v15, __asm_movups_1(*(int128_t *)v10));
    *v8 = 0;
    *(char *)v11 = 0;
    *v9 = 15;
    return result;
}

// Address range: 0x14001a740 - 0x14001a9b8
int64_t function_14001a740(int128_t * a1, int64_t a2, int64_t * a3) {
    int64_t v1; // 0x14001a740
    int64_t result; // 0x14001a740
    // 0x14001a84d
    v1 = 1;
    result = 0;
    // 0x14001a852
    v1 = 12;
    result = function_14001e5fc(12);
    int64_t v2 = (int64_t)a1;
    int64_t * v3 = (int64_t *)(v2 + 8); // 0x14001a764
    *(int64_t *)result = __asm_movsd_3(__asm_movsd(0x1555555555555555));
    *(int32_t *)(result + 8) = *(int32_t *)((int64_t)a3 + 8);
    int64_t v4 = *v3; // 0x14001a888
    int64_t v5; // 0x14001a740
    if (v4 != a2) {
        int64_t v6 = result; // 0x14001a8c0
        int64_t v7 = a2; // 0x14001a8c0
        int64_t v8 = v4; // 0x14001a8c0
        if (v1 != a2) {
            *(int64_t *)v6 = __asm_movsd_3(__asm_movsd(*(int64_t *)v1));
            uint32_t v9 = *(int32_t *)(v1 + 8); // 0x14001a8dc
            int64_t v10 = v1 + 12; // 0x14001a8df
            *(int32_t *)(v6 + 8) = v9;
            int64_t v11 = v10; // 0x14001a8e9
            v6 += 12;
            while (v10 != a2) {
                // 0x14001a8d0
                *(int64_t *)v6 = __asm_movsd_3(__asm_movsd(*(int64_t *)v11));
                v9 = *(int32_t *)(v11 + 8);
                v10 = v11 + 12;
                *(int32_t *)(v6 + 8) = v9;
                v11 = v10;
                v6 += 12;
            }
            // 0x14001a8eb
            v8 = *v3;
            v7 = v9;
        }
        // 0x14001a8ef
        v5 = v7;
        if (v8 != a2) {
            int64_t v12 = result - a2; // 0x14001a8f7
            int64_t v13 = a2; // 0x14001a8fa
            int64_t v14 = __asm_movsd_3(__asm_movsd(*(int64_t *)v13)); // 0x14001a904
            int64_t v15 = v13 + v12;
            *(int64_t *)(v15 + 12) = v14;
            *(int32_t *)(v15 + 20) = *(int32_t *)(v13 + 8);
            v13 += 12;
            v5 = v12;
            while (v13 != v8) {
                // 0x14001a900
                v14 = __asm_movsd_3(__asm_movsd(*(int64_t *)v13));
                v15 = v13 + v12;
                *(int64_t *)(v15 + 12) = v14;
                *(int32_t *)(v15 + 20) = *(int32_t *)(v13 + 8);
                v13 += 12;
                v5 = v12;
            }
        }
    } else {
        int64_t v16 = result; // 0x14001a897
        v5 = v1;
        if (v1 != v4) {
            *(int64_t *)v16 = __asm_movsd_3(__asm_movsd(*(int64_t *)v1));
            uint32_t v17 = *(int32_t *)(v1 + 8); // 0x14001a8ac
            int64_t v18 = v1 + 12; // 0x14001a8af
            *(int32_t *)(v16 + 8) = v17;
            int64_t v19 = v18; // 0x14001a8b9
            v16 += 12;
            while (v18 != v4) {
                // 0x14001a8a0
                *(int64_t *)v16 = __asm_movsd_3(__asm_movsd(*(int64_t *)v19));
                v17 = *(int32_t *)(v19 + 8);
                v18 = v19 + 12;
                *(int32_t *)(v16 + 8) = v17;
                v19 = v18;
                v16 += 12;
            }
            // 0x14001a91a
            v5 = v17;
        }
    }
    int64_t v20 = v5;
    if (v20 == 0) {
        // 0x14001a96d
        *(int64_t *)a1 = result;
        *v3 = result + 12;
        *(int64_t *)(v2 + 16) = result + 12;
        return result;
    }
    int64_t v21 = 0; // 0x14001a94b
    // 0x14001a965
    function_14001ea5c(v20, v21, v20);
    // 0x14001a96d
    *(int64_t *)a1 = result;
    *v3 = result + 12;
    *(int64_t *)(v2 + 16) = result + 12;
    return result;
}

// Address range: 0x14001a9c0 - 0x14001ab59
int64_t function_14001a9c0(int64_t a1, int64_t a2, int64_t a3) {
    int64_t * v1 = (int64_t *)(a1 + 16); // 0x14001a9ff
    uint64_t v2 = *v1 - a1 >> 3; // 0x14001aa0b
    uint64_t v3 = v2 / 2; // 0x14001aa20
    if (v2 > 0x1fffffffffffffff - v3) {
        // 0x14001ab54
        function_140001140();
        // UNREACHABLE
    }
    int64_t * v4 = (int64_t *)(a1 + 8); // 0x14001a9cb
    uint64_t v5 = (*v4 - a1 >> 3) + 1; // 0x14001aa1c
    uint64_t v6 = v3 + v2; // 0x14001aa37
    uint64_t v7 = v6 >= v5 ? v6 : v5; // 0x14001aa41
    if (v7 > 0x1fffffffffffffff) {
        // 0x14001ab54
        function_140001140();
        // UNREACHABLE
    }
    uint64_t v8 = 8 * v7; // 0x14001aa4e
    int64_t v9; // 0x14001a9c0
    if (v8 < 0x1000) {
        // 0x14001aa88
        v9 = 0;
        if (v8 != 0) {
            // 0x14001aa8d
            v9 = function_14001e5fc(v8);
        }
        goto lab_0x14001aa9c;
    } else {
        if (v8 > 0xffffffffffffffd8) {
            // 0x14001ab54
            function_140001140();
            // UNREACHABLE
        }
        int64_t v10 = function_14001e5fc(v8 + 39); // 0x14001aa6c
        if (v10 == 0) {
            goto lab_0x14001ab47;
        } else {
            int64_t v11 = v10 + 39 & -32; // 0x14001aa7e
            *(int64_t *)(v11 - 8) = v10;
            v9 = v11;
            goto lab_0x14001aa9c;
        }
    }
  lab_0x14001aa9c:;
    int64_t result = v9 + (a2 - a1 & -8); // 0x14001aaa0
    *(int64_t *)result = 0x1fffffffffffffff;
    int64_t v12 = *v4; // 0x14001aaaa
    int64_t v13; // 0x14001a9c0
    int64_t v14; // 0x14001a9c0
    int64_t v15; // 0x14001a9c0
    if (v12 != a2) {
        int64_t * v16 = (int64_t *)v9; // 0x14001aac1
        memmove(v16, v16, (int32_t)(a2 - v9));
        v14 = result + 8;
        v15 = a2;
        v13 = *v4 - a2;
    } else {
        // 0x14001aab6
        v14 = v9;
        v15 = v9;
        v13 = v12 - v9;
    }
    // 0x14001aad4
    memmove((int64_t *)v14, (int64_t *)v15, (int32_t)v13);
    if (v14 == 0) {
        // 0x14001ab12
        *(int64_t *)a1 = v9;
        *v4 = v9 + 8 * v5;
        *v1 = v9 + v8;
        return result;
    }
    int64_t v17 = *v1 - v14 & -8; // 0x14001aae8
    int64_t v18 = v14; // 0x14001aaf3
    int64_t v19 = v17; // 0x14001aaf3
    int64_t v20 = v13; // 0x14001aaf3
    if (v17 < 0x1000) {
        goto lab_0x14001ab0d;
    } else {
        int64_t v21 = v14 - 8;
        int64_t v22 = *(int64_t *)v21; // 0x14001aaf5
        if (v21 - v22 < 32) {
            // 0x14001ab0a
            v18 = v22;
            v19 = v17 + 39;
            v20 = v22;
            goto lab_0x14001ab0d;
        } else {
            goto lab_0x14001ab47;
        }
    }
  lab_0x14001ab47:
    // 0x14001ab47
    _invalid_parameter_noinfo_noreturn();
    __asm_int3();
    function_14001bb00();
    __asm_int3();
    // 0x14001ab54
    function_140001140();
    // UNREACHABLE
  lab_0x14001ab0d:
    // 0x14001ab0d
    function_14001ea5c(v18, v19, v20);
    // 0x14001ab12
    *(int64_t *)a1 = v9;
    *v4 = v9 + 8 * v5;
    *v1 = v9 + v8;
    return result;
}

// Address range: 0x14001ab60 - 0x14001adea
int64_t function_14001ab60(int64_t a1, int64_t a2, char * a3) {
    int64_t * v1 = (int64_t *)(a1 + 8); // 0x14001ab6c
    int64_t v2 = 0x7ffffffffffffff; // 0x14001ab86
    int64_t * v3 = (int64_t *)(a1 + 16); // 0x14001ab9c
    uint64_t v4 = *v3 - a1 >> 5; // 0x14001aba8
    uint64_t v5 = v4 / 2; // 0x14001abb8
    if (v4 > 0x7ffffffffffffff - v5) {
        // 0x14001ade5
        function_140001140();
        // UNREACHABLE
    }
    uint64_t v6 = (*v1 - a1 >> 5) + 1; // 0x14001abac
    uint64_t v7 = v5 + v4; // 0x14001abd4
    uint64_t v8 = v7 >= v6 ? v7 : v6; // 0x14001abde
    if (v8 > 0x7ffffffffffffff) {
        // 0x14001ade5
        function_140001140();
        // UNREACHABLE
    }
    uint64_t v9 = 32 * v8; // 0x14001abeb
    int64_t v10; // 0x14001ab60
    if (v9 < 0x1000) {
        // 0x14001ac24
        v10 = 0;
        if (v9 != 0) {
            // 0x14001ac29
            v10 = function_14001e5fc(v9);
        }
        goto lab_0x14001ac39;
    } else {
        if (v9 > 0xffffffffffffffd8) {
            // 0x14001ade5
            function_140001140();
            // UNREACHABLE
        }
        int64_t v11 = function_14001e5fc(v9 + 39); // 0x14001ac08
        if (v11 == 0) {
            goto lab_0x14001add8;
        } else {
            int64_t v12 = v11 + 39 & -32; // 0x14001ac1a
            *(int64_t *)(v12 - 8) = v11;
            v10 = v12;
            goto lab_0x14001ac39;
        }
    }
  lab_0x14001ac39:;
    int64_t v13 = (int64_t)a3;
    int64_t result = v10 + (a2 - a1 & -32); // 0x14001ac40
    int64_t v14 = result + 16; // 0x14001ac43
    *(int64_t *)v14 = 0;
    *(int64_t *)(result + 24) = 0;
    __asm_movups(*(int128_t *)result, __asm_movups_1(*(int128_t *)&v2));
    int64_t v15 = v13 + 16; // 0x14001ac54
    __asm_movups(*(int128_t *)v14, __asm_movups_1(*(int128_t *)v15));
    *(int64_t *)v15 = 0;
    *(int64_t *)(v13 + 24) = 15;
    *a3 = 0;
    int64_t v16 = *v1; // 0x14001ac71
    int64_t v17; // 0x14001ab60
    if (v16 != a2) {
        int64_t v18 = a2; // 0x14001acca
        if (v10 != a2) {
            int64_t v19 = v10 + 16;
            int64_t * v20 = (int64_t *)v19;
            *v20 = 0;
            int64_t * v21 = (int64_t *)(v10 + 24);
            *v21 = 0;
            int128_t * v22 = (int128_t *)v10;
            __asm_movups(*v22, __asm_movups_1(*v22));
            int128_t * v23 = (int128_t *)v19;
            __asm_movups(*v23, __asm_movups_1(*v23));
            *v20 = 0;
            int64_t v24 = v10 + 32; // 0x14001acf9
            *v21 = 15;
            *(char *)v10 = 0;
            int64_t v25 = v24; // 0x14001ad00
            v18 = v24;
            while (v24 != a2) {
                // 0x14001acd0
                v19 = v25 + 16;
                v20 = (int64_t *)v19;
                *v20 = 0;
                v21 = (int64_t *)(v25 + 24);
                *v21 = 0;
                v22 = (int128_t *)v25;
                __asm_movups(*v22, __asm_movups_1(*v22));
                v23 = (int128_t *)v19;
                __asm_movups(*v23, __asm_movups_1(*v23));
                *v20 = 0;
                v24 = v25 + 32;
                *v21 = 15;
                *(char *)v25 = 0;
                v25 = v24;
                v18 = v24;
            }
        }
        int64_t v26 = v18;
        function_14001afc0(v26, v26);
        int64_t v27 = *v1; // 0x14001ad0a
        int64_t v28 = result + 32; // 0x14001ad0e
        v17 = v28;
        if (v27 != a2) {
            int64_t v29 = v28 + 16; // 0x14001ad20
            *(int64_t *)v29 = 0;
            *(int64_t *)(v28 + 24) = 0;
            __asm_movups(*(int128_t *)v28, __asm_movups_1(*(int128_t *)a2));
            int64_t v30 = a2 + 16; // 0x14001ad2e
            __asm_movups(*(int128_t *)v29, __asm_movups_1(*(int128_t *)v30));
            *(int64_t *)v30 = 0;
            int64_t v31 = v28 + 32; // 0x14001ad3a
            *(int64_t *)(a2 + 24) = 15;
            *(char *)a2 = 0;
            int64_t v32 = a2 + 32; // 0x14001ad49
            int64_t v33 = v31; // 0x14001ad50
            int64_t v34 = v32; // 0x14001ad50
            v17 = v31;
            while (v32 != v27) {
                // 0x14001ad20
                v29 = v33 + 16;
                *(int64_t *)v29 = 0;
                *(int64_t *)(v33 + 24) = 0;
                __asm_movups(*(int128_t *)v33, __asm_movups_1(*(int128_t *)v34));
                v30 = v34 + 16;
                __asm_movups(*(int128_t *)v29, __asm_movups_1(*(int128_t *)v30));
                *(int64_t *)v30 = 0;
                v31 = v33 + 32;
                *(int64_t *)(v34 + 24) = 15;
                *(char *)v34 = 0;
                v32 = v34 + 32;
                v33 = v31;
                v34 = v32;
                v17 = v31;
            }
        }
    } else {
        // 0x14001ac7d
        v17 = v10;
        if (v10 != v16) {
            int64_t v35 = v10 + 16;
            int64_t * v36 = (int64_t *)v35;
            *v36 = 0;
            int64_t * v37 = (int64_t *)(v10 + 24);
            *v37 = 0;
            int128_t * v38 = (int128_t *)v10;
            __asm_movups(*v38, __asm_movups_1(*v38));
            int128_t * v39 = (int128_t *)v35;
            __asm_movups(*v39, __asm_movups_1(*v39));
            *v36 = 0;
            int64_t v40 = v10 + 32; // 0x14001acb9
            *v37 = 15;
            *(char *)v10 = 0;
            int64_t v41 = v40; // 0x14001acc0
            v17 = v40;
            while (v40 != v16) {
                // 0x14001ac90
                v35 = v41 + 16;
                v36 = (int64_t *)v35;
                *v36 = 0;
                v37 = (int64_t *)(v41 + 24);
                *v37 = 0;
                v38 = (int128_t *)v41;
                __asm_movups(*v38, __asm_movups_1(*v38));
                v39 = (int128_t *)v35;
                __asm_movups(*v39, __asm_movups_1(*v39));
                *v36 = 0;
                v40 = v41 + 32;
                *v37 = 15;
                *(char *)v41 = 0;
                v41 = v40;
                v17 = v40;
            }
        }
    }
    int64_t v42 = v17;
    function_14001afc0(v42, v42);
    if (v42 == 0) {
        // 0x14001ad9f
        *(int64_t *)a1 = v10;
        *v1 = v10 + 32 * v6;
        *v3 = v10 + v9;
        return result;
    }
    // 0x14001ad62
    function_14001afc0(v42, *v1);
    int64_t v43 = *v3 - v42 & -32; // 0x14001ad75
    int64_t v44; // 0x14001ab60
    int64_t v45; // 0x14001ab60
    int64_t v46; // 0x14001ab60
    if (v43 < 0x1000) {
        // 0x14001ad62
        v44 = v2;
        v45 = v42;
        v46 = v43;
        goto lab_0x14001ad9a;
    } else {
        int64_t v47 = v42 - 8;
        int64_t v48 = *(int64_t *)v47; // 0x14001ad82
        v2 = v48;
        if (v47 - v48 < 32) {
            // 0x14001ad97
            v44 = v48;
            v45 = v48;
            v46 = v43 + 39;
            goto lab_0x14001ad9a;
        } else {
            goto lab_0x14001add8;
        }
    }
  lab_0x14001add8:
    // 0x14001add8
    _invalid_parameter_noinfo_noreturn();
    __asm_int3();
    function_14001bb00();
    __asm_int3();
    // 0x14001ade5
    function_140001140();
    // UNREACHABLE
  lab_0x14001ad9a:
    // 0x14001ad9a
    function_14001ea5c(v45, v46, v44);
    // 0x14001ad9f
    *(int64_t *)a1 = v10;
    *v1 = v10 + 32 * v6;
    *v3 = v10 + v9;
    return result;
}

// Address range: 0x14001adf0 - 0x14001afc0
int64_t function_14001adf0(int64_t a1, char * a2, int128_t * a3) {
    int64_t v1 = (int64_t)a3;
    int64_t v2 = a1; // bp-104, 0x14001ae0d
    int64_t v3 = *(int64_t *)(a1 + 8); // 0x14001ae15
    int64_t v4 = v3; // 0x14001ae2d
    v2 = a1;
    int64_t n = v1; // 0x14001ae2d
    int64_t v5 = a1; // 0x14001ae2d
    if (*(char *)(v3 + 25) == 0) {
        uint64_t v6 = *(int64_t *)(v1 + 16); // 0x14001ae37
        v4 = v3;
        int64_t v7 = v4 + 32; // 0x14001ae51
        int64_t str = v7; // 0x14001ae5a
        if (*(int64_t *)(v4 + 56) >= 16) {
            // 0x14001ae5c
            str = *(int64_t *)v7;
        }
        int64_t str2 = *(int64_t *)(v1 + 24) < 16 ? v1 : v1;
        uint64_t v8 = *(int64_t *)(v4 + 48); // 0x14001ae60
        n = v6 < v8 ? v6 : v8;
        int32_t memcmp_rc = memcmp((int64_t *)str, (int64_t *)str2, (int32_t)n); // 0x14001ae6e
        int32_t v9 = memcmp_rc; // 0x14001ae75
        if (memcmp_rc == 0) {
            // 0x14001ae77
            v9 = -1;
            if (v8 >= v6) {
                // 0x14001ae83
                v9 = v8 > v6;
            }
        }
        // 0x14001ae8b
        v5 = v9 > -1 ? v4 : a1;
        int64_t v10 = *(int64_t *)(v9 > -1 ? v4 : v4 + 16);
        int64_t v11 = v5; // 0x14001aeb2
        while (*(char *)(v10 + 25) == 0) {
            // 0x14001ae40
            v4 = v10;
            v7 = v4 + 32;
            str = v7;
            if (*(int64_t *)(v4 + 56) >= 16) {
                // 0x14001ae5c
                str = *(int64_t *)v7;
            }
            // 0x14001ae60
            str2 = *(int64_t *)(v1 + 24) < 16 ? v1 : n;
            v8 = *(int64_t *)(v4 + 48);
            n = v6 < v8 ? v6 : v8;
            memcmp_rc = memcmp((int64_t *)str, (int64_t *)str2, (int32_t)n);
            v9 = memcmp_rc;
            if (memcmp_rc == 0) {
                // 0x14001ae77
                v9 = -1;
                if (v8 >= v6) {
                    // 0x14001ae83
                    v9 = v8 > v6;
                }
            }
            // 0x14001ae8b
            v5 = v9 > -1 ? v4 : v11;
            v10 = *(int64_t *)(v9 > -1 ? v4 : v4 + 16);
            v11 = v5;
        }
    }
    int64_t result = (int64_t)a2;
    int64_t v12 = v2;
    if (*(char *)(v5 + 25) == 0) {
        int64_t v13 = v5 + 32; // 0x14001aec0
        int64_t str4 = v13; // 0x14001aec9
        if (*(int64_t *)(v5 + 56) >= 16) {
            // 0x14001aecb
            str4 = *(int64_t *)v13;
        }
        int64_t str3 = *(int64_t *)(v1 + 24) < 16 ? v1 : n;
        uint64_t v14 = *(int64_t *)(v5 + 48); // 0x14001aedc
        uint64_t v15 = *(int64_t *)(v1 + 16); // 0x14001aee0
        int64_t n2 = v14 < v15 ? v14 : v15; // 0x14001aeea
        uint32_t memcmp_rc2 = memcmp((int64_t *)str3, (int64_t *)str4, (int32_t)n2); // 0x14001aeee
        if (memcmp_rc2 != 0) {
            int32_t v16 = memcmp_rc2 / 0x80000000;
            if (v16 == 0) {
                // 0x14001af12
                *(int64_t *)a2 = v5;
                *(char *)(result + 8) = (char)v16;
                // 0x14001af96
                return result;
            }
        } else {
            // 0x14001aef7
            if (v15 >= v14) {
                // 0x14001af12
                *(int64_t *)a2 = v5;
                *(char *)(result + 8) = 0;
                // 0x14001af96
                return result;
            }
        }
    }
    // 0x14001af1b
    if (*(int64_t *)(v12 + 8) == 0x38e38e38e38e38e) {
        // 0x14001afb1
        function_140014240();
        __asm_int3();
        __asm_int3();
        __asm_int3();
        __asm_int3();
        __asm_int3();
        __asm_int3();
        __asm_int3();
        __asm_int3();
        __asm_int3();
        return __asm_int3();
    }
    // 0x14001af2f
    v2 = v12;
    int64_t v17 = function_14001e5fc(72); // 0x14001af42
    function_140019960(v17 + 32, v1);
    *(int64_t *)(v17 + 64) = 0;
    *(int64_t *)v17 = a1;
    *(int64_t *)(v17 + 8) = a1;
    *(int64_t *)(v17 + 16) = a1;
    *(int16_t *)(v17 + 24) = 0;
    v2 = __asm_movaps(__asm_movups_1((int128_t)v4));
    int64_t v18 = function_14001bb20((int128_t *)v12, (int128_t *)&v2, v17); // 0x14001af89
    *(int64_t *)a2 = v18;
    *(char *)(result + 8) = 1;
    // 0x14001af96
    return result;
}

// Address range: 0x14001afc0 - 0x14001b050
int64_t function_14001afc0(int64_t a1, int64_t a2) {
    // 0x14001afc0
    if (a1 == a2) {
        // 0x14001b03d
        int64_t result; // 0x14001afc0
        return result;
    }
    int64_t * v1 = (int64_t *)(a1 + 24); // 0x14001afe0
    uint64_t v2 = *v1; // 0x14001afe0
    int64_t v3; // 0x14001afc0
    int64_t result2 = v3; // 0x14001afe8
    int64_t v4; // 0x14001afc0
    int64_t v5 = v4; // 0x14001afe8
    int64_t v6; // 0x14001afc0
    int64_t v7; // 0x14001afed
    int64_t v8; // 0x14001afc0
    int64_t v9; // 0x14001aff9
    if (v2 >= 16) {
        // 0x14001afea
        v7 = v2 + 1;
        v6 = v7;
        v9 = v4;
        if (v7 >= 0x1000) {
            // 0x14001aff9
            v8 = *(int64_t *)a1 - 8;
            v9 = *(int64_t *)v8;
            if (v8 - v9 >= 32) {
                // 0x14001b03e
                _invalid_parameter_noinfo_noreturn();
                __asm_int3();
                __asm_int3();
                __asm_int3();
                __asm_int3();
                __asm_int3();
                __asm_int3();
                __asm_int3();
                __asm_int3();
                __asm_int3();
                __asm_int3();
                __asm_int3();
                return __asm_int3();
            }
            // 0x14001b00e
            v6 = v2 + 40;
        }
        // 0x14001b011
        v5 = v9;
        result2 = function_14001ea5c(v9, v6, v5);
    }
    // 0x14001b016
    *(int64_t *)(a1 + 16) = 0;
    *v1 = 15;
    *(char *)a1 = 0;
    int64_t v10 = a1 + 32; // 0x14001b025
    while (v10 != a2) {
        int64_t v11 = v5;
        int64_t v12 = v10;
        v1 = (int64_t *)(v12 + 24);
        v2 = *v1;
        v5 = v11;
        if (v2 >= 16) {
            int64_t v13 = *(int64_t *)v12; // 0x14001afea
            v7 = v2 + 1;
            v6 = v7;
            v9 = v11;
            if (v7 >= 0x1000) {
                // 0x14001aff9
                v8 = v13 - 8;
                v9 = *(int64_t *)v8;
                if (v8 - v9 >= 32) {
                    // 0x14001b03e
                    _invalid_parameter_noinfo_noreturn();
                    __asm_int3();
                    __asm_int3();
                    __asm_int3();
                    __asm_int3();
                    __asm_int3();
                    __asm_int3();
                    __asm_int3();
                    __asm_int3();
                    __asm_int3();
                    __asm_int3();
                    __asm_int3();
                    return __asm_int3();
                }
                // 0x14001b00e
                v6 = v2 + 40;
            }
            // 0x14001b011
            v5 = v9;
            result2 = function_14001ea5c(v9, v6, v5);
        }
        // 0x14001b016
        *(int64_t *)(v12 + 16) = 0;
        *v1 = 15;
        *(char *)v12 = 0;
        v10 = v12 + 32;
    }
    // 0x14001b03d
    return result2;
}

// Address range: 0x14001b050 - 0x14001b1b0
int64_t function_14001b050(char * a1) {
    int64_t result = (int64_t)a1;
    int64_t * v1 = (int64_t *)(result + 16); // 0x14001b05a
    int64_t v2 = *v1; // 0x14001b05a
    if (v2 == 0x7fffffffffffffff) {
        // 0x14001b1a9
        function_1400011e0();
        __asm_int3();
        return __asm_int3();
    }
    int64_t v3 = v2 + 1;
    int64_t * v4 = (int64_t *)(result + 24); // 0x14001b08d
    uint64_t v5 = *v4; // 0x14001b08d
    int64_t v6 = v3 | 15; // 0x14001b094
    int64_t v7 = -0x7fffffffffffffd9; // 0x14001b09b
    int64_t v8 = 0x7fffffffffffffff; // 0x14001b09b
    int64_t v9; // 0x14001b050
    int64_t v10; // 0x14001b050
    if (v6 < 0) {
        goto lab_0x14001b0e9;
    } else {
        uint64_t v11 = v5 / 2; // 0x14001b0a3
        v7 = -0x7fffffffffffffd9;
        v8 = 0x7fffffffffffffff;
        if (v5 > (v11 ^ 0x7fffffffffffffff)) {
            goto lab_0x14001b0e9;
        } else {
            int64_t v12 = v11 + v5; // 0x14001b0ae
            int64_t v13 = v6; // 0x14001b050
            if (v6 < v12) {
                // 0x14001b0bc
                v13 = v12;
                if (v12 == -1) {
                    // 0x14001b1a3
                    function_140001140();
                    // UNREACHABLE
                }
            }
            uint64_t v14 = v13 + 1;
            if (v14 < 0x1000) {
                // 0x14001b109
                v9 = v13;
                v10 = function_14001e5fc(v14);
                goto lab_0x14001b115;
            } else {
                // 0x14001b0dc
                v7 = v13 + 40;
                v8 = v13;
                if (v14 > 0xffffffffffffffd8) {
                    // 0x14001b1a3
                    function_140001140();
                    // UNREACHABLE
                }
                goto lab_0x14001b0e9;
            }
        }
    }
  lab_0x14001b0e9:;
    int64_t v15 = function_14001e5fc(v7); // 0x14001b0ec
    int64_t v16 = v7; // 0x14001b0f4
    if (v15 == 0) {
        goto lab_0x14001b16c;
    } else {
        int64_t v17 = v15 + 39 & -32; // 0x14001b0fa
        *(int64_t *)(v17 - 8) = v15;
        v9 = v8;
        v10 = v17;
        goto lab_0x14001b115;
    }
  lab_0x14001b16c:
    // 0x14001b16c
    _invalid_parameter_noinfo_noreturn();
    __asm_int3();
    int64_t v18 = v16; // 0x14001b172
    int64_t v19; // 0x14001b050
    int64_t v20 = v19; // 0x14001b172
    int64_t v21; // 0x14001b050
    int64_t v22 = v21; // 0x14001b172
    goto lab_0x14001b173;
  lab_0x14001b173:
    // 0x14001b173
    memcpy((int64_t *)v18, (int64_t *)a1, (int32_t)v22);
    int64_t v23; // 0x14001b050
    *(char *)(v20 + v2) = (char)v23;
    *(char *)(v20 + v3) = 0;
    // 0x14001b184
    *(int64_t *)a1 = v20;
    return result;
  lab_0x14001b115:
    // 0x14001b115
    *v1 = v3;
    *v4 = v9;
    v18 = v10;
    v20 = v10;
    v22 = v2;
    int64_t v24; // 0x14001b050
    int64_t v25; // 0x14001b050
    if (v5 < 16) {
        goto lab_0x14001b173;
    } else {
        int64_t * v26 = (int64_t *)v10; // 0x14001b12f
        memcpy(v26, v26, (int32_t)v2);
        int64_t v27 = v5 + 1; // 0x14001b134
        *(char *)(v10 + v2) = (char)v23;
        *(char *)(v10 + v3) = 0;
        v25 = v27;
        v24 = v10;
        if (v27 < 0x1000) {
            goto lab_0x14001b162;
        } else {
            int64_t v28 = v10 - 8;
            int64_t v29 = *(int64_t *)v28; // 0x14001b14a
            v16 = v29;
            v19 = v10;
            v21 = v2;
            if (v28 - v29 < 32) {
                // 0x14001b15f
                v25 = v5 + 40;
                v24 = v29;
                goto lab_0x14001b162;
            } else {
                goto lab_0x14001b16c;
            }
        }
    }
  lab_0x14001b162:
    // 0x14001b162
    function_14001ea5c(v24, v25, v2);
    // 0x14001b184
    *(int64_t *)a1 = v10;
    return result;
}

// Address range: 0x14001b1b0 - 0x14001b340
int64_t function_14001b1b0(int64_t * a1, uint64_t a2) {
    int64_t result = (int64_t)a1;
    int64_t * v1 = (int64_t *)(result + 16); // 0x14001b1bb
    int64_t v2 = *v1; // 0x14001b1bb
    if (0x7fffffffffffffff - v2 < a2) {
        // 0x14001b337
        function_1400011e0();
        __asm_int3();
        __asm_int3();
        __asm_int3();
        return __asm_int3();
    }
    int64_t * v3 = (int64_t *)(result + 24); // 0x14001b1e3
    uint64_t v4 = *v3; // 0x14001b1e3
    int64_t v5 = v2 + a2; // 0x14001b1ec
    int64_t v6 = v5 | 15; // 0x14001b1f3
    int64_t v7 = -0x7fffffffffffffd9; // 0x14001b1fa
    int64_t v8 = 0x7fffffffffffffff; // 0x14001b1fa
    int64_t v9; // 0x14001b1b0
    int64_t v10; // 0x14001b1b0
    if (v6 < 0) {
        goto lab_0x14001b24d;
    } else {
        uint64_t v11 = v4 / 2; // 0x14001b202
        v7 = -0x7fffffffffffffd9;
        v8 = 0x7fffffffffffffff;
        if (v4 > (v11 ^ 0x7fffffffffffffff)) {
            goto lab_0x14001b24d;
        } else {
            int64_t v12 = v11 + v4; // 0x14001b20d
            int64_t v13 = v6; // 0x14001b1b0
            if (v6 < v12) {
                // 0x14001b21b
                v13 = v12;
                if (v12 == -1) {
                    // 0x14001b331
                    function_140001140();
                    // UNREACHABLE
                }
            }
            uint64_t v14 = v13 + 1;
            if (v14 < 0x1000) {
                // 0x14001b271
                v9 = v13;
                v10 = function_14001e5fc(v14);
                goto lab_0x14001b27d;
            } else {
                // 0x14001b240
                v7 = v13 + 40;
                v8 = v13;
                if (v14 > 0xffffffffffffffd8) {
                    // 0x14001b331
                    function_140001140();
                    // UNREACHABLE
                }
                goto lab_0x14001b24d;
            }
        }
    }
  lab_0x14001b24d:;
    int64_t v15 = function_14001e5fc(v7); // 0x14001b250
    int64_t v16 = v7; // 0x14001b258
    int64_t v17 = v5; // 0x14001b258
    if (v15 == 0) {
        goto lab_0x14001b2ea;
    } else {
        int64_t v18 = v15 + 39 & -32; // 0x14001b262
        *(int64_t *)(v18 - 8) = v15;
        v9 = v8;
        v10 = v18;
        goto lab_0x14001b27d;
    }
  lab_0x14001b2ea:
    // 0x14001b2ea
    _invalid_parameter_noinfo_noreturn();
    __asm_int3();
    int64_t v19 = v16; // 0x14001b2f0
    int64_t v20; // 0x14001b1b0
    int64_t v21 = v20; // 0x14001b2f0
    int64_t v22; // 0x14001b1b0
    int64_t v23 = v22; // 0x14001b2f0
    int64_t v24 = v17; // 0x14001b2f0
    int64_t v25; // 0x14001b1b0
    int64_t v26 = v25; // 0x14001b2f0
    goto lab_0x14001b2f1;
  lab_0x14001b2f1:
    // 0x14001b2f1
    memcpy((int64_t *)v19, a1, (int32_t)v23);
    int64_t v27; // 0x14001b1b0
    memcpy((int64_t *)v24, (int64_t *)v27, (int32_t)v26);
    *(char *)(v26 + v24) = 0;
    // 0x14001b30c
    *a1 = v21;
    return result;
  lab_0x14001b27d:;
    // 0x14001b27d
    int32_t v28; // 0x14001b1b0
    int64_t v29 = v28; // 0x14001b27d
    *v1 = v5;
    int64_t v30 = v10 + v2; // 0x14001b28c
    *v3 = v9;
    v19 = v10;
    v21 = v10;
    v23 = v2;
    v24 = v30;
    v26 = v29;
    int64_t v31; // 0x14001b1b0
    int64_t v32; // 0x14001b1b0
    if (v4 < 16) {
        goto lab_0x14001b2f1;
    } else {
        int64_t * v33 = (int64_t *)v10; // 0x14001b2a3
        memcpy(v33, v33, (int32_t)v2);
        memcpy((int64_t *)v30, (int64_t *)v27, v28);
        int64_t v34 = v4 + 1; // 0x14001b2b6
        *(char *)(v30 + v29) = 0;
        v32 = v34;
        v31 = v10;
        if (v34 < 0x1000) {
            goto lab_0x14001b2e0;
        } else {
            int64_t v35 = v10 - 8;
            int64_t v36 = *(int64_t *)v35; // 0x14001b2c8
            v16 = v36;
            v20 = v10;
            v22 = v29;
            v17 = v30;
            v25 = v29;
            if (v35 - v36 < 32) {
                // 0x14001b2dd
                v32 = v4 + 40;
                v31 = v36;
                goto lab_0x14001b2e0;
            } else {
                goto lab_0x14001b2ea;
            }
        }
    }
  lab_0x14001b2e0:
    // 0x14001b2e0
    function_14001ea5c(v31, v32, v29);
    // 0x14001b30c
    *a1 = v10;
    return result;
}

// Address range: 0x14001b340 - 0x14001b5e5
int64_t function_14001b340(int128_t a1, int64_t a2) {
    int64_t v1 = a1;
    int64_t result; // 0x14001b340
    if (v1 == a2) {
        // 0x14001b3bc
        return result;
    }
    int64_t * v2 = (int64_t *)v1; // 0x14001b360
    int64_t v3 = *v2; // 0x14001b360
    int64_t v4; // 0x14001b340
    int64_t v5 = v4; // 0x14001b366
    int64_t v6; // 0x14001b340
    int64_t v7 = v6; // 0x14001b366
    int64_t v8; // 0x14001b340
    int64_t v9; // bp-160, 0x14001b340
    int64_t v10; // bp-88, 0x14001b340
    int64_t v11; // 0x14001b340
    int64_t * v12; // 0x14001b368
    int64_t v13; // 0x14001b36f
    int64_t v14; // 0x14001b37c
    int64_t v15; // 0x14001b380
    int64_t v16; // 0x14001b384
    int64_t v17; // 0x14001b404
    int64_t v18; // 0x14001b46d
    int64_t v19; // 0x14001b340
    if (v3 != 0) {
        // 0x14001b368
        v12 = (int64_t *)(v1 + 16);
        v13 = *v12 - v3 & -8;
        v8 = v13;
        v14 = v6;
        if (v13 >= 0x1000) {
            // 0x14001b37c
            v14 = *(int64_t *)(v3 - 8);
            v15 = v13 + 39;
            v16 = v3 - v14;
            v8 = v15;
            if (v16 >= 40) {
                // 0x14001b3bd
                _invalid_parameter_noinfo_noreturn();
                __asm_int3();
                __asm_int3();
                __asm_int3();
                __asm_int3();
                __asm_int3();
                __asm_int3();
                __asm_int3();
                __asm_int3();
                __asm_int3();
                __asm_int3();
                __asm_int3();
                __asm_int3();
                __asm_int3();
                function_14001cc10(&v10);
                v17 = *(int64_t *)(v16 + 24);
                if ((v17 || 1) == 0x7fffffffffffffff) {
                    // 0x14001b5cc
                    function_1400011e0();
                    __asm_int3();
                    __asm_int3();
                    __asm_int3();
                    __asm_int3();
                    __asm_int3();
                    __asm_int3();
                    __asm_int3();
                    __asm_int3();
                    __asm_int3();
                    __asm_int3();
                    __asm_int3();
                    __asm_int3();
                    __asm_int3();
                    __asm_int3();
                    return (int64_t)*(char *)(v17 + 41);
                }
                // 0x14001b41f
                function_14001bda0((char *)&v9, v15);
                // 0x14001b489
                v11 = function_14001b1b0(&v9, 1);
                goto lab_0x14001b4a8;
            }
        }
        // 0x14001b394
        v7 = v14;
        v5 = function_14001ea5c(v14, v8, v7);
        *v2 = 0;
        *(int64_t *)(v1 + 8) = 0;
        *v12 = 0;
    }
    int64_t v20 = v1 + 24; // 0x14001b3a4
    result = v5;
    while (v20 != a2) {
        int64_t v21 = v7;
        int64_t v22 = v20;
        v2 = (int64_t *)v22;
        v3 = *v2;
        v7 = v21;
        if (v3 != 0) {
            // 0x14001b368
            v12 = (int64_t *)(v22 + 16);
            v13 = *v12 - v3 & -8;
            v8 = v13;
            v14 = v21;
            if (v13 >= 0x1000) {
                // 0x14001b37c
                v14 = *(int64_t *)(v3 - 8);
                v15 = v13 + 39;
                v16 = v3 - v14;
                v8 = v15;
                if (v16 >= 40) {
                    // 0x14001b3bd
                    _invalid_parameter_noinfo_noreturn();
                    __asm_int3();
                    __asm_int3();
                    __asm_int3();
                    __asm_int3();
                    __asm_int3();
                    __asm_int3();
                    __asm_int3();
                    __asm_int3();
                    __asm_int3();
                    __asm_int3();
                    __asm_int3();
                    __asm_int3();
                    __asm_int3();
                    function_14001cc10(&v10);
                    v17 = *(int64_t *)(v16 + 24);
                    if ((v17 || 1) == 0x7fffffffffffffff) {
                        // 0x14001b5cc
                        function_1400011e0();
                        __asm_int3();
                        __asm_int3();
                        __asm_int3();
                        __asm_int3();
                        __asm_int3();
                        __asm_int3();
                        __asm_int3();
                        __asm_int3();
                        __asm_int3();
                        __asm_int3();
                        __asm_int3();
                        __asm_int3();
                        __asm_int3();
                        __asm_int3();
                        return (int64_t)*(char *)(v17 + 41);
                    }
                    // 0x14001b41f
                    function_14001bda0((char *)&v9, v15);
                    // 0x14001b489
                    v11 = function_14001b1b0(&v9, 1);
                    goto lab_0x14001b4a8;
                }
            }
            // 0x14001b394
            v7 = v14;
            v5 = function_14001ea5c(v14, v8, v7);
            *v2 = 0;
            *(int64_t *)(v22 + 8) = 0;
            *v12 = 0;
        }
        // 0x14001b3a4
        v20 = v22 + 24;
        result = v5;
    }
  lab_0x14001b3bc:
    // 0x14001b3bc
    return result;
  lab_0x14001b4a8:;
    // 0x14001b4a8
    int128_t v23; // bp-128, 0x14001b340
    __asm_movups(v23, __asm_movups_1(*(int128_t *)v11));
    int64_t v24 = v11 + 16; // 0x14001b4b0
    int128_t v25; // 0x14001b340
    __asm_movups(v25, __asm_movups_1(*(int128_t *)v24));
    *(int64_t *)v24 = 0;
    *(int64_t *)(v11 + 24) = 15;
    *(char *)v11 = 0;
    int64_t v26 = &v23; // 0x14001b4cc
    function_14001cff0(v15);
    int64_t v27; // 0x14001b340
    int64_t v28; // 0x14001b340
    if (v19 < 16) {
        goto lab_0x14001b51b;
    } else {
        int64_t v29 = v19 + 1; // 0x14001b4e5
        int64_t v30 = v23; // 0x14001b4e8
        v27 = v30;
        v28 = v29;
        if (v29 < 0x1000) {
            goto lab_0x14001b515;
        } else {
            int64_t v31 = v19 + 40; // 0x14001b4f9
            int64_t v32 = v30 - 8;
            int64_t v33 = *(int64_t *)v32; // 0x14001b4fd
            v27 = v33;
            v28 = v31;
            if (v32 - v33 < 32) {
                goto lab_0x14001b515;
            } else {
                // 0x14001b50e
                _invalid_parameter_noinfo_noreturn();
                __asm_int3();
                v27 = v33;
                v28 = v31;
                goto lab_0x14001b515;
            }
        }
    }
  lab_0x14001b51b:;
    int64_t v34; // 0x14001b340
    int64_t v35; // 0x14001b340
    if (v19 < 16) {
        goto lab_0x14001b55b;
    } else {
        int64_t v36 = v19 + 1; // 0x14001b526
        int64_t v37 = v9; // 0x14001b529
        v34 = v37;
        v35 = v36;
        if (v36 < 0x1000) {
            goto lab_0x14001b556;
        } else {
            int64_t v38 = v19 + 40; // 0x14001b53a
            int64_t v39 = v37 - 8;
            int64_t v40 = *(int64_t *)v39; // 0x14001b53e
            v34 = v40;
            v35 = v38;
            if (v39 - v40 < 32) {
                goto lab_0x14001b556;
            } else {
                // 0x14001b54f
                _invalid_parameter_noinfo_noreturn();
                __asm_int3();
                v34 = v40;
                v35 = v38;
                goto lab_0x14001b556;
            }
        }
    }
  lab_0x14001b55b:
    // 0x14001b55b
    v9 = 0;
    result = v15;
    int64_t v41; // 0x14001b340
    int64_t v42; // 0x14001b340
    if (v19 < 16) {
        return result;
    } else {
        int64_t v43 = v19 + 1; // 0x14001b57c
        v41 = v10;
        v42 = v43;
        if (v43 < 0x1000) {
            goto lab_0x14001b5af;
        } else {
            int64_t v44 = v19 + 40; // 0x14001b593
            int64_t v45 = v10 - 8;
            int64_t v46 = *(int64_t *)v45; // 0x14001b597
            v41 = v46;
            v42 = v44;
            if (v45 - v46 < 32) {
                goto lab_0x14001b5af;
            } else {
                // 0x14001b5a8
                _invalid_parameter_noinfo_noreturn();
                __asm_int3();
                v41 = v46;
                v42 = v44;
                goto lab_0x14001b5af;
            }
        }
    }
  lab_0x14001b515:
    // 0x14001b515
    function_14001ea5c(v27, v28, v26);
    goto lab_0x14001b51b;
  lab_0x14001b556:
    // 0x14001b556
    function_14001ea5c(v34, v35, v26);
    goto lab_0x14001b55b;
  lab_0x14001b5af:
    // 0x14001b5af
    function_14001ea5c(v41, v42, v26);
    result = v15;
    goto lab_0x14001b3bc;
}

// Address range: 0x14001b5f0 - 0x14001b602
int64_t function_14001b5f0(int64_t a1) {
    // 0x14001b5f0
    int64_t v1; // 0x14001b5f0
    if (*(char *)(a1 + 41) == 0 || *(char *)(a1 + 80) != 0) {
        // 0x14001b5ff
        return v1 & -256 | 1;
    }
    // 0x14001b5fc
    return v1 & -256;
}

// Address range: 0x14001b610 - 0x14001b62e
int64_t function_14001b610(int64_t a1) {
    // 0x14001b610
    *(int32_t *)(a1 + 88) = (int32_t)a1;
    *(char *)(a1 + 80) = 1;
    return a1 & -256 | 1;
}

// Address range: 0x14001b62e - 0x14001b636
int64_t function_14001b62e(void) {
    // 0x14001b62e
    int64_t v1; // 0x14001b62e
    return v1 & -256;
}

// Address range: 0x14001b640 - 0x14001b97f
int64_t function_14001b640(int64_t a1) {
    // 0x14001b640
    int64_t v1; // 0x14001b640
    uint64_t v2 = v1;
    int64_t * v3 = (int64_t *)a1; // 0x14001b650
    *v3 = (int64_t)&g20;
    int64_t * v4 = (int64_t *)(a1 + 72); // 0x14001b653
    uint64_t v5 = *v4; // 0x14001b653
    int64_t v6 = a1 + 48;
    int64_t v7; // 0x14001b640
    int64_t v8; // 0x14001b640
    int64_t result; // 0x14001b640
    int64_t v9; // 0x14001b66d
    int64_t v10; // 0x14001b671
    if (v5 < 16) {
        goto lab_0x14001b68a;
    } else {
        int64_t v11 = *(int64_t *)v6; // 0x14001b65d
        int64_t v12 = v5 + 1; // 0x14001b661
        v9 = v11;
        v10 = v12;
        if (v12 < 0x1000) {
            goto lab_0x14001b685;
        } else {
            // 0x14001b66d
            v9 = *(int64_t *)(v11 - 8);
            v10 = v5 + 40;
            int64_t v13 = v11 - v9; // 0x14001b675
            v7 = v9;
            v8 = v13;
            result = v10;
            if (v13 < 40) {
                goto lab_0x14001b685;
            } else {
                goto lab_0x14001b6f9;
            }
        }
    }
  lab_0x14001b68a:
    // 0x14001b68a
    *(int64_t *)(a1 + 64) = 0;
    *v4 = 15;
    *(char *)v6 = 0;
    int64_t * v14 = (int64_t *)(a1 + 32); // 0x14001b69e
    uint64_t v15 = *v14; // 0x14001b69e
    int64_t v16 = a1 + 8;
    if (v15 < 16) {
        // 0x14001b6d5
        *(int64_t *)(a1 + 24) = 0;
        *v14 = 15;
        *(char *)v16 = 0;
        *v3 = (int64_t)&g28;
        return &g28;
    }
    int64_t v17 = *(int64_t *)v16; // 0x14001b6a8
    int64_t v18 = v15 + 1; // 0x14001b6ac
    int64_t v19 = v17; // 0x14001b6b6
    int64_t v20 = v18; // 0x14001b6b6
    int64_t v21; // 0x14001b640
    int64_t v22 = v21; // 0x14001b6b6
    if (v18 < 0x1000) {
        goto lab_0x14001b6d0;
    } else {
        int64_t v23 = *(int64_t *)(v17 - 8); // 0x14001b6b8
        int64_t v24 = v15 + 40; // 0x14001b6bc
        int64_t v25 = v17 - v23; // 0x14001b6c0
        v19 = v23;
        v20 = v24;
        v22 = v23;
        v8 = v25;
        result = v24;
        if (v25 < 40) {
            goto lab_0x14001b6d0;
        } else {
            goto lab_0x14001b6f9;
        }
    }
  lab_0x14001b6d0:
    // 0x14001b6d0
    function_14001ea5c(v19, v20, v22);
    // 0x14001b6d5
    *(int64_t *)(a1 + 24) = 0;
    *v14 = 15;
    *(char *)v16 = 0;
    *v3 = (int64_t)&g28;
    return &g28;
  lab_0x14001b685:
    // 0x14001b685
    function_14001ea5c(v9, v10, v7);
    v21 = v7;
    goto lab_0x14001b68a;
  lab_0x14001b6f9:
    // 0x14001b6f9
    _invalid_parameter_noinfo_noreturn();
    __asm_int3();
    char v26 = 0; // bp-128, 0x14001b731
    function_140019e40(&v26, "string", 6);
    int64_t v27 = *(int64_t *)(v8 + 24); // 0x14001b750
    if ((v27 || 1) == 0x7fffffffffffffff) {
        // 0x14001b906
        function_1400011e0();
        __asm_int3();
        __asm_int3();
        __asm_int3();
        __asm_int3();
        int64_t v28 = function_140019fd0(v27 + 120, *(int64_t *)v27); // 0x14001b93c
        if (v2 < 16) {
            // 0x14001b973
            *(char *)(v27 + 80) = 1;
            return v28 & -256 | 1;
        }
        int64_t v29 = v2 + 1; // 0x14001b93e
        int64_t v30 = v29; // 0x14001b950
        int64_t v31; // 0x14001b640
        if (v29 >= 0x1000) {
            int64_t v32 = v2 + 40; // 0x14001b952
            int64_t v33 = v1 - 8;
            int64_t v34 = *(int64_t *)v33; // 0x14001b956
            v31 = v34;
            v30 = v32;
            if (v33 - v34 >= 32) {
                // 0x14001b967
                _invalid_parameter_noinfo_noreturn();
                __asm_int3();
                v31 = v34;
                v30 = v32;
            }
        }
        int64_t v35 = function_14001ea5c(v31, v30, (int64_t)"string");
        *(char *)(v27 + 80) = 1;
        return v35 & -256 | 1;
    }
    // 0x14001b76b
    int64_t v36; // bp-160, 0x14001b640
    function_14001bda0((char *)&v36, (int64_t)"string");
    int64_t v37; // 0x14001b640
    // 0x14001b7ce
    v37 = function_14001b1b0(&v36, 1);
    // 0x14001b7ec
    int128_t v38; // bp-96, 0x14001b640
    __asm_movups(v38, __asm_movups_1(*(int128_t *)v37));
    int64_t v39 = v37 + 16; // 0x14001b7f3
    int128_t v40; // 0x14001b640
    __asm_movups(v40, __asm_movups_1(*(int128_t *)v39));
    *(int64_t *)v39 = 0;
    *(int64_t *)(v37 + 24) = 15;
    *(char *)v37 = 0;
    int64_t v41 = &v38; // 0x14001b812
    function_14001cff0(result);
    if (v1 >= 16) {
        int64_t v42 = v1 + 1; // 0x14001b829
        int64_t v43 = v38; // 0x14001b82c
        int64_t v44 = v43; // 0x14001b83a
        int64_t v45 = v42; // 0x14001b83a
        if (v42 >= 0x1000) {
            int64_t v46 = v1 + 40; // 0x14001b83c
            int64_t v47 = v43 - 8;
            int64_t v48 = *(int64_t *)v47; // 0x14001b840
            v44 = v48;
            v45 = v46;
            if (v47 - v48 >= 32) {
                // 0x14001b851
                _invalid_parameter_noinfo_noreturn();
                __asm_int3();
                v44 = v48;
                v45 = v46;
            }
        }
        // 0x14001b858
        function_14001ea5c(v44, v45, v41);
    }
    if (v1 < 16) {
        // 0x14001b89c
        return result;
    }
    int64_t v49 = v1 + 1; // 0x14001b868
    if (v49 < 0x1000) {
        // 0x14001b897
        function_14001ea5c(v36, v49, v41);
        // 0x14001b89c
        return result;
    }
    int64_t v50 = v36 - 8;
    int64_t v51 = *(int64_t *)v50; // 0x14001b87f
    if (v50 - v51 >= 32) {
        // 0x14001b890
        _invalid_parameter_noinfo_noreturn();
        __asm_int3();
    }
    // 0x14001b897
    function_14001ea5c(v51, v1 + 40, v41);
    // 0x14001b89c
    return result;
}

// Address range: 0x14001b97f - 0x14001b987
int64_t function_14001b97f(void) {
    // 0x14001b97f
    int64_t v1; // 0x14001b97f
    return v1 & -256;
}

// Address range: 0x14001b990 - 0x14001bb00
int64_t function_14001b990(int64_t a1) {
    int64_t * v1 = (int64_t *)a1; // 0x14001b9a4
    *v1 = (int64_t)&g23;
    int64_t * v2 = (int64_t *)(a1 + 144); // 0x14001b9a7
    uint64_t v3 = *v2; // 0x14001b9a7
    int64_t v4 = a1 + 120;
    int64_t v5; // 0x14001b990
    int64_t v6; // 0x14001b990
    int64_t v7; // 0x14001b990
    if (v3 < 16) {
        goto lab_0x14001b9e5;
    } else {
        int64_t v8 = *(int64_t *)v4; // 0x14001b9b4
        int64_t v9 = v3 + 1; // 0x14001b9b8
        v6 = v8;
        v7 = v9;
        if (v9 < 0x1000) {
            goto lab_0x14001b9e0;
        } else {
            int64_t v10 = v8 - 8;
            int64_t v11 = *(int64_t *)v10; // 0x14001b9c4
            if (v10 - v11 < 32) {
                // 0x14001b9dd
                v6 = v11;
                v7 = v3 + 40;
                v5 = v11;
                goto lab_0x14001b9e0;
            } else {
                goto lab_0x14001baeb;
            }
        }
    }
  lab_0x14001b9e5:
    // 0x14001b9e5
    *v2 = 15;
    *(int64_t *)(a1 + 136) = 0;
    *(char *)v4 = 0;
    int64_t * v12 = (int64_t *)(a1 + 112); // 0x14001b9fd
    uint64_t v13 = *v12; // 0x14001b9fd
    int64_t v14 = a1 + 88;
    int64_t v15; // 0x14001b990
    int64_t v16 = v15; // 0x14001ba05
    int64_t v17; // 0x14001b990
    int64_t v18; // 0x14001b990
    int64_t v19; // 0x14001b990
    if (v13 < 16) {
        goto lab_0x14001ba38;
    } else {
        int64_t v20 = *(int64_t *)v14; // 0x14001ba07
        int64_t v21 = v13 + 1; // 0x14001ba0b
        v18 = v20;
        v19 = v21;
        v17 = v15;
        if (v21 < 0x1000) {
            goto lab_0x14001ba33;
        } else {
            int64_t v22 = v20 - 8;
            int64_t v23 = *(int64_t *)v22; // 0x14001ba17
            if (v22 - v23 < 32) {
                // 0x14001ba30
                v18 = v23;
                v19 = v13 + 40;
                v17 = v23;
                goto lab_0x14001ba33;
            } else {
                goto lab_0x14001baeb;
            }
        }
    }
  lab_0x14001ba38:
    // 0x14001ba38
    *(int64_t *)(a1 + 104) = 0;
    *v12 = 15;
    *(char *)v14 = 0;
    int64_t * v24 = (int64_t *)(a1 + 72); // 0x14001ba48
    uint64_t v25 = *v24; // 0x14001ba48
    int64_t v26 = a1 + 48;
    int64_t v27 = v16; // 0x14001ba50
    int64_t v28; // 0x14001b990
    int64_t v29; // 0x14001b990
    int64_t v30; // 0x14001b990
    if (v25 < 16) {
        goto lab_0x14001ba7f;
    } else {
        int64_t v31 = *(int64_t *)v26; // 0x14001ba52
        int64_t v32 = v25 + 1; // 0x14001ba56
        v29 = v31;
        v30 = v32;
        v28 = v16;
        if (v32 < 0x1000) {
            goto lab_0x14001ba7a;
        } else {
            int64_t v33 = v31 - 8;
            int64_t v34 = *(int64_t *)v33; // 0x14001ba62
            if (v33 - v34 < 32) {
                // 0x14001ba77
                v29 = v34;
                v30 = v25 + 40;
                v28 = v34;
                goto lab_0x14001ba7a;
            } else {
                goto lab_0x14001baeb;
            }
        }
    }
  lab_0x14001b9e0:
    // 0x14001b9e0
    function_14001ea5c(v6, v7, v5);
    v15 = v5;
    goto lab_0x14001b9e5;
  lab_0x14001ba7f:
    // 0x14001ba7f
    *(int64_t *)(a1 + 64) = 0;
    *v24 = 15;
    *(char *)v26 = 0;
    int64_t * v35 = (int64_t *)(a1 + 32); // 0x14001ba8f
    uint64_t v36 = *v35; // 0x14001ba8f
    int64_t v37 = a1 + 8;
    if (v36 < 16) {
        // 0x14001bac6
        *(int64_t *)(a1 + 24) = 0;
        *v35 = 15;
        *(char *)v37 = 0;
        *v1 = (int64_t)&g28;
        return &g28;
    }
    int64_t v38 = *(int64_t *)v37; // 0x14001ba99
    int64_t v39 = v36 + 1; // 0x14001ba9d
    if (v39 < 0x1000) {
        goto lab_0x14001bac1;
    } else {
        int64_t v40 = v38 - 8;
        if (v40 - *(int64_t *)v40 < 32) {
            // 0x14001babe
            goto lab_0x14001bac1;
        } else {
            goto lab_0x14001baeb;
        }
    }
  lab_0x14001ba33:
    // 0x14001ba33
    function_14001ea5c(v18, v19, v17);
    v16 = v17;
    goto lab_0x14001ba38;
  lab_0x14001baeb:
    // 0x14001baeb
    _invalid_parameter_noinfo_noreturn();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    return __asm_int3();
  lab_0x14001bac1:
    // 0x14001bac1
    function_14001ea5c(v38, v39, v27);
    // 0x14001bac6
    *(int64_t *)(a1 + 24) = 0;
    *v35 = 15;
    *(char *)v37 = 0;
    *v1 = (int64_t)&g28;
    return &g28;
  lab_0x14001ba7a:
    // 0x14001ba7a
    function_14001ea5c(v29, v30, v28);
    v27 = v28;
    goto lab_0x14001ba7f;
}

// Address range: 0x14001bb00 - 0x14001bb20
int64_t function_14001bb00(void) {
    // 0x14001bb00
    _3f__Xlength_error_40_std_40__40_YAXPEBD_40_Z((char *)&g103);
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    return __asm_int3();
}

// Address range: 0x14001bb20 - 0x14001bd9d
int64_t function_14001bb20(int128_t * a1, int128_t * a2, int64_t result) {
    int64_t v1 = (int64_t)a2;
    int64_t v2 = (int64_t)a1;
    int64_t * v3 = (int64_t *)(v2 + 8); // 0x14001bb2a
    *v3 = *v3 + 1;
    int64_t * v4 = (int64_t *)(result + 8); // 0x14001bb3a
    *v4 = v1;
    if (a2 == a1) {
        // 0x14001bb43
        *(int64_t *)a1 = result;
        *v3 = result;
        *(int64_t *)(v2 + 16) = result;
        *(char *)(result + 24) = 1;
        return result;
    }
    // 0x14001bb61
    if (*(int32_t *)(v1 + 8) != 0) {
        // 0x14001bb77
        *(int64_t *)a2 = result;
    } else {
        // 0x14001bb67
        *(int64_t *)(v1 + 16) = result;
        int64_t * v5 = (int64_t *)(v2 + 16); // 0x14001bb6b
        if (*v5 == v1) {
            // 0x14001bb71
            *v5 = result;
        }
    }
    int64_t v6 = *v4; // 0x14001bb82
    int64_t v7 = v6; // 0x14001bb8d
    int64_t v8 = result; // 0x14001bb8d
    if (*(char *)(v6 + 24) != 0) {
        // 0x14001bd87
        *(char *)(*v3 + 24) = 1;
        return result;
    }
    int64_t * v9; // 0x14001bb20
    char * v10; // 0x14001bb20
    int64_t v11; // 0x14001bba0
    int64_t v12; // 0x14001bb20
    int64_t v13; // 0x14001bb20
    int64_t * v14; // 0x14001bb20
    while (true) {
      lab_0x14001bba0:;
        int64_t v15 = v8;
        v11 = v7;
        v14 = (int64_t *)(v15 + 8);
        int64_t * v16 = (int64_t *)(v11 + 8);
        int64_t v17 = *v16; // 0x14001bba8
        int64_t v18 = *(int64_t *)v17; // 0x14001bbb0
        if (v11 != v18) {
            char * v19 = (char *)(v18 + 24);
            v10 = v19;
            if (*v19 != 0) {
                int64_t * v20 = (int64_t *)v11; // 0x14001bcc6
                int64_t v21 = *v20; // 0x14001bcc6
                int64_t * v22 = v14; // 0x14001bccc
                int64_t v23 = v11; // 0x14001bccc
                int64_t v24 = v15; // 0x14001bccc
                if (v15 == v21) {
                    int64_t * v25 = (int64_t *)(v21 + 16); // 0x14001bcd4
                    *v20 = *v25;
                    int64_t v26 = *v25; // 0x14001bcdb
                    if (*(char *)(v26 + 25) == 0) {
                        // 0x14001bce5
                        *(int64_t *)(v26 + 8) = v11;
                    }
                    int64_t v27 = *v16; // 0x14001bce9
                    int64_t * v28 = (int64_t *)(v21 + 8); // 0x14001bcec
                    *v28 = v27;
                    if (v11 != v27) {
                        int64_t v29 = *v16; // 0x14001bcff
                        int64_t * v30 = (int64_t *)(v29 + 16); // 0x14001bd02
                        if (v11 != *v30) {
                            // 0x14001bd0e
                            *(int64_t *)v29 = v21;
                        } else {
                            // 0x14001bd08
                            *v30 = v21;
                        }
                    } else {
                        // 0x14001bcf9
                        *v28 = v21;
                    }
                    // 0x14001bd11
                    *v25 = v11;
                    *v16 = v21;
                    v22 = v16;
                    v23 = v21;
                    v24 = v11;
                }
                // 0x14001bd1b
                *(char *)(v23 + 24) = 1;
                *(char *)(*(int64_t *)(*v22 + 8) + 24) = 0;
                int64_t v31 = *(int64_t *)(*v22 + 8); // 0x14001bd2d
                int64_t * v32 = (int64_t *)(v31 + 16); // 0x14001bd31
                int64_t v33 = *v32; // 0x14001bd31
                int64_t * v34 = (int64_t *)v33; // 0x14001bd35
                *v32 = *v34;
                int64_t v35 = *v34; // 0x14001bd3c
                if (*(char *)(v35 + 25) == 0) {
                    // 0x14001bd45
                    *(int64_t *)(v35 + 8) = v31;
                }
                int64_t * v36 = (int64_t *)(v31 + 8);
                *(int64_t *)(v33 + 8) = *v36;
                int64_t v37 = *v36; // 0x14001bd54
                if (v31 != v37) {
                    int64_t * v38 = (int64_t *)v37; // 0x14001bd64
                    if (v31 != *v38) {
                        // 0x14001bd6e
                        *(int64_t *)(v37 + 16) = v33;
                    } else {
                        // 0x14001bd69
                        *v38 = v33;
                    }
                } else {
                    // 0x14001bd5a
                    *v36 = v33;
                }
                // 0x14001bd72
                *v34 = v31;
                v9 = v36;
                v13 = v24;
                v12 = v33;
                goto lab_0x14001bd75;
            } else {
                goto lab_0x14001bca7;
            }
        } else {
            char * v39 = (char *)(*(int64_t *)(v17 + 16) + 24);
            v10 = v39;
            if (*v39 == 0) {
                goto lab_0x14001bca7;
            } else {
                // 0x14001bbca
                if (v15 == *(int64_t *)(v11 + 16)) {
                    // 0x14001bbd3
                    int64_t v40; // 0x14001bbca
                    int64_t * v41 = (int64_t *)v40; // 0x14001bbd3
                    int64_t v42 = *v41; // 0x14001bbd3
                    int64_t * v43; // 0x14001bbca
                    *v43 = v42;
                    int64_t v44 = *v41; // 0x14001bbdd
                    char v45 = *(char *)(v44 + 25); // 0x14001bbe0
                    if (v45 == 0) {
                        // 0x14001bbe6
                        *(int64_t *)(v44 + 8) = v11;
                    }
                    int64_t v46 = *v16; // 0x14001bbea
                    *(int64_t *)(v40 + 8) = v46;
                    int64_t v47 = *v16; // 0x14001bbf4
                    if (v11 != v47) {
                        int64_t * v48 = (int64_t *)v47; // 0x14001bc0c
                        int64_t v49 = *v48; // 0x14001bc0c
                        if (v11 != v49) {
                            // 0x14001bc1f
                            *(int64_t *)(v47 + 16) = v40;
                            *v41 = v11;
                            *v16 = v40;
                        } else {
                            // 0x14001bc11
                            *v48 = v40;
                            *v41 = v11;
                            *v16 = v40;
                        }
                    } else {
                        // 0x14001bbfa
                        *v41 = v11;
                        *v16 = v40;
                    }
                }
                int64_t v50 = v15;
                *(char *)(v11 + 24) = 1;
                *(char *)(*(int64_t *)(*v14 + 8) + 24) = 0;
                int64_t v51 = *(int64_t *)(*v14 + 8); // 0x14001bc44
                int64_t * v52 = (int64_t *)v51; // 0x14001bc48
                int64_t v53 = *v52; // 0x14001bc48
                int64_t * v54 = (int64_t *)(v53 + 16); // 0x14001bc4b
                *v52 = *v54;
                int64_t v55 = *v54; // 0x14001bc52
                if (*(char *)(v55 + 25) == 0) {
                    // 0x14001bc5c
                    *(int64_t *)(v55 + 8) = v51;
                }
                int64_t * v56 = (int64_t *)(v51 + 8);
                *(int64_t *)(v53 + 8) = *v56;
                int64_t v57 = *v56; // 0x14001bc6b
                if (v51 != v57) {
                    int64_t * v58 = (int64_t *)(v57 + 16); // 0x14001bc82
                    if (v51 != *v58) {
                        // 0x14001bc95
                        *(int64_t *)v57 = v53;
                        *v54 = v51;
                        v9 = v56;
                        v13 = v50;
                        v12 = v53;
                    } else {
                        // 0x14001bc88
                        *v58 = v53;
                        *v54 = v51;
                        v9 = v56;
                        v13 = v50;
                        v12 = v53;
                    }
                } else {
                    // 0x14001bc71
                    *v56 = v53;
                    *v54 = v51;
                    v9 = v56;
                    v13 = v50;
                    v12 = v53;
                }
                goto lab_0x14001bd75;
            }
        }
    }
  lab_0x14001bd87:
    // 0x14001bd87
    *(char *)(*v3 + 24) = 1;
    return result;
  lab_0x14001bca7:
    // 0x14001bca7
    *(char *)(v11 + 24) = 1;
    *v10 = 1;
    *(char *)(*(int64_t *)(*v14 + 8) + 24) = 0;
    int64_t v59 = *(int64_t *)(*v14 + 8); // 0x14001bcc1
    goto lab_0x14001bd79;
  lab_0x14001bd75:
    // 0x14001bd75
    *v9 = v12;
    v59 = v13;
    goto lab_0x14001bd79;
  lab_0x14001bd79:
    // 0x14001bd79
    v8 = v59;
    v7 = *(int64_t *)(v8 + 8);
    if (*(char *)(v7 + 24) != 0) {
        // break -> 0x14001bd87
        goto lab_0x14001bd87;
    }
    goto lab_0x14001bba0;
}

// Address range: 0x14001bda0 - 0x14001beb2
int64_t function_14001bda0(char * a1, int64_t a2) {
    int64_t result = (int64_t)a1;
    int32_t v1; // 0x14001bda0
    int64_t v2 = v1; // 0x14001bdb4
    int64_t * v3 = (int64_t *)(result + 16); // 0x14001bdd9
    *v3 = 0;
    int64_t * v4 = (int64_t *)(result + 24); // 0x14001bddd
    *v4 = 0;
    uint64_t v5 = v2 + (int64_t)v1; // 0x14001bde4
    int64_t v6 = result; // 0x14001bdeb
    int64_t v7 = 15; // 0x14001bdeb
    int64_t v8; // 0x14001bda0
    int64_t v9; // 0x14001bda0
    if (v5 < 16) {
        goto lab_0x14001be6c;
    } else {
        int64_t v10 = v5 | 15; // 0x14001bdf0
        v7 = v10 > -1 ? v10 > 22 ? v10 : 22 : 0x7fffffffffffffff;
        uint64_t v11 = v7 == -1 ? -1 : v7 + 1; // 0x14001be1f
        v9 = v11;
        if (v11 < 0x1000) {
            goto lab_0x14001be5c;
        } else {
            if (v11 > 0xffffffffffffffd8) {
                // 0x14001bead
                function_140001140();
                // UNREACHABLE
            }
            int64_t v12 = v11 + 39; // 0x14001be2c
            int64_t v13 = function_14001e5fc(v12); // 0x14001be38
            if (v13 == 0) {
                // 0x14001be57
                _invalid_parameter_noinfo_noreturn();
                __asm_int3();
                v9 = v12;
                v8 = 0;
                if (v12 == 0) {
                    goto lab_0x14001be69;
                } else {
                    goto lab_0x14001be5c;
                }
            } else {
                int64_t v14 = v13 + 39 & -32; // 0x14001be46
                *(int64_t *)(v14 - 8) = v13;
                v8 = v14;
                goto lab_0x14001be69;
            }
        }
    }
  lab_0x14001be6c:
    // 0x14001be6c
    *v3 = v5;
    *v4 = v7;
    int64_t v15; // 0x14001bda0
    memcpy((int64_t *)v6, (int64_t *)v15, v1);
    memcpy((int64_t *)(v6 + v2), (int64_t *)v15, v1);
    *(char *)(v6 + v5) = 0;
    return result;
  lab_0x14001be5c:
    // 0x14001be5c
    v8 = function_14001e5fc(v9);
    goto lab_0x14001be69;
  lab_0x14001be69:
    // 0x14001be69
    v6 = v8;
    *(int64_t *)a1 = v6;
    goto lab_0x14001be6c;
}

// Address range: 0x14001bec0 - 0x14001bed4
int64_t function_14001bec0(int64_t * a1) {
    int64_t v1 = *(int64_t *)((int64_t)a1 + 8); // 0x14001bec0
    int64_t result; // 0x14001bec0
    if (v1 == 0) {
        // 0x14001bed3
        return result;
    }
    // 0x14001bec9
    return function_14001ea5c(v1, 72, result);
}

// Address range: 0x14001bee0 - 0x14001bf14
int64_t function_14001bee0(int64_t result, int64_t a2) {
    // 0x14001bee0
    function_14001b640(result);
    if ((a2 & 1) != 0) {
        // 0x14001bef9
        int64_t v1; // 0x14001bee0
        function_14001ea5c(result, 96, v1);
    }
    // 0x14001bf06
    return result;
}

// Address range: 0x14001bf20 - 0x14001bf54
int64_t function_14001bf20(int64_t result, int64_t a2) {
    // 0x14001bf20
    function_14001b990(result);
    if ((a2 & 1) != 0) {
        // 0x14001bf39
        int64_t v1; // 0x14001bf20
        function_14001ea5c(result, 152, v1);
    }
    // 0x14001bf46
    return result;
}

// Address range: 0x14001bf60 - 0x14001c0fb
int64_t function_14001bf60(int64_t * a1, char * a2, int64_t a3) {
    // 0x14001bf60
    _3f__Ipfx_40__3f__24_basic_istream_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_QEAA_N_N_40_Z(false);
    if (((char)&g103 & (char)&g103) == 0) {
        // 0x14001c0af
        _3f_setstate_40__3f__24_basic_ios_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_QEAAXH_N_40_Z((int32_t)&g103, (bool)&g103);
        return (int64_t)a1;
    }
    int64_t v1 = (int64_t)a2;
    int64_t * v2 = (int64_t *)(v1 + 16); // 0x14001bfcb
    *v2 = 0;
    int64_t * v3 = (int64_t *)(v1 + 24); // 0x14001bfd2
    *(char *)(*v3 < 16 ? v1 : v1 & -256 | 1) = 0;
    _3f_sgetc_40__3f__24_basic_streambuf_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_QEAAHXZ();
    if ((int32_t)&g103 == -1) {
        // 0x14001c0af
        _3f_setstate_40__3f__24_basic_ios_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_QEAAXH_N_40_Z((int32_t)&g103, (bool)&g103);
        return (int64_t)a1;
    }
    while (((int32_t)a3 & 255) != (int32_t)&g103) {
        uint64_t v4 = *v2; // 0x14001c02b
        if (v4 >= 0x7fffffffffffffff) {
            // 0x14001c0af
            _3f_setstate_40__3f__24_basic_ios_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_QEAAXH_N_40_Z((int32_t)&g103, (bool)&g103);
            return (int64_t)a1;
        }
        uint64_t v5 = *v3; // 0x14001c03f
        if (v4 >= v5) {
            // 0x14001c066
            function_14001b050(a2);
        } else {
            int64_t v6 = v4 + 1;
            *v2 = v6;
            int64_t v7 = v5 < 16 ? v1 : (int64_t)(int32_t)&g103;
            *(char *)(v7 + v4) = (char)&g103;
            *(char *)(v7 + v6) = 0;
        }
        // 0x14001c072
        _3f_snextc_40__3f__24_basic_streambuf_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_QEAAHXZ();
        if ((int32_t)&g103 == -1) {
            // 0x14001c0af
            _3f_setstate_40__3f__24_basic_ios_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_QEAAXH_N_40_Z((int32_t)&g103, (bool)&g103);
            return (int64_t)a1;
        }
    }
    // 0x14001c00f
    _3f_sbumpc_40__3f__24_basic_streambuf_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_QEAAHXZ();
    // 0x14001c0af
    _3f_setstate_40__3f__24_basic_ios_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_QEAAXH_N_40_Z((int32_t)&g103, (bool)&g103);
    return (int64_t)a1;
}

// Address range: 0x14001c100 - 0x14001c25a
int64_t function_14001c100(int64_t a1, int64_t a2, uint64_t a3) {
    int64_t v1 = (int64_t)*(int32_t *)(a1 + 4); // 0x14001c128
    int64_t v2 = a1 + 72;
    int64_t v3 = *(int64_t *)(v2 + v1); // 0x14001c14a
    int64_t v4 = v3 == 0 ? a1 : v3;
    int64_t v5 = (int64_t)*(int32_t *)(v4 + 4);
    int64_t v6 = a1 + 16;
    if (*(int32_t *)(v6 + v5) != 0) {
        // 0x14001c1ab
        return function_14001c268();
    }
    int64_t v7 = a1 + 40;
    uint64_t v8 = *(int64_t *)(v7 + v1); // 0x14001c12c
    int64_t v9 = v5; // 0x14001c17d
    int64_t v10 = v4; // 0x14001c17d
    if (v10 != 0 && v10 != a1) {
        // 0x14001c1a3
        _3f_flush_40__3f__24_basic_ostream_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_QEAAAEAV12_40_XZ();
        v9 = (int64_t)*(int32_t *)(v10 + 4);
        if (*(int32_t *)(v6 + v9) != 0) {
            // 0x14001c1ab
            return function_14001c268();
        }
    }
    int64_t v11 = v8 - a3;
    int64_t v12 = v8 > 0 == v8 > a3 ? v11 : 0;
    uint32_t v13 = *(int32_t *)(a1 + 24 + v9) & 448; // 0x14001c1bd
    int64_t v14 = v10; // 0x14001c1c6
    int64_t v15 = v12; // 0x14001c1c6
    int64_t v16; // 0x14001c100
    int64_t v17; // 0x14001c100
    if (v13 == 64) {
        goto lab_0x14001c234;
    } else {
        int64_t v18 = v13; // 0x14001c1bd
        int64_t v19 = v11; // 0x14001c1cb
        v14 = v18;
        v15 = 0;
        if (v12 == 0) {
            goto lab_0x14001c234;
        } else {
            int64_t v20 = *(int64_t *)(v2 + (int64_t)*(int32_t *)(v18 + 4)); // 0x14001c1d9
            _3f_sputc_40__3f__24_basic_streambuf_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_QEAAHD_40_Z((char)&g103);
            v16 = v20;
            v17 = v12;
            while ((int32_t)&g103 != -1) {
                int64_t v21 = v19 - 1; // 0x14001c22c
                v19 = v21;
                v14 = v20;
                v15 = 0;
                if (v21 == 0) {
                    goto lab_0x14001c234;
                }
                v20 = *(int64_t *)(v2 + (int64_t)*(int32_t *)(v20 + 4));
                _3f_sputc_40__3f__24_basic_streambuf_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_QEAAHD_40_Z((char)&g103);
                v16 = v20;
                v17 = v12;
            }
            goto lab_0x14001c1f2;
        }
    }
  lab_0x14001c234:;
    int32_t v22 = *(int32_t *)(v14 + 4); // 0x14001c234
    int64_t v23 = *(int64_t *)(v2 + (int64_t)v22); // 0x14001c23e
    _3f_sputn_40__3f__24_basic_streambuf_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_QEAA_JPEBD_J_40_Z((char *)&g103, (int64_t)&g103);
    v16 = v23;
    v17 = v15;
    if (a3 != (int64_t)&g103) {
        // 0x14001c21a
        *(int64_t *)(v7 + (int64_t)*(int32_t *)(v23 + 4)) = 0;
        return function_14001c268();
    }
    goto lab_0x14001c1f2;
  lab_0x14001c1f2:
    // 0x14001c1f2
    if (v17 == 0) {
        // 0x14001c21a
        *(int64_t *)(v7 + (int64_t)*(int32_t *)(v16 + 4)) = 0;
        return function_14001c268();
    }
    int64_t v24 = *(int64_t *)(v2 + (int64_t)*(int32_t *)(v16 + 4)); // 0x14001c203
    _3f_sputc_40__3f__24_basic_streambuf_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_QEAAHD_40_Z((char)&g103);
    int64_t v25 = v17 - 1; // 0x14001c255
    int64_t v26 = v25; // 0x14001c211
    int64_t v27 = v24; // 0x14001c211
    while (v25 != 0 && (int32_t)&g103 != -1) {
        // 0x14001c1f7
        v24 = *(int64_t *)(v2 + (int64_t)*(int32_t *)(v27 + 4));
        _3f_sputc_40__3f__24_basic_streambuf_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_QEAAHD_40_Z((char)&g103);
        v25 = v26 - 1;
        v26 = v25;
        v27 = v24;
    }
    // 0x14001c21a
    *(int64_t *)(v7 + (int64_t)*(int32_t *)(v24 + 4)) = 0;
    return function_14001c268();
}

// Address range: 0x14001c25a - 0x14001c268
int64_t function_14001c25a(void) {
    // 0x14001c25a
    int64_t result; // 0x14001c25a
    return result;
}

// Address range: 0x14001c268 - 0x14001c2bf
int64_t function_14001c268(void) {
    // 0x14001c268
    _3f_setstate_40__3f__24_basic_ios_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_QEAAXH_N_40_Z((int32_t)&g103, (bool)&g103);
    _3f_uncaught_exception_40_std_40__40_YA_NXZ();
    if (((char)&g103 & (char)&g103) == 0) {
        // 0x14001c288
        _3f__Osfx_40__3f__24_basic_ostream_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_QEAAXXZ();
    }
    // 0x14001c292
    int64_t result; // 0x14001c268
    return result;
}

// Address range: 0x14001c2c0 - 0x14001c551
int64_t function_14001c2c0(int128_t * a1, char * a2, int64_t a3, char * a4, char a5, int64_t a6) {
    int64_t v1 = (int64_t)a1;
    int64_t v2; // bp-104, 0x14001c2c0
    int64_t v3; // bp-168, 0x14001c2c0
    if (function_1400196c0(v1, (int128_t *)a2) != 0) {
        // 0x14001c51e
        function_14001a3f0(&v2, "multiple definition: ", a2);
        function_140014260(&v3);
        _CxxThrowException(&v3, &g61);
        // UNREACHABLE
    }
    int64_t v4 = (int64_t)a4;
    int64_t v5 = function_14001e5fc(160); // 0x14001c319
    int64_t v6 = function_140019960((int64_t)&v2, a6); // 0x14001c32e
    int64_t v7 = v6; // bp-184, 0x14001c336
    int64_t * v8 = (int64_t *)v5; // 0x14001c342
    *v8 = (int64_t)&g23;
    function_140019960(v5 + 8, (int64_t)a2);
    *(char *)(v5 + 40) = (char)a3;
    *(char *)(v5 + 41) = a5;
    *(int64_t *)(v5 + 64) = 0;
    *(int64_t *)(v5 + 72) = 15;
    int64_t v9 = v5 + 48; // 0x14001c371
    *(char *)v9 = 0;
    *(char *)(v5 + 80) = 0;
    function_140019960(v5 + 88, v6);
    function_140019960(v5 + 120, v6);
    int64_t v10 = function_14001d8e0(v5, &v3, v4); // 0x14001c39e
    function_140019fd0(v9, v10);
    int64_t v11; // 0x14001c2c0
    if (v11 >= 16) {
        int64_t v12 = v11 + 1; // 0x14001c3ba
        int64_t v13 = v3; // 0x14001c3bd
        int64_t v14 = v13; // 0x14001c3cc
        int64_t v15 = v12; // 0x14001c3cc
        if (v12 >= 0x1000) {
            int64_t v16 = v11 + 40; // 0x14001c3ce
            int64_t v17 = v13 - 8;
            int64_t v18 = *(int64_t *)v17; // 0x14001c3d2
            v14 = v18;
            v15 = v16;
            if (v17 - v18 >= 32) {
                // 0x14001c3e3
                _invalid_parameter_noinfo_noreturn();
                __asm_int3();
                v14 = v18;
                v15 = v16;
            }
        }
        // 0x14001c3ea
        function_14001ea5c(v14, v15, v4);
    }
    // 0x14001c3ef
    v3 = 0;
    *v8 = (int64_t)&g22;
    int64_t * v19 = (int64_t *)(v6 + 24); // 0x14001c40c
    uint64_t v20 = *v19; // 0x14001c40c
    int64_t v21; // 0x14001c2c0
    int64_t v22; // 0x14001c2c0
    int64_t v23; // 0x14001c2c0
    int64_t v24; // 0x14001c416
    int64_t v25; // 0x14001c419
    if (v20 < 16) {
        goto lab_0x14001c442;
    } else {
        // 0x14001c416
        v24 = *(int64_t *)v6;
        v25 = v20 + 1;
        if (v25 < 0x1000) {
            goto lab_0x14001c43d;
        } else {
            int64_t v26 = *(int64_t *)(v24 - 8); // 0x14001c429
            int64_t v27 = v24 - v26; // 0x14001c42d
            if (v27 < 40) {
                goto lab_0x14001c43d;
            } else {
                // 0x14001c49a
                _invalid_parameter_noinfo_noreturn();
                v22 = v27;
                v23 = v20 + 40;
                v21 = v26;
                goto lab_0x14001c4a1;
            }
        }
    }
  lab_0x14001c442:
    // 0x14001c442
    *(int64_t *)(v6 + 16) = 0;
    *v19 = 15;
    *(char *)v6 = 0;
    int64_t v28 = function_14001adf0(v1, (char *)&v7, (int128_t *)a2); // 0x14001c45c
    *(int64_t *)(*(int64_t *)v28 + 64) = v5;
    int64_t v29 = function_14001adf0(v1, (char *)&v7, (int128_t *)a2); // 0x14001c473
    int64_t v30 = *(int64_t *)v29 + 64; // 0x14001c47b
    int64_t * v31 = (int64_t *)(v1 + 24); // 0x14001c483
    int64_t v32 = *v31; // 0x14001c483
    v22 = v1 + 16;
    v23 = v32;
    v21 = v30;
    int64_t v33; // 0x14001c2c0
    if (v32 == *(int64_t *)(v1 + 32)) {
        goto lab_0x14001c4a1;
    } else {
        // 0x14001c48d
        *(int64_t *)v32 = *(int64_t *)v30;
        *v31 = *v31 + 8;
        v33 = v30;
        goto lab_0x14001c4a7;
    }
  lab_0x14001c4a1:
    // 0x14001c4a1
    function_14001a9c0(v22, v23, v21);
    v33 = v21;
    goto lab_0x14001c4a7;
  lab_0x14001c43d:
    // 0x14001c43d
    function_14001ea5c(v24, v25, v4);
    goto lab_0x14001c442;
  lab_0x14001c4a7:;
    int64_t * v34 = (int64_t *)(a6 + 24); // 0x14001c4a7
    uint64_t v35 = *v34; // 0x14001c4a7
    if (v35 < 16) {
        // 0x14001c4dd
        *(int64_t *)(a6 + 16) = 0;
        *v34 = 15;
        *(char *)a6 = 0;
        __security_check_cookie(g66);
        return &g103;
    }
    int64_t v36 = v35 + 1; // 0x14001c4b1
    int64_t v37 = *(int64_t *)a6; // 0x14001c4b4
    int64_t v38 = v37; // 0x14001c4be
    int64_t v39 = v36; // 0x14001c4be
    int64_t v40 = v33; // 0x14001c4be
    if (v36 >= 0x1000) {
        int64_t v41 = v37 - 8;
        int64_t v42 = *(int64_t *)v41; // 0x14001c4c4
        if (v41 - v42 >= 32) {
            // 0x14001c517
            _invalid_parameter_noinfo_noreturn();
            // 0x14001c51e
            function_14001a3f0(&v2, "multiple definition: ", a2);
            function_140014260(&v3);
            _CxxThrowException(&v3, &g61);
            // UNREACHABLE
        }
        // 0x14001c4d5
        v38 = v42;
        v39 = v35 + 40;
        v40 = v42;
    }
    // 0x14001c4d8
    function_14001ea5c(v38, v39, v40);
    // 0x14001c4dd
    *(int64_t *)(a6 + 16) = 0;
    *v34 = 15;
    *(char *)a6 = 0;
    __security_check_cookie(g66);
    return &g103;
}

// Address range: 0x14001c560 - 0x14001c6e5
int64_t function_14001c560(int128_t * a1, char * a2, int64_t a3, char * a4, char a5, int64_t a6) {
    int64_t v1 = (int64_t)a1;
    int64_t v2 = function_1400196c0(v1, (int128_t *)a2); // 0x14001c57b
    int64_t v3; // bp-136, 0x14001c560
    if (v2 != 0) {
        // 0x14001c6b2
        function_14001a3f0(&v3, "multiple definition: ", a2);
        int64_t v4; // bp-104, 0x14001c560
        function_140014260(&v4);
        _CxxThrowException(&v4, &g61);
        // UNREACHABLE
    }
    int64_t v5 = (int64_t)a4;
    int64_t v6 = function_14001e5fc(v2 + 104 & 0xffffffff); // 0x14001c58c
    int64_t v7 = v6; // bp-152, 0x14001c594
    int64_t * v8 = (int64_t *)v6; // 0x14001c5a0
    *v8 = (int64_t)&g20;
    function_140019960(v6 + 8, (int64_t)a2);
    *(char *)(v6 + 40) = (char)a3;
    *(char *)(v6 + 41) = a5;
    *(int64_t *)(v6 + 64) = 0;
    *(int64_t *)(v6 + 72) = 15;
    int64_t v9 = v6 + 48; // 0x14001c5ce
    *(char *)v9 = 0;
    *(char *)(v6 + 80) = 0;
    int32_t v10 = a6; // 0x14001c5dd
    *(int32_t *)(v6 + 84) = v10;
    *(int32_t *)(v6 + 88) = v10;
    int64_t v11 = function_14001d260(v6, &v3, v5); // 0x14001c5ee
    function_140019fd0(v9, v11);
    int64_t v12; // 0x14001c560
    if (v12 >= 16) {
        int64_t v13 = v12 + 1; // 0x14001c60a
        int64_t v14 = v3; // 0x14001c61c
        int64_t v15 = v13; // 0x14001c61c
        if (v13 >= 0x1000) {
            int64_t v16 = v12 + 40; // 0x14001c61e
            int64_t v17 = v3 - 8;
            int64_t v18 = *(int64_t *)v17; // 0x14001c622
            v14 = v18;
            v15 = v16;
            if (v17 - v18 >= 32) {
                // 0x14001c633
                _invalid_parameter_noinfo_noreturn();
                __asm_int3();
                v14 = v18;
                v15 = v16;
            }
        }
        // 0x14001c63a
        function_14001ea5c(v14, v15, v5);
    }
    // 0x14001c640
    *v8 = (int64_t)&g26;
    int64_t v19 = function_14001adf0(v1, (char *)&v7, (int128_t *)a2); // 0x14001c655
    *(int64_t *)(*(int64_t *)v19 + 64) = v6;
    int64_t v20 = function_14001adf0(v1, (char *)&v7, (int128_t *)a2); // 0x14001c66c
    int64_t v21 = *(int64_t *)v20 + 64; // 0x14001c674
    int64_t * v22 = (int64_t *)(v1 + 24); // 0x14001c67c
    int64_t v23 = *v22; // 0x14001c67c
    if (v23 == *(int64_t *)(v1 + 32)) {
        // 0x14001c69f
        return function_14001a9c0(v1 + 16, v23, v21);
    }
    int64_t result = *(int64_t *)v21; // 0x14001c686
    *(int64_t *)v23 = result;
    *v22 = *v22 + 8;
    return result;
}

// Address range: 0x14001c6f0 - 0x14001c7b0
int64_t function_14001c6f0(int64_t a1, int64_t a2, int64_t a3) {
    // 0x14001c6f0
    int64_t result; // 0x14001c6f0
    if (*(char *)(a3 + 25) != 0) {
        // 0x14001c799
        return result;
    }
    int64_t v1 = *(int64_t *)(a3 + 16); // 0x14001c720
    function_14001c6f0(a1, a2, v1);
    int64_t v2 = *(int64_t *)a3; // 0x14001c732
    int64_t * v3 = (int64_t *)(a3 + 64); // 0x14001c735
    uint64_t v4 = *v3; // 0x14001c735
    int64_t v5 = a3 + 40;
    int64_t v6 = v1; // 0x14001c73d
    int64_t v7; // 0x14001c6f0
    int64_t v8; // 0x14001c6f0
    int64_t v9; // 0x14001c74f
    int64_t v10; // 0x14001c73f
    int64_t v11; // 0x14001c743
    if (v4 >= 16) {
        // 0x14001c73f
        v10 = *(int64_t *)v5;
        v11 = v4 + 1;
        v7 = v11;
        v9 = v1;
        if (v11 >= 0x1000) {
            // 0x14001c74f
            v8 = v10 - 8;
            v9 = *(int64_t *)v8;
            if (v8 - v9 >= 32) {
                // 0x14001c7a1
                _invalid_parameter_noinfo_noreturn();
                __asm_int3();
                __asm_int3();
                __asm_int3();
                __asm_int3();
                __asm_int3();
                __asm_int3();
                __asm_int3();
                __asm_int3();
                return __asm_int3();
            }
            // 0x14001c764
            v7 = v4 + 40;
        }
        // 0x14001c767
        v6 = v9;
        function_14001ea5c(v9, v7, v6);
    }
    // 0x14001c76c
    *(int64_t *)(a3 + 56) = 0;
    *v3 = 15;
    *(char *)v5 = 0;
    result = function_14001ea5c(a3, 72, v6);
    while (*(char *)(v2 + 25) == 0) {
        int64_t v12 = v2;
        v1 = *(int64_t *)(v12 + 16);
        function_14001c6f0(a1, a2, v1);
        v2 = *(int64_t *)v12;
        v3 = (int64_t *)(v12 + 64);
        v4 = *v3;
        v5 = v12 + 40;
        v6 = v1;
        if (v4 >= 16) {
            // 0x14001c73f
            v10 = *(int64_t *)v5;
            v11 = v4 + 1;
            v7 = v11;
            v9 = v1;
            if (v11 >= 0x1000) {
                // 0x14001c74f
                v8 = v10 - 8;
                v9 = *(int64_t *)v8;
                if (v8 - v9 >= 32) {
                    // 0x14001c7a1
                    _invalid_parameter_noinfo_noreturn();
                    __asm_int3();
                    __asm_int3();
                    __asm_int3();
                    __asm_int3();
                    __asm_int3();
                    __asm_int3();
                    __asm_int3();
                    __asm_int3();
                    return __asm_int3();
                }
                // 0x14001c764
                v7 = v4 + 40;
            }
            // 0x14001c767
            v6 = v9;
            function_14001ea5c(v9, v7, v6);
        }
        // 0x14001c76c
        *(int64_t *)(v12 + 56) = 0;
        *v3 = 15;
        *(char *)v5 = 0;
        result = function_14001ea5c(v12, 72, v6);
    }
    // 0x14001c799
    return result;
}

// Address range: 0x14001c7b0 - 0x14001c870
int64_t function_14001c7b0(int64_t a1, int64_t a2, int64_t a3) {
    // 0x14001c7b0
    int64_t result; // 0x14001c7b0
    if (*(char *)(a3 + 25) != 0) {
        // 0x14001c859
        return result;
    }
    int64_t v1 = *(int64_t *)(a3 + 16); // 0x14001c7e0
    function_14001c7b0(a1, a2, v1);
    int64_t v2 = *(int64_t *)a3; // 0x14001c7f2
    int64_t * v3 = (int64_t *)(a3 + 56); // 0x14001c7f5
    uint64_t v4 = *v3; // 0x14001c7f5
    int64_t v5 = a3 + 32;
    int64_t v6 = v1; // 0x14001c7fd
    int64_t v7; // 0x14001c7b0
    int64_t v8; // 0x14001c7b0
    int64_t v9; // 0x14001c80f
    int64_t v10; // 0x14001c7ff
    int64_t v11; // 0x14001c803
    if (v4 >= 16) {
        // 0x14001c7ff
        v10 = *(int64_t *)v5;
        v11 = v4 + 1;
        v7 = v11;
        v9 = v1;
        if (v11 >= 0x1000) {
            // 0x14001c80f
            v8 = v10 - 8;
            v9 = *(int64_t *)v8;
            if (v8 - v9 >= 32) {
                // 0x14001c861
                _invalid_parameter_noinfo_noreturn();
                __asm_int3();
                __asm_int3();
                __asm_int3();
                __asm_int3();
                __asm_int3();
                __asm_int3();
                __asm_int3();
                __asm_int3();
                return __asm_int3();
            }
            // 0x14001c824
            v7 = v4 + 40;
        }
        // 0x14001c827
        v6 = v9;
        function_14001ea5c(v9, v7, v6);
    }
    // 0x14001c82c
    *(int64_t *)(a3 + 48) = 0;
    *v3 = 15;
    *(char *)v5 = 0;
    result = function_14001ea5c(a3, 72, v6);
    while (*(char *)(v2 + 25) == 0) {
        int64_t v12 = v2;
        v1 = *(int64_t *)(v12 + 16);
        function_14001c7b0(a1, a2, v1);
        v2 = *(int64_t *)v12;
        v3 = (int64_t *)(v12 + 56);
        v4 = *v3;
        v5 = v12 + 32;
        v6 = v1;
        if (v4 >= 16) {
            // 0x14001c7ff
            v10 = *(int64_t *)v5;
            v11 = v4 + 1;
            v7 = v11;
            v9 = v1;
            if (v11 >= 0x1000) {
                // 0x14001c80f
                v8 = v10 - 8;
                v9 = *(int64_t *)v8;
                if (v8 - v9 >= 32) {
                    // 0x14001c861
                    _invalid_parameter_noinfo_noreturn();
                    __asm_int3();
                    __asm_int3();
                    __asm_int3();
                    __asm_int3();
                    __asm_int3();
                    __asm_int3();
                    __asm_int3();
                    __asm_int3();
                    return __asm_int3();
                }
                // 0x14001c824
                v7 = v4 + 40;
            }
            // 0x14001c827
            v6 = v9;
            function_14001ea5c(v9, v7, v6);
        }
        // 0x14001c82c
        *(int64_t *)(v12 + 48) = 0;
        *v3 = 15;
        *(char *)v5 = 0;
        result = function_14001ea5c(v12, 72, v6);
    }
    // 0x14001c859
    return result;
}

// Address range: 0x14001c870 - 0x14001c9d0
int64_t function_14001c870(int64_t a1, uint64_t a2) {
    if (a2 >= 0x2000000000000000) {
        // 0x14001c9c5
        function_14001bb00();
        __asm_int3();
        // 0x14001c9cb
        function_140001140();
        // UNREACHABLE
    }
    int64_t * v1 = (int64_t *)(a1 + 8); // 0x14001c8a2
    int64_t v2 = 8 * a2;
    uint64_t v3 = a2 == 0 ? 0 : v2;
    int64_t v4; // 0x14001c870
    if (v3 < 0x1000) {
        // 0x14001c91b
        v4 = 0;
        if (v3 != 0) {
            // 0x14001c920
            v4 = function_14001e5fc(v3);
        }
        goto lab_0x14001c92f;
    } else {
        if (v3 > 0xffffffffffffffd8) {
            // 0x14001c9cb
            function_140001140();
            // UNREACHABLE
        }
        int64_t v5 = function_14001e5fc(v3 + 39); // 0x14001c8ff
        if (v5 == 0) {
            goto lab_0x14001c9be;
        } else {
            int64_t v6 = v5 + 39 & -32; // 0x14001c911
            *(int64_t *)(v6 - 8) = v5;
            v4 = v6;
            goto lab_0x14001c92f;
        }
    }
  lab_0x14001c92f:;
    int64_t v7 = *v1 - a1; // 0x14001c8a6
    int64_t v8 = v4 + (v7 & -8); // 0x14001c932
    int64_t v9 = a2 - (v7 >> 3); // 0x14001c936
    int64_t * v10 = (int64_t *)v8;
    if (v9 != 0) {
        // 0x14001c93b
        memset(v10, 0, 8 * (int32_t)v9);
    }
    int64_t v11 = *v1 - v8; // 0x14001c954
    memmove((int64_t *)v4, v10, (int32_t)v11);
    int64_t * v12 = (int64_t *)(a1 + 16);
    int64_t result; // 0x14001c9a5
    if (v4 == 0) {
        // 0x14001c995
        *(int64_t *)a1 = v4;
        *v1 = v4 + v2;
        result = v4 + v3;
        *v12 = result;
        return result;
    }
    int64_t v13 = *v12 - v4 & -8; // 0x14001c96b
    int64_t v14 = v4; // 0x14001c976
    int64_t v15 = v13; // 0x14001c976
    int64_t v16 = v11; // 0x14001c976
    if (v13 < 0x1000) {
        goto lab_0x14001c990;
    } else {
        int64_t v17 = v4 - 8;
        int64_t v18 = *(int64_t *)v17; // 0x14001c978
        if (v17 - v18 < 32) {
            // 0x14001c98d
            v14 = v18;
            v15 = v13 + 39;
            v16 = v18;
            goto lab_0x14001c990;
        } else {
            goto lab_0x14001c9be;
        }
    }
  lab_0x14001c9be:
    // 0x14001c9be
    _invalid_parameter_noinfo_noreturn();
    __asm_int3();
    // 0x14001c9c5
    function_14001bb00();
    __asm_int3();
    // 0x14001c9cb
    function_140001140();
    // UNREACHABLE
  lab_0x14001c990:
    // 0x14001c990
    function_14001ea5c(v14, v15, v16);
    // 0x14001c995
    *(int64_t *)a1 = v4;
    *v1 = v4 + v2;
    result = v4 + v3;
    *v12 = result;
    return result;
}

// Address range: 0x14001c9e0 - 0x14001cc0b
int64_t function_14001c9e0(int128_t * a1, uint64_t a2) {
    if (a2 >= 0xaaaaaaaaaaaaaab) {
        // 0x14001cc00
        function_14001bb00();
        __asm_int3();
        // 0x14001cc06
        function_140001140();
        // UNREACHABLE
    }
    int64_t v1 = 24 * a2;
    uint64_t v2 = a2 == 0 ? 0 : v1;
    int64_t v3; // 0x14001c9e0
    if (v2 < 0x1000) {
        // 0x14001cac9
        v3 = 0;
        if (v2 != 0) {
            // 0x14001cace
            v3 = function_14001e5fc(v2);
        }
        goto lab_0x14001cade;
    } else {
        if (v2 > 0xffffffffffffffd8) {
            // 0x14001cc06
            function_140001140();
            // UNREACHABLE
        }
        int64_t v4 = function_14001e5fc(v2 + 39); // 0x14001caad
        if (v4 == 0) {
            goto lab_0x14001cbf9;
        } else {
            int64_t v5 = v4 + 39 & -32; // 0x14001cabf
            *(int64_t *)(v5 - 8) = v4;
            v3 = v5;
            goto lab_0x14001cade;
        }
    }
  lab_0x14001cade:;
    int64_t v6 = v3; // 0x14001caec
    if (a2 != 0) {
        *(int64_t *)v3 = 0;
        *(int64_t *)(v3 + 8) = 0;
        *(int64_t *)(v3 + 16) = 0;
        int64_t v7 = v3 + 24; // 0x14001cafb
        int64_t v8 = a2 - 1; // 0x14001caff
        int64_t v9 = v8; // 0x14001cb03
        int64_t v10 = v7; // 0x14001cb03
        v6 = v7;
        while (v8 != 0) {
            // 0x14001caf0
            *(int64_t *)v10 = 0;
            *(int64_t *)(v10 + 8) = 0;
            *(int64_t *)(v10 + 16) = 0;
            v7 = v10 + 24;
            v8 = v9 - 1;
            v9 = v8;
            v10 = v7;
            v6 = v7;
        }
    }
    int64_t v11 = (int64_t)a1;
    int64_t v12 = v6;
    function_14001b340((int128_t)v12, v12);
    int64_t * v13 = (int64_t *)(v11 + 8); // 0x14001cb0d
    int64_t v14 = *v13; // 0x14001cb0d
    int64_t v15 = v3; // 0x14001cb1a
    if (v3 != v14) {
        int64_t v16 = v3 + 24; // 0x14001cb41
        *(int64_t *)v3 = 0;
        *(int64_t *)(v3 + 8) = 0;
        *(int64_t *)(v3 + 16) = 0;
        int64_t v17 = v16; // 0x14001cb57
        v15 = v16;
        while (v16 != v14) {
            // 0x14001cb20
            v16 = v17 + 24;
            *(int64_t *)v17 = 0;
            *(int64_t *)(v17 + 8) = 0;
            *(int64_t *)(v17 + 16) = 0;
            v17 = v16;
            v15 = v16;
        }
    }
    int64_t v18 = v15;
    int128_t v19 = v18; // 0x14001cb5c
    function_14001b340(v19, v18);
    int64_t result; // 0x14001cbd8
    if (v18 == 0) {
        // 0x14001cbc1
        result = v3 + v2;
        *(int64_t *)a1 = v3;
        *v13 = v3 + v1;
        *(int64_t *)(v11 + 16) = result;
        return result;
    }
    // 0x14001cb69
    function_14001b340(v19, *v13);
    int64_t v20 = 0; // 0x14001cb9f
    goto lab_0x14001cbb9;
  lab_0x14001cbf9:
    // 0x14001cbf9
    _invalid_parameter_noinfo_noreturn();
    __asm_int3();
    // 0x14001cc00
    function_14001bb00();
    __asm_int3();
    // 0x14001cc06
    function_140001140();
    // UNREACHABLE
  lab_0x14001cbb9:
    // 0x14001cbb9
    function_14001ea5c(v18, v20, v18);
    // 0x14001cbc1
    result = v3 + v2;
    *(int64_t *)a1 = v3;
    *v13 = v3 + v1;
    *(int64_t *)(v11 + 16) = result;
    return result;
}

// Address range: 0x14001cc10 - 0x14001ccbf
int64_t function_14001cc10(int64_t * a1) {
    int64_t v1 = __std_type_info_name(&g82, &g85); // 0x14001cc2c
    char v2 = 0; // bp-56, 0x14001cc44
    int64_t v3 = -1; // 0x14001cc49
    v3++;
    while (*(char *)(v3 + v1) != 0) {
        // 0x14001cc50
        v3++;
    }
    int64_t result = (int64_t)a1;
    function_140019e40(&v2, (char *)v1, v3);
    function_140019960(result, (int64_t)&v2);
    return result;
}

// Address range: 0x14001ccc0 - 0x14001ce64
int64_t function_14001ccc0(int64_t result2, uint64_t a2) {
    int64_t * v1 = (int64_t *)(result2 + 16); // 0x14001cccb
    int64_t v2 = *v1; // 0x14001cccb
    if (0x7fffffffffffffff - v2 < a2) {
        // 0x14001ce2e
        function_1400011e0();
        __asm_int3();
        __asm_int3();
        __asm_int3();
        __asm_int3();
        __asm_int3();
        __asm_int3();
        __asm_int3();
        __asm_int3();
        __asm_int3();
        __asm_int3();
        __asm_int3();
        __asm_int3();
        __asm_int3();
        int64_t v3 = *(int64_t *)(result2 + 72 + (int64_t)*(int32_t *)(result2 + 4)); // 0x14001ce4e
        int64_t result = result2; // 0x14001ce56
        if (v3 != 0) {
            // 0x14001ce58
            result = *(int64_t *)v3;
        }
        // 0x14001ce5f
        return result;
    }
    int64_t * v4 = (int64_t *)(result2 + 24); // 0x14001ccf5
    uint64_t v5 = *v4; // 0x14001ccf5
    int64_t v6 = v2 + a2; // 0x14001ccfe
    int64_t v7 = v6 | 15; // 0x14001cd05
    int64_t v8 = -0x7fffffffffffffd9; // 0x14001cd0c
    int64_t v9 = 0x7fffffffffffffff; // 0x14001cd0c
    int64_t v10; // 0x14001ccc0
    int64_t v11; // 0x14001ccc0
    if (v7 < 0) {
        goto lab_0x14001cd5a;
    } else {
        uint64_t v12 = v5 / 2; // 0x14001cd14
        v8 = -0x7fffffffffffffd9;
        v9 = 0x7fffffffffffffff;
        if (v5 > (v12 ^ 0x7fffffffffffffff)) {
            goto lab_0x14001cd5a;
        } else {
            int64_t v13 = v12 + v5; // 0x14001cd1f
            int64_t v14 = v7; // 0x14001ccc0
            if (v7 < v13) {
                // 0x14001cd2d
                v14 = v13;
                if (v13 == -1) {
                    // 0x14001ce28
                    function_140001140();
                    // UNREACHABLE
                }
            }
            uint64_t v15 = v14 + 1;
            if (v15 < 0x1000) {
                // 0x14001cd7e
                v10 = v14;
                v11 = function_14001e5fc(v15);
                goto lab_0x14001cd8a;
            } else {
                // 0x14001cd4d
                v8 = v14 + 40;
                v9 = v14;
                if (v15 > 0xffffffffffffffd8) {
                    // 0x14001ce28
                    function_140001140();
                    // UNREACHABLE
                }
                goto lab_0x14001cd5a;
            }
        }
    }
  lab_0x14001cd5a:;
    int64_t v16 = function_14001e5fc(v8); // 0x14001cd5d
    int64_t v17 = v8; // 0x14001cd65
    int64_t v18 = v7; // 0x14001cd65
    int64_t v19 = v6; // 0x14001cd65
    if (v16 == 0) {
        goto lab_0x14001cded;
    } else {
        int64_t v20 = v16 + 39 & -32; // 0x14001cd6f
        *(int64_t *)(v20 - 8) = v16;
        v10 = v9;
        v11 = v20;
        goto lab_0x14001cd8a;
    }
  lab_0x14001cded:
    // 0x14001cded
    _invalid_parameter_noinfo_noreturn();
    __asm_int3();
    int64_t v21 = v17; // 0x14001cdf3
    int64_t v22 = v18; // 0x14001cdf3
    int64_t v23; // 0x14001ccc0
    int64_t v24 = v23; // 0x14001cdf3
    int64_t v25; // 0x14001ccc0
    int64_t v26 = v25; // 0x14001cdf3
    int64_t v27 = v19; // 0x14001cdf3
    goto lab_0x14001cdf4;
  lab_0x14001cdf4:
    // 0x14001cdf4
    memcpy((int64_t *)v21, (int64_t *)v22, (int32_t)v26);
    int64_t * v28 = (int64_t *)result2;
    memcpy((int64_t *)v27, v28, (int32_t)v2 + 1);
    // 0x14001ce08
    *v28 = v24;
    return result2;
  lab_0x14001cd8a:;
    // 0x14001cd8a
    int32_t v29; // 0x14001ccc0
    int64_t v30 = v29; // 0x14001cd8a
    *v1 = v6;
    *v4 = v10;
    int64_t v31 = v11 + v30; // 0x14001cd9d
    v21 = v11;
    v24 = v11;
    v26 = v30;
    v27 = v31;
    int64_t v32; // 0x14001cdaf
    int64_t v33; // 0x14001cdcb
    int64_t v34; // 0x14001cdcf
    if (v5 < 16) {
        goto lab_0x14001cdf4;
    } else {
        int64_t * v35 = (int64_t *)v11; // 0x14001cdaa
        int64_t v36; // 0x14001ccc0
        memcpy(v35, (int64_t *)v36, v29);
        v32 = v2 + 1;
        memcpy((int64_t *)v31, v35, (int32_t)v32);
        int64_t v37 = v5 + 1; // 0x14001cdbe
        v34 = v37;
        v33 = v11;
        if (v37 < 0x1000) {
            goto lab_0x14001cde3;
        } else {
            int64_t v38 = v11 - 8;
            v33 = *(int64_t *)v38;
            v34 = v5 + 40;
            v17 = v33;
            v18 = v34;
            v23 = v11;
            v25 = v32;
            v19 = v31;
            if (v38 - v33 < 32) {
                goto lab_0x14001cde3;
            } else {
                goto lab_0x14001cded;
            }
        }
    }
  lab_0x14001cde3:
    // 0x14001cde3
    function_14001ea5c(v33, v34, v32);
    // 0x14001ce08
    *(int64_t *)result2 = v11;
    return result2;
}

// Address range: 0x14001ce70 - 0x14001cfcd
int64_t function_14001ce70(void) {
    // 0x14001ce70
    int64_t v1; // bp-328, 0x14001ce70
    int64_t v2 = &v1; // 0x14001ce80
    int64_t v3; // bp-264, 0x14001ce70
    memset(&v3, 0, 240);
    v3 = &g33;
    _3f__3f_0_3f__24_basic_ios_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_IEAA_40_XZ();
    _3f__3f_0_3f__24_basic_istream_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_QEAA_40_PEAV_3f__24_basic_streambuf_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_1_40__N_40_Z((int64_t *)1, (bool)&g103);
    int64_t * v4 = (int64_t *)(v2 + 208); // 0x14001cef8
    *v4 = (int64_t)&g36;
    int32_t * v5 = (int32_t *)(v2 + 204); // 0x14001cf0d
    *v5 = (int32_t)&g29;
    int64_t v6; // bp-248, 0x14001ce70
    int64_t v7; // 0x14001ce70
    function_140019cb0(&v6, (char *)v7, 1);
    _3f__3f_5_3f__24_basic_istream_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_QEAAAEAV01_40_AEAH_40_Z(&g103);
    int32_t v8 = *(int32_t *)(*(int64_t *)&g103 + 4); // 0x14001cf38
    char v9 = *(char *)((int64_t)v8 + (int64_t)&g103 + 16); // 0x14001cf3c
    if ((v9 & 6) != 0 || (*(char *)(v2 + 224) & 1) == 0) {
        // 0x14001cfb2
        int64_t v10; // bp-288, 0x14001ce70
        _CxxThrowException(&v10, &g62);
        // UNREACHABLE
    }
    // 0x14001cf53
    *v4 = (int64_t)&g36;
    *v5 = (int32_t)&g29;
    function_1400192f0(&v6);
    _3f__3f_1_3f__24_basic_istream_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_UEAA_40_XZ();
    _3f__3f_1_3f__24_basic_ios_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_UEAA_40_XZ();
    __security_check_cookie(g66);
    return &g103;
}

// Address range: 0x14001cfd0 - 0x14001cfed
int64_t function_14001cfd0(void) {
    // 0x14001cfd0
    int64_t result; // 0x14001cfd0
    function_140019960(result, result);
    return result;
}

// Address range: 0x14001cff0 - 0x14001d214
int64_t function_14001cff0(int64_t result) {
    int64_t v1 = result + 16; // 0x14001d00a
    int64_t * v2 = (int64_t *)v1; // 0x14001d00a
    *v2 = 0;
    int64_t v3; // 0x14001cff0
    int64_t v4 = v3; // 0x14001d00e
    int64_t * v5 = (int64_t *)(result + 24); // 0x14001d011
    *v5 = 0;
    int64_t v6; // 0x14001cff0
    int64_t v7 = v6;
    uint64_t v8 = *(int64_t *)(v7 + 16); // 0x14001d018
    uint64_t v9 = *(int64_t *)(v3 + 16); // 0x14001d01c
    int64_t * v10 = (int64_t *)(v7 + 24); // 0x14001d020
    uint64_t v11 = *v10; // 0x14001d020
    uint64_t v12 = *(int64_t *)(v3 + 24); // 0x14001d024
    int64_t v13 = v12; // 0x14001d024
    int64_t v14 = v9 + v8; // 0x14001d02e
    if (v9 <= v11 - v8 && v12 <= v11) {
        int128_t v15 = *(int128_t *)&v6; // 0x14001d03c
        __asm_movups(*(int128_t *)&v13, __asm_movups_1(v15));
        int64_t v16 = (int64_t)v15 + 16;
        __asm_movups(*(int128_t *)v1, __asm_movups_1(*(int128_t *)v16));
        *(int64_t *)v16 = 0;
        *(int64_t *)(v6 + 24) = 15;
        *(char *)v6 = 0;
        int64_t v17 = *v5 < 16 ? result : v13;
        int64_t v18 = v3; // 0x14001d068
        int64_t v19 = *(int64_t *)(v18 + 24) < 16 ? v4 : v18;
        memcpy((int64_t *)(v17 + v8), (int64_t *)v19, (int32_t)v9 + 1);
        *v2 = v14;
        // 0x14001d1b1
        return result;
    }
    int64_t result2 = v12 - v9; // 0x14001d08c
    v13 = result2;
    if (v8 <= result2) {
        int128_t v20 = *(int128_t *)&v3; // 0x14001d094
        int128_t v21 = __asm_movups_1(v20); // 0x14001d094
        int64_t v22 = v9 + 1; // 0x14001d098
        v6 = v22;
        __asm_movups(*(int128_t *)&v13, v21);
        int64_t v23 = (int64_t)v20 + 16;
        __asm_movups(*(int128_t *)v1, __asm_movups_1(*(int128_t *)v23));
        *(int64_t *)v23 = 0;
        *(int64_t *)(v3 + 24) = 15;
        *(char *)v3 = 0;
        int64_t * v24 = (int64_t *)v13; // 0x14001d0c2
        memmove((int64_t *)(v13 + v8), v24, (int32_t)v22);
        memcpy(v24, (int64_t *)(*v10 < 16 ? v7 : v6), (int32_t)v8);
        *v2 = v14;
        // 0x14001d1b1
        return result;
    }
    if (0x7fffffffffffffff - v8 < v9) {
        // 0x14001d1cf
        function_1400011e0();
        __asm_int3();
        __asm_int3();
        __asm_int3();
        __asm_int3();
        __asm_int3();
        __asm_int3();
        __asm_int3();
        __asm_int3();
        __asm_int3();
        __asm_int3();
        __asm_int3();
        __asm_int3();
        function_14001b640(result2);
        if ((v11 & 1) != 0) {
            // 0x14001d1f9
            function_14001ea5c(result2, 104, v7);
        }
        // 0x14001d1b1
        return result2;
    }
    int64_t v25 = v14 | 15; // 0x14001d104
    int64_t v26 = v25 < 0 ? 0x7fffffffffffffff : v25 > 22 ? v25 : 22;
    int64_t v27 = v26 == -1 ? -1 : v26 + 1; // 0x14001d12a
    v13 = v27;
    int64_t v28 = v27; // 0x14001d135
    int64_t v29; // 0x14001cff0
    if (v27 < 0x1000) {
        goto lab_0x14001d16b;
    } else {
        if (v27 > 0xffffffffffffffd8) {
            // 0x14001d1c9
            function_140001140();
            // UNREACHABLE
        }
        // 0x14001d144
        v28 = v27 + 39;
        v13 = v28;
        int64_t v30 = function_14001e5fc(v28); // 0x14001d147
        if (v30 == 0) {
            // 0x14001d166
            _invalid_parameter_noinfo_noreturn();
            __asm_int3();
            v29 = 0;
            if (v28 == 0) {
                goto lab_0x14001d173;
            } else {
                goto lab_0x14001d16b;
            }
        } else {
            int64_t v31 = v30 + 39 & -32; // 0x14001d155
            *(int64_t *)(v31 - 8) = v30;
            v29 = v31;
            goto lab_0x14001d173;
        }
    }
  lab_0x14001d16b:
    // 0x14001d16b
    v29 = function_14001e5fc(v28);
    goto lab_0x14001d173;
  lab_0x14001d173:
    // 0x14001d173
    *(int64_t *)result = v29;
    *v2 = v14;
    *v5 = v26;
    int64_t v32 = *v10 < 16 ? v7 : v6;
    memcpy((int64_t *)v29, (int64_t *)v32, (int32_t)v8);
    int64_t v33 = *(int64_t *)(v4 + 24) < 16 ? v4 : v3;
    memcpy((int64_t *)(v29 + v8), (int64_t *)v33, (int32_t)v9 + 1);
    // 0x14001d1b1
    return result;
}

// Address range: 0x14001d220 - 0x14001d254
int64_t function_14001d220(int64_t result, int64_t a2) {
    // 0x14001d220
    function_14001b990(result);
    if ((a2 & 1) != 0) {
        // 0x14001d239
        int64_t v1; // 0x14001d220
        function_14001ea5c(result, 160, v1);
    }
    // 0x14001d246
    return result;
}

// Address range: 0x14001d260 - 0x14001d8e0
int64_t function_14001d260(int64_t a1, int64_t * a2, int64_t a3) {
    int64_t v1 = (int64_t)a2;
    int64_t v2 = v1;
    int64_t v3; // 0x14001d260
    uint64_t v4 = v3;
    int64_t v5; // 0x14001d260
    int64_t v6; // bp-312, 0x14001d260
    int64_t v7; // 0x14001d260
    char v8; // bp-480, 0x14001d260
    char v9; // bp-576, 0x14001d260
    int64_t v10; // 0x14001d260
    int64_t v11; // 0x14001d260
    char v12; // 0x14001d260
    if (*(char *)(a1 + 41) == 0) {
        // 0x14001d2d9
        memset(&v6, 0, 232);
        function_1400193b0(&v6, 0, 232, v3);
        _3f__3f_6_3f__24_basic_ostream_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_QEAAAEAV01_40_H_40_Z((int32_t)&g103);
        v9 = 0;
        if ((v12 & 2) != 0) {
            goto lab_0x14001d355;
        } else {
            uint64_t v13 = *(int64_t *)v3; // 0x14001d332
            if (v13 == 0) {
                goto lab_0x14001d355;
            } else {
                int64_t v14 = *(int64_t *)v3; // 0x14001d33e
                v2 = v14;
                v5 = v14;
                v11 = (v13 < v4 ? v4 : v13) - v14;
                goto lab_0x14001d380;
            }
        }
    } else {
        // 0x14001d2a8
        v8 = 0;
        v2 = (int64_t)&g10;
        function_140019e40(&v8, (char *)&g10, 0);
        v7 = 15;
        v10 = 0xf011;
        goto lab_0x14001d540;
    }
  lab_0x14001d355:
    if ((v12 & 4) != 0) {
        goto lab_0x14001d38b;
    } else {
        int64_t v15 = *(int64_t *)v3; // 0x14001d361
        if (v15 == 0) {
            goto lab_0x14001d38b;
        } else {
            int64_t v16 = *(int64_t *)v3; // 0x14001d36d
            v2 = v16;
            v5 = v16;
            int32_t * v17; // 0x14001d260
            v11 = v15 - v16 + (int64_t)*v17;
            goto lab_0x14001d380;
        }
    }
  lab_0x14001d540:;
    // 0x14001d540
    int64_t v18; // bp-448, 0x14001d260
    function_14001cc10(&v18);
    if ((*(int64_t *)(a3 + 16) || 1) == 0x7fffffffffffffff) {
        // 0x14001d8d9
        function_1400011e0();
        return __asm_int3();
    }
    // 0x14001d56b
    int64_t v19; // bp-344, 0x14001d260
    function_14001bda0((char *)&v19, v2);
    int64_t v20; // bp-376, 0x14001d260
    int64_t v21 = &v20; // 0x14001d5aa
    function_14001cff0(v21);
    int64_t v22; // bp-512, 0x14001d260
    int64_t v23 = &v22; // 0x14001d5c2
    function_14001cff0(v23);
    int64_t v24; // 0x14001d260
    // 0x14001d608
    v24 = function_14001b1b0(&v22, 1);
    int64_t v25 = v1 + 16; // 0x14001d626
    *(int64_t *)v25 = 0;
    *(int64_t *)(v1 + 24) = 0;
    __asm_movups(*(int128_t *)&v2, __asm_movups_1(*(int128_t *)v24));
    int64_t v26 = v24 + 16; // 0x14001d636
    __asm_movups(*(int128_t *)v25, __asm_movups_1(*(int128_t *)v26));
    *(int64_t *)v26 = 0;
    *(int64_t *)(v24 + 24) = 15;
    *(char *)v24 = 0;
    if (v3 >= 16) {
        int64_t v27 = v3 + 1; // 0x14001d65e
        v2 = v27;
        int64_t v28 = v22; // 0x14001d661
        int64_t v29 = v27; // 0x14001d66f
        int64_t v30 = v28; // 0x14001d66f
        if (v27 >= 0x1000) {
            int64_t v31 = v3 + 40; // 0x14001d671
            v2 = v31;
            int64_t v32 = v28 - 8;
            int64_t v33 = *(int64_t *)v32; // 0x14001d675
            v29 = v31;
            v30 = v33;
            if (v32 - v33 >= 32) {
                // 0x14001d686
                _invalid_parameter_noinfo_noreturn();
                __asm_int3();
                v29 = v2;
                v30 = v33;
            }
        }
        // 0x14001d68d
        function_14001ea5c(v30, v29, v21);
    }
    // 0x14001d692
    v22 = 0;
    if (v3 >= 16) {
        int64_t v34 = v3 + 1; // 0x14001d6ac
        v2 = v34;
        int64_t v35 = v34; // 0x14001d6bd
        int64_t v36 = v20; // 0x14001d6bd
        if (v34 >= 0x1000) {
            int64_t v37 = v3 + 40; // 0x14001d6bf
            v2 = v37;
            int64_t v38 = v20 - 8;
            int64_t v39 = *(int64_t *)v38; // 0x14001d6c3
            v35 = v37;
            v36 = v39;
            if (v38 - v39 >= 32) {
                // 0x14001d6d4
                _invalid_parameter_noinfo_noreturn();
                __asm_int3();
                v35 = v2;
                v36 = v39;
            }
        }
        // 0x14001d6db
        function_14001ea5c(v36, v35, v21);
    }
    if (v3 >= 16) {
        int64_t v40 = v3 + 1; // 0x14001d6eb
        v2 = v40;
        int64_t v41 = v40; // 0x14001d6fc
        int64_t v42 = v19; // 0x14001d6fc
        if (v40 >= 0x1000) {
            int64_t v43 = v3 + 40; // 0x14001d6fe
            v2 = v43;
            int64_t v44 = v19 - 8;
            int64_t v45 = *(int64_t *)v44; // 0x14001d702
            v41 = v43;
            v42 = v45;
            if (v44 - v45 >= 32) {
                // 0x14001d713
                _invalid_parameter_noinfo_noreturn();
                __asm_int3();
                v41 = v2;
                v42 = v45;
            }
        }
        // 0x14001d71a
        function_14001ea5c(v42, v41, v21);
    }
    if (v3 >= 16) {
        int64_t v46 = v3 + 1; // 0x14001d72a
        v2 = v46;
        int64_t v47 = v18; // 0x14001d72d
        int64_t v48 = v46; // 0x14001d73b
        int64_t v49 = v47; // 0x14001d73b
        if (v46 >= 0x1000) {
            int64_t v50 = v3 + 40; // 0x14001d73d
            v2 = v50;
            int64_t v51 = v47 - 8;
            int64_t v52 = *(int64_t *)v51; // 0x14001d741
            v48 = v50;
            v49 = v52;
            if (v51 - v52 >= 32) {
                // 0x14001d752
                _invalid_parameter_noinfo_noreturn();
                __asm_int3();
                v48 = v2;
                v49 = v52;
            }
        }
        // 0x14001d759
        function_14001ea5c(v49, v48, v21);
    }
    // 0x14001d75e
    v18 = 0;
    int64_t v53 = v10; // 0x14001d771
    int64_t v54; // bp-392, 0x14001d260
    int128_t v55; // 0x14001d260
    if ((v10 & 8) != 0) {
        int64_t v56 = v10 & 0xfdf7; // 0x14001d773
        v2 = v54;
        v53 = v56;
        if (v54 >= 16) {
            int64_t v57 = v54 + 1; // 0x14001d780
            v2 = v57;
            int64_t v58 = v55; // 0x14001d783
            int64_t v59 = v57; // 0x14001d791
            int64_t v60 = v58; // 0x14001d791
            if (v57 >= 0x1000) {
                int64_t v61 = v54 + 40; // 0x14001d793
                v2 = v61;
                int64_t v62 = v58 - 8;
                int64_t v63 = *(int64_t *)v62; // 0x14001d797
                v59 = v61;
                v60 = v63;
                if (v62 - v63 >= 32) {
                    // 0x14001d7a8
                    _invalid_parameter_noinfo_noreturn();
                    __asm_int3();
                    v59 = v2;
                    v60 = v63;
                }
            }
            // 0x14001d7af
            function_14001ea5c(v60, v59, v21);
            v53 = v56;
        }
    }
    int64_t v64 = v53; // 0x14001d7b8
    int64_t v65; // 0x14001d260
    int128_t v66; // bp-544, 0x14001d260
    if ((v53 & 4) != 0) {
        // 0x14001d7ba
        v2 = v65;
        if (v65 >= 16) {
            int64_t v67 = v65 + 1; // 0x14001d7c7
            v2 = v67;
            int64_t v68 = v66; // 0x14001d7ca
            int64_t v69 = v67; // 0x14001d7d9
            int64_t v70 = v68; // 0x14001d7d9
            if (v67 >= 0x1000) {
                int64_t v71 = v65 + 40; // 0x14001d7db
                v2 = v71;
                int64_t v72 = v68 - 8;
                int64_t v73 = *(int64_t *)v72; // 0x14001d7df
                v69 = v71;
                v70 = v73;
                if (v72 - v73 >= 32) {
                    // 0x14001d7f0
                    _invalid_parameter_noinfo_noreturn();
                    __asm_int3();
                    v69 = v2;
                    v70 = v73;
                }
            }
            // 0x14001d7f7
            function_14001ea5c(v70, v69, v21);
        }
        // 0x14001d7fc
        v66 = 0;
        v64 = v53 & 0xfffffffb;
    }
    int64_t v74 = v64; // 0x14001d811
    int64_t v75; // 0x14001d260
    if ((v64 & 2) != 0) {
        // 0x14001d813
        v2 = v75;
        if (v75 >= 16) {
            int64_t v76 = v75 + 1; // 0x14001d821
            v2 = v76;
            int64_t v77 = v9; // 0x14001d824
            int64_t v78 = v76; // 0x14001d833
            int64_t v79 = v77; // 0x14001d833
            if (v76 >= 0x1000) {
                int64_t v80 = v75 + 40; // 0x14001d835
                v2 = v80;
                int64_t v81 = v77 - 8;
                int64_t v82 = *(int64_t *)v81; // 0x14001d839
                v78 = v80;
                v79 = v82;
                if (v81 - v82 >= 32) {
                    // 0x14001d84a
                    _invalid_parameter_noinfo_noreturn();
                    __asm_int3();
                    v78 = v2;
                    v79 = v82;
                }
            }
            // 0x14001d851
            function_14001ea5c(v79, v78, v21);
        }
        // 0x14001d856
        v9 = 0;
        v74 = v64 & 0xfffffffd;
    }
    // 0x14001d869
    if ((v74 & 1) == 0) {
        // 0x14001d8ac
        __security_check_cookie(g66);
        return &g103;
    }
    // 0x14001d86e
    v2 = v7;
    if (v7 < 16) {
        // 0x14001d8ac
        __security_check_cookie(g66);
        return &g103;
    }
    int64_t v83 = v7 + 1; // 0x14001d878
    v2 = v83;
    int64_t v84 = v8; // 0x14001d87b
    int64_t v85 = v83; // 0x14001d889
    int64_t v86 = v84; // 0x14001d889
    if (v83 >= 0x1000) {
        int64_t v87 = v7 + 40; // 0x14001d88b
        v2 = v87;
        int64_t v88 = v84 - 8;
        int64_t v89 = *(int64_t *)v88; // 0x14001d88f
        v85 = v87;
        v86 = v89;
        if (v88 - v89 >= 32) {
            // 0x14001d8a0
            _invalid_parameter_noinfo_noreturn();
            __asm_int3();
            v85 = v2;
            v86 = v89;
        }
    }
    // 0x14001d8a7
    function_14001ea5c(v86, v85, v21);
    // 0x14001d8ac
    __security_check_cookie(g66);
    return &g103;
  lab_0x14001d38b:;
    int64_t v90 = &v54; // 0x14001d270
    int32_t v91 = *(int32_t *)(v6 + 4); // 0x14001d38f
    *(int64_t *)(v90 + 80 + (int64_t)v91) = (int64_t)&g19;
    int32_t v92 = *(int32_t *)(v6 + 4); // 0x14001d3a3
    *(int32_t *)(v90 + 76 + (int64_t)v92) = v92 - 136;
    int64_t v93; // bp-304, 0x14001d260
    function_1400192f0(&v93);
    _3f__3f_1_3f__24_basic_ostream_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_UEAA_40_XZ();
    _3f__3f_1_3f__24_basic_ios_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_UEAA_40_XZ();
    int64_t v94 = &v9; // 0x14001d405
    int64_t v95 = 3; // 0x14001d41e
    if (&v9 < (char *)&g14 && &v9 >= " [=") {
        // 0x14001d429
        v95 = &v9 > " [=" ? v94 - (int64_t)" [=" : 0;
    }
    int64_t v96 = v95;
    memmove((int64_t *)(v94 | 3), (int64_t *)&v9, 1);
    int32_t v97 = v96; // 0x14001d456
    memcpy((int64_t *)&v9, (int64_t *)" [=", v97);
    memcpy((int64_t *)(v96 + v94), (int64_t *)(v96 + (int64_t)&g14), 3 - v97);
    __asm_movups(v66, __asm_movups_1(*(int128_t *)&v9));
    int64_t v98 = v94 + 16; // 0x14001d4a0
    __asm_movups(0, __asm_movups_1(*(int128_t *)v98));
    *(int64_t *)v98 = 0;
    *(int64_t *)(v94 + 24) = 15;
    v9 = 0;
    v2 = 1;
    int64_t v99 = function_14001b1b0((int64_t *)&v66, 1); // 0x14001d514
    __asm_movups(v55, __asm_movups_1(*(int128_t *)v99));
    int64_t v100 = v99 + 16; // 0x14001d520
    __asm_movups(v55, __asm_movups_1(*(int128_t *)v100));
    *(int64_t *)v100 = 0;
    *(int64_t *)(v99 + 24) = 15;
    *(char *)v99 = 0;
    v65 = 0;
    v75 = 15;
    v10 = 0xfdfe;
    goto lab_0x14001d540;
  lab_0x14001d380:
    // 0x14001d380
    function_140019e40(&v9, (char *)v5, v11);
    goto lab_0x14001d38b;
}

// Address range: 0x14001d8e0 - 0x14001df2f
int64_t function_14001d8e0(int64_t a1, int64_t * a2, int64_t a3) {
    int64_t result = (int64_t)a2;
    int64_t v1; // 0x14001d8e0
    int64_t v2; // 0x14001d8e0
    int64_t v3; // 0x14001d8e0
    int64_t v4; // 0x14001d8e0
    int64_t v5; // 0x14001d8e0
    char v6; // bp-216, 0x14001d8e0
    int64_t v7; // bp-288, 0x14001d8e0
    int64_t v8; // 0x14001d8e0
    int64_t v9; // 0x14001d94d
    int64_t v10; // 0x14001d95c
    int64_t * v11; // 0x14001d966
    int64_t v12; // 0x14001d97f
    int64_t v13; // 0x14001d983
    if (*(char *)(a1 + 41) == 0) {
        // 0x14001d945
        int64_t v14; // bp-88, 0x14001d8e0
        v9 = function_140019960((int64_t)&v14, a1 + 88);
        v10 = &v7;
        function_140019960(v10, v9);
        v11 = (int64_t *)(v9 + 24);
        uint64_t v15 = *v11; // 0x14001d966
        v4 = v15;
        if (v15 < 16) {
            goto lab_0x14001d9a0;
        } else {
            int64_t v16 = *(int64_t *)v9; // 0x14001d970
            int64_t v17 = v15 + 1; // 0x14001d973
            v4 = v17;
            v12 = v17;
            v13 = a3;
            if (v17 < 0x1000) {
                goto lab_0x14001d99b;
            } else {
                // 0x14001d97f
                v12 = v15 + 40;
                v4 = v12;
                v13 = *(int64_t *)(v16 - 8);
                int64_t v18 = v16 - v13; // 0x14001d987
                v3 = v18;
                v2 = v9;
                v1 = v13;
                if (v18 < 40) {
                    goto lab_0x14001d99b;
                } else {
                    goto lab_0x14001de40;
                }
            }
        }
    } else {
        // 0x14001d914
        v6 = 0;
        function_140019e40(&v6, (char *)&g10, 0);
        v5 = 15;
        v8 = 0x7c11;
        goto lab_0x14001db18;
    }
  lab_0x14001d9a0:
    // 0x14001d9a0
    *(int64_t *)(v9 + 16) = 0;
    *v11 = 15;
    *(char *)v9 = 0;
    int64_t v19; // 0x14001d8e0
    int64_t v20; // 0x14001d8e0
    // 0x14001da4f
    v19 = function_14001ccc0(v10, 3);
    // 0x14001da65
    int128_t v21; // bp-352, 0x14001d8e0
    __asm_movups(v21, __asm_movups_1(*(int128_t *)v19));
    int64_t v22 = v19 + 16; // 0x14001da77
    __asm_movups(0, __asm_movups_1(*(int128_t *)v22));
    *(int64_t *)v22 = 0;
    *(int64_t *)(v19 + 24) = 15;
    *(char *)v19 = 0;
    v4 = 0;
    int64_t v23 = function_14001b1b0((int64_t *)&v21, 1); // 0x14001daec
    int128_t v24; // 0x14001d8e0
    __asm_movups(v24, __asm_movups_1(*(int128_t *)v23));
    int64_t v25 = v23 + 16; // 0x14001daf8
    __asm_movups(0, __asm_movups_1(*(int128_t *)v25));
    *(int64_t *)v25 = 0;
    *(int64_t *)(v23 + 24) = 15;
    *(char *)v23 = 0;
    int64_t v26 = 0; // 0x14001db13
    v8 = 0x7ffe;
    goto lab_0x14001db18;
  lab_0x14001db18:;
    char v27 = 0; // bp-248, 0x14001db28
    v4 = (int64_t)"string";
    function_140019e40(&v27, "string", 6);
    int64_t v28 = *(int64_t *)(a3 + 16); // 0x14001db4a
    if ((v28 || 1) == 0x7fffffffffffffff) {
        // 0x14001debd
        function_1400011e0();
        __asm_int3();
        __asm_int3();
        __asm_int3();
        __asm_int3();
        __asm_int3();
        __asm_int3();
        __asm_int3();
        __asm_int3();
        __asm_int3();
        __asm_int3();
        __asm_int3();
        __asm_int3();
        __asm_int3();
        int64_t * v29 = (int64_t *)v28; // 0x14001ded6
        int32_t v30 = *(int32_t *)(*v29 + 4); // 0x14001dee4
        *(int64_t *)(v28 + (int64_t)v30) = (int64_t)&g36;
        int32_t v31 = *(int32_t *)(*v29 + 4); // 0x14001defe
        *(int32_t *)(v28 - 4 + (int64_t)v31) = v31 - 144;
        function_1400192f0((int64_t *)(v28 + 16));
        _3f__3f_1_3f__24_basic_istream_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_UEAA_40_XZ();
        _3f__3f_1_3f__24_basic_ios_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_UEAA_40_XZ();
        return &g103;
    }
    // 0x14001db65
    int64_t v32; // bp-120, 0x14001d8e0
    function_14001bda0((char *)&v32, v4);
    int64_t v33; // bp-152, 0x14001d8e0
    int64_t v34 = &v33; // 0x14001dba5
    function_14001cff0(v34);
    int64_t v35; // bp-320, 0x14001d8e0
    int64_t v36 = &v35; // 0x14001dbbd
    function_14001cff0(v36);
    int64_t v37; // 0x14001d8e0
    // 0x14001dc09
    v37 = function_14001b1b0(&v35, 1);
    int64_t v38 = result + 16; // 0x14001dc28
    *(int64_t *)v38 = 0;
    *(int64_t *)(result + 24) = 0;
    __asm_movups(*(int128_t *)&v4, __asm_movups_1(*(int128_t *)v37));
    int64_t v39 = v37 + 16; // 0x14001dc38
    __asm_movups(*(int128_t *)v38, __asm_movups_1(*(int128_t *)v39));
    *(int64_t *)v39 = 0;
    *(int64_t *)(v37 + 24) = 15;
    *(char *)v37 = 0;
    if (v20 >= 16) {
        int64_t v40 = v20 + 1; // 0x14001dc60
        v4 = v40;
        int64_t v41 = v35; // 0x14001dc63
        int64_t v42 = v40; // 0x14001dc72
        int64_t v43 = v41; // 0x14001dc72
        if (v40 >= 0x1000) {
            int64_t v44 = v20 + 40; // 0x14001dc74
            v4 = v44;
            int64_t v45 = v41 - 8;
            int64_t v46 = *(int64_t *)v45; // 0x14001dc78
            v42 = v44;
            v43 = v46;
            if (v45 - v46 >= 32) {
                // 0x14001dc89
                _invalid_parameter_noinfo_noreturn();
                __asm_int3();
                v42 = v4;
                v43 = v46;
            }
        }
        // 0x14001dc90
        function_14001ea5c(v43, v42, v34);
    }
    // 0x14001dc95
    v35 = 0;
    if (v20 >= 16) {
        int64_t v47 = v20 + 1; // 0x14001dcb1
        v4 = v47;
        int64_t v48 = v47; // 0x14001dcc2
        int64_t v49 = v33; // 0x14001dcc2
        if (v47 >= 0x1000) {
            int64_t v50 = v20 + 40; // 0x14001dcc4
            v4 = v50;
            int64_t v51 = v33 - 8;
            int64_t v52 = *(int64_t *)v51; // 0x14001dcc8
            v48 = v50;
            v49 = v52;
            if (v51 - v52 >= 32) {
                // 0x14001dcd9
                _invalid_parameter_noinfo_noreturn();
                __asm_int3();
                v48 = v4;
                v49 = v52;
            }
        }
        // 0x14001dce0
        function_14001ea5c(v49, v48, v34);
    }
    if (v20 >= 16) {
        int64_t v53 = v20 + 1; // 0x14001dcf0
        v4 = v53;
        int64_t v54 = v53; // 0x14001dd01
        int64_t v55 = v32; // 0x14001dd01
        if (v53 >= 0x1000) {
            int64_t v56 = v20 + 40; // 0x14001dd03
            v4 = v56;
            int64_t v57 = v32 - 8;
            int64_t v58 = *(int64_t *)v57; // 0x14001dd07
            v54 = v56;
            v55 = v58;
            if (v57 - v58 >= 32) {
                // 0x14001dd18
                _invalid_parameter_noinfo_noreturn();
                __asm_int3();
                v54 = v4;
                v55 = v58;
            }
        }
        // 0x14001dd1f
        function_14001ea5c(v55, v54, v34);
    }
    // 0x14001dd25
    v4 = 15;
    int64_t v59 = v8; // 0x14001dd67
    if ((v8 & 8) != 0) {
        int64_t v60 = v8 & 0x7ff7; // 0x14001dd69
        v59 = v60;
        if (v20 >= 16) {
            int64_t v61 = v20 + 1; // 0x14001dd76
            v4 = v61;
            int64_t v62 = v24; // 0x14001dd79
            int64_t v63 = v61; // 0x14001dd87
            int64_t v64 = v62; // 0x14001dd87
            if (v61 >= 0x1000) {
                // 0x14001dd89
                v63 = v20 + 40;
                v4 = v63;
                int64_t v65 = v62 - 8;
                v64 = *(int64_t *)v65;
                if (v65 - v64 >= 32) {
                    // 0x14001dd9e
                    _invalid_parameter_noinfo_noreturn();
                    __asm_int3();
                }
            }
            // 0x14001dda5
            function_14001ea5c(v64, v63, v34);
            v59 = v60;
        }
    }
    int64_t v66 = v59; // 0x14001ddae
    if ((v59 & 4) != 0) {
        // 0x14001ddb0
        v4 = v26;
        if (v26 >= 16) {
            int64_t v67 = v26 + 1; // 0x14001ddbe
            v4 = v67;
            int64_t v68 = v21; // 0x14001ddc1
            int64_t v69 = v67; // 0x14001ddd0
            int64_t v70 = v68; // 0x14001ddd0
            if (v67 >= 0x1000) {
                int64_t v71 = v26 + 40; // 0x14001ddd2
                v4 = v71;
                int64_t v72 = v68 - 8;
                int64_t v73 = *(int64_t *)v72; // 0x14001ddd6
                v69 = v71;
                v70 = v73;
                if (v72 - v73 >= 32) {
                    // 0x14001dde7
                    _invalid_parameter_noinfo_noreturn();
                    __asm_int3();
                    v69 = v4;
                    v70 = v73;
                }
            }
            // 0x14001ddee
            function_14001ea5c(v70, v69, v34);
        }
        // 0x14001ddf3
        v21 = 0;
        v66 = v59 & 0xfffffffb;
    }
    int64_t v74 = v5; // 0x14001de09
    int64_t v75 = v66; // 0x14001de09
    int64_t v76 = v34; // 0x14001de09
    int64_t v77; // 0x14001d8e0
    int64_t v78; // 0x14001d8e0
    int64_t v79; // 0x14001d8e0
    int64_t v80; // 0x14001d8e0
    int64_t v81; // 0x14001d8e0
    int64_t v82; // 0x14001d8e0
    int64_t v83; // 0x14001d8e0
    int64_t v84; // 0x14001d8e0
    int64_t v85; // 0x14001d8e0
    if ((v66 & 2) == 0) {
        goto lab_0x14001de5c;
    } else {
        int64_t v86 = v66 & 0xfffffffd; // 0x14001de0b
        v85 = v5;
        v81 = v86;
        v79 = v34;
        if (v20 < 16) {
            goto lab_0x14001de4c;
        } else {
            int64_t v87 = v20 + 1; // 0x14001de18
            v4 = v87;
            int64_t v88 = v7; // 0x14001de1b
            v77 = v87;
            v84 = v5;
            v82 = v88;
            v80 = v86;
            v78 = v34;
            if (v87 < 0x1000) {
                goto lab_0x14001de47;
            } else {
                int64_t v89 = v20 + 40; // 0x14001de2b
                v4 = v89;
                int64_t v90 = v88 - 8;
                int64_t v91 = *(int64_t *)v90; // 0x14001de2f
                v83 = v5;
                v3 = v91;
                v2 = v86;
                v1 = v34;
                v77 = v89;
                v84 = v5;
                v82 = v91;
                v80 = v86;
                v78 = v34;
                if (v90 - v91 < 32) {
                    goto lab_0x14001de47;
                } else {
                    goto lab_0x14001de40;
                }
            }
        }
    }
  lab_0x14001d99b:
    // 0x14001d99b
    function_14001ea5c(v13, v12, v13);
    goto lab_0x14001d9a0;
  lab_0x14001de5c:
    // 0x14001de5c
    if ((v75 & 1) == 0) {
        // 0x14001de9f
        return result;
    }
    // 0x14001de61
    v4 = v74;
    if (v74 < 16) {
        // 0x14001de9f
        return result;
    }
    int64_t v92 = v74 + 1; // 0x14001de6b
    v4 = v92;
    int64_t v93 = v6; // 0x14001de6e
    int64_t v94 = v92; // 0x14001de7c
    int64_t v95 = v93; // 0x14001de7c
    if (v92 >= 0x1000) {
        int64_t v96 = v74 + 40; // 0x14001de7e
        v4 = v96;
        int64_t v97 = v93 - 8;
        int64_t v98 = *(int64_t *)v97; // 0x14001de82
        v94 = v96;
        v95 = v98;
        if (v97 - v98 >= 32) {
            // 0x14001de93
            _invalid_parameter_noinfo_noreturn();
            __asm_int3();
            v94 = v4;
            v95 = v98;
        }
    }
    // 0x14001de9a
    function_14001ea5c(v95, v94, v76);
    // 0x14001de9f
    return result;
  lab_0x14001de40:
    // 0x14001de40
    _invalid_parameter_noinfo_noreturn();
    __asm_int3();
    v77 = v4;
    v84 = v83;
    v82 = v3;
    v80 = v2;
    v78 = v1;
    goto lab_0x14001de47;
  lab_0x14001de4c:
    // 0x14001de4c
    v7 = 0;
    v74 = v85;
    v75 = v81;
    v76 = v79;
    goto lab_0x14001de5c;
  lab_0x14001de47:
    // 0x14001de47
    function_14001ea5c(v82, v77, v78);
    v85 = v84;
    v81 = v80;
    v79 = v78;
    goto lab_0x14001de4c;
}

// Address range: 0x14001df30 - 0x14001dfaf
int64_t function_14001df30(int128_t * a1, int128_t a2, int64_t a3, int64_t a4) {
    int64_t result = a2;
    int64_t v1 = (int64_t)a1;
    int64_t * v2 = (int64_t *)(v1 + 8); // 0x14001df44
    int64_t * v3 = (int64_t *)(v1 + 16); // 0x14001df4b
    if (*v3 * *v2 == result) {
        // 0x14001df92
        *v2 = a3;
        *v3 = a4;
        // 0x14001df9a
        return result;
    }
    // 0x14001df5e
    free((int64_t *)a1);
    int64_t result2; // 0x14001df30
    if (result == 0) {
        // 0x14001df81
        *(int64_t *)a1 = 0;
        *v2 = a3;
        *v3 = a4;
        result2 = &g103;
    } else {
        int64_t v4 = function_14001e050(result); // 0x14001df6f
        *(int64_t *)a1 = v4;
        *v2 = a3;
        *v3 = a4;
        result2 = v4;
    }
    // 0x14001df9a
    return result2;
}

// Address range: 0x14001dfb0 - 0x14001e042
int64_t function_14001dfb0(int64_t a1, int64_t a2) {
    int64_t result = a1 - 144;
    int64_t * v1 = (int64_t *)result; // 0x14001dfbf
    int32_t v2 = *(int32_t *)(*v1 + 4); // 0x14001dfcb
    *(int64_t *)(result + (int64_t)v2) = (int64_t)&g36;
    int32_t v3 = *(int32_t *)(*v1 + 4); // 0x14001dfe5
    int64_t v4 = v3; // 0x14001dfe5
    *(int32_t *)(a1 - 148 + v4) = v3 - 144;
    function_1400192f0((int64_t *)(a1 - 128));
    _3f__3f_1_3f__24_basic_istream_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_UEAA_40_XZ();
    _3f__3f_1_3f__24_basic_ios_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_UEAA_40_XZ();
    if ((a2 & 1) != 0) {
        // 0x14001e01a
        function_14001ea5c(result, 240, v4);
    }
    // 0x14001e02b
    return result;
}

// Address range: 0x14001e050 - 0x14001e09e
int64_t function_14001e050(uint64_t a1) {
    // 0x14001e050
    if (a1 == 0) {
        // 0x14001e059
        return 0;
    }
    if (a1 >= 0x4000000000000000) {
        // 0x14001e099
        function_1400132c0();
        // UNREACHABLE
    }
    int64_t size = 4 * a1; // 0x14001e074
    int64_t * mem = malloc((int32_t)size); // 0x14001e07f
    if (size != 0 != (mem == NULL)) {
        // 0x14001e059
        return (int64_t)mem;
    }
    // 0x14001e099
    function_1400132c0();
    // UNREACHABLE
}

// Address range: 0x14001e0a0 - 0x14001e0b8
int64_t function_14001e0a0(char * a1, int64_t * a2, int64_t * a3, int64_t * a4, int128_t * a5) {
    int64_t result = (int64_t)a1;
    *(int64_t *)(result + 24) = (int64_t)a5;
    *(int64_t *)a1 = (int64_t)a2;
    *(int64_t *)(result + 8) = (int64_t)a3;
    *(int64_t *)(result + 16) = (int64_t)a4;
    return result;
}

// Address range: 0x14001e0c0 - 0x14001e150
int64_t function_14001e0c0(char * a1, int64_t a2, uint64_t a3) {
    if (a3 <= (uint64_t)a2) {
        // 0x14001e14f
        int64_t result; // 0x14001e0c0
        return result;
    }
    int64_t v1 = *(int64_t *)((int64_t)a1 + 8); // 0x14001e0cc
    int64_t v2 = a3 - a2; // 0x14001e0d6
    int32_t * v3; // 0x14001e0c0
    int64_t result3; // 0x14001e0c0
    int64_t v4; // 0x14001e0c0
    if (v2 < 4) {
        // 0x14001e0c9
        v3 = (int32_t *)v1;
        result3 = v2;
        v4 = a2;
    } else {
        int64_t result2 = a3 - 3; // 0x14001e0df
        int32_t * v5 = (int32_t *)v1;
        int64_t v6 = 4 * a2 + v1;
        int32_t * v7 = (int32_t *)v6; // 0x14001e0e3
        int128_t v8 = __asm_divss_7(__asm_movss(*v7), *v5); // 0x14001e0e9
        int32_t * v9 = (int32_t *)(v6 + 4); // 0x14001e0ed
        int128_t v10 = __asm_movss(*v9); // 0x14001e0ed
        *v7 = (int32_t)__asm_movss_4(v8);
        int128_t v11 = __asm_divss_7(v10, *v5); // 0x14001e0fa
        int32_t * v12 = (int32_t *)(v6 + 8); // 0x14001e0fe
        int128_t v13 = __asm_movss(*v12); // 0x14001e0fe
        *v9 = (int32_t)__asm_movss_4(v11);
        int128_t v14 = __asm_divss_7(v13, *v5); // 0x14001e10c
        int32_t * v15 = (int32_t *)(v6 + 12); // 0x14001e110
        int128_t v16 = __asm_movss(*v15); // 0x14001e110
        *v12 = (int32_t)__asm_movss_4(v14);
        *v15 = (int32_t)__asm_movss_4(__asm_divss_7(v16, *v5));
        int64_t v17 = a2 + 4; // 0x14001e129
        int64_t v18 = v17; // 0x14001e130
        while (v17 < result2) {
            // 0x14001e0e3
            v6 = 4 * v18 + v1;
            v7 = (int32_t *)v6;
            v8 = __asm_divss_7(__asm_movss(*v7), *v5);
            v9 = (int32_t *)(v6 + 4);
            v10 = __asm_movss(*v9);
            *v7 = (int32_t)__asm_movss_4(v8);
            v11 = __asm_divss_7(v10, *v5);
            v12 = (int32_t *)(v6 + 8);
            v13 = __asm_movss(*v12);
            *v9 = (int32_t)__asm_movss_4(v11);
            v14 = __asm_divss_7(v13, *v5);
            v15 = (int32_t *)(v6 + 12);
            v16 = __asm_movss(*v15);
            *v12 = (int32_t)__asm_movss_4(v14);
            *v15 = (int32_t)__asm_movss_4(__asm_divss_7(v16, *v5));
            v17 = v18 + 4;
            v18 = v17;
        }
        // 0x14001e132
        v3 = v5;
        result3 = result2;
        v4 = v17;
        if (v17 >= a3) {
            // 0x14001e14f
            return result2;
        }
    }
    for (int64_t i = v4; i < a3; i++) {
        int32_t * v19 = (int32_t *)(4 * i + v1); // 0x14001e137
        *v19 = (int32_t)__asm_movss_4(__asm_divss_7(__asm_movss(*v19), *v3));
    }
    // 0x14001e14f
    return result3;
}

// Address range: 0x14001e150 - 0x14001e2d6
int64_t function_14001e150(char * a1, int64_t a2, uint64_t a3) {
    if (a3 <= (uint64_t)a2) {
        // 0x14001e2d4
        int64_t result; // 0x14001e150
        return result;
    }
    int64_t v1 = (int64_t)a1;
    int64_t v2 = a3 - a2;
    int64_t * v3 = (int64_t *)(v1 + 8);
    int64_t v4 = v2; // 0x14001e175
    int64_t v5 = v1; // 0x14001e175
    int64_t v6 = a2; // 0x14001e175
    int64_t v7; // 0x14001e17e
    int64_t v8; // 0x14001e189
    int64_t v9; // 0x14001e194
    if (v2 < 16) {
        goto lab_0x14001e233;
    } else {
        // 0x14001e17b
        v7 = *v3;
        v8 = *(int64_t *)v7;
        int64_t v10 = 4 * a3 - 4; // 0x14001e190
        v9 = 4 * a2;
        int64_t v11 = v8 + v10; // 0x14001e19c
        if (v7 + v9 > v11) {
            goto lab_0x14001e1ae;
        } else {
            // 0x14001e1a5
            v4 = v2;
            v5 = v11;
            v6 = a2;
            if (v7 + v10 >= v8 + v9) {
                goto lab_0x14001e233;
            } else {
                goto lab_0x14001e1ae;
            }
        }
    }
  lab_0x14001e233:;
    int64_t v12 = *v3; // 0x14001e243
    int64_t v13 = *(int64_t *)v12; // 0x14001e247
    int64_t result3 = v12; // 0x14001e24a
    int64_t v14 = v6; // 0x14001e24a
    if (v4 >= 4) {
        int64_t result2 = a3 - 3; // 0x14001e24c
        int64_t v15 = 4 * v6; // 0x14001e250
        int64_t v16 = v15 + v13;
        int128_t v17 = __asm_movss(*(int32_t *)v16); // 0x14001e250
        int64_t v18 = v15 + v5;
        int32_t * v19 = (int32_t *)v18; // 0x14001e256
        *v19 = (int32_t)__asm_movss_4(__asm_addss_10(v17, *v19));
        int128_t v20 = __asm_movss(*(int32_t *)(v16 + 4)); // 0x14001e262
        int32_t * v21 = (int32_t *)(v18 + 4); // 0x14001e269
        *v21 = (int32_t)__asm_movss_4(__asm_addss_10(v20, *v21));
        int128_t v22 = __asm_movss(*(int32_t *)(v16 + 8)); // 0x14001e277
        int32_t * v23 = (int32_t *)(v18 + 8); // 0x14001e27e
        *v23 = (int32_t)__asm_movss_4(__asm_addss_10(v22, *v23));
        int128_t v24 = __asm_movss(*(int32_t *)(v16 + 12)); // 0x14001e28c
        int32_t * v25 = (int32_t *)(v18 + 12); // 0x14001e293
        *v25 = (int32_t)__asm_movss_4(__asm_addss_10(v24, *v25));
        int64_t v26 = v6 + 4; // 0x14001e2a1
        int64_t v27 = v26; // 0x14001e2a8
        while (v26 < result2) {
            // 0x14001e250
            v15 = 4 * v27;
            v16 = v15 + v13;
            v17 = __asm_movss(*(int32_t *)v16);
            v18 = v15 + v5;
            v19 = (int32_t *)v18;
            *v19 = (int32_t)__asm_movss_4(__asm_addss_10(v17, *v19));
            v20 = __asm_movss(*(int32_t *)(v16 + 4));
            v21 = (int32_t *)(v18 + 4);
            *v21 = (int32_t)__asm_movss_4(__asm_addss_10(v20, *v21));
            v22 = __asm_movss(*(int32_t *)(v16 + 8));
            v23 = (int32_t *)(v18 + 8);
            *v23 = (int32_t)__asm_movss_4(__asm_addss_10(v22, *v23));
            v24 = __asm_movss(*(int32_t *)(v16 + 12));
            v25 = (int32_t *)(v18 + 12);
            *v25 = (int32_t)__asm_movss_4(__asm_addss_10(v24, *v25));
            v26 = v27 + 4;
            v27 = v26;
        }
        // 0x14001e2aa
        result3 = result2;
        v14 = v26;
        if (v26 >= a3) {
            // 0x14001e2d4
            return result2;
        }
    }
    int64_t v28 = 4 * v14; // 0x14001e2b0
    int128_t v29 = __asm_movss(*(int32_t *)(v28 + v13)); // 0x14001e2b0
    int32_t * v30 = (int32_t *)(v28 + v5); // 0x14001e2b6
    *v30 = (int32_t)__asm_movss_4(__asm_addss_10(v29, *v30));
    int64_t v31 = v14 + 1; // 0x14001e2c2
    int64_t v32 = v31; // 0x14001e2c8
    while (v31 < a3) {
        // 0x14001e2b0
        v28 = 4 * v32;
        v29 = __asm_movss(*(int32_t *)(v28 + v13));
        v30 = (int32_t *)(v28 + v5);
        *v30 = (int32_t)__asm_movss_4(__asm_addss_10(v29, *v30));
        v31 = v32 + 1;
        v32 = v31;
    }
    // 0x14001e2d4
    return result3;
  lab_0x14001e1ae:;
    int64_t v33 = v2 >> 63; // 0x14001e1b4
    int64_t v34 = (v33 & 15) - (v33 + v2 & 15) + a3; // 0x14001e1c2
    int64_t v35 = v9 + 32; // 0x14001e1cd
    int64_t v36 = v35 - 32; // 0x14001e1d0
    int128_t * v37 = (int128_t *)(v36 + v7); // 0x14001e1d0
    int128_t v38 = __asm_movups_1(*v37); // 0x14001e1d0
    int64_t v39 = a2 + 16; // 0x14001e1d6
    __asm_movups(*v37, __asm_addps(__asm_movups_1(*(int128_t *)(v36 + v8)), v38));
    int64_t v40 = v35 - 16; // 0x14001e1e8
    int128_t * v41 = (int128_t *)(v40 + v7); // 0x14001e1e8
    __asm_movups(*v41, __asm_addps(__asm_movups_1(*(int128_t *)(v40 + v8)), __asm_movups_1(*v41)));
    int128_t * v42 = (int128_t *)(v35 + v7); // 0x14001e1fc
    int128_t v43 = __asm_addps(__asm_movups_1(*(int128_t *)(v35 + v8)), __asm_movups_1(*v42)); // 0x14001e205
    __asm_movups(*v42, v43);
    int64_t v44 = v35 + 16; // 0x14001e20d
    int128_t * v45 = (int128_t *)(v44 + v7); // 0x14001e20d
    __asm_movups(*v45, __asm_addps(__asm_movups_1(*(int128_t *)(v44 + v8)), __asm_movups_1(*v45)));
    int64_t result4 = v35 + 64; // 0x14001e221
    v35 = result4;
    int64_t v46 = v39; // 0x14001e228
    while (v39 < v34) {
        // 0x14001e1d0
        v36 = v35 - 32;
        v37 = (int128_t *)(v36 + v7);
        v38 = __asm_movups_1(*v37);
        v39 = v46 + 16;
        __asm_movups(*v37, __asm_addps(__asm_movups_1(*(int128_t *)(v36 + v8)), v38));
        v40 = v35 - 16;
        v41 = (int128_t *)(v40 + v7);
        __asm_movups(*v41, __asm_addps(__asm_movups_1(*(int128_t *)(v40 + v8)), __asm_movups_1(*v41)));
        v42 = (int128_t *)(v35 + v7);
        v43 = __asm_addps(__asm_movups_1(*(int128_t *)(v35 + v8)), __asm_movups_1(*v42));
        __asm_movups(*v42, v43);
        v44 = v35 + 16;
        v45 = (int128_t *)(v44 + v7);
        __asm_movups(*v45, __asm_addps(__asm_movups_1(*(int128_t *)(v44 + v8)), __asm_movups_1(*v45)));
        result4 = v35 + 64;
        v35 = result4;
        v46 = v39;
    }
    // 0x14001e22a
    if (v39 >= a3) {
        // 0x14001e2d4
        return result4;
    }
    // 0x14001e22a
    v4 = a3 - v39;
    v5 = v34;
    v6 = v39;
    goto lab_0x14001e233;
}

// Address range: 0x14001e2e0 - 0x14001e359
int64_t function_14001e2e0(char * a1, uint64_t a2, uint64_t a3) {
    if (a3 <= a2) {
        // 0x14001e358
        int64_t result; // 0x14001e2e0
        return result;
    }
    int64_t v1 = (int64_t)a1;
    int64_t v2 = a3 - a2;
    int64_t v3 = v1 + 8;
    int64_t v4 = *(int64_t *)v3; // 0x14001e2ee
    int32_t * v5; // 0x14001e2e0
    int64_t v6; // 0x14001e2e0
    int64_t v7; // 0x14001e2e0
    if (v2 < 4) {
        // 0x14001e2e8
        v5 = (int32_t *)v4;
        v6 = v2;
        v7 = a2;
    } else {
        int64_t v8 = (v2 - 4) / 4 + 1; // 0x14001e314
        int32_t * v9 = (int32_t *)v4;
        int64_t v10 = v3 + 4 * a2; // 0x14001e31b
        int64_t v11 = v8; // 0x14001e31b
        *(int32_t *)(v10 - 8) = *v9;
        *(int32_t *)(v10 - 4) = *v9;
        *(int32_t *)v10 = *v9;
        uint32_t result2 = *v9; // 0x14001e333
        *(int32_t *)(v10 + 4) = result2;
        v11--;
        v10 += 16;
        while (v11 != 0) {
            // 0x14001e320
            *(int32_t *)(v10 - 8) = *v9;
            *(int32_t *)(v10 - 4) = *v9;
            *(int32_t *)v10 = *v9;
            result2 = *v9;
            *(int32_t *)(v10 + 4) = result2;
            v11--;
            v10 += 16;
        }
        int64_t v12 = 4 * v8 + a2; // 0x14001e317
        if (v12 >= a3) {
            // 0x14001e358
            return result2;
        }
        // 0x14001e33e
        v5 = v9;
        v6 = a3 - v12;
        v7 = v12;
    }
    int64_t v13 = 4 * v7 + v1; // 0x14001e347
    int64_t v14 = v6; // 0x14001e347
    uint32_t result3 = *v5; // 0x14001e34a
    *(int32_t *)v13 = result3;
    v14--;
    v13 += 4;
    while (v14 != 0) {
        // 0x14001e34a
        result3 = *v5;
        *(int32_t *)v13 = result3;
        v14--;
        v13 += 4;
    }
    // 0x14001e358
    return result3;
}

// Address range: 0x14001e360 - 0x14001e37d
int64_t function_14001e360(int64_t * a1, int64_t * a2) {
    int64_t v1 = (int64_t)a2;
    int64_t result = (int64_t)a1;
    int64_t v2 = *(int64_t *)(v1 + 8); // 0x14001e360
    *(int64_t *)(result + 8) = *(int64_t *)v2;
    *(int64_t *)(result + 16) = *(int64_t *)(v2 + 8);
    *(int32_t *)(result + 24) = *(int32_t *)(v1 + 40);
    return result;
}

// Address range: 0x14001e380 - 0x14001e4f5
int64_t function_14001e380(char * a1, uint64_t a2, uint64_t a3) {
    if (a3 <= a2) {
        // 0x14001e4f0
        int64_t result; // 0x14001e380
        return result;
    }
    int64_t v1 = (int64_t)a1;
    int64_t v2 = v1 + 8;
    int64_t v3 = *(int64_t *)v2; // 0x14001e393
    int64_t v4 = a3 - a2; // 0x14001e397
    int32_t * v5; // 0x14001e380
    int32_t * v6; // 0x14001e380
    int64_t * v7; // 0x14001e380
    int64_t * v8; // 0x14001e380
    int64_t v9; // 0x14001e380
    if (v4 < 4) {
        // 0x14001e390
        v6 = (int32_t *)(v3 + 32);
        v5 = (int32_t *)(v3 + 64);
        v8 = (int64_t *)(v3 + 16);
        v7 = (int64_t *)(v3 + 48);
        v9 = a2;
    } else {
        int64_t v10 = (v4 - 4) / 4 + 1; // 0x14001e3e0
        int64_t * v11 = (int64_t *)(v3 + 48);
        int32_t * v12 = (int32_t *)(v3 + 64);
        int64_t * v13 = (int64_t *)(v3 + 16);
        int32_t * v14 = (int32_t *)(v3 + 32);
        int64_t v15 = v2 + 4 * a2; // 0x14001e3e7
        int64_t v16 = v10; // 0x14001e3e7
        int64_t v17 = v15 + -8 - v1; // 0x14001e3f4
        int128_t v18 = __asm_mulss_11(__asm_movss(*(int32_t *)(*v11 + v17)), *v12); // 0x14001e3fd
        int128_t v19 = __asm_mulss_11(__asm_movss(*(int32_t *)(*v13 + v17)), *v14); // 0x14001e40c
        *(int32_t *)(v15 - 8) = (int32_t)__asm_movss_4(__asm_addss(v18, v19));
        int64_t v20 = v17 + 4;
        int128_t v21 = __asm_mulss_11(__asm_movss(*(int32_t *)(*v11 + v20)), *v12); // 0x14001e429
        int128_t v22 = __asm_mulss_11(__asm_movss(*(int32_t *)(*v13 + v20)), *v14); // 0x14001e438
        int64_t v23 = v15 - v1; // 0x14001e43e
        *(int32_t *)(v15 - 4) = (int32_t)__asm_movss_4(__asm_addss(v21, v22));
        int128_t v24 = __asm_mulss_11(__asm_movss(*(int32_t *)(*v13 + v23)), *v14); // 0x14001e453
        int128_t v25 = __asm_movss(*(int32_t *)(*v11 + v23)); // 0x14001e45d
        int64_t v26 = v15 + 4 - v1; // 0x14001e462
        int128_t v27 = __asm_mulss_11(v25, *v12); // 0x14001e466
        *(int32_t *)v15 = (int32_t)__asm_movss_4(__asm_addss(v24, v27));
        int128_t v28 = __asm_movss(*(int32_t *)(*v11 + v26)); // 0x14001e478
        int64_t result2 = *v13; // 0x14001e47d
        int128_t v29 = __asm_mulss_11(v28, *v12); // 0x14001e481
        int128_t v30 = __asm_mulss_11(__asm_movss(*(int32_t *)(result2 + v26)), *v14); // 0x14001e48c
        *(int32_t *)(v15 + 4) = (int32_t)__asm_movss_4(__asm_addss(v29, v30));
        v16--;
        v15 += 16;
        while (v16 != 0) {
            // 0x14001e3f0
            v17 = v15 + -8 - v1;
            v18 = __asm_mulss_11(__asm_movss(*(int32_t *)(*v11 + v17)), *v12);
            v19 = __asm_mulss_11(__asm_movss(*(int32_t *)(*v13 + v17)), *v14);
            *(int32_t *)(v15 - 8) = (int32_t)__asm_movss_4(__asm_addss(v18, v19));
            v20 = v17 + 4;
            v21 = __asm_mulss_11(__asm_movss(*(int32_t *)(*v11 + v20)), *v12);
            v22 = __asm_mulss_11(__asm_movss(*(int32_t *)(*v13 + v20)), *v14);
            v23 = v15 - v1;
            *(int32_t *)(v15 - 4) = (int32_t)__asm_movss_4(__asm_addss(v21, v22));
            v24 = __asm_mulss_11(__asm_movss(*(int32_t *)(*v13 + v23)), *v14);
            v25 = __asm_movss(*(int32_t *)(*v11 + v23));
            v26 = v15 + 4 - v1;
            v27 = __asm_mulss_11(v25, *v12);
            *(int32_t *)v15 = (int32_t)__asm_movss_4(__asm_addss(v24, v27));
            v28 = __asm_movss(*(int32_t *)(*v11 + v26));
            result2 = *v13;
            v29 = __asm_mulss_11(v28, *v12);
            v30 = __asm_mulss_11(__asm_movss(*(int32_t *)(result2 + v26)), *v14);
            *(int32_t *)(v15 + 4) = (int32_t)__asm_movss_4(__asm_addss(v29, v30));
            v16--;
            v15 += 16;
        }
        int64_t v31 = 4 * v10 + a2; // 0x14001e3e3
        v6 = v14;
        v5 = v12;
        v8 = v13;
        v7 = v11;
        v9 = v31;
        if (v31 >= a3) {
            // 0x14001e4f0
            return result2;
        }
    }
    int64_t v32 = v9; // 0x14001e4e8
    int64_t v33 = 4 * v32; // 0x14001e4c4
    int128_t v34 = __asm_movss(*(int32_t *)(*v7 + v33)); // 0x14001e4c4
    int64_t result3 = *v8; // 0x14001e4c9
    int128_t v35 = __asm_mulss_11(v34, *v5); // 0x14001e4cd
    int128_t v36 = __asm_movss(*(int32_t *)(result3 + v33)); // 0x14001e4d3
    int64_t v37 = __asm_movss_4(__asm_addss(v35, __asm_mulss_11(v36, *v6))); // 0x14001e4e2
    *(int32_t *)(v33 + v1) = (int32_t)v37;
    v32++;
    while (v32 < a3) {
        // 0x14001e4c0
        v33 = 4 * v32;
        v34 = __asm_movss(*(int32_t *)(*v7 + v33));
        result3 = *v8;
        v35 = __asm_mulss_11(v34, *v5);
        v36 = __asm_movss(*(int32_t *)(result3 + v33));
        v37 = __asm_movss_4(__asm_addss(v35, __asm_mulss_11(v36, *v6)));
        *(int32_t *)(v33 + v1) = (int32_t)v37;
        v32++;
    }
    // 0x14001e4f0
    return result3;
}

// Address range: 0x14001e500 - 0x14001e54a
int64_t function_14001e500(uint64_t a1) {
    // 0x14001e500
    if (a1 == 0) {
        // 0x14001e509
        return 0;
    }
    if (a1 <= 0xffffffffffffffff) {
        // 0x14001e545
        function_1400132c0();
        // UNREACHABLE
    }
    int64_t size = 2 * a1; // 0x14001e524
    int64_t * mem = malloc((int32_t)size); // 0x14001e52b
    if (size != 0 != (mem == NULL)) {
        // 0x14001e509
        return (int64_t)mem;
    }
    // 0x14001e545
    function_1400132c0();
    // UNREACHABLE
}

// Address range: 0x14001e54c - 0x14001e558
int64_t function_14001e54c(int64_t a1) {
    // 0x14001e54c
    return (int64_t)*(int32_t *)(a1 - 4);
}

// Address range: 0x14001e558 - 0x14001e564
int64_t function_14001e558(int64_t a1) {
    // 0x14001e558
    int64_t v1; // 0x14001e558
    return function_140019b10(a1 - (int64_t)*(int32_t *)(a1 - 4), v1);
}

// Address range: 0x14001e564 - 0x14001e570
int64_t function_14001e564(int64_t a1) {
    // 0x14001e564
    int64_t v1; // 0x14001e564
    return function_14001dfb0(a1 - (int64_t)*(int32_t *)(a1 - 4), v1);
}

// Address range: 0x14001e570 - 0x14001e576
void function_14001e570(void) {
    // 0x14001e570
    _3f__3f_1_3f__24_basic_streambuf_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_UEAA_40_XZ();
}

// Address range: 0x14001e576 - 0x14001e57c
void function_14001e576(void) {
    // 0x14001e576
    _3f__Lock_40__3f__24_basic_streambuf_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_UEAAXXZ();
}

// Address range: 0x14001e57c - 0x14001e582
void function_14001e57c(void) {
    // 0x14001e57c
    _3f__Unlock_40__3f__24_basic_streambuf_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_UEAAXXZ();
}

// Address range: 0x14001e582 - 0x14001e588
void function_14001e582(void) {
    // 0x14001e582
    _3f_showmanyc_40__3f__24_basic_streambuf_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_MEAA_JXZ();
}

// Address range: 0x14001e588 - 0x14001e58e
void function_14001e588(void) {
    // 0x14001e588
    _3f_uflow_40__3f__24_basic_streambuf_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_MEAAHXZ();
}

// Address range: 0x14001e58e - 0x14001e594
void function_14001e58e(char * a1, int64_t a2) {
    // 0x14001e58e
    _3f_xsgetn_40__3f__24_basic_streambuf_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_MEAA_JPEAD_J_40_Z(a1, a2);
}

// Address range: 0x14001e594 - 0x14001e59a
void function_14001e594(char * a1, int64_t a2) {
    // 0x14001e594
    _3f_xsputn_40__3f__24_basic_streambuf_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_MEAA_JPEBD_J_40_Z(a1, a2);
}

// Address range: 0x14001e59a - 0x14001e5a0
void function_14001e59a(char * a1, int64_t a2) {
    // 0x14001e59a
    _3f_setbuf_40__3f__24_basic_streambuf_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_MEAAPEAV12_40_PEAD_J_40_Z(a1, a2);
}

// Address range: 0x14001e5a0 - 0x14001e5a6
void function_14001e5a0(void) {
    // 0x14001e5a0
    _3f_sync_40__3f__24_basic_streambuf_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_MEAAHXZ();
}

// Address range: 0x14001e5a6 - 0x14001e5ac
void function_14001e5a6(int64_t * a1) {
    // 0x14001e5a6
    _3f_imbue_40__3f__24_basic_streambuf_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_MEAAXAEBVlocale_40_2_40__40_Z(a1);
}

// Address range: 0x14001e5e4 - 0x14001e5e9
int64_t function_14001e5e4(int64_t a1, int64_t a2, int64_t a3) {
    // 0x14001e5e4
    return function_14001ea5c(a1, a2, a3);
}

// Address range: 0x14001e5ec - 0x14001e5fa
void function_14001e5ec(int64_t * ListHead) {
    // 0x14001e5ec
    InitializeSListHead(&g85);
}

// Address range: 0x14001e5fc - 0x14001e637
int64_t function_14001e5fc(int64_t a1) {
    int32_t size = a1; // 0x14001e616
    int64_t * mem = malloc(size); // 0x14001e616
    while (mem == NULL) {
        // 0x14001e607
        if (_callnewh(size) == 0) {
            if (a1 == -1) {
                // 0x14001e632
                function_140001140();
                // UNREACHABLE
            }
            // 0x14001e62c
            function_1400132c0();
            // UNREACHABLE
        }
        mem = malloc(size);
    }
    // 0x14001e620
    return (int64_t)mem;
}

// Address range: 0x14001e638 - 0x14001e63d
int64_t function_14001e638(int64_t a1) {
    // 0x14001e638
    return function_14001e5fc(a1);
}

// Address range: 0x14001e66c - 0x14001e734
int64_t function_14001e66c(void) {
    // 0x14001e66c
    _set_app_type(1);
    _set_fmode((int32_t)function_14001ed6c());
    *__p__commode() = (int32_t)function_14001ed60();
    if ((char)function_14001eaec(1) != 0) {
        // 0x14001e6a4
        function_14001efd4();
        function_14001ec9c(0x14001f010);
        int64_t ListHead = function_14001ed64() & 0xffffffff; // 0x14001e6ba
        if (_configure_narrow_argv(ListHead) == 0) {
            // 0x14001e6c5
            InitializeSListHead((int64_t *)ListHead);
            if ((int32_t)function_14001ed9c() != 0) {
                // 0x14001e6d3
                __setusermatherr(0x14001ed60);
            }
            // 0x14001e6df
            function_14001ed74();
            function_14001ed74();
            _configthreadlocale((int32_t)function_14001ed60());
            if ((char)function_140016690() != 0) {
                // 0x14001e6fe
                _initialize_narrow_environment();
            }
            // 0x14001e703
            function_14001ed60();
            int64_t result = function_14001ed60(); // 0x14001e708
            if ((int32_t)result == 0) {
                // 0x14001e711
                return result;
            }
        }
    }
    // 0x14001e717
    int64_t v1; // 0x14001e66c
    function_14001edc0(7, v1);
    __asm_int3();
    __asm_int3();
    __asm_int3();
    function_14001ed80();
    return 0;
}

// Address range: 0x14001e734 - 0x14001e74d
int64_t function_14001e734(void) {
    // 0x14001e734
    int64_t lpTopLevelExceptionFilter; // 0x14001e734
    SetUnhandledExceptionFilter((int32_t (*)(struct _EXCEPTION_POINTERS *))lpTopLevelExceptionFilter);
    return _set_new_mode((int32_t)function_14001ed60());
}

// Address range: 0x14001e750 - 0x14001e8cb
int64_t function_14001e750(void) {
    // 0x14001e750
    int64_t status2; // 0x14001e750
    int64_t v1; // 0x14001e750
    if ((char)function_14001eaa0(1) == 0) {
        // 0x14001e8a7
        function_14001edc0(7, v1);
    } else {
        int64_t v2 = __scrt_acquire_startup_lock() & 255; // 0x14001e77e
        status2 = v2 | v1 & -256;
        if (g86 != 1) {
            int64_t v3 = g86; // 0x14001e791
            char v4 = 1; // 0x14001e791
            if (g86 == 0) {
                // 0x14001e793
                g86 = 1;
                if (_initterm_e((int32_t (**)())&g3, (int32_t (**)())&g4) != 0) {
                    // 0x14001e897
                    return 255;
                }
                // 0x14001e7be
                _initterm((void (**)())&g1, (void (**)())&g2);
                g86 = 2;
                v3 = (int64_t)&g1;
                v4 = 0;
            }
            // 0x14001e7e5
            __scrt_release_startup_lock(v3 & -256 | v2);
            int64_t v5 = function_14001eda8(); // 0x14001e7ec
            if (*(int64_t *)v5 != 0) {
                // 0x14001e7fa
                if ((char)function_14001eb78(v5) != 0) {
                    // 0x14001e806
                    function_14001f570();
                }
            }
            int64_t v6 = function_14001edb0(); // 0x14001e818
            int64_t * v7 = (int64_t *)v6; // 0x14001e820
            if (*v7 != 0) {
                // 0x14001e826
                if ((char)function_14001eb78(v6) != 0) {
                    // 0x14001e832
                    _register_thread_local_exe_atexit_callback((void (*)(int64_t *, int32_t, int64_t *))*v7);
                }
            }
            // 0x14001e83a
            _get_initial_narrow_environment();
            char ** v8 = *__p___argv(); // 0x14001e847
            uint32_t v9 = *__p___argc(); // 0x14001e855
            int64_t v10 = v9; // 0x14001e855
            int64_t status = function_140016940(v9, (int64_t)v8) & 0xffffffff; // 0x14001e85c
            if ((char)function_14001ef14(v10) == 0) {
                // 0x14001e8bc
                exit((int32_t)status);
                // UNREACHABLE
            }
            if (v4 == 0) {
                // 0x14001e86c
                _cexit();
            }
            // 0x14001e871
            function_14001ec34(v10 & 0xffffff00 | 1, 0);
            // 0x14001e897
            return status;
        }
    }
    // 0x14001e8b2
    function_14001edc0(7, v1);
    // 0x14001e8bc
    exit((int32_t)status2);
    // UNREACHABLE
}

// Address range: 0x14001e8cc - 0x14001e8de
int64_t entry_point(void) {
    // 0x14001e8cc
    function_14001ecb4();
    return function_14001e750();
}

// Address range: 0x14001ea5c - 0x14001ea61
int64_t function_14001ea5c(int64_t a1, int64_t a2, int64_t a3) {
    // 0x14001ea5c
    int64_t v1; // 0x14001ea5c
    free((int64_t *)v1);
    return &g103;
}

// Address range: 0x14001eaa0 - 0x14001eae9
int64_t function_14001eaa0(int64_t a1) {
    char v1 = (int32_t)a1 == 0 ? 1 : *(char *)&g87; // 0x14001eab4
    *(char *)&g87 = v1;
    function_14001f04c(a1);
    int64_t v2 = function_140016690(); // 0x14001eac2
    if ((char)v2 == 0) {
        // 0x14001eae3
        return v2 & -256;
    }
    int64_t v3 = function_140016690(); // 0x14001eacf
    if ((char)v3 != 0) {
        // 0x14001eae3
        return v3 & -256 | 1;
    }
    // 0x14001eae3
    return function_140016690() & -256;
}

// Address range: 0x14001eaec - 0x14001eb78
int64_t function_14001eaec(int64_t a1) {
    // 0x14001eaec
    if (g88 != 0) {
        // 0x14001eb66
        int64_t v1; // 0x14001eaec
        return v1 & -256 | 1;
    }
    uint32_t v2 = (int32_t)a1; // 0x14001eafd
    if (v2 >= 2) {
        // 0x14001eb6c
        int64_t v3; // 0x14001eaec
        function_14001edc0(5, v3);
        __asm_int3();
        return __asm_int3();
    }
    // 0x14001eb02
    int64_t v4; // 0x14001eaec
    if (v2 != 0 | (int32_t)function_14001f1f0() == 0) {
        int128_t v5 = __asm_movdqa(g9); // 0x14001eb33
        *(int128_t *)&g89 = (int128_t)__asm_movdqu(v5);
        g90 = -1;
        *(int128_t *)&g91 = (int128_t)__asm_movdqu(v5);
        g92 = -1;
        v4 = -1;
    } else {
        int32_t v6 = _initialize_onexit_table((struct _onexit_table_t *)&g89); // 0x14001eb16
        if (v6 != 0) {
            // 0x14001eb66
            return v6 & -256;
        }
        int32_t v7 = _initialize_onexit_table((struct _onexit_table_t *)&g91); // 0x14001eb26
        v4 = 0;
        if (v7 != 0) {
            // 0x14001eb66
            return v7 & -256;
        }
    }
    // 0x14001eb5d
    g88 = 1;
    // 0x14001eb66
    return v4 & -256 | 1;
}

// Address range: 0x14001eb78 - 0x14001ec09
int64_t function_14001eb78(int64_t a1) {
    // 0x14001eb78
    if (*(int16_t *)0x140000000 != 0x5a4d) {
        // 0x14001ec05
        return function_14001ec0b();
    }
    int64_t v1 = (int64_t)*(int32_t *)0x14000003c; // 0x14001eb8d
    if (*(int32_t *)(v1 + 0x140000000) != 0x4550 || *(int16_t *)(v1 + 0x140000018) != 523) {
        // 0x14001ec05
        return function_14001ec0b();
    }
    // 0x14001ebee
    return function_14001ec0b();
}

// Address range: 0x14001ec09 - 0x14001ec0b
int64_t function_14001ec09(void) {
    // 0x14001ec09
    int64_t v1; // 0x14001ec09
    return v1 & -256;
}

// Address range: 0x14001ec0b - 0x14001ec10
int64_t function_14001ec0b(void) {
    // 0x14001ec0b
    int64_t result; // 0x14001ec0b
    return result;
}

// Address range: 0x14001ec34 - 0x14001ec5d
int64_t function_14001ec34(int64_t a1, int32_t a2) {
    // 0x14001ec34
    if (*(char *)&g87 != 0) {
        if ((char)a2 != 0) {
            // 0x14001ec55
            int64_t v1; // 0x14001ec34
            return v1 & -256 | 1;
        }
    }
    // 0x14001ec49
    function_140016690();
    // 0x14001ec55
    return function_140016690() & -256 | 1;
}

// Address range: 0x14001ec60 - 0x14001ec9a
int64_t function_14001ec60(int64_t a1) {
    // 0x14001ec60
    int64_t v1; // 0x14001ec60
    if (g89 != (struct _onexit_table_t *)-1) {
        int32_t v2 = _register_onexit_function((struct _onexit_table_t *)&g89, (int32_t (*)())a1); // 0x14001ec84
        v1 = v2;
    } else {
        // 0x14001ec73
        v1 = _crt_atexit();
    }
    // 0x14001ec89
    return (int32_t)v1 == 0 ? a1 : 0;
}

// Address range: 0x14001ec9c - 0x14001ecb3
int64_t function_14001ec9c(int64_t a1) {
    // 0x14001ec9c
    return function_14001ec60(a1) == 0 ? 0xffffffff : 0;
}

// Address range: 0x14001ecb4 - 0x14001ed60
int64_t function_14001ecb4(void) {
    int64_t v1 = g66; // 0x14001ecd5
    if (g66 == 0x2b992ddfa232) {
        int64_t lpSystemTimeAsFileTime = 0; // bp+16, 0x14001ecd7
        GetSystemTimeAsFileTime((struct _FILETIME *)&lpSystemTimeAsFileTime);
        int64_t v2 = lpSystemTimeAsFileTime ^ (int64_t)GetCurrentThreadId() ^ (int64_t)GetCurrentProcessId();
        int64_t v3 = v2; // 0x14001ed06
        int32_t lpPerformanceCount; // bp+24, 0x14001ecb4
        QueryPerformanceCounter((struct _LARGE_INTEGER *)&lpPerformanceCount);
        int32_t v4 = lpPerformanceCount;
        int64_t v5 = (v2 ^ (int64_t)&v3 ^ (int64_t)v4 ^ 0x100000000 * (int64_t)v4) & 0xffffffffffff; // 0x14001ed30
        v1 = v5 == 0x2b992ddfa232 ? 0x2b992ddfa233 : v5;
        g66 = v1;
    }
    int64_t result = -1 - v1;
    g65 = result;
    return result;
}

// Address range: 0x14001ed60 - 0x14001ed63
int64_t function_14001ed60(void) {
    // 0x14001ed60
    return 0;
}

// Address range: 0x14001ed64 - 0x14001ed6a
int64_t function_14001ed64(void) {
    // 0x14001ed64
    return 1;
}

// Address range: 0x14001ed6c - 0x14001ed72
int64_t function_14001ed6c(void) {
    // 0x14001ed6c
    return 0x4000;
}

// Address range: 0x14001ed74 - 0x14001ed77
int64_t function_14001ed74(void) {
    // 0x14001ed74
    int64_t result; // 0x14001ed74
    return result;
}

// Address range: 0x14001ed78 - 0x14001ed80
int64_t function_14001ed78(void) {
    // 0x14001ed78
    return &g93;
}

// Address range: 0x14001ed80 - 0x14001ed9b
int64_t function_14001ed80(void) {
    int64_t * v1 = (int64_t *)function_140001000(); // 0x14001ed89
    *v1 = *v1 | 36;
    int64_t result = function_14001ed78(); // 0x14001ed8d
    int64_t * v2 = (int64_t *)result; // 0x14001ed92
    *v2 = *v2 | 2;
    return result;
}

// Address range: 0x14001ed9c - 0x14001eda8
int64_t function_14001ed9c(void) {
    // 0x14001ed9c
    return g67 == 0;
}

// Address range: 0x14001eda8 - 0x14001edb0
int64_t function_14001eda8(void) {
    // 0x14001eda8
    return &g102;
}

// Address range: 0x14001edb0 - 0x14001edb8
int64_t function_14001edb0(void) {
    // 0x14001edb0
    return &g101;
}

// Address range: 0x14001edb8 - 0x14001edc0
int64_t function_14001edb8(void) {
    // 0x14001edb8
    g94 = 0;
    int64_t result; // 0x14001edb8
    return result;
}

// Address range: 0x14001edc0 - 0x14001ef0a
int64_t function_14001edc0(int64_t a1, int64_t a2) {
    // 0x14001edc0
    if (IsProcessorFeaturePresent(23)) {
        // 0x14001ede5
        __asm_int(41);
    }
    // 0x14001ede9
    function_14001edb8();
    int64_t v1; // bp-1240, 0x14001edc0
    memset(&v1, 0, 1232);
    RtlCaptureContext((struct _CONTEXT *)&v1);
    int64_t v2; // bp+16, 0x14001edc0
    int64_t v3; // 0x14001edc0
    struct _IMAGE_RUNTIME_FUNCTION_ENTRY * v4 = RtlLookupFunctionEntry(v3, &v2, NULL); // 0x14001ee22
    if (v4 != NULL) {
        // 0x14001ee2d
        int64_t v5; // bp+24, 0x14001edc0
        int64_t v6; // bp+32, 0x14001edc0
        RtlVirtualUnwind(0, v2, v3, v4, (struct _CONTEXT *)&v1, (int64_t **)&v6, &v5, NULL);
    }
    // 0x14001ee69
    int64_t v7; // bp-1400, 0x14001edc0
    memset(&v7, 0, 152);
    v7 = 0x40000015;
    IsDebuggerPresent();
    int64_t ExceptionInfo = &v7; // bp-1416, 0x14001eec5
    SetUnhandledExceptionFilter(NULL);
    int32_t v8 = UnhandledExceptionFilter((struct _EXCEPTION_POINTERS *)&ExceptionInfo); // 0x14001eee3
    int64_t result = v8; // 0x14001eeeb
    if (v8 == 0) {
        // 0x14001eef1
        result = function_14001edb8();
    }
    // 0x14001eef9
    return result;
}

// Address range: 0x14001ef0c - 0x14001ef11
int64_t function_14001ef0c(void) {
    // 0x14001ef0c
    return function_14001ed60();
}

// Address range: 0x14001ef14 - 0x14001ef66
int64_t function_14001ef14(int64_t a1) {
    int64_t * v1 = GetModuleHandleW(NULL); // 0x14001ef1a
    int64_t v2 = (int64_t)v1; // 0x14001ef1a
    if (v1 == NULL || *(int16_t *)v1 != 0x5a4d) {
        // 0x14001ef61
        return v2 & -256;
    }
    int64_t v3 = (int64_t)*(int32_t *)(v2 + 60) + v2; // 0x14001ef33
    if (*(int32_t *)v3 != 0x4550) {
        // 0x14001ef61
        return v2 & -256;
    }
    // 0x14001ef3e
    if (*(int16_t *)(v3 + 24) != 523 || *(int32_t *)(v3 + 132) < 15) {
        // 0x14001ef61
        return 512;
    }
    // 0x14001ef52
    if (*(int32_t *)(v3 + 248) != 0) {
        // 0x14001ef61
        return 513;
    }
    // 0x14001ef61
    return 512;
}

// Address range: 0x14001ef68 - 0x14001ef76
int32_t (*function_14001ef68(int32_t (*lpTopLevelExceptionFilter)(struct _EXCEPTION_POINTERS *)))(struct _EXCEPTION_POINTERS *) {
    // 0x14001ef68
    return SetUnhandledExceptionFilter((int32_t (*)(struct _EXCEPTION_POINTERS *))0x14001ef78);
}

// Address range: 0x14001ef78 - 0x14001efd4
int64_t function_14001ef78(int64_t a1) {
    // 0x14001ef78
    int64_t v1; // 0x14001ef78
    if ((int32_t)v1 != -0x1f928c9d || *(int32_t *)(a1 + 24) != 4) {
        // 0x14001efac
        return 0;
    }
    // 0x14001ef96
    switch (*(int32_t *)(a1 + 32)) {
        case 0x19930522: {
        }
        case 0x19930521: {
        }
        case 0x19930520: {
        }
        case 0x1994000: {
            // 0x14001efb9
            *(int64_t *)__current_exception() = a1;
            *(int64_t *)__current_exception_context() = *(int64_t *)(a1 + 8);
            terminate();
            __asm_int3();
            return __asm_int3();
        }
    }
    // 0x14001efac
    return 0;
}

// Address range: 0x14001efd4 - 0x14001f010
int64_t function_14001efd4(void) {
    // 0x14001f005
    int64_t result; // 0x14001efd4
    return result;
}

// Address range: 0x14001f010 - 0x14001f04c
int64_t function_14001f010(void) {
    // 0x14001f041
    int64_t result; // 0x14001f010
    return result;
}

// Address range: 0x14001f04c - 0x14001f1ed
int64_t function_14001f04c(int64_t a1) {
    struct struct3 v1; // 0x14001f05f
    struct struct1 v2; // 0x14001f086
    struct struct4 v3; // 0x14001f10b
    // 0x14001f04c
    v1 = __asm_cpuid_12(0);
    v2 = __asm_cpuid_13(1);
    int32_t v4; // 0x14001f04c
    if ((v1.e1 ^ 0x756e6547 || v1.e2 ^ 0x6c65746e || v1.e3 ^ 0x49656e69) != 0) {
        // 0x14001f0f5
        v4 = g95;
        goto lab_0x14001f0fc;
    } else {
        // 0x14001f0a5
        *(int64_t *)&g70 = -1;
        int32_t v5 = v2.e0 & 0xfff3ff0;
        switch (v5) {
            case 0x106c0: {
                goto lab_0x14001f0e1;
            }
            case 0x20660: {
                goto lab_0x14001f0e1;
            }
            case 0x20670: {
                goto lab_0x14001f0e1;
            }
            default: {
                if (v5 < 0x30671) {
                    if ((1 << (int64_t)(v5 + 48 & 48) & 0x100010001) == 0) {
                        // 0x14001f0f5
                        v4 = g95;
                        goto lab_0x14001f0fc;
                    } else {
                        goto lab_0x14001f0e1;
                    }
                } else {
                    // 0x14001f0f5
                    v4 = g95;
                    goto lab_0x14001f0fc;
                }
            }
        }
    }
  lab_0x14001f0fc:;
    int32_t v6 = v2.e3; // 0x14001f107
    int64_t v7 = 0; // 0x14001f107
    if (v1.e0 >= 7) {
        // 0x14001f109
        v3 = __asm_cpuid_14(7);
        uint32_t v8 = v3.e1; // 0x14001f10b
        int32_t v9 = v3.e3; // 0x14001f10b
        int64_t v10 = v8; // 0x14001f110
        v6 = v9;
        v7 = v10;
        if ((v8 & 512) != 0) {
            // 0x14001f125
            g95 = v4 | 2;
            v6 = v9;
            v7 = v10;
        }
    }
    int64_t v11 = v2.e2; // 0x14001f099
    g68 = 1;
    g69 = 2;
    if ((v11 & 0x100000) == 0) {
        // 0x14001f1db
        return 0;
    }
    // 0x14001f14a
    g68 = 2;
    g69 = 6;
    if ((v11 & 0x8000000) == 0) {
        // 0x14001f1db
        return 0;
    }
    if ((v11 & 0x10000000) == 0) {
        // 0x14001f1db
        return 0;
    }
    int64_t v12 = __asm_xgetbv(0, v6); // 0x14001f16a
    if ((v12 & 6) != 6) {
        // 0x14001f1db
        return 0;
    }
    int32_t v13 = g69; // 0x14001f184
    g68 = 3;
    g69 = v13 | 8;
    if ((v7 & 32) == 0) {
        // 0x14001f1db
        return 0;
    }
    // 0x14001f1a3
    g68 = 5;
    g69 = v13 | 40;
    if ((v7 & 0xd0030000) == 0xd0030000 == (char)v12 > 223) {
        // 0x14001f1ce
        g69 = v13 | 104;
        g68 = 6;
    }
    // 0x14001f1db
    return 0;
  lab_0x14001f0e1:;
    int32_t v14 = g95 | 1; // 0x14001f0e8
    g95 = v14;
    v4 = v14;
    goto lab_0x14001f0fc;
}

// Address range: 0x14001f1f0 - 0x14001f1fc
int64_t function_14001f1f0(void) {
    // 0x14001f1f0
    return g71 != 0;
}

// Address range: 0x14001f200 - 0x14001f206
int64_t function_14001f200(int64_t a1, int64_t a2, int64_t a3, int64_t a4) {
    // 0x14001f200
    return __CxxFrameHandler4(a1, a2, a3, a4);
}

// Address range: 0x14001f206 - 0x14001f20c
int64_t function_14001f206(void) {
    // 0x14001f206
    return _purecall();
}

// Address range: 0x14001f20c - 0x14001f212
int64_t function_14001f20c(void) {
    // 0x14001f20c
    return __std_terminate();
}

// Address range: 0x14001f212 - 0x14001f218
int64_t function_14001f212(void) {
    // 0x14001f212
    return __C_specific_handler();
}

// Address range: 0x14001f218 - 0x14001f21e
void function_14001f218(int64_t * pExceptionObject, int64_t * pThrowInfo) {
    // 0x14001f218
    _CxxThrowException(pExceptionObject, pThrowInfo);
}

// Address range: 0x14001f21e - 0x14001f224
int64_t function_14001f21e(void) {
    // 0x14001f21e
    return __current_exception();
}

// Address range: 0x14001f224 - 0x14001f22a
int64_t function_14001f224(void) {
    // 0x14001f224
    return __current_exception_context();
}

// Address range: 0x14001f22a - 0x14001f230
int64_t * function_14001f22a(int64_t * s, int32_t c, int32_t n) {
    // 0x14001f22a
    return memset(s, c, n);
}

// Address range: 0x14001f230 - 0x14001f236
void function_14001f230(int32_t status) {
    // 0x14001f230
    exit(status);
}

// Address range: 0x14001f236 - 0x14001f23c
void function_14001f236(int64_t * ptr) {
    // 0x14001f236
    free(ptr);
}

// Address range: 0x14001f23c - 0x14001f242
int64_t * function_14001f23c(int32_t size) {
    // 0x14001f23c
    return malloc(size);
}

// Address range: 0x14001f242 - 0x14001f248
int32_t function_14001f242(int32_t Size) {
    // 0x14001f242
    return _callnewh(Size);
}

// Address range: 0x14001f248 - 0x14001f24e
int32_t function_14001f248(int32_t ExceptionNum, struct _EXCEPTION_POINTERS * ExceptionPtr) {
    // 0x14001f248
    return _seh_filter_exe(ExceptionNum, ExceptionPtr);
}

// Address range: 0x14001f24e - 0x14001f254
void function_14001f24e(int64_t a1) {
    // 0x14001f24e
    _set_app_type(a1);
}

// Address range: 0x14001f254 - 0x14001f25a
void function_14001f254(int64_t pf) {
    // 0x14001f254
    __setusermatherr(pf);
}

// Address range: 0x14001f25a - 0x14001f260
int32_t function_14001f25a(int64_t a1) {
    // 0x14001f25a
    return _configure_narrow_argv(a1);
}

// Address range: 0x14001f260 - 0x14001f266
int32_t function_14001f260(void) {
    // 0x14001f260
    return _initialize_narrow_environment();
}

// Address range: 0x14001f266 - 0x14001f26c
char ** function_14001f266(void) {
    // 0x14001f266
    return _get_initial_narrow_environment();
}

// Address range: 0x14001f26c - 0x14001f272
void function_14001f26c(void (**First)(), void (**Last)()) {
    // 0x14001f26c
    _initterm(First, Last);
}

// Address range: 0x14001f272 - 0x14001f278
int32_t function_14001f272(int32_t (**First)(), int32_t (**Last)()) {
    // 0x14001f272
    return _initterm_e(First, Last);
}

// Address range: 0x14001f278 - 0x14001f27e
void function_14001f278(int32_t Code) {
    // 0x14001f278
    _exit(Code);
}

// Address range: 0x14001f27e - 0x14001f284
int32_t function_14001f27e(int32_t Mode) {
    // 0x14001f27e
    return _set_fmode(Mode);
}

// Address range: 0x14001f284 - 0x14001f28a
int32_t * function_14001f284(void) {
    // 0x14001f284
    return __p___argc();
}

// Address range: 0x14001f28a - 0x14001f290
char *** function_14001f28a(void) {
    // 0x14001f28a
    return __p___argv();
}

// Address range: 0x14001f290 - 0x14001f296
void function_14001f290(void) {
    // 0x14001f290
    _cexit();
}

// Address range: 0x14001f296 - 0x14001f29c
void function_14001f296(void) {
    // 0x14001f296
    _c_exit();
}

// Address range: 0x14001f29c - 0x14001f2a2
void function_14001f29c(void (*Callback)(int64_t *, int32_t, int64_t *)) {
    // 0x14001f29c
    _register_thread_local_exe_atexit_callback(Callback);
}

// Address range: 0x14001f2a2 - 0x14001f2a8
int32_t function_14001f2a2(int32_t Flag) {
    // 0x14001f2a2
    return _configthreadlocale(Flag);
}

// Address range: 0x14001f2a8 - 0x14001f2ae
int32_t function_14001f2a8(int32_t NewMode) {
    // 0x14001f2a8
    return _set_new_mode(NewMode);
}

// Address range: 0x14001f2ae - 0x14001f2b4
int32_t * function_14001f2ae(void) {
    // 0x14001f2ae
    return __p__commode();
}

// Address range: 0x14001f2b4 - 0x14001f2ba
int32_t function_14001f2b4(struct _onexit_table_t * Table) {
    // 0x14001f2b4
    return _initialize_onexit_table(Table);
}

// Address range: 0x14001f2ba - 0x14001f2c0
int32_t function_14001f2ba(struct _onexit_table_t * Table, int32_t (*Function)()) {
    // 0x14001f2ba
    return _register_onexit_function(Table, Function);
}

// Address range: 0x14001f2c0 - 0x14001f2c6
int64_t function_14001f2c0(void) {
    // 0x14001f2c0
    return _crt_atexit();
}

// Address range: 0x14001f2c6 - 0x14001f2cc
int64_t function_14001f2c6(void) {
    // 0x14001f2c6
    return terminate();
}

// Address range: 0x14001f2cc - 0x14001f2d2
bool function_14001f2cc(int32_t ProcessorFeature) {
    // 0x14001f2cc
    return IsProcessorFeaturePresent(ProcessorFeature);
}

// Address range: 0x14001f2e0 - 0x14001f3aa
int64_t function_14001f2e0(int64_t a1, int64_t a2) {
    // 0x14001f2e0
    int128_t v1; // 0x14001f2e0
    int128_t v2 = v1;
    int64_t v3; // 0x14001f2e0
    int32_t v4 = v3;
    int64_t v5 = v3 & 0xffffffff;
    int64_t v6 = v5; // 0x14001f2f0
    if (v4 < 1) {
        // 0x14001f39f
        int64_t result; // 0x14001f2e0
        return result;
    }
    // 0x14001f2fb
    int64_t v7; // bp+24, 0x14001f2e0
    int64_t v8; // bp+32, 0x14001f2e0
    _vcomp_for_static_simple_init(0, v4 - 1, 1, 1, &v7, &v8, v3);
    int64_t v9 = 0x100000000 * v7 >> 32; // 0x14001f321
    if (v9 <= (v8 & 0xffffffff)) {
        int128_t v10 = __asm_movss(0x437f0000); // 0x14001f334
        v6 = v9;
        int128_t v11 = __asm_xorps(v2, v2); // 0x14001f33f
        int64_t v12 = v8 + 1 - v9 & 0xffffffff; // 0x14001f342
        int64_t v13 = v9; // 0x14001f34d
        int64_t v14 = v5; // 0x14001f34d
        int64_t v15; // 0x14001f2e0
        int128_t v16; // 0x14001f2e0
        uint64_t v17; // 0x14001f35a
        uint64_t v18; // 0x14001f2e0
        int32_t * v19; // 0x14001f2e0
        int64_t v20; // 0x14001f377
        int64_t v21; // 0x14001f38a
        if ((int32_t)v5 >= 1) {
            v15 = 0;
            v17 = *(int64_t *)(a1 + 8) * v15;
            v18 = v17 + v9;
            v19 = (int32_t *)(4 * v18 + v15);
            __asm_comiss(__asm_movss(*v19), v11);
            if (v18 < v17 || v18 == 0) {
                // 0x14001f371
                v16 = __asm_movaps_2(v11);
            } else {
                // 0x14001f36c
                v16 = __asm_movaps_2(v10);
            }
            // 0x14001f374
            v20 = 1;
            *v19 = (int32_t)__asm_movss_4(v16);
            v21 = (int64_t)*(int32_t *)&v6;
            while (v20 < v21) {
                // 0x14001f374
                v15++;
                v17 = *(int64_t *)(a1 + 8) * v15;
                v18 = v17 + v6;
                v19 = (int32_t *)(4 * v18 + v15);
                __asm_comiss(__asm_movss(*v19), v11);
                if (v18 < v17 || v18 == 0) {
                    // 0x14001f371
                    v16 = __asm_movaps_2(v11);
                } else {
                    // 0x14001f36c
                    v16 = __asm_movaps_2(v10);
                }
                // 0x14001f374
                v20 = v20 + 1 & 0xffffffff;
                *v19 = (int32_t)__asm_movss_4(v16);
                v21 = (int64_t)*(int32_t *)&v6;
            }
            // 0x14001f391
            v13 = v6;
            v14 = v21;
        }
        int64_t v22 = v14;
        int64_t v23 = v13 + 1; // 0x14001f391
        v6 = v23;
        while (v12 != 1) {
            // 0x14001f346
            v12--;
            int64_t v24 = v23; // 0x14001f34d
            v13 = v23;
            v14 = v22;
            if ((int32_t)v22 >= 1) {
                v15 = 0;
                v17 = *(int64_t *)(a1 + 8) * v15;
                v18 = v17 + v24;
                v19 = (int32_t *)(4 * v18 + v15);
                __asm_comiss(__asm_movss(*v19), v11);
                if (v18 < v17 || v18 == 0) {
                    // 0x14001f371
                    v16 = __asm_movaps_2(v11);
                } else {
                    // 0x14001f36c
                    v16 = __asm_movaps_2(v10);
                }
                // 0x14001f374
                v20 = 1;
                *v19 = (int32_t)__asm_movss_4(v16);
                v21 = (int64_t)*(int32_t *)&v6;
                while (v20 < v21) {
                    // 0x14001f374
                    v15++;
                    v17 = *(int64_t *)(a1 + 8) * v15;
                    v18 = v17 + v6;
                    v19 = (int32_t *)(4 * v18 + v15);
                    __asm_comiss(__asm_movss(*v19), v11);
                    if (v18 < v17 || v18 == 0) {
                        // 0x14001f371
                        v16 = __asm_movaps_2(v11);
                    } else {
                        // 0x14001f36c
                        v16 = __asm_movaps_2(v10);
                    }
                    // 0x14001f374
                    v20 = v20 + 1 & 0xffffffff;
                    *v19 = (int32_t)__asm_movss_4(v16);
                    v21 = (int64_t)*(int32_t *)&v6;
                }
                // 0x14001f391
                v13 = v6;
                v14 = v21;
            }
            // 0x14001f391
            v22 = v14;
            v23 = v13 + 1;
            v6 = v23;
        }
    }
    // 0x14001f39f
    return _vcomp_for_static_end();
}

// Address range: 0x14001f3ac - 0x14001f3c9
int64_t function_14001f3ac(void) {
    // 0x14001f3ac
    int64_t v1; // 0x14001f3ac
    int64_t v2 = v1;
    function_14001f3cc(v1, v2, *(int64_t *)(v2 + 56));
    return 1;
}

// Address range: 0x14001f3cc - 0x14001f427
int64_t function_14001f3cc(int64_t a1, int64_t a2, int64_t a3) {
    int64_t v1 = a1; // 0x14001f3e2
    if ((a3 & 4) != 0) {
        int32_t v2 = *(int32_t *)(a3 + 4); // 0x14001f3e8
        v1 = (int64_t)v2 + a1 & (int64_t)-*(int32_t *)(a3 + 8);
    }
    uint32_t v3 = *(int32_t *)(*(int64_t *)(a2 + 16) + 8); // 0x14001f402
    char v4 = *(char *)((int64_t)v3 + 3 + *(int64_t *)(a2 + 8)); // 0x14001f409
    int64_t v5 = a1; // 0x14001f40e
    if ((v4 & 15) != 0) {
        // 0x14001f410
        v5 = (int64_t)(v4 & -16) + a1;
    }
    // 0x14001f41b
    __security_check_cookie(v5 ^ *(int64_t *)(v1 + (0x100000000 * a3 >> 32 & -8)));
    return &g103;
}

// Address range: 0x14001f428 - 0x14001f4a7
int64_t function_14001f428(int64_t a1, int64_t a2, int64_t a3, int64_t a4) {
    int64_t v1 = *(int64_t *)(a4 + 56) + 4; // 0x14001f457
    function_14001f3cc(a2, a4, v1);
    int64_t result = 1; // 0x14001f479
    if ((((*(int32_t *)(a1 + 4) & 102) == 0 ? 1 : 2) & *(int32_t *)v1) != 0) {
        // 0x14001f47b
        result = __CxxFrameHandler4(a1, a2, a3, a4);
    }
    // 0x14001f48c
    return result;
}

// Address range: 0x14001f511 - 0x14001f517
int64_t function_14001f511(void) {
    // 0x14001f511
    return _vcomp_for_static_end();
}

// Address range: 0x14001f517 - 0x14001f51d
int64_t function_14001f517(int32_t a1, int32_t a2, int64_t a3, int64_t a4, int64_t * a5, int64_t * a6, int64_t a7) {
    // 0x14001f517
    return _vcomp_for_static_simple_init(a1, a2, a3, a4, a5, a6, a7);
}

// Address range: 0x14001f51d - 0x14001f523
int64_t function_14001f51d(int64_t a1, int64_t a2, int64_t a3, int128_t * a4, int32_t * a5, int32_t * a6) {
    // 0x14001f51d
    return _vcomp_fork(a1, a2, a3, a4, a5, a6);
}

// Address range: 0x14001f530 - 0x14001f536
int64_t * function_14001f530(int64_t * inptr, int32_t VfDelta, int64_t * SrcType, int64_t * TargetType, bool isReference) {
    // 0x14001f530
    return __RTDynamicCast(inptr, VfDelta, SrcType, TargetType, isReference);
}

// Address range: 0x14001f536 - 0x14001f53c
int32_t function_14001f536(int64_t * s1, int64_t * s2, int32_t n) {
    // 0x14001f536
    return memcmp(s1, s2, n);
}

// Address range: 0x14001f53c - 0x14001f542
int64_t * function_14001f53c(int64_t * dest, int64_t * src, int32_t n) {
    // 0x14001f53c
    return memcpy(dest, src, n);
}

// Address range: 0x14001f542 - 0x14001f548
int64_t * function_14001f542(int64_t * dest, int64_t * src, int32_t n) {
    // 0x14001f542
    return memmove(dest, src, n);
}

// Address range: 0x14001f548 - 0x14001f54e
float32_t function_14001f548(float32_t a1, float32_t a2) {
    // 0x14001f548
    return powf(a1, a2);
}

// Address range: 0x14001f54e - 0x14001f554
float32_t function_14001f54e(float32_t a1) {
    // 0x14001f54e
    return sqrtf(a1);
}

// Address range: 0x14001f554 - 0x14001f55a
int32_t function_14001f554(char * s1, char * s2) {
    // 0x14001f554
    return strcmp(s1, s2);
}

// Address range: 0x14001f570 - 0x14001f572
int64_t function_14001f570(void) {
    // 0x14001f570
    int64_t result; // 0x14001f570
    return result;
}

// Address range: 0x14001f590 - 0x14001f596
int64_t function_14001f590(void) {
    // 0x14001f590
    return function_14001f570();
}

// Address range: 0x14001f5a0 - 0x14001f5ac
int64_t function_14001f5a0(void) {
    // 0x14001f5a0
    int64_t v1; // 0x14001f5a0
    return function_1400141b0(v1 + 88);
}

// Address range: 0x14001f5ac - 0x14001f5b8
int64_t function_14001f5ac(void) {
    // 0x14001f5ac
    int64_t v1; // 0x14001f5ac
    return function_1400141b0(v1 + 88);
}

// Address range: 0x14001f5b8 - 0x14001f5c4
int64_t function_14001f5b8(void) {
    // 0x14001f5b8
    int64_t v1; // 0x14001f5b8
    return function_1400141b0(v1 + 64);
}

// Address range: 0x14001f5d0 - 0x14001f5dc
int64_t function_14001f5d0(void) {
    // 0x14001f5d0
    int64_t v1; // 0x14001f5d0
    return __std_exception_destroy(*(int64_t *)(v1 + 48));
}

// Address range: 0x14001f5e0 - 0x14001f5ec
int64_t function_14001f5e0(void) {
    // 0x14001f5e0
    int64_t v1; // 0x14001f5e0
    return function_1400198c0((char *)(v1 + 80));
}

// Address range: 0x14001f5ec - 0x14001f5f8
int64_t function_14001f5ec(void) {
    // 0x14001f5ec
    int64_t v1; // 0x14001f5ec
    return function_140016790((int128_t *)(v1 + 312));
}

// Address range: 0x14001f5f8 - 0x14001f604
int64_t function_14001f5f8(void) {
    // 0x14001f5f8
    int64_t v1; // 0x14001f5f8
    return function_14001bec0((int64_t *)(v1 + 128));
}

// Address range: 0x14001f604 - 0x14001f610
int64_t function_14001f604(void) {
    // 0x14001f604
    int64_t v1; // 0x14001f604
    return function_1400198c0((char *)(v1 + 80));
}

// Address range: 0x14001f610 - 0x14001f61c
int64_t function_14001f610(void) {
    // 0x14001f610
    int64_t v1; // 0x14001f610
    return function_1400198c0((char *)(v1 + 128));
}

// Address range: 0x14001f61c - 0x14001f628
int64_t function_14001f61c(void) {
    // 0x14001f61c
    int64_t v1; // 0x14001f61c
    return function_1400198c0((char *)(v1 + 328));
}

// Address range: 0x14001f628 - 0x14001f634
int64_t function_14001f628(void) {
    // 0x14001f628
    int64_t v1; // 0x14001f628
    return function_14001bec0((int64_t *)(v1 + 128));
}

// Address range: 0x14001f634 - 0x14001f640
int64_t function_14001f634(void) {
    // 0x14001f634
    int64_t v1; // 0x14001f634
    return function_1400198c0((char *)(v1 + 328));
}

// Address range: 0x14001f640 - 0x14001f64c
int64_t function_14001f640(void) {
    // 0x14001f640
    int64_t v1; // 0x14001f640
    return function_1400198c0((char *)(v1 + 272));
}

// Address range: 0x14001f64c - 0x14001f658
int64_t function_14001f64c(void) {
    // 0x14001f64c
    int64_t v1; // 0x14001f64c
    return function_1400198c0((char *)(v1 + 272));
}

// Address range: 0x14001f658 - 0x14001f664
int64_t function_14001f658(void) {
    // 0x14001f658
    int64_t v1; // 0x14001f658
    return function_1400198c0((char *)(v1 + 328));
}

// Address range: 0x14001f664 - 0x14001f670
int64_t function_14001f664(void) {
    // 0x14001f664
    int64_t v1; // 0x14001f664
    return function_1400198c0((char *)(v1 + 328));
}

// Address range: 0x14001f670 - 0x14001f67c
int64_t function_14001f670(void) {
    // 0x14001f670
    int64_t v1; // 0x14001f670
    return function_1400198c0((char *)(v1 + 328));
}

// Address range: 0x14001f67c - 0x14001f688
int64_t function_14001f67c(void) {
    // 0x14001f67c
    int64_t v1; // 0x14001f67c
    return function_1400198c0((char *)(v1 + 272));
}

// Address range: 0x14001f688 - 0x14001f694
int64_t function_14001f688(void) {
    // 0x14001f688
    int64_t v1; // 0x14001f688
    return function_1400198c0((char *)(v1 + 224));
}

// Address range: 0x14001f694 - 0x14001f6a0
int64_t function_14001f694(void) {
    // 0x14001f694
    int64_t v1; // 0x14001f694
    return function_1400198c0((char *)(v1 + 272));
}

// Address range: 0x14001f6a0 - 0x14001f6ac
int64_t function_14001f6a0(void) {
    // 0x14001f6a0
    int64_t v1; // 0x14001f6a0
    return function_1400198c0((char *)(v1 + 160));
}

// Address range: 0x14001f6ac - 0x14001f6b8
int64_t function_14001f6ac(void) {
    // 0x14001f6ac
    int64_t v1; // 0x14001f6ac
    return function_1400198c0((char *)(v1 + 272));
}

// Address range: 0x14001f6b8 - 0x14001f6c4
int64_t function_14001f6b8(void) {
    // 0x14001f6b8
    int64_t v1; // 0x14001f6b8
    return function_1400198c0((char *)(v1 + 192));
}

// Address range: 0x14001f6c4 - 0x14001f6d0
int64_t function_14001f6c4(void) {
    // 0x14001f6c4
    int64_t v1; // 0x14001f6c4
    return function_14001bec0((int64_t *)(v1 + 128));
}

// Address range: 0x14001f6d0 - 0x14001f6dc
int64_t function_14001f6d0(void) {
    // 0x14001f6d0
    int64_t v1; // 0x14001f6d0
    return function_1400198c0((char *)(v1 + 272));
}

// Address range: 0x14001f6dc - 0x14001f6e8
int64_t function_14001f6dc(void) {
    // 0x14001f6dc
    int64_t v1; // 0x14001f6dc
    return function_1400198c0((char *)(v1 + 328));
}

// Address range: 0x14001f6e8 - 0x14001f6f4
int64_t function_14001f6e8(void) {
    // 0x14001f6e8
    int64_t v1; // 0x14001f6e8
    return function_1400198c0((char *)(v1 + 328));
}

// Address range: 0x14001f6f4 - 0x14001f700
int64_t function_14001f6f4(void) {
    // 0x14001f6f4
    int64_t v1; // 0x14001f6f4
    return function_1400198c0((char *)(v1 + 328));
}

// Address range: 0x14001f700 - 0x14001f70c
int64_t function_14001f700(void) {
    // 0x14001f700
    int64_t v1; // 0x14001f700
    return function_1400198c0((char *)(v1 + 160));
}

// Address range: 0x14001f70c - 0x14001f718
int64_t function_14001f70c(void) {
    // 0x14001f70c
    int64_t v1; // 0x14001f70c
    return function_1400198c0((char *)(v1 + 192));
}

// Address range: 0x14001f720 - 0x14001f72c
int64_t function_14001f720(void) {
    // 0x14001f720
    int64_t v1; // 0x14001f720
    return function_1400198c0((char *)(v1 + 64));
}

// Address range: 0x14001f72c - 0x14001f738
int64_t function_14001f72c(void) {
    // 0x14001f72c
    int64_t v1; // 0x14001f72c
    return function_1400198c0((char *)(v1 + 32));
}

// Address range: 0x14001f738 - 0x14001f744
int64_t function_14001f738(void) {
    // 0x14001f738
    int64_t v1; // 0x14001f738
    return function_1400198c0((char *)(v1 + 96));
}

// Address range: 0x14001f744 - 0x14001f761
int64_t function_14001f744(void) {
    // 0x14001f744
    int64_t v1; // 0x14001f744
    return function_14001ea5c(*(int64_t *)(v1 + 96), 88, v1);
}

// Address range: 0x14001f761 - 0x14001f76d
int64_t function_14001f761(void) {
    // 0x14001f761
    int64_t result; // 0x14001f761
    return result;
}

// Address range: 0x14001f76d - 0x14001f77d
int64_t function_14001f76d(void) {
    // 0x14001f76d
    int64_t v1; // 0x14001f76d
    return function_1400198c0((char *)(*(int64_t *)(v1 + 96) + 8));
}

// Address range: 0x14001f780 - 0x14001f7a6
int64_t function_14001f780(void) {
    // 0x14001f780
    int64_t v1; // 0x14001f780
    int32_t * v2 = (int32_t *)(v1 + 32); // 0x14001f789
    int32_t v3 = *v2; // 0x14001f789
    int64_t result = 0; // 0x14001f791
    if ((v3 & 1) != 0) {
        // 0x14001f793
        *v2 = v3 & -2;
        result = function_1400198c0((char *)(v1 + 80));
    }
    // 0x14001f7a0
    return result;
}

// Address range: 0x14001f7a6 - 0x14001f7cc
int64_t function_14001f7a6(void) {
    // 0x14001f7a6
    int64_t v1; // 0x14001f7a6
    int32_t * v2 = (int32_t *)(v1 + 32); // 0x14001f7af
    int32_t v3 = *v2; // 0x14001f7af
    int64_t result = 0; // 0x14001f7b7
    if ((v3 & 2) != 0) {
        // 0x14001f7b9
        *v2 = v3 & -3;
        result = function_1400198c0((char *)(v1 + 40));
    }
    // 0x14001f7c6
    return result;
}

// Address range: 0x14001f7d0 - 0x14001f7dc
int64_t function_14001f7d0(void) {
    // 0x14001f7d0
    int64_t v1; // 0x14001f7d0
    return function_1400167c0(v1 + 80);
}

// Address range: 0x14001f7dc - 0x14001f7e8
int64_t function_14001f7dc(void) {
    // 0x14001f7dc
    int64_t v1; // 0x14001f7dc
    return function_1400198c0((char *)(v1 + 48));
}

// Address range: 0x14001f7e8 - 0x14001f80e
int64_t function_14001f7e8(void) {
    // 0x14001f7e8
    int64_t v1; // 0x14001f7e8
    int32_t * v2 = (int32_t *)(v1 + 32); // 0x14001f7f1
    int32_t v3 = *v2; // 0x14001f7f1
    int64_t result = 0; // 0x14001f7f9
    if ((v3 & 4) != 0) {
        // 0x14001f7fb
        *v2 = v3 & -5;
        result = function_1400198c0((char *)*(int64_t *)(v1 + 40));
    }
    // 0x14001f808
    return result;
}

// Address range: 0x14001f810 - 0x14001f836
int64_t function_14001f810(void) {
    // 0x14001f810
    int64_t v1; // 0x14001f810
    int32_t * v2 = (int32_t *)(v1 + 32); // 0x14001f819
    int32_t v3 = *v2; // 0x14001f819
    int64_t result = 0; // 0x14001f821
    if ((v3 & 1) != 0) {
        // 0x14001f823
        *v2 = v3 & -2;
        result = function_1400198c0((char *)(v1 + 40));
    }
    // 0x14001f830
    return result;
}

// Address range: 0x14001f836 - 0x14001f842
int64_t function_14001f836(void) {
    // 0x14001f836
    int64_t v1; // 0x14001f836
    return function_1400198c0((char *)(v1 + 80));
}

// Address range: 0x14001f842 - 0x14001f84e
int64_t function_14001f842(void) {
    // 0x14001f842
    int64_t v1; // 0x14001f842
    return function_1400198c0((char *)(v1 + 40));
}

// Address range: 0x14001f84e - 0x14001f85a
int64_t function_14001f84e(void) {
    // 0x14001f84e
    int64_t v1; // 0x14001f84e
    return function_1400198c0((char *)(v1 + 80));
}

// Address range: 0x14001f85a - 0x14001f866
int64_t function_14001f85a(void) {
    // 0x14001f85a
    int64_t v1; // 0x14001f85a
    return function_1400198c0((char *)(v1 + 40));
}

// Address range: 0x14001f870 - 0x14001f87c
int64_t function_14001f870(void) {
    // 0x14001f870
    int64_t v1; // 0x14001f870
    return function_1400198c0((char *)(v1 + 64));
}

// Address range: 0x14001f87c - 0x14001f888
int64_t function_14001f87c(void) {
    // 0x14001f87c
    int64_t v1; // 0x14001f87c
    return function_1400198c0((char *)(v1 + 64));
}

// Address range: 0x14001f890 - 0x14001f89c
int64_t function_14001f890(void) {
    // 0x14001f890
    int64_t v1; // 0x14001f890
    return function_1400198c0((char *)(v1 + 96));
}

// Address range: 0x14001f89c - 0x14001f8a8
int64_t function_14001f89c(void) {
    // 0x14001f89c
    int64_t v1; // 0x14001f89c
    return function_1400198c0((char *)(v1 + 96));
}

// Address range: 0x14001f8a8 - 0x14001f8b4
int64_t function_14001f8a8(void) {
    // 0x14001f8a8
    int64_t v1; // 0x14001f8a8
    return function_1400198c0((char *)(v1 + 64));
}

// Address range: 0x14001f8b4 - 0x14001f8c0
int64_t function_14001f8b4(void) {
    // 0x14001f8b4
    int64_t v1; // 0x14001f8b4
    return function_1400198c0((char *)(v1 + 128));
}

// Address range: 0x14001f8c0 - 0x14001f8cc
int64_t function_14001f8c0(void) {
    // 0x14001f8c0
    int64_t v1; // 0x14001f8c0
    return function_1400143d0((int128_t *)(v1 + 880));
}

// Address range: 0x14001f8cc - 0x14001f8d8
int64_t function_14001f8cc(void) {
    // 0x14001f8cc
    int64_t v1; // 0x14001f8cc
    return function_1400198c0((char *)(v1 + 504));
}

// Address range: 0x14001f8d8 - 0x14001f8e4
int64_t function_14001f8d8(void) {
    // 0x14001f8d8
    int64_t v1; // 0x14001f8d8
    return function_1400198c0((char *)(v1 + 432));
}

// Address range: 0x14001f8e4 - 0x14001f8f0
int64_t function_14001f8e4(void) {
    // 0x14001f8e4
    int64_t v1; // 0x14001f8e4
    return function_1400198c0((char *)*(int64_t *)(v1 + 464));
}

// Address range: 0x14001f8f0 - 0x14001f8fc
int64_t function_14001f8f0(void) {
    // 0x14001f8f0
    int64_t v1; // 0x14001f8f0
    return function_1400198c0((char *)(v1 + 504));
}

// Address range: 0x14001f8fc - 0x14001f908
int64_t function_14001f8fc(void) {
    // 0x14001f8fc
    int64_t v1; // 0x14001f8fc
    return function_1400198c0((char *)(v1 + 432));
}

// Address range: 0x14001f908 - 0x14001f914
int64_t function_14001f908(void) {
    // 0x14001f908
    int64_t v1; // 0x14001f908
    return function_1400198c0((char *)*(int64_t *)(v1 + 464));
}

// Address range: 0x14001f914 - 0x14001f920
int64_t function_14001f914(void) {
    // 0x14001f914
    int64_t v1; // 0x14001f914
    return function_1400198c0((char *)(v1 + 504));
}

// Address range: 0x14001f920 - 0x14001f92c
int64_t function_14001f920(void) {
    // 0x14001f920
    int64_t v1; // 0x14001f920
    return function_1400198c0((char *)(v1 + 432));
}

// Address range: 0x14001f92c - 0x14001f938
int64_t function_14001f92c(void) {
    // 0x14001f92c
    int64_t v1; // 0x14001f92c
    return function_1400198c0((char *)*(int64_t *)(v1 + 464));
}

// Address range: 0x14001f938 - 0x14001f944
int64_t function_14001f938(void) {
    // 0x14001f938
    int64_t v1; // 0x14001f938
    return function_1400198c0((char *)(v1 + 504));
}

// Address range: 0x14001f944 - 0x14001f950
int64_t function_14001f944(void) {
    // 0x14001f944
    int64_t v1; // 0x14001f944
    return function_1400198c0((char *)(v1 + 64));
}

// Address range: 0x14001f950 - 0x14001f95c
int64_t function_14001f950(void) {
    // 0x14001f950
    int64_t v1; // 0x14001f950
    return function_1400198c0((char *)(v1 + 64));
}

// Address range: 0x14001f95c - 0x14001f968
int64_t function_14001f95c(void) {
    // 0x14001f95c
    int64_t v1; // 0x14001f95c
    return function_1400198c0((char *)(v1 + 504));
}

// Address range: 0x14001f968 - 0x14001f974
int64_t function_14001f968(void) {
    // 0x14001f968
    int64_t v1; // 0x14001f968
    return function_1400198c0((char *)(v1 + 536));
}

// Address range: 0x14001f974 - 0x14001f980
int64_t function_14001f974(void) {
    // 0x14001f974
    int64_t v1; // 0x14001f974
    return function_1400198c0((char *)(v1 + 760));
}

// Address range: 0x14001f980 - 0x14001f98c
int64_t function_14001f980(void) {
    // 0x14001f980
    int64_t v1; // 0x14001f980
    return function_1400198c0((char *)(v1 + 432));
}

// Address range: 0x14001f98c - 0x14001f998
int64_t function_14001f98c(void) {
    // 0x14001f98c
    int64_t v1; // 0x14001f98c
    return function_1400198c0((char *)(v1 + 64));
}

// Address range: 0x14001f998 - 0x14001f9a4
int64_t function_14001f998(void) {
    // 0x14001f998
    int64_t v1; // 0x14001f998
    return function_1400198c0((char *)(v1 + 536));
}

// Address range: 0x14001f9a4 - 0x14001f9b0
int64_t function_14001f9a4(void) {
    // 0x14001f9a4
    int64_t v1; // 0x14001f9a4
    return function_1400198c0((char *)(v1 + 760));
}

// Address range: 0x14001f9b0 - 0x14001f9bc
int64_t function_14001f9b0(void) {
    // 0x14001f9b0
    int64_t v1; // 0x14001f9b0
    return function_1400198c0((char *)(v1 + 824));
}

// Address range: 0x14001f9bc - 0x14001f9c8
int64_t function_14001f9bc(void) {
    // 0x14001f9bc
    int64_t v1; // 0x14001f9bc
    return function_1400198c0((char *)(v1 + 504));
}

// Address range: 0x14001f9c8 - 0x14001f9d4
int64_t function_14001f9c8(void) {
    // 0x14001f9c8
    int64_t v1; // 0x14001f9c8
    return function_1400198c0((char *)(v1 + 64));
}

// Address range: 0x14001f9d4 - 0x14001f9e0
int64_t function_14001f9d4(void) {
    // 0x14001f9d4
    int64_t v1; // 0x14001f9d4
    return function_1400198c0((char *)(v1 + 536));
}

// Address range: 0x14001f9e0 - 0x14001f9ec
int64_t function_14001f9e0(void) {
    // 0x14001f9e0
    int64_t v1; // 0x14001f9e0
    return function_1400198c0((char *)(v1 + 760));
}

// Address range: 0x14001f9ec - 0x14001f9f8
int64_t function_14001f9ec(void) {
    // 0x14001f9ec
    int64_t v1; // 0x14001f9ec
    return function_1400198c0((char *)(v1 + 824));
}

// Address range: 0x14001f9f8 - 0x14001fa04
int64_t function_14001f9f8(void) {
    // 0x14001f9f8
    int64_t v1; // 0x14001f9f8
    return function_1400198c0((char *)(v1 + 792));
}

// Address range: 0x14001fa04 - 0x14001fa10
int64_t function_14001fa04(void) {
    // 0x14001fa04
    int64_t v1; // 0x14001fa04
    return function_1400198c0((char *)(v1 + 64));
}

// Address range: 0x14001fa10 - 0x14001fa1c
int64_t function_14001fa10(void) {
    // 0x14001fa10
    int64_t v1; // 0x14001fa10
    return function_1400198c0((char *)(v1 + 536));
}

// Address range: 0x14001fa1c - 0x14001fa28
int64_t function_14001fa1c(void) {
    // 0x14001fa1c
    int64_t v1; // 0x14001fa1c
    return function_1400198c0((char *)(v1 + 760));
}

// Address range: 0x14001fa28 - 0x14001fa34
int64_t function_14001fa28(void) {
    // 0x14001fa28
    int64_t v1; // 0x14001fa28
    return function_1400198c0((char *)(v1 + 824));
}

// Address range: 0x14001fa34 - 0x14001fa6b
int64_t function_14001fa34(void) {
    // 0x14001fa34
    int64_t v1; // 0x14001fa34
    int32_t * v2 = (int32_t *)(v1 + 192); // 0x14001fa3d
    int32_t v3 = *v2; // 0x14001fa3d
    int64_t result = 0; // 0x14001fa48
    if ((v3 & 1) != 0) {
        // 0x14001fa4a
        *v2 = v3 & -2;
        _3f__3f_1_3f__24_basic_ios_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_UEAA_40_XZ();
        result = &g103;
    }
    // 0x14001fa65
    return result;
}

// Address range: 0x14001fa6b - 0x14001fa7d
void function_14001fa6b(void) {
    // 0x14001fa6b
    _3f__3f_1_3f__24_basic_iostream_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_UEAA_40_XZ();
}

// Address range: 0x14001fa7d - 0x14001fa89
int64_t function_14001fa7d(void) {
    // 0x14001fa7d
    int64_t v1; // 0x14001fa7d
    return function_140018c80((int64_t *)(v1 + 1120));
}

// Address range: 0x14001fa89 - 0x14001fa95
int64_t function_14001fa89(void) {
    // 0x14001fa89
    int64_t v1; // 0x14001fa89
    return function_1400198c0((char *)(v1 + 656));
}

// Address range: 0x14001fa95 - 0x14001faa1
int64_t function_14001fa95(void) {
    // 0x14001fa95
    int64_t v1; // 0x14001fa95
    return function_140019630((int128_t *)(v1 + 592));
}

// Address range: 0x14001faa1 - 0x14001faad
int64_t function_14001faa1(void) {
    // 0x14001faa1
    int64_t v1; // 0x14001faa1
    return function_140018d80((int64_t *)(v1 + 536));
}

// Address range: 0x14001faad - 0x14001fab9
int64_t function_14001faad(void) {
    // 0x14001faad
    int64_t v1; // 0x14001faad
    return function_140018d00((int128_t *)(v1 + 712));
}

// Address range: 0x14001fab9 - 0x14001fac5
int64_t function_14001fab9(void) {
    // 0x14001fab9
    int64_t v1; // 0x14001fab9
    return function_1400198c0((char *)(v1 + 64));
}

// Address range: 0x14001fac5 - 0x14001fad1
int64_t function_14001fac5(void) {
    // 0x14001fac5
    int64_t v1; // 0x14001fac5
    return function_140019bf0((int128_t *)(v1 + 736));
}

// Address range: 0x14001fad1 - 0x14001fadd
int64_t function_14001fad1(void) {
    // 0x14001fad1
    int64_t v1; // 0x14001fad1
    return function_140019bf0((int128_t *)(v1 + 688));
}

// Address range: 0x14001fadd - 0x14001fae9
int64_t function_14001fadd(void) {
    // 0x14001fadd
    int64_t v1; // 0x14001fadd
    return function_1400198c0((char *)(v1 + 64));
}

// Address range: 0x14001fae9 - 0x14001faf5
int64_t function_14001fae9(void) {
    // 0x14001fae9
    int64_t v1; // 0x14001fae9
    return function_1400198c0((char *)(v1 + 464));
}

// Address range: 0x14001faf5 - 0x14001fb01
int64_t function_14001faf5(void) {
    // 0x14001faf5
    int64_t v1; // 0x14001faf5
    free((int64_t *)(v1 + 568));
    return &g103;
}

// Address range: 0x14001fb01 - 0x14001fb0d
int64_t function_14001fb01(void) {
    // 0x14001fb01
    int64_t v1; // 0x14001fb01
    free((int64_t *)(v1 + 568));
    return &g103;
}

// Address range: 0x14001fb0d - 0x14001fb19
int64_t function_14001fb0d(void) {
    // 0x14001fb0d
    int64_t v1; // 0x14001fb0d
    free((int64_t *)(v1 + 616));
    return &g103;
}

// Address range: 0x14001fb20 - 0x14001fb4e
int64_t function_14001fb20(void) {
    // 0x14001fb20
    int64_t v1; // 0x14001fb20
    int32_t * v2 = (int32_t *)(v1 + 56); // 0x14001fb29
    int32_t v3 = *v2; // 0x14001fb29
    int64_t result = 0; // 0x14001fb31
    if ((v3 & 1) != 0) {
        // 0x14001fb33
        *v2 = v3 & -2;
        _3f__3f_1_3f__24_basic_ios_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_UEAA_40_XZ();
        result = &g103;
    }
    // 0x14001fb48
    return result;
}

// Address range: 0x14001fb4e - 0x14001fb60
void function_14001fb4e(void) {
    // 0x14001fb4e
    _3f__3f_1_3f__24_basic_ostream_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_UEAA_40_XZ();
}

// Address range: 0x14001fb60 - 0x14001fb6c
int64_t function_14001fb60(void) {
    // 0x14001fb60
    int64_t v1; // 0x14001fb60
    return function_14001bec0((int64_t *)(v1 + 32));
}

// Address range: 0x14001fb70 - 0x14001fb7e
void function_14001fb70(void) {
    // 0x14001fb70
    _3f__3f_1_3f__24_basic_streambuf_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_UEAA_40_XZ();
}

// Address range: 0x14001fb80 - 0x14001fb8c
int64_t function_14001fb80(void) {
    // 0x14001fb80
    int64_t result; // 0x14001fb80
    return result;
}

// Address range: 0x14001fb8c - 0x14001fb98
int64_t function_14001fb8c(void) {
    // 0x14001fb8c
    int64_t v1; // 0x14001fb8c
    return function_140019bb0(v1 + 32);
}

// Address range: 0x14001fb98 - 0x14001fbd2
int64_t function_14001fb98(void) {
    // 0x14001fb98
    int64_t v1; // 0x14001fb98
    _3f_setstate_40__3f__24_basic_ios_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_QEAAXH_N_40_Z((int32_t)v1, (bool)&g103);
    return 0;
}

// Address range: 0x14001fbe0 - 0x14001fbec
int64_t function_14001fbe0(void) {
    // 0x14001fbe0
    int64_t v1; // 0x14001fbe0
    return function_14001bec0((int64_t *)(v1 + 32));
}

// Address range: 0x14001fbec - 0x14001fbf8
int64_t function_14001fbec(void) {
    // 0x14001fbec
    int64_t v1; // 0x14001fbec
    return function_14001bec0((int64_t *)(v1 + 32));
}

// Address range: 0x14001fc00 - 0x14001fc0c
int64_t function_14001fc00(void) {
    // 0x14001fc00
    int64_t v1; // 0x14001fc00
    return function_1400198c0((char *)(v1 + 136));
}

// Address range: 0x14001fc0c - 0x14001fc18
int64_t function_14001fc0c(void) {
    // 0x14001fc0c
    int64_t v1; // 0x14001fc0c
    return function_1400198c0((char *)(v1 + 64));
}

// Address range: 0x14001fc18 - 0x14001fc24
int64_t function_14001fc18(void) {
    // 0x14001fc18
    int64_t v1; // 0x14001fc18
    return function_1400198c0((char *)(v1 + 96));
}

// Address range: 0x14001fc30 - 0x14001fc4d
int64_t function_14001fc30(void) {
    // 0x14001fc30
    return 0;
}

// Address range: 0x14001fc50 - 0x14001fc5c
int64_t function_14001fc50(void) {
    // 0x14001fc50
    int64_t v1; // 0x14001fc50
    return function_1400198c0((char *)(v1 + 96));
}

// Address range: 0x14001fc5c - 0x14001fc68
int64_t function_14001fc5c(void) {
    // 0x14001fc5c
    int64_t v1; // 0x14001fc5c
    return function_1400198c0((char *)(v1 + 64));
}

// Address range: 0x14001fc68 - 0x14001fc74
int64_t function_14001fc68(void) {
    // 0x14001fc68
    int64_t v1; // 0x14001fc68
    return function_1400198c0((char *)(v1 + 128));
}

// Address range: 0x14001fc80 - 0x14001fc8c
int64_t function_14001fc80(void) {
    // 0x14001fc80
    int64_t result; // 0x14001fc80
    return result;
}

// Address range: 0x14001fc8c - 0x14001fc98
int64_t function_14001fc8c(void) {
    // 0x14001fc8c
    int64_t result; // 0x14001fc8c
    return result;
}

// Address range: 0x14001fc98 - 0x14001fcd2
int64_t function_14001fc98(void) {
    // 0x14001fc98
    int64_t v1; // 0x14001fc98
    _3f_setstate_40__3f__24_basic_ios_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_QEAAXH_N_40_Z((int32_t)v1, (bool)&g103);
    return 0;
}

// Address range: 0x14001fce0 - 0x14001fcec
int64_t function_14001fce0(void) {
    // 0x14001fce0
    int64_t v1; // 0x14001fce0
    return function_1400198c0((char *)*(int64_t *)(v1 + 144));
}

// Address range: 0x14001fcec - 0x14001fcf8
int64_t function_14001fcec(void) {
    // 0x14001fcec
    int64_t v1; // 0x14001fcec
    return function_1400198c0((char *)(v1 + 112));
}

// Address range: 0x14001fcf8 - 0x14001fd15
int64_t function_14001fcf8(void) {
    // 0x14001fcf8
    int64_t v1; // 0x14001fcf8
    return function_14001ea5c(*(int64_t *)(v1 + 104), 160, v1);
}

// Address range: 0x14001fd15 - 0x14001fd21
int64_t function_14001fd15(void) {
    // 0x14001fd15
    int64_t v1; // 0x14001fd15
    return function_1400198c0((char *)*(int64_t *)(v1 + 32));
}

// Address range: 0x14001fd21 - 0x14001fd2d
int64_t function_14001fd21(void) {
    // 0x14001fd21
    int64_t result; // 0x14001fd21
    return result;
}

// Address range: 0x14001fd2d - 0x14001fd3d
int64_t function_14001fd2d(void) {
    // 0x14001fd2d
    int64_t v1; // 0x14001fd2d
    return function_1400198c0((char *)(*(int64_t *)(v1 + 104) + 8));
}

// Address range: 0x14001fd3d - 0x14001fd4d
int64_t function_14001fd3d(void) {
    // 0x14001fd3d
    int64_t v1; // 0x14001fd3d
    return function_1400198c0((char *)(*(int64_t *)(v1 + 104) + 48));
}

// Address range: 0x14001fd4d - 0x14001fd5d
int64_t function_14001fd4d(void) {
    // 0x14001fd4d
    int64_t v1; // 0x14001fd4d
    return function_1400198c0((char *)(*(int64_t *)(v1 + 104) + 88));
}

// Address range: 0x14001fd5d - 0x14001fd6d
int64_t function_14001fd5d(void) {
    // 0x14001fd5d
    int64_t v1; // 0x14001fd5d
    return function_1400198c0((char *)(*(int64_t *)(v1 + 104) + 120));
}

// Address range: 0x14001fd70 - 0x14001fd7c
int64_t function_14001fd70(void) {
    // 0x14001fd70
    int64_t v1; // 0x14001fd70
    return function_1400198c0((char *)(v1 + 48));
}

// Address range: 0x14001fd7c - 0x14001fd99
int64_t function_14001fd7c(void) {
    // 0x14001fd7c
    int64_t v1; // 0x14001fd7c
    return function_14001ea5c(*(int64_t *)(v1 + 32), 104, v1);
}

// Address range: 0x14001fd99 - 0x14001fda5
int64_t function_14001fd99(void) {
    // 0x14001fd99
    int64_t result; // 0x14001fd99
    return result;
}

// Address range: 0x14001fda5 - 0x14001fdb5
int64_t function_14001fda5(void) {
    // 0x14001fda5
    int64_t v1; // 0x14001fda5
    return function_1400198c0((char *)(*(int64_t *)(v1 + 32) + 8));
}

// Address range: 0x14001fdb5 - 0x14001fdc5
int64_t function_14001fdb5(void) {
    // 0x14001fdb5
    int64_t v1; // 0x14001fdb5
    return function_1400198c0((char *)(*(int64_t *)(v1 + 32) + 48));
}

// Address range: 0x14001fdd0 - 0x14001fddc
int64_t function_14001fdd0(void) {
    // 0x14001fdd0
    int64_t v1; // 0x14001fdd0
    return function_1400198c0((char *)(v1 + 32));
}

// Address range: 0x14001fde0 - 0x14001fe0e
int64_t function_14001fde0(void) {
    // 0x14001fde0
    int64_t v1; // 0x14001fde0
    int32_t * v2 = (int32_t *)(v1 + 32); // 0x14001fde9
    int32_t v3 = *v2; // 0x14001fde9
    int64_t result = 0; // 0x14001fdf1
    if ((v3 & 1) != 0) {
        // 0x14001fdf3
        *v2 = v3 & -2;
        _3f__3f_1_3f__24_basic_ios_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_UEAA_40_XZ();
        result = &g103;
    }
    // 0x14001fe08
    return result;
}

// Address range: 0x14001fe0e - 0x14001fe20
void function_14001fe0e(void) {
    // 0x14001fe0e
    _3f__3f_1_3f__24_basic_istream_40_DU_3f__24_char_traits_40_D_40_std_40__40__40_std_40__40_UEAA_40_XZ();
}

// Address range: 0x14001fe20 - 0x14001fe2c
int64_t function_14001fe20(void) {
    // 0x14001fe20
    int64_t result; // 0x14001fe20
    return result;
}

// Address range: 0x14001fe30 - 0x14001fe59
int64_t function_14001fe30(void) {
    // 0x14001fe30
    int64_t v1; // 0x14001fe30
    int32_t * v2 = (int32_t *)(v1 + 64); // 0x14001fe39
    int32_t v3 = *v2; // 0x14001fe39
    int64_t result = 0; // 0x14001fe41
    if ((v3 & 1) != 0) {
        // 0x14001fe43
        *v2 = v3 & -2;
        result = function_1400198c0((char *)(v1 + 168));
    }
    // 0x14001fe53
    return result;
}

// Address range: 0x14001fe59 - 0x14001fe65
int64_t function_14001fe59(void) {
    // 0x14001fe59
    int64_t v1; // 0x14001fe59
    return function_1400167c0(v1 + 336);
}

// Address range: 0x14001fe65 - 0x14001fe90
int64_t function_14001fe65(void) {
    // 0x14001fe65
    int64_t v1; // 0x14001fe65
    int32_t * v2 = (int32_t *)(v1 + 64); // 0x14001fe6e
    int32_t v3 = *v2; // 0x14001fe6e
    int64_t result = 0; // 0x14001fe78
    if ((v3 & 512) != 0) {
        // 0x14001fe7a
        *v2 = v3 & -513;
        result = function_1400198c0((char *)(v1 + 72));
    }
    // 0x14001fe8a
    return result;
}

// Address range: 0x14001fe90 - 0x14001feb6
int64_t function_14001fe90(void) {
    // 0x14001fe90
    int64_t v1; // 0x14001fe90
    int32_t * v2 = (int32_t *)(v1 + 64); // 0x14001fe99
    int32_t v3 = *v2; // 0x14001fe99
    int64_t result = 0; // 0x14001fea1
    if ((v3 & 2) != 0) {
        // 0x14001fea3
        *v2 = v3 & -3;
        result = function_1400198c0((char *)(v1 + 72));
    }
    // 0x14001feb0
    return result;
}

// Address range: 0x14001feb6 - 0x14001fedc
int64_t function_14001feb6(void) {
    // 0x14001feb6
    int64_t v1; // 0x14001feb6
    int32_t * v2 = (int32_t *)(v1 + 64); // 0x14001febf
    int32_t v3 = *v2; // 0x14001febf
    int64_t result = 0; // 0x14001fec7
    if ((v3 & 4) != 0) {
        // 0x14001fec9
        *v2 = v3 & -5;
        result = function_1400198c0((char *)(v1 + 104));
    }
    // 0x14001fed6
    return result;
}

// Address range: 0x14001fedc - 0x14001ff05
int64_t function_14001fedc(void) {
    // 0x14001fedc
    int64_t v1; // 0x14001fedc
    int32_t * v2 = (int32_t *)(v1 + 64); // 0x14001fee5
    int32_t v3 = *v2; // 0x14001fee5
    int64_t result = 0; // 0x14001feed
    if ((v3 & 8) != 0) {
        // 0x14001feef
        *v2 = v3 & -9;
        result = function_1400198c0((char *)(v1 + 232));
    }
    // 0x14001feff
    return result;
}

// Address range: 0x14001ff05 - 0x14001ff11
int64_t function_14001ff05(void) {
    // 0x14001ff05
    int64_t v1; // 0x14001ff05
    return function_1400198c0((char *)(v1 + 200));
}

// Address range: 0x14001ff11 - 0x14001ff1d
int64_t function_14001ff11(void) {
    // 0x14001ff11
    int64_t v1; // 0x14001ff11
    return function_1400198c0((char *)(v1 + 304));
}

// Address range: 0x14001ff1d - 0x14001ff29
int64_t function_14001ff1d(void) {
    // 0x14001ff1d
    int64_t v1; // 0x14001ff1d
    return function_1400198c0((char *)(v1 + 272));
}

// Address range: 0x14001ff29 - 0x14001ff35
int64_t function_14001ff29(void) {
    // 0x14001ff29
    int64_t v1; // 0x14001ff29
    return function_1400198c0((char *)(v1 + 136));
}

// Address range: 0x14001ff40 - 0x14001ff69
int64_t function_14001ff40(void) {
    // 0x14001ff40
    int64_t v1; // 0x14001ff40
    int32_t * v2 = (int32_t *)(v1 + 64); // 0x14001ff49
    int32_t v3 = *v2; // 0x14001ff49
    int64_t result = 0; // 0x14001ff51
    if ((v3 & 1) != 0) {
        // 0x14001ff53
        *v2 = v3 & -2;
        result = function_1400198c0((char *)(v1 + 208));
    }
    // 0x14001ff63
    return result;
}

// Address range: 0x14001ff69 - 0x14001ff75
int64_t function_14001ff69(void) {
    // 0x14001ff69
    int64_t v1; // 0x14001ff69
    return function_1400198c0((char *)*(int64_t *)(v1 + 168));
}

// Address range: 0x14001ff75 - 0x14001ff9e
int64_t function_14001ff75(void) {
    // 0x14001ff75
    int64_t v1; // 0x14001ff75
    int32_t * v2 = (int32_t *)(v1 + 64); // 0x14001ff7e
    int32_t v3 = *v2; // 0x14001ff7e
    int64_t result = 0; // 0x14001ff86
    if ((v3 & 2) != 0) {
        // 0x14001ff88
        *v2 = v3 & -3;
        result = function_1400198c0((char *)(v1 + 136));
    }
    // 0x14001ff98
    return result;
}

// Address range: 0x14001ff9e - 0x14001ffc4
int64_t function_14001ff9e(void) {
    // 0x14001ff9e
    int64_t v1; // 0x14001ff9e
    int32_t * v2 = (int32_t *)(v1 + 64); // 0x14001ffa7
    int32_t v3 = *v2; // 0x14001ffa7
    int64_t result = 0; // 0x14001ffaf
    if ((v3 & 4) != 0) {
        // 0x14001ffb1
        *v2 = v3 & -5;
        result = function_1400198c0((char *)(v1 + 72));
    }
    // 0x14001ffbe
    return result;
}

// Address range: 0x14001ffc4 - 0x14001ffed
int64_t function_14001ffc4(void) {
    // 0x14001ffc4
    int64_t v1; // 0x14001ffc4
    int32_t * v2 = (int32_t *)(v1 + 64); // 0x14001ffcd
    int32_t v3 = *v2; // 0x14001ffcd
    int64_t result = 0; // 0x14001ffd5
    if ((v3 & 8) != 0) {
        // 0x14001ffd7
        *v2 = v3 & -9;
        result = function_1400198c0((char *)(v1 + 240));
    }
    // 0x14001ffe7
    return result;
}

// Address range: 0x14001ffed - 0x14001fff9
int64_t function_14001ffed(void) {
    // 0x14001ffed
    int64_t v1; // 0x14001ffed
    return function_1400198c0((char *)(v1 + 176));
}

// Address range: 0x14001fff9 - 0x140020005
int64_t function_14001fff9(void) {
    // 0x14001fff9
    int64_t v1; // 0x14001fff9
    return function_1400198c0((char *)(v1 + 304));
}

// Address range: 0x140020005 - 0x140020011
int64_t function_140020005(void) {
    // 0x140020005
    int64_t v1; // 0x140020005
    return function_1400198c0((char *)(v1 + 272));
}

// Address range: 0x140020011 - 0x14002001d
int64_t function_140020011(void) {
    // 0x140020011
    int64_t v1; // 0x140020011
    return function_1400198c0((char *)(v1 + 104));
}

// Address range: 0x14002001d - 0x14002003a
int64_t function_14002001d(int64_t a1, int64_t a2) {
    // 0x14002001d
    int64_t v1; // 0x14002001d
    return _seh_filter_exe((int32_t)v1, (struct _EXCEPTION_POINTERS *)a1);
}

// Address range: 0x14002003b - 0x140020052
int64_t function_14002003b(int64_t a1, int64_t a2) {
    // 0x14002003b
    int64_t v1; // 0x14002003b
    return (int32_t)v1 == -0x3ffffffb;
}

// --------------- Statically Linked Functions ----------------

// int64_t __chkstk(void);
// int64_t __scrt_acquire_startup_lock(void);
// int64_t __scrt_release_startup_lock(int64_t a1);
// void __fastcall __security_check_cookie(_In_ uintptr_t StackCookie);

// --------------------- Meta-Information ---------------------

// Detected compiler/packer: msvc
// Detected functions: 469

